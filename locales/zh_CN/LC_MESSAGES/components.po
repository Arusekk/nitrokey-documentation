# SOME DESCRIPTIVE TITLE.
# Copyright (C) Nitrokey
# This file is distributed under the same license as the Nitrokey
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"#-#-#-#-#  x230.po (Nitrokey Documentation)  #-#-#-#-#\n"
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-18 14:31+0100\n"
"PO-Revision-Date: 2022-01-10 14:11+0000\n"
"Last-Translator: Anonymous <noreply@weblate.org>\n"
"Language-Team: Chinese (Simplified) <https://translate.nitrokey.com/projects/"
"nitrokey-documentation/documentation-x230/zh_Hans/>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.10.1\n"
"Generated-By: Babel 2.6.0\n"
"#-#-#-#-#  to-be-integrated.po (Nitrokey Documentation)  #-#-#-#-#\n"
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-31 15:35+0100\n"
"PO-Revision-Date: 2022-01-10 14:11+0000\n"
"Last-Translator: Anonymous <noreply@weblate.org>\n"
"Language: zh_CN\n"
"Language-Team: Chinese (Simplified) <https://translate.nitrokey.com/projects/"
"nitrokey-documentation/documentation-to-be-integrated/zh_Hans/>\n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"
"#-#-#-#-#  u2f.po (Nitrokey Documentation)  #-#-#-#-#\n"
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-17 14:16+0100\n"
"PO-Revision-Date: 2022-01-17 15:10+0000\n"
"Last-Translator: Anonymous <noreply@weblate.org>\n"
"Language-Team: Chinese (Simplified) <https://translate.nitrokey.com/projects/"
"nitrokey-documentation/documentation-u2f/zh_Hans/>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.10.1\n"
"Generated-By: Babel 2.6.0\n"
"#-#-#-#-#  syntax.po (Nitrokey Documentation)  #-#-#-#-#\n"
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-26 11:18+0100\n"
"PO-Revision-Date: 2022-01-26 10:20+0000\n"
"Last-Translator: Anonymous <noreply@weblate.org>\n"
"Language-Team: Chinese (Simplified) <https://translate.nitrokey.com/projects/"
"nitrokey-documentation/documentation-syntax/zh_Hans/>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.10.1\n"
"Generated-By: Babel 2.6.0\n"
"#-#-#-#-#  t430.po (Nitrokey Documentation)  #-#-#-#-#\n"
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-18 14:53+0100\n"
"PO-Revision-Date: 2022-01-10 14:11+0000\n"
"Last-Translator: Anonymous <noreply@weblate.org>\n"
"Language-Team: Chinese (Simplified) <https://translate.nitrokey.com/projects/"
"nitrokey-documentation/documentation-t430/zh_Hans/>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.10.1\n"
"Generated-By: Babel 2.6.0\n"
"#-#-#-#-#  start.po (Nitrokey Documentation)  #-#-#-#-#\n"
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-05 12:32+0100\n"
"PO-Revision-Date: 2023-02-11 12:24+0000\n"
"Last-Translator: Anonymous <noreply@weblate.org>\n"
"Language-Team: Chinese (Simplified) <https://translate.nitrokey.com/projects/"
"nitrokey-documentation/documentation-start/zh_Hans/>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.14.2\n"
"Generated-By: Babel 2.6.0\n"
"#-#-#-#-#  storage.po (Nitrokey Documentation)  #-#-#-#-#\n"
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-21 14:14+0100\n"
"PO-Revision-Date: 2023-02-12 12:24+0000\n"
"Last-Translator: Anonymous <noreply@weblate.org>\n"
"Language-Team: Chinese (Simplified) <https://translate.nitrokey.com/projects/"
"nitrokey-documentation/documentation-storage/zh_Hans/>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.14.2\n"
"Generated-By: Babel 2.6.0\n"
"#-#-#-#-#  sphinx.po (Nitrokey Documentation)  #-#-#-#-#\n"
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-31 08:11+0200\n"
"PO-Revision-Date: 2022-05-31 07:38+0000\n"
"Last-Translator: Anonymous <noreply@weblate.org>\n"
"Language-Team: Chinese (Simplified) <https://translate.nitrokey.com/projects/"
"nitrokey-documentation/documentation-sphinx/zh_Hans/>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.10.1\n"
"Generated-By: Babel 2.6.0\n"
"#-#-#-#-#  shared-faqs.po (Nitrokey Documentation)  #-#-#-#-#\n"
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-10-06 01:52+0200\n"
"PO-Revision-Date: 2023-02-12 12:24+0000\n"
"Last-Translator: Anonymous <noreply@weblate.org>\n"
"Language-Team: Chinese (Simplified) <https://translate.nitrokey.com/projects/"
"nitrokey-documentation/documentation-shared-faqs/zh_Hans/>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.14.2\n"
"Generated-By: Babel 2.6.0\n"
"#-#-#-#-#  nitrophone.po (Nitrokey Documentation)  #-#-#-#-#\n"
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-14 13:22+0100\n"
"PO-Revision-Date: 2022-03-12 11:38+0000\n"
"Last-Translator: Anonymous <noreply@weblate.org>\n"
"Language-Team: Chinese (Simplified) <https://translate.nitrokey.com/projects/"
"nitrokey-documentation/documentation-nitrophone/zh_Hans/>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.10.1\n"
"Generated-By: Babel 2.6.0\n"
"#-#-#-#-#  pro.po (Nitrokey Documentation)  #-#-#-#-#\n"
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-05 12:32+0100\n"
"PO-Revision-Date: 2023-02-12 12:24+0000\n"
"Last-Translator: Anonymous <noreply@weblate.org>\n"
"Language-Team: Chinese (Simplified) <https://translate.nitrokey.com/projects/"
"nitrokey-documentation/documentation-pro/zh_Hans/>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.14.2\n"
"Generated-By: Babel 2.6.0\n"
"#-#-#-#-#  nitropad.po (Nitrokey Documentation)  #-#-#-#-#\n"
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-08 23:12+0100\n"
"PO-Revision-Date: 2022-01-26 11:18+0000\n"
"Last-Translator: Ben (Weblate Admin) <ben@dotplex.com>\n"
"Language-Team: Chinese (Simplified) <https://translate.nitrokey.com/projects/"
"nitrokey-documentation/documentation-nitropad/zh_Hans/>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.10.1\n"
"Generated-By: Babel 2.6.0\n"
"#-#-#-#-#  nitropc.po (Nitrokey Documentation)  #-#-#-#-#\n"
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-13 22:26+0100\n"
"PO-Revision-Date: 2022-01-10 14:11+0000\n"
"Last-Translator: Anonymous <noreply@weblate.org>\n"
"Language: zh_CN\n"
"Language-Team: Chinese (Simplified) <https://translate.nitrokey.com/projects/"
"nitrokey-documentation/documentation-nitropc/zh_Hans/>\n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.6.0\n"
"#-#-#-#-#  nextbox.po (Nitrokey Documentation)  #-#-#-#-#\n"
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-02 14:11+0100\n"
"PO-Revision-Date: 2022-01-26 11:18+0000\n"
"Last-Translator: Ben (Weblate Admin) <ben@dotplex.com>\n"
"Language-Team: Chinese (Simplified) <https://translate.nitrokey.com/projects/"
"nitrokey-documentation/documentation-nextbox/zh_Hans/>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.10.1\n"
"Generated-By: Babel 2.6.0\n"
"#-#-#-#-#  nitrokey3.po (Nitrokey Documentation)  #-#-#-#-#\n"
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-08 10:44+0100\n"
"PO-Revision-Date: 2022-02-08 15:11+0000\n"
"Last-Translator: Anonymous <noreply@weblate.org>\n"
"Language-Team: Chinese (Simplified) <https://translate.nitrokey.com/projects/"
"nitrokey-documentation/documentation-nitrokey3/zh_Hans/>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.10.1\n"
"Generated-By: Babel 2.6.0\n"
"#-#-#-#-#  hsm.po (Nitrokey Documentation)  #-#-#-#-#\n"
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-05 12:32+0100\n"
"PO-Revision-Date: 2023-02-12 12:24+0000\n"
"Last-Translator: Anonymous <noreply@weblate.org>\n"
"Language-Team: Chinese (Simplified) <https://translate.nitrokey.com/projects/"
"nitrokey-documentation/documentation-hsm/zh_Hans/>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.14.2\n"
"Generated-By: Babel 2.6.0\n"
"#-#-#-#-#  nethsm.po (Nitrokey Documentation)  #-#-#-#-#\n"
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-05 12:32+0100\n"
"PO-Revision-Date: 2022-01-26 11:44+0000\n"
"Last-Translator: Ben (Weblate Admin) <ben@dotplex.com>\n"
"Language-Team: Chinese (Simplified) <https://translate.nitrokey.com/projects/"
"nitrokey-documentation/documentation-nethsm/zh_Hans/>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.10.1\n"
"Generated-By: Babel 2.6.0\n"
"#-#-#-#-#  fido2.po (Nitrokey Documentation)  #-#-#-#-#\n"
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-17 14:16+0100\n"
"PO-Revision-Date: 2022-01-17 15:10+0000\n"
"Last-Translator: Anonymous <noreply@weblate.org>\n"
"Language-Team: Chinese (Simplified) <https://translate.nitrokey.com/projects/"
"nitrokey-documentation/documentation-fido2/zh_Hans/>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.10.1\n"
"Generated-By: Babel 2.6.0\n"

#: ../x230/default-boot.rst:2 ../nitropad/default-boot.rst:2
msgid "Default Boot"
msgstr "默认启动"

#: ../x230/default-boot.rst:8 ../nitropad/default-boot.rst:8
msgid ""
"If you have installed a new operating system, it may be that default boot is "
"not yet assigned. If this is the case, please proceed as described below."
msgstr ""
"如果你安装了一个新的操作系统，可能默认启动还没有分配。如果是这种情况，请按下"
"文所述进行。"

#: ../x230/default-boot.rst:10 ../nitropad/default-boot.rst:10
msgid "Select “Default boot”."
msgstr "选择 \"默认启动\"。"

#: ../x230/default-boot.rst:17 ../nitropad/default-boot.rst:17
msgid ""
"Heads informs you that it does not yet know any default. First you agree to "
"the update of the checksums."
msgstr "头部通知你，它还不知道任何默认情况。首先，你同意更新校验和。"

#: ../x230/default-boot.rst:25 ../x230/default-boot.rst:51
#: ../x230/firmware-update.rst:102 ../x230/firmware-update.rst:116
#: ../nitropad/default-boot.rst:25 ../nitropad/default-boot.rst:51
#: ../nitropad/firmware-update.rst:94 ../nitropad/firmware-update.rst:108
msgid "Confirm the process with Enter."
msgstr "用回车键确认这一过程。"

#: ../x230/default-boot.rst:32 ../nitropad/default-boot.rst:32
msgid ""
"Now insert the Nitrokey if this is not already the case and confirm with "
"Enter. Then you have to enter the User PIN of the Nitrokey."
msgstr ""
"现在插入硝基钥匙，如果还没有的话，用回车键确认。然后，你必须输入硝基钥匙的用"
"户密码。"

#: ../x230/default-boot.rst:49 ../nitropad/default-boot.rst:49
msgid ""
"Now the NitroPad marks the files that changed by the update as verified."
msgstr "现在，NitroPad将被更新所改变的文件标记为已验证。"

#: ../x230/default-boot.rst:58 ../nitropad/default-boot.rst:58
msgid ""
"You will then see a list of all possible boot entries - choose the first one "
"here by simply pressing Enter. Boot Options"
msgstr ""
"然后你会看到一个所有可能的启动项的列表--在这里选择第一个，只需按下回车键。启"
"动选项"

#: ../x230/default-boot.rst:66 ../nitropad/default-boot.rst:66
msgid ""
"To save this value as default, select “Make Ubuntu the default” for Ubuntu "
"or “Make Qubes the default” for Qubes OS. Confirm Boot Details"
msgstr ""
"要把这个值保存为默认值，为Ubuntu选择 \"使Ubuntu成为默认值\"，为Qubes OS选择 "
"\"使Qubes成为默认值\"。确认启动细节"

#: ../x230/default-boot.rst:74 ../nitropad/default-boot.rst:74
msgid ""
"Confirm the next three questions with Enter and enter the PIN of the "
"Nitrokey if you are prompted to do so."
msgstr ""
"用回车键确认接下来的三个问题，如果提示你输入硝基钥匙的密码，则输入密码。"

#: ../x230/default-boot.rst:95 ../x230/system-update.rst:120
#: ../nitropad/default-boot.rst:95 ../nitropad/system-update.rst:123
msgid "Your system will then boot."
msgstr "然后你的系统将启动。"

#: ../x230/default-boot.rst:98 ../nitropad/default-boot.rst:98
msgid "Changing default kernel"
msgstr "改变默认内核"

#: ../x230/default-boot.rst:100 ../nitropad/default-boot.rst:100
msgid ""
"This is a workaround for Heads v1.1 bug, which does not allow to change the "
"kernel to the one later (lower) in the list."
msgstr ""
"这是为了解决Heads v1.1的错误，该错误不允许将内核改为列表中较后（较低）的内"
"核。"

#: ../x230/default-boot.rst:102 ../nitropad/default-boot.rst:102
msgid ""
"Usual way would be to go to ``Options -> Boot Options -> Show OS boot "
"menu``, selecting the kernel and making it default, however the latter is "
"not working at the moment. Instead please use the following workaround:"
msgstr ""
"通常的方法是进入``Options -> Boot Options -> Show OS boot menu``，选择内核并"
"使其成为默认值，然而后者目前还不能工作。相反，请使用下面的解决方法。"

#: ../x230/default-boot.rst:104 ../nitropad/default-boot.rst:104
msgid ""
"Start recovery console and remove the default boot files. Please make sure "
"the correct files are removed. Here 2 default files were available:"
msgstr ""
"启动恢复控制台，删除默认的启动文件。请确保删除的是正确的文件。这里有2个默认文"
"件。"

#: ../x230/default-boot.rst:119 ../nitropad/default-boot.rst:119
msgid ""
"Sign all current boot files with: ``Options --> Update checksums and sign "
"all files in /boot``"
msgstr ""
"在所有当前的引导文件上签名。``Options --> Update checksums and sign all "
"files in /boot``。"

#: ../x230/default-boot.rst:121 ../nitropad/default-boot.rst:121
msgid ""
"Return to main menu and select default boot ``Main Menu --> Default boot``"
msgstr "返回主菜单并选择默认启动 ``Main Menu --> Default boot``"

#: ../x230/default-boot.rst:123 ../nitropad/default-boot.rst:123
msgid ""
"Agree to select default kernel (screen: ``No Default Boot Option "
"Configured`` )"
msgstr "同意选择默认内核（屏幕：``No Default Boot Option Configured`` )"

#: ../x230/default-boot.rst:125 ../nitropad/default-boot.rst:125
msgid "Select the desired kernel to work as the default"
msgstr "选择所需的内核作为默认的工作。"

#: ../x230/default-boot.rst:126 ../nitropad/default-boot.rst:126
msgid "Select 2nd option: ``Make <kernel version> the default``"
msgstr "选择第二个选项。``Make <kernel version> the default``。"

#: ../x230/default-boot.rst:127 ../nitropad/default-boot.rst:127
msgid ""
"Save the kernel with accepting default options (proceed, do not agree for "
"TPM encryption, confirm GPG card):"
msgstr "保存内核并接受默认选项（继续，不同意TPM加密，确认GPG卡）。"

#: ../x230/default-boot.rst:136 ../nitropad/default-boot.rst:136
msgid ""
"Enter PIN for the Nitrokey Pro/Storage device to execute signing process"
msgstr "输入Nitrokey Pro/Storage设备的PIN码，以执行签名过程。"

#: ../x230/default-boot.rst:138 ../nitropad/default-boot.rst:138
msgid ""
"The selected kernel will boot and it will be the default one the next time "
"when selecting ``Default Boot`` option from the menu."
msgstr ""
"所选的内核将被启动，下次从菜单中选择``Default Boot``选项时，它将成为默认的内"
"核。"

#: ../x230/factory-reset.rst:2 ../storage/factory-reset.rst:2
#: ../pro/factory-reset.rst:2 ../nitropad/factory-reset.rst:2
#: ../nextbox/technical/factory-reset.rst:2
msgid "Factory Reset"
msgstr "工厂重置"

#: ../x230/factory-reset.rst:9 ../nitropad/factory-reset.rst:9
msgid "Reasons for resetting to factory settings"
msgstr "重置为出厂设置的原因"

#: ../x230/factory-reset.rst:11 ../nitropad/factory-reset.rst:11
msgid "Your Nitrokey is locked (e.g. due to multiple incorrect PIN entries)"
msgstr "您的Nitrokey被锁定（例如，由于多次输入错误的PIN码）。"

#: ../x230/factory-reset.rst:13 ../nitropad/factory-reset.rst:15
msgid ""
"You have installed an operating system yourself (e.g. after changing the "
"hard disk)"
msgstr "你自己安装了一个操作系统（例如在更换硬盘后）。"

#: ../x230/factory-reset.rst:16 ../nitropad/factory-reset.rst:18
msgid "Your operating system does not start"
msgstr "你的操作系统不能启动"

#: ../x230/factory-reset.rst:19 ../x230/firmware-update.rst:61
#: ../pro/openpgp-thunderbird.rst:51 ../nitropad/factory-reset.rst:24
#: ../nitropad/firmware-update.rst:53
msgid "Procedure"
msgstr "程序"

#: ../x230/factory-reset.rst:21 ../nitropad/factory-reset.rst:26
msgid ""
"Connect any USB flash drive to the NitroPad. (You need that USB flash drive "
"for saving your security key)"
msgstr ""
"将任何USB闪存驱动器连接到NitroPad上。(你需要该U盘来保存你的安全密钥）。"

#: ../x230/factory-reset.rst:23 ../nitropad/factory-reset.rst:28
msgid "Connect your Nitrokey to the NitroPad."
msgstr "将你的Nitrokey连接到NitroPad。"

#: ../x230/factory-reset.rst:30 ../nitropad/factory-reset.rst:35
msgid "Turn on the NitroPad."
msgstr "开启NitroPad。"

#: ../x230/factory-reset.rst:31 ../nitropad/factory-reset.rst:36
msgid "Select “Options”."
msgstr "选择 \"选项\"。"

#: ../x230/factory-reset.rst:38 ../nitropad/factory-reset.rst:43
msgid "Select “OEM-Factory Reset”."
msgstr "选择 \"OEM-Factory Reset\"。"

#: ../x230/factory-reset.rst:45 ../nitropad/factory-reset.rst:52
msgid "Confirm the “OEM Factory Reset” with “Continue”."
msgstr "用 \"继续 \"确认 \"OEM工厂重置\"。"

#: ../x230/factory-reset.rst:52 ../nitropad/factory-reset.rst:59
msgid ""
"You will be asked if you want to set the User and Admin/TPM PIN yourself. "
"You press Enter to continue without changing the PINs."
msgstr ""
"你会被问到是否要自己设置用户和管理员/TPM PIN。你可以按回车键继续，而不改变PIN"
"码。"

#: ../x230/factory-reset.rst:55 ../nitropad/factory-reset.rst:62
msgid ""
"You will then be asked if manual user information should be added. You "
"confirm with ‘y’ and enter your name and then the email address."
msgstr ""
"然后会问你是否应该添加手动用户信息。你用'y'确认，并输入你的名字，然后输入电子"
"邮件地址。"

#: ../x230/factory-reset.rst:85 ../nitropad/factory-reset.rst:92
msgid ""
"If you are using Nitrokey storage, you must then select the drive. If the "
"drives /dev/sdb1, /dev/sdc, /dev/sdd1 are displayed, select /dev/sdd1. If "
"the drives /dev/sdb1, /dev/sdc1, /dev/sdd are displayed, select /dev/sdb1."
msgstr ""
"如果你使用的是Nitrokey存储，你必须接着选择驱动器。如果显示的是/dev/sdb1、/"
"dev/sdc、/dev/sdd1这些驱动器，请选择/dev/sdd1。如果显示的是/dev/sdb1、/dev/"
"sdc1、/dev/sdd这些驱动器，请选择/dev/sdb1。"

#: ../x230/factory-reset.rst:95 ../nitropad/factory-reset.rst:102
msgid ""
"The rest of the configuration will be done automatically. You confirm the "
"subsequent restart."
msgstr "其余的配置将自动完成。你确认随后的重新启动。"

#: ../x230/factory-reset.rst:103 ../nitropad/factory-reset.rst:110
msgid ""
"After the restart the OTP secret must be created. Confirm the process with "
"Enter."
msgstr "重新启动后，必须创建OTP秘密。用回车键确认该过程。"

#: ../x230/factory-reset.rst:111 ../nitropad/factory-reset.rst:118
msgid "Confirm that new OTP Secrets should be created."
msgstr "确认应该创建新的OTP Secrets。"

#: ../x230/factory-reset.rst:118 ../nitropad/factory-reset.rst:125
msgid ""
"When prompted, enter the Admin PIN and TPM password. Both are by default: "
"“12345678”."
msgstr "当出现提示时，输入管理员PIN和TPM密码。两者都是默认的：\"12345678\"。"

#: ../x230/factory-reset.rst:126 ../nitropad/factory-reset.rst:133
msgid "You should then reach the Start menu."
msgstr "然后你应该到达 \"开始 \"菜单。"

#: ../x230/factory-reset.rst:133 ../nitropad/factory-reset.rst:140
msgid "Press Enter to start the “Default Boot”."
msgstr "按回车键，开始 \"默认启动\"。"

#: ../x230/factory-reset.rst:137 ../nitropad/factory-reset.rst:144
msgid ""
"If you see the message that no default exists yet, please follow the "
"procedure described in “Troubleshooting: Default Boot Menu”."
msgstr ""
"如果你看到还没有默认值的信息，请按照 \"故障排除 \"中描述的程序操作。默认启动"
"菜单\"。"

#: ../x230/factory-reset.rst:140 ../nitropad/factory-reset.rst:147
msgid ""
"Once the operating system starts until the encryption password is requested, "
"you are done."
msgstr "一旦操作系统启动，直到要求提供加密密码，你就完成了。"

#: ../x230/factory-reset.rst:148 ../nitropad/factory-reset.rst:155
msgid ""
"Finally, copy the public PGP key from the data stick to your computer, e."
"g. to use it for e-mail encryption."
msgstr ""
"最后，将公共PGP密钥从数据棒上复制到你的电脑上，例如用于电子邮件的加密。"

#: ../x230/firmware-update.rst:2 ../start/linux/firmware-update.rst:2
#: ../storage/linux/firmware-update.rst:2
#: ../storage/windows/firmware-update.rst:2 ../nitropad/firmware-update.rst:2
#: ../nitrokey3/firmware-update.rst:2
msgid "Firmware Update"
msgstr "固件更新"

#: ../x230/firmware-update.rst:8 ../nitropad/firmware-update.rst:8
msgid "This guide describes how to update the Heads firmware of the NitroPad."
msgstr "本指南介绍了如何更新NitroPad的头部固件。"

#: ../x230/firmware-update.rst:10 ../nitropad/firmware-update.rst:10
msgid "These instructions are relevant in the following cases:"
msgstr "这些指示与以下情况有关。"

#: ../x230/firmware-update.rst:12 ../nitropad/firmware-update.rst:12
msgid "You want to update the Heads firmware."
msgstr "你想更新头盔固件。"

#: ../x230/firmware-update.rst:14 ../nitropad/firmware-update.rst:14
msgid ""
"You have already performed an OEM factory reset, but the TPM counter has not "
"been reset."
msgstr "你已经进行了OEM工厂重置，但TPM计数器没有被重置。"

#: ../x230/firmware-update.rst:18 ../nitropad/firmware-update.rst:18
#: ../hsm/apache2-tls.rst:17 ../hsm/import-keys-certs.rst:26
#: ../hsm/pkcs11-url.rst:14
msgid "Preparation"
msgstr "准备工作"

#: ../x230/firmware-update.rst:20 ../nitropad/firmware-update.rst:20
msgid "Connect your NitroPad to a power plug and load its battery to over 70%"
msgstr "将您的NitroPad连接到电源插头，并将其电池加载到70%以上。"

#: ../x230/firmware-update.rst:22
msgid ""
"Download the `latest firmware <https://github.com/Nitrokey/heads/"
"releases>`__ and store it on a USB drive. The files are in the “Assets” "
"dropdown box at the end of the release information."
msgstr ""
"下载`最新的固件<https://github.com/Nitrokey/heads/releases>`__并将其存储在USB"
"驱动器上。这些文件在发布信息末尾的 \"资产 \"下拉框中。"

#: ../x230/firmware-update.rst:26
msgid ""
"For hash sum verification, store ``SHA256SUM.txt`` file at the USB drive."
msgstr "为了验证哈希和，在USB驱动器上存储``SHA256SUM.txt``文件。"

#: ../x230/firmware-update.rst:29
msgid ""
"E.g. for ``v1.1-rc3`` version: 1. Firmware should be downloaded from `here "
"<https://github.com/Nitrokey/heads/releases/tag/v1.1-rc3>`__ 2. Firmware and "
"hashsum files should be located on the USB drive in the main directory:"
msgstr ""
"例如，对于``v1.1-rc3``版本：1.固件应从`这里下载<https://github.com/Nitrokey/"
"heads/releases/tag/v1.1-rc3>`__ 2.固件和hashsum文件应位于USB驱动器的主目录"
"中。"

#: ../x230/firmware-update.rst:37 ../nitropad/firmware-update.rst:29
msgid "Firmware file verification"
msgstr "固件文件验证"

#: ../x230/firmware-update.rst:39 ../nitropad/firmware-update.rst:31
msgid ""
"It is mandatory to run a firmware file consistency check before writing it "
"to the device. After copying the firmware file to the USB drive make sure "
"the latter is properly unmounted/ejected to avoid write issues. The "
"consistency check should be run on NitroPad, so the data verified will be "
"exact same as the later read by the update application. This action will not "
"be required in the further firmware updates."
msgstr ""
"在将固件文件写入设备之前，必须运行固件文件一致性检查。在将固件文件复制到U盘"
"后，请确保U盘被正确卸载/弹出，以避免写入问题。一致性检查应该在NitroPad上进"
"行，这样所验证的数据将与后来更新程序所读取的数据完全一致。在以后的固件更新"
"中，将不再需要这一操作。"

#: ../x230/firmware-update.rst:41 ../nitropad/firmware-update.rst:33
msgid ""
"Start Nitropad and open recovery console from ``Options -> Exit to recovery "
"shell``"
msgstr "启动Nitropad并从``打开恢复控制台Options -> Exit to recovery shell``。"

#: ../x230/firmware-update.rst:43 ../nitropad/firmware-update.rst:35
msgid "Execute the following to verify the firmware:"
msgstr "执行以下操作以验证固件。"

#: ../x230/firmware-update.rst:51 ../nitropad/firmware-update.rst:43
msgid "For ``v1.1-rc3`` version this should result in:"
msgstr "对于``v1.1-rc3``版本，这应该导致。"

#: ../x230/firmware-update.rst:58 ../nitropad/firmware-update.rst:50
msgid ""
"This confirms the content of the file is as expected. Please reboot the "
"Nitropad to continue (either by switching off and powering on again, or "
"hitting CTRL+ALT+DELETE)."
msgstr ""
"这证实了文件的内容与预期一致。请重新启动Nitropad继续使用（可以通过关闭电源再"
"开机，或按CTRL+ALT+DELETE）。"

#: ../x230/firmware-update.rst:63 ../nitropad/firmware-update.rst:55
msgid ""
"This is the actual update procedure. Usually the first two screens will not "
"be shown - in that case please start from step 3."
msgstr ""
"这就是实际的更新程序。通常情况下，前两个屏幕不会显示 - 在这种情况下，请从第3"
"步开始。"

#: ../x230/firmware-update.rst:65 ../x230/firmware-update.rst:73
#: ../nitropad/firmware-update.rst:57 ../nitropad/firmware-update.rst:65
msgid ""
"(Optional screen) Select “Ignore error and continue to default boot menu”."
msgstr "(可选屏幕）选择 \"忽略错误，继续使用默认启动菜单\"。"

#: ../x230/firmware-update.rst:81 ../nitropad/firmware-update.rst:73
msgid "Go to “Options”."
msgstr "转到 \"选项\"。"

#: ../x230/firmware-update.rst:88 ../nitropad/firmware-update.rst:80
msgid "Select “Flash/Update the BIOS”."
msgstr "选择 \"Flash/Update BIOS\"。"

#: ../x230/firmware-update.rst:95 ../nitropad/firmware-update.rst:87
msgid "Please confirm the first option."
msgstr "请确认第一个选项。"

#: ../x230/firmware-update.rst:109
msgid "Select the desired .rom file."
msgstr "选择所需的.rom文件。"

#: ../x230/firmware-update.rst:123 ../nitropad/firmware-update.rst:115
msgid "Confirm the restart with Enter."
msgstr "用Enter确认重启。"

#: ../x230/firmware-update.rst:130
msgid "Now you have updated your firmware."
msgstr "现在你已经更新了你的固件。"

#: ../x230/firmware-update.rst:133 ../nitropad/firmware-update.rst:125
msgid "Further steps"
msgstr "进一步的步骤"

#: ../x230/firmware-update.rst:135 ../nitropad/firmware-update.rst:127
msgid ""
"In case ``ERROR: TOTP Generation Failed!`` screen will show up, please "
"follow the instructions for Factory Reset (on the left side menu), starting "
"from step 11."
msgstr ""
"如果``ERROR: TOTP Generation Failed!``屏幕会出现，请从第11步开始，按照工厂重"
"置的指示（在左侧菜单）进行操作。"

#: ../x230/index.rst:2
msgid "NitroPad X230"
msgstr "NitroPad X230"

#: ../x230/index.rst:6 ../u2f/index.rst:6 ../t430/index.rst:6
msgid "Choose your operating system:"
msgstr "选择你的操作系统。"

#: ../x230/operating-system-reinstallation.rst:2
#: ../nitropad/os-reinstallation.rst:2 ../nitropc/os-reinstallation.rst:2
msgid "Operating System Reinstallation"
msgstr "操作系统的重新安装"

#: ../x230/operating-system-reinstallation.rst:10
#: ../x230/operating-system-reinstallation.rst:52
#: ../nitropad/os-reinstallation.rst:10 ../nitropad/os-reinstallation.rst:44
#: ../nitropc/os-reinstallation.rst:10 ../nitropc/os-reinstallation.rst:44
msgid ""
"Booting this USB drive entirely erases all data on the hard disk or SSD of "
"the NitroPad without further warning. Don’t boot this USB drive on any "
"computer which contains data you want to keep. Make sure to format the USB "
"drive after the intended use."
msgstr ""
"启动这个USB驱动器会完全删除NitroPad硬盘或固态硬盘上的所有数据，而不会有进一步"
"的警告。请不要在任何含有你想保留的数据的电脑上启动该USB驱动器。请确保在使用完"
"USB驱动器后对其进行格式化。"

#: ../x230/operating-system-reinstallation.rst:15
msgid ""
"Download one of the operating system images: `Ubuntu Linux <https://www."
"nitrokey.com/files/ubuntu/latest.iso>`__, Qubes OS (`English <https://www."
"nitrokey.com/files/qubes/latest-en.iso>`__, `German <https://www.nitrokey."
"com/files/qubes/latest-de.iso>`__), `Debian <https://www.nitrokey.com/files/"
"debian/latest.iso>`__, `Linux Mint <https://www.nitrokey.com/files/linuxmint/"
"latest.iso>`__"
msgstr ""
"下载其中一个操作系统图像。`Ubuntu Linux <https://www.nitrokey.com/files/"
"ubuntu/latest.iso>`__, Qubes OS (`English <https://www.nitrokey.com/files/"
"qubes/latest-en.iso>`__,`德语 <https://www.nitrokey.com/files/qubes/latest-"
"de.iso>`__）, `Debian <https://www.nitrokey.com/files/debian/latest.iso>`__, "
"`Linux Mint <https://www.nitrokey.com/files/linuxmint/latest.iso>`__"

#: ../x230/operating-system-reinstallation.rst:21
msgid ""
"Optional: Download hash sum and `verify <https://proprivacy.com/guides/how-"
"why-and-when-you-should-hash-check#how-to-hash-check>`__ the downloaded "
"operating system image: `Ubuntu Linux <https://www.nitrokey.com/files/ubuntu/"
"latest.iso.sha256sum>`__, Qubes OS (`English <https://www.nitrokey.com/files/"
"qubes/latest-en.iso.sha256sum>`__, `German <https://www.nitrokey.com/files/"
"qubes/latest-de.iso.sha256sum>`__), `Debian <https://www.nitrokey.com/files/"
"debian/latest.iso.sha256sum>`__, `Linux Mint <https://www.nitrokey.com/files/"
"linuxmint/latest.iso.sha256sum>`__"
msgstr ""
"可选的。下载哈希值并`验证<https://proprivacy.com/guides/how-why-and-when-you-"
"should-hash-check#how-to-hash-check>`__下载的操作系统镜像。`Ubuntu Linux "
"<https://www.nitrokey.com/files/ubuntu/latest.iso.sha256sum>`__，Qubes OS"
"（`English <https://www.nitrokey.com/files/qubes/latest-en.iso."
"sha256sum>`__。`德语 <https://www.nitrokey.com/files/qubes/latest-de.iso."
"sha256sum>`__）, `Debian <https://www.nitrokey.com/files/debian/latest.iso."
"sha256sum>`__, `Linux Mint <https://www.nitrokey.com/files/linuxmint/latest."
"iso.sha256sum>`__"

#: ../x230/operating-system-reinstallation.rst:31
#: ../nitropad/os-reinstallation.rst:23 ../nitropc/os-reinstallation.rst:23
msgid ""
"Write the operating system image to any USB drive. Possible applications:"
msgstr "将操作系统镜像写入任何USB驱动器。可能的应用。"

#: ../x230/operating-system-reinstallation.rst:34
msgid ""
"Windows: `Rufus <https://rufus.ie/>`__, `balenaEtcher <https://www.balena.io/"
"etcher/>`__;"
msgstr ""
"窗口。`Rufus <https://rufus.ie/>`__, `balenaEtcher <https://www.balena.io/"
"etcher/>`__。"

#: ../x230/operating-system-reinstallation.rst:36
msgid "Linux: ``dd``, `balenaEtcher <https://www.balena.io/etcher/>`__;"
msgstr "Linux。``dd``, `balenaEtcher <https://www.balena.io/etcher/>`__。"

#: ../x230/operating-system-reinstallation.rst:37
msgid "macOS: ``dd``, `balenaEtcher <https://www.balena.io/etcher/>`__."
msgstr "macOS。``dd``, `balenaEtcher <https://www.balena.io/etcher/>`__。"

#: ../x230/operating-system-reinstallation.rst:39
#: ../nitropad/os-reinstallation.rst:31 ../nitropc/os-reinstallation.rst:31
msgid ""
"Connect the USB drive to your NitroPad and start it. In Heads menu select "
"Boot Options -> USB Boot."
msgstr ""
"将USB驱动器连接到你的NitroPad上并启动它。在头部菜单中选择启动选项-> USB启动。"

#: ../x230/operating-system-reinstallation.rst:42
#: ../nitropad/os-reinstallation.rst:34 ../nitropc/os-reinstallation.rst:34
msgid ""
"Depending on the operating system you may need to confirm its reinstallation."
msgstr "根据操作系统的不同，你可能需要确认其重新安装。"

#: ../x230/operating-system-reinstallation.rst:45
msgid ""
"`Sign the boot partition. <https://docs.nitrokey.com/x230/system-update."
"html>`__"
msgstr ""
"`在启动分区上签名。<https://docs.nitrokey.com/x230/system-update.html>`__。"

#: ../x230/operating-system-reinstallation.rst:48
#: ../nitropad/os-reinstallation.rst:40 ../nitropc/os-reinstallation.rst:40
msgid ""
"To avoid accidential overwriting of valuable data, format the USB drive "
"afterwards."
msgstr "为了避免有价值的数据被意外覆盖，请在事后格式化USB驱动器。"

#: ../x230/qubes/product_platform_heading.rst:3
msgid "(Nitrokey X230 - Qubes OS)"
msgstr "(Nitrokey X230 - Qubes OS)"

#: ../x230/qubes/index.rst:2
msgid "NitroPad X230 with Qubes OS"
msgstr "带有Qubes操作系统的NitroPad X230"

#: ../x230/qubes/index.rst:13 ../x230/qubes/index.rst:30
#: ../x230/ubuntu/index.rst:13 ../x230/ubuntu/index.rst:30
msgid ""
"With the NitroPad X230, malicious changes to the BIOS, operating system, and "
"software can be easily detected. For example, if you left your NitroPad in a "
"hotel room, you can use your Nitrokey to check if it has been tampered with "
"while you were away. If an attacker modifies the NitroPad’s firmware or "
"operating system, the Nitrokey will detect this (instructions below)."
msgstr ""
"使用NitroPad X230，可以很容易地检测到对BIOS、操作系统和软件的恶意修改。例如，"
"如果你把NitroPad留在酒店房间里，你可以用Nitrokey来检查它在你离开时是否被篡改"
"过。如果攻击者修改了NitroPad的固件或操作系统，Nitrokey会检测到这一点（说明如"
"下）。"

#: ../x230/qubes/index.rst:21 ../x230/ubuntu/index.rst:21
#: ../nitropad/content/shared-index-content1.rst:19
msgid "Verification of Sealed Hardware"
msgstr "密封硬件的验证"

#: ../x230/qubes/index.rst:23 ../x230/ubuntu/index.rst:23
msgid ""
"If you have ordered the unit with the option “sealed screws and sealed bag”, "
"please `verify the sealing <verify-sealed-hardware.html>`__ before "
"unpacking. If you do not know what this means, skip this section."
msgstr ""
"如果您在订购时选择了 \"密封螺丝和密封袋\"，请在开箱前`确认密封<verify-sealed-"
"hardware.html>`__。如果你不知道这意味着什么，请跳过本节。"

#: ../x230/qubes/index.rst:28 ../x230/ubuntu/index.rst:28
#: ../nitropad/content/shared-index-content1.rst:26
msgid "Secure Starting Procedure"
msgstr "安全启动程序"

#: ../x230/qubes/index.rst:37 ../x230/ubuntu/index.rst:37
#: ../nitropad/content/shared-index-content1.rst:35
msgid ""
"Each time you start the NitroPad, you should - if possible - connect your "
"Nitrokey. If the Nitrokey is plugged in and the system has not been "
"modified, the following screen will appear when the NitroPad is turned on."
msgstr ""
"每次启动NitroPad时，您应该--如果可能的话--连接您的Nitrokey。如果Nitrokey被插"
"入，并且系统没有被修改过，那么当NitroPad被打开时，将出现以下屏幕。"

#: ../x230/qubes/index.rst:42 ../x230/ubuntu/index.rst:42
msgid "|image1|"
msgstr "|image1|"

#: ../x230/qubes/index.rst:44 ../x230/ubuntu/index.rst:44
#: ../nitropad/content/shared-index-content1.rst:43
msgid ""
"The box marked in red contains the information that the BIOS has not been "
"changed and that the shared secret of the NitroPad and the Nitrokey match. "
"But this information is not sufficient, because an attacker could have faked "
"it. If at the same time the Nitrokey also flashes green, everything is fine. "
"An attacker would have to have had access to the NitroPad and Nitrokey to "
"achieve this result. It is therefore important that you do not leave both "
"devices unattended."
msgstr ""
"标记为红色的方框中包含了BIOS没有被改变以及NitroPad和Nitrokey的共享秘密相匹配"
"的信息。但这一信息是不够的，因为攻击者有可能伪造了它。如果在同一时间，"
"Nitrokey也闪烁着绿光，那就说明一切正常。攻击者必须有机会接触到NitroPad和"
"Nitrokey才能达到这个结果。因此，重要的是，你不要让这两个设备无人看管。"

#: ../x230/qubes/index.rst:52 ../x230/ubuntu/index.rst:52
#: ../nitropad/content/shared-index-content1.rst:51
msgid ""
"If the information on the NitroPad does not match the information on the "
"Nitrokey, the background would turn red and the message “Invalid Code” would "
"appear. This could indicate that manipulation has taken place."
msgstr ""
"如果NitroPad上的信息与Nitrokey上的信息不一致，背景就会变成红色，并会出现 \"无"
"效代码 \"的信息。这可能表明发生了操纵行为。"

#: ../x230/qubes/index.rst:56 ../x230/ubuntu/index.rst:56
msgid "|image2|"
msgstr "|图像2|"

#: ../x230/qubes/index.rst:58 ../x230/ubuntu/index.rst:58
#: ../nitropad/content/shared-index-content1.rst:58
msgid ""
"How the boot process may look like if the system has been changed (for "
"example after an update) and what error messages may otherwise occur is "
"described further below."
msgstr ""
"如果系统被改变了（例如在更新之后），启动过程可能是什么样子的，还有可能出现什"
"么错误信息，下面会进一步描述。"

#: ../x230/qubes/index.rst:64 ../x230/ubuntu/index.rst:64
msgid ""
"The NitroPad X230 can also be started without the Nitrokey. If you don’t "
"have the Nitrokey with you, but are sure that the hardware has not been "
"manipulated, you can boot your system without checking."
msgstr ""
"NitroPad X230也可以在没有Nitrokey的情况下启动。如果你没有带Nitrokey，但确定硬"
"件没有被操作过，你可以不用检查就启动系统。"

#: ../x230/qubes/index.rst:69 ../x230/ubuntu/index.rst:69
#: ../nitrophone/index.rst:7 ../pro/windows/index.rst:14
#: ../nitropad/qubes/index.rst:7 ../nitropad/ubuntu/index.rst:7
#: ../nitropc/debian/index.rst:14 ../nitropc/qubes/index.rst:14
#: ../nitropc/ubuntu/index.rst:14 ../nextbox/gettingstarted.rst:2
#: ../nethsm/index.rst:7
msgid "Getting Started"
msgstr "入门"

#: ../x230/qubes/index.rst:71 ../x230/ubuntu/index.rst:71
#: ../nitropad/qubes/index.rst:9 ../nitropad/ubuntu/index.rst:9
msgid ""
"After purchase, the passwords are set to a default value and must be changed "
"by you:"
msgstr "购买后，密码被设置为默认值，必须由您来更改。"

#: ../x230/qubes/index.rst:74 ../x230/ubuntu/index.rst:74
#: ../nitropad/qubes/index.rst:12 ../nitropad/ubuntu/index.rst:12
msgid ""
"Press Enter (“Default Boot”) after booting the system, provided the NitroPad "
"has not shown any errors and the Nitrokey is lit green (see above)."
msgstr ""
"在启动系统后按回车键（\"默认启动\"），前提是NitroPad没有显示任何错误，且"
"Nitrokey亮起绿色（见上文）。"

#: ../x230/qubes/index.rst:77 ../x230/ubuntu/index.rst:78
msgid ""
"Next, the system will prompt you to enter the passphrase to decrypt the hard "
"disk. The passphrase is initially “PleaseChangeMe”. |image3|"
msgstr ""
"接下来，系统会提示你输入解密硬盘的口令。该口令最初为 \"PleaseChangeMe\"。|图"
"像3|"

#: ../x230/qubes/index.rst:79 ../x230/ubuntu/index.rst:81
#: ../nitropad/qubes/index.rst:22 ../nitropad/ubuntu/index.rst:22
msgid ""
"The system will then guide you through the process of creating a user "
"account. After that you should have successfully booted the system and could "
"already use it normally."
msgstr ""
"然后，系统将引导你完成创建用户账户的过程。之后，你应该已经成功启动了系统，并"
"且已经可以正常使用。"

#: ../x230/qubes/index.rst:82
msgid ""
"Open the pre-installed Nitrokey App and change the PINs of your Nitrokey as "
"described here."
msgstr "打开预装的Nitrokey应用程序，按照这里的描述，改变你的Nitrokey的密码。"

#: ../x230/qubes/index.rst:84
msgid ""
"Change the passphrase for the hard disk encryption by running “sudo "
"cryptsetup luksChangeKey /dev/sda2” in a terminal."
msgstr ""
"通过在终端运行 \"sudo cryptsetup luksChangeKey /dev/sda2 \"改变硬盘加密的口"
"令。"

#: ../x230/qubes/index.rst:87 ../nitropad/qubes/index.rst:31
msgid ""
"In case the Network Manager icon is not shown and when starting a VM an "
"error like “Domain sys-net has failed to start: PCI device dom0:03_00.0 does "
"not exist” is shown, proceed as follows:"
msgstr ""
"如果没有显示网络管理器图标，并且在启动虚拟机时出现类似 \"Domain sys-net has "
"failed to start:显示PCI设备dom0:03_00.0不存在\"，请按以下步骤操作。"

#: ../x230/qubes/index.rst:91 ../nitropad/qubes/index.rst:35
msgid "Open menu -> Service: sys-net -> sys-net: Qube Settings"
msgstr "打开菜单 -> 服务：sys-net -> sys-net。Qube设置"

#: ../x230/qubes/index.rst:92 ../nitropad/qubes/index.rst:36
msgid "Go to Devices tab"
msgstr "转到设备选项卡"

#: ../x230/qubes/index.rst:93 ../nitropad/qubes/index.rst:37
msgid "Remove “Unknown device” from the right side"
msgstr "从右侧删除 \"未知设备\"。"

#: ../x230/qubes/index.rst:94 ../nitropad/qubes/index.rst:38
msgid "Add “Network controler” device"
msgstr "添加 \"网络控制仪 \"设备"

#: ../x230/qubes/index.rst:95 ../nitropad/qubes/index.rst:39
msgid "Click “OK” and restart the system."
msgstr "点击 \"确定 \"并重新启动系统。"

#: ../x230/qubes/index.rst:98 ../x230/ubuntu/index.rst:95
#: ../nitropad/content/shared-index-content2.rst:2
msgid "Behavior After a System Update"
msgstr "系统更新后的行为"

#: ../x230/qubes/index.rst:100 ../x230/ubuntu/index.rst:97
#: ../nitropad/content/shared-index-content2.rst:4
msgid ""
"The NitroPad firmware checks certain system files for changes. If your "
"operating system has updated important components, you will be warned the "
"next time you boot the NitroPad. This could look like this, for example:"
msgstr ""
"NitroPad固件会检查某些系统文件是否有变化。如果您的操作系统已经更新了重要的组"
"件，那么在您下次启动NitroPad时，您将会收到警告。例如，这可能是这样的：。"

#: ../x230/qubes/index.rst:105 ../x230/ubuntu/index.rst:102
msgid "|image4|"
msgstr "|图像4|"

#: ../x230/qubes/index.rst:107
msgid ""
"That’s why it’s important to restart your NitroPad under controlled "
"conditions after a system update. Only when the new status has been "
"confirmed can you leave the device unattended again. Otherwise, you will not "
"be able to distinguish a possible attack from a system update. Detailed "
"instructions for a system update can be `found here <https://docs.nitrokey."
"com/x230/qubes/system-update.html>`__."
msgstr ""
"这就是为什么在系统更新后要在可控条件下重启NitroPad的重要原因。只有当新的状态"
"被确认后，你才可以再次让设备无人看管。否则，您将无法区分可能的攻击和系统更"
"新。关于系统更新的详细说明可以在这里找到 ` <https://docs.nitrokey.com/x230/"
"qubes/system-update.html>`__。"

#: ../x230/qubes/index.rst:115 ../x230/ubuntu/index.rst:112
#: ../to-be-integrated.rst:389 ../to-be-integrated.rst:756
#: ../u2f/linux/index.rst:41 ../pro/openpgp-thunderbird.rst:14
#: ../pro/smime.rst:72 ../start/linux/index.rst:62
#: ../nitropad/troubleshooting.rst:2 ../nextbox/troubleshooting.rst:2
#: ../nitrokey3/shared/nitropy.rst:71 ../nitrokey3/troubleshooting.rst:2
#: ../fido2/linux/index.rst:7
msgid "Troubleshooting"
msgstr "故障排除"

#: ../x230/qubes/index.rst:117
msgid ""
"If Qubes doesn’t boot as shown below, please execute the following steps:"
msgstr "如果Qubes不能如下图所示启动，请执行以下步骤。"

#: ../x230/qubes/index.rst:130 ../x230/ubuntu/index.rst:127
msgid "Restart your Laptop and go to Options. |image5|"
msgstr "重新启动你的笔记本电脑，并进入选项。|图片5"

#: ../x230/qubes/index.rst:132 ../x230/ubuntu/index.rst:129
msgid "Select “Update Checksums and sign all files on /boot”. |image6|"
msgstr "选择 \"更新校验和并签署/boot上的所有文件\"。|image6|"

#: ../x230/qubes/index.rst:134 ../x230/ubuntu/index.rst:131
msgid ""
"After that, please follow `these instructions from step 3 onwards `system "
"update <https://docs.nitrokey.com/x230/ubuntu/system-update.html>`__."
msgstr ""
"之后，请按照`这些指示从第3步开始`系统更新<https://docs.nitrokey.com/x230/"
"ubuntu/system-update.html>`__。"

#: ../x230/system-update.rst:2 ../nitropad/system-update.rst:2
msgid "System update"
msgstr "系统更新"

#: ../x230/system-update.rst:8 ../nitropad/system-update.rst:8
msgid ""
"The NitroPad watches for changes to important system files to detect third-"
"party tampering. This means that special steps are sometimes necessary when "
"updating the system. This can often be recognized by the fact that the "
"system prompts you to reboot."
msgstr ""
"NitroPad会观察重要系统文件的变化，以发现第三方的篡改行为。这意味着在更新系统"
"时，有时需要采取特殊的步骤。这通常可以通过系统提示你重启的事实来识别。"

#: ../x230/system-update.rst:11 ../nitropad/system-update.rst:11
msgid "Procedure After a System Update"
msgstr "系统更新后的程序"

#: ../x230/system-update.rst:14 ../nitropad/system-update.rst:14
msgid "Boot Hash Mismatch"
msgstr "启动哈希值不匹配"

#: ../x230/system-update.rst:16 ../nitropad/system-update.rst:16
msgid ""
"If you restart the NitroPad after an update, the startup screen should "
"initially appear as usual without an error message."
msgstr ""
"如果你在更新后重新启动NitroPad，最初的启动屏幕应该像往常一样出现，不会有错误"
"信息。"

#: ../x230/system-update.rst:24 ../nitropad/system-update.rst:24
msgid ""
"If you press Enter afterwards, you will get an error message that looks like "
"this or similar:"
msgstr "如果你事后按回车键，你会得到一个错误信息，看起来像这样或类似的信息。"

#: ../x230/system-update.rst:32 ../nitropad/system-update.rst:32
msgid ""
"Confirm the message with Enter to have the files changed by the system "
"update verified. Afterwards you will be asked again for a confirmation."
msgstr ""
"用回车键确认信息，使系统更新所改变的文件得到验证。之后，你会被再次要求确认。"

#: ../x230/system-update.rst:41 ../nitropad/system-update.rst:41
msgid ""
"Now insert the Nitrokey if this is not already the case and confirm with "
"Enter. Then you must enter the User PIN of the Nitrokey (default: 123456). "
"You will not see the characters you typed in on the screen."
msgstr ""
"现在插入硝基钥匙，如果还没有的话，用回车键确认。然后你必须输入硝基钥匙的用户"
"密码（默认：123456）。你不会在屏幕上看到你输入的字符。"

#: ../x230/system-update.rst:46
msgid ""
"**Important**: Heads expects an English keyboard layout, on which e.g. “y” "
"and “z” are swapped in comparison to the German keyboard layout. If you "
"agree with the default selection (which is written in capital letter) you "
"can also simply confirm by pressing Enter."
msgstr ""
"**重要的是**。Heads希望使用英语键盘布局，例如，与德语键盘布局相比，\"y \"和 "
"\"z \"是互换的。如果你同意默认的选择（用大写字母书写），你也可以简单地按回车"
"键确认。"

#: ../x230/system-update.rst:62 ../nitropad/system-update.rst:63
msgid "Now the NitroPad marks the files changed by the update as verified."
msgstr "现在，NitroPad将被更新改变的文件标记为已验证。"

#: ../x230/system-update.rst:65 ../nitropad/system-update.rst:66
msgid "Boot Entry Has Changed"
msgstr "开机进入已经改变了"

#: ../x230/system-update.rst:67 ../nitropad/system-update.rst:68
msgid ""
"Next, either another error message appears or the operating system starts. "
"This depends on the system update. If the following error message appears, "
"proceeds as described below:"
msgstr ""
"接下来，要么出现另一条错误信息，要么操作系统启动。这取决于系统的更新情况。如"
"果出现以下错误信息，请按下文所述进行。"

#: ../x230/system-update.rst:76 ../nitropad/system-update.rst:77
msgid ""
"First confirm the error message shown above. Then we see a list of all "
"possible boat entries - choose the first one by simply pressing Enter."
msgstr ""
"首先确认上面显示的错误信息。然后，我们看到一个所有可能的船条目的列表--通过简"
"单地按回车键选择第一个条目。"

#: ../x230/system-update.rst:85 ../nitropad/system-update.rst:86
msgid ""
"To save this value as default, select the option “Make Ubuntu the default” "
"for Ubuntu or “Make Qubes the default” for Qubes OS in the next window."
msgstr ""
"要把这个值保存为默认值，在下一个窗口中选择Ubuntu的 \"使Ubuntu成为默认值 \"或"
"Qubes OS的 \"使Qubes成为默认值 \"选项。"

#: ../x230/system-update.rst:94
msgid ""
"Now the Nitrokey has to be plugged in, if this is not yet the case. Confirm "
"the next three questions with Enter and enter the User PIN of the Nitrokey "
"if prompted (default: 123456)."
msgstr ""
"现在，如果还没有插入Nitrokey，则必须插入。用回车键确认接下来的三个问题，如果"
"有提示，请输入硝基钥匙的用户密码（默认：123456）。"

#: ../x230/system-update.rst:98
msgid ""
"**Important**: Heads expects an English keyboard layout, on which e.g. “y” "
"and “z” are swapped in comparison to the German keyboard layout."
msgstr ""
"**重要的是**。Heads希望使用英语键盘布局，例如，与德语键盘布局相比，\"y \"和 "
"\"z \"是互换的。"

#: ../x230/verify-sealed-hardware.rst:2 ../t430/verify-sealed-hardware.rst:2
#: ../nitropad/sealed-hardware.rst:2 ../nitropc/sealed-hardware.rst:2
msgid "Verify Sealed Hardware"
msgstr "核实密封的硬件"

#: ../x230/verify-sealed-hardware.rst:8 ../t430/verify-sealed-hardware.rst:8
#: ../nitropad/sealed-hardware.rst:8
msgid ""
"If you ordered your NitroPad with sealed screws and in a sealed bag, it "
"allows you to check if the NitroPad has been tampered with during shipping."
msgstr ""
"如果你订购的NitroPad带有密封的螺丝并装在密封的袋子里，就可以检查NitroPad在运"
"输过程中是否被篡改过。"

#: ../x230/verify-sealed-hardware.rst:10 ../t430/verify-sealed-hardware.rst:10
#: ../nitropad/sealed-hardware.rst:10
msgid ""
"The bag and all screws on the bottom of the device have been sealed. For the "
"bag and each of these screws you have received a photo by e-mail. The "
"orientation of the photos is such that the battery is on top."
msgstr ""
"袋子和设备底部的所有螺丝都已密封。对于袋子和每个螺丝，你已经通过电子邮件收到"
"了一张照片。照片的方向是这样的：电池在上面。"

#: ../x230/verify-sealed-hardware.rst:12 ../t430/verify-sealed-hardware.rst:12
#: ../nitropad/sealed-hardware.rst:12
msgid ""
"Check each screw individually to see if its individual appearance matches "
"the photo. It is best to use a magnifying glass or macro lens for this "
"purpose. The screws are numbered as follows."
msgstr ""
"逐一检查每颗螺丝，看其各自的外观是否与照片相符。为此，最好使用放大镜或微距镜"
"头。螺钉的编号如下。"

#: ../x230/verify-sealed-hardware.rst:20 ../t430/verify-sealed-hardware.rst:21
#: ../nitropad/sealed-hardware.rst:27 ../nitropc/sealed-hardware.rst:16
msgid ""
"This example shows a sealed screw whose glitter represents an individual "
"pattern."
msgstr "这个例子显示了一个密封的螺丝，其闪光点代表了一个单独的图案。"

#: ../x230/verify-sealed-hardware.rst:27 ../t430/verify-sealed-hardware.rst:29
#: ../nitropad/sealed-hardware.rst:34
msgid ""
"If the bag or the screws do not match the photos sent, an unauthorized "
"opening of your NitroPad cannot be excluded. In this case please contact us "
"to arrange further action."
msgstr ""
"如果包装袋或螺丝与发送的照片不一致，不能排除您的NitroPad被擅自打开的可能性。"
"在这种情况下，请联系我们以安排进一步的行动。"

#: ../x230/ubuntu/change-disk-encryption-passphrase.rst:2
#: ../nitropad/ubuntu/change-disk-encryption-passphrase.rst:2
msgid "Change Disk Encryption Passphrase"
msgstr "更改磁盘加密密码"

#: ../x230/ubuntu/product_platform_heading.rst:3
msgid "(Nitrokey X230 - Ubuntu Linux)"
msgstr "(Nitrokey X230 - Ubuntu Linux)"

#: ../x230/ubuntu/change-disk-encryption-passphrase.rst:8
#: ../nitropad/ubuntu/change-disk-encryption-passphrase.rst:8
msgid ""
"To change the passphrase for disk encryption, first click on “Activities” in "
"the upper left corner and enter “disk” in the search bar. Then select the "
"“Disks” program that appears in the middle of the screen."
msgstr ""
"要改变磁盘加密的密码，首先点击左上角的 \"活动\"，在搜索栏中输入 \"磁盘\"。然"
"后选择出现在屏幕中间的 \"磁盘 \"程序。"

#: ../x230/ubuntu/change-disk-encryption-passphrase.rst:18
#: ../nitropad/ubuntu/change-disk-encryption-passphrase.rst:18
msgid ""
"Select the field that says “Luks”. Afterwards it should have an orange "
"background."
msgstr "选择写有 \"Luks \"的字段。之后，它应该有一个橙色的背景。"

#: ../x230/ubuntu/change-disk-encryption-passphrase.rst:26
#: ../nitropad/ubuntu/change-disk-encryption-passphrase.rst:26
msgid ""
"Left click on the gears and select “Change Passphrase” from the context menu."
msgstr "左击齿轮，从上下文菜单中选择 \"更改密码\"。"

#: ../x230/ubuntu/change-disk-encryption-passphrase.rst:34
#: ../nitropad/ubuntu/change-disk-encryption-passphrase.rst:34
msgid ""
"Enter “PleaseChangeMe” as the current passphrase and select a secure new one."
msgstr "输入 \"PleaseChangeMe \"作为当前密码，并选择一个安全的新密码。"

#: ../x230/ubuntu/change-disk-encryption-passphrase.rst:42
#: ../nitropad/ubuntu/change-disk-encryption-passphrase.rst:42
msgid "Enter the your account password."
msgstr "输入你的账户密码。"

#: ../x230/ubuntu/index.rst:2
msgid "NitroPad X230 with Ubuntu Linux"
msgstr "使用Ubuntu Linux的NitroPad X230"

#: ../x230/ubuntu/index.rst:85
msgid ""
"Click on the Nitrokey icon on the left side of the screen to open the pre-"
"installed Nitrokey App."
msgstr "点击屏幕左侧的Nitrokey图标，打开预装的Nitrokey应用程序。"

#: ../x230/ubuntu/index.rst:88
msgid ""
"Change the PINs of your Nitrokey as `described here <https://docs.nitrokey."
"com/pro/change-user-and-admin-pin.html>`__."
msgstr ""
"按照`这里的描述，改变你的Nitrokey的密码<https://docs.nitrokey.com/pro/change-"
"user-and-admin-pin.html>`__。"

#: ../x230/ubuntu/index.rst:91
msgid ""
"Change the passphrase for disk encryption as `described here <https://docs."
"nitrokey.com/x230/ubuntu/change-disk-encryption-passphrase.html>`__."
msgstr ""
"改变磁盘加密的口令，如`这里描述的<https://docs.nitrokey.com/x230/ubuntu/"
"change-disk-encryption-passphrase.html>`__。"

#: ../x230/ubuntu/index.rst:104
msgid ""
"That’s why it’s important to restart your NitroPad under controlled "
"conditions after a system update. Only when the new status has been "
"confirmed can you leave the device unattended again. Otherwise, you will not "
"be able to distinguish a possible attack from a system update. Detailed "
"instructions for a system update can be `found here <https://docs.nitrokey."
"com/x230/ubuntu/system-update.html>`__."
msgstr ""
"这就是为什么在系统更新后要在可控条件下重启NitroPad的重要原因。只有当新的状态"
"被确认后，你才可以再次让设备无人看管。否则，您将无法区分可能的攻击和系统更"
"新。关于系统更新的详细说明可以在这里找到 ` <https://docs.nitrokey.com/x230/"
"ubuntu/system-update.html>`__。"

#: ../x230/ubuntu/index.rst:114
msgid ""
"If Ubuntu doesn’t boot as shown below, please execute the following steps:"
msgstr "如果Ubuntu不能如下图所示启动，请执行以下步骤。"

#: ../x230/ubuntu/index.rst:135 ../nitropad/troubleshooting.rst:62
msgid "Invalid Code"
msgstr "无效代码"

#: ../x230/ubuntu/index.rst:137 ../nitropad/troubleshooting.rst:64
msgid ""
"Each boot the code is generated on the Nitropad and the Nitrokey, if its "
"connected. It is allowed to run 10 boots without loosing the synchronization "
"between the devices, after which the bad code signal is shown, regardless of "
"the rest of the system being in a correct state. If you are sure the system "
"was not beign tampered with (e.g. the Nitropad was booted more than 10 times "
"without the Nitrokey), you can safely reset the system’s warning."
msgstr ""
"每次启动都会在Nitropad和Nitrokey上产生代码，如果它被连接的话。允许运行10次而"
"不失去设备之间的同步，之后就会显示坏的代码信号，不管系统的其他部分是否处于正"
"确状态。如果你确定系统没有被篡改（例如Nitropad在没有Nitrokey的情况下启动了10"
"次以上），你可以安全地重置系统的警告。"

#: ../x230/ubuntu/index.rst:145 ../nitropad/troubleshooting.rst:72
msgid ""
"Please connect the Nitrokey and execute the following from the main boot "
"screen:"
msgstr "请连接Nitrokey并在主启动屏幕上执行以下内容。"

#: ../x230/ubuntu/index.rst:148 ../nitropad/troubleshooting.rst:75
msgid "Options"
msgstr "选择"

#: ../x230/ubuntu/index.rst:149 ../nitropad/troubleshooting.rst:76
msgid "TPM/TOTP/HOTP Options"
msgstr "TPM/TOTP/HOTP选项"

#: ../x230/ubuntu/index.rst:150 ../nitropad/troubleshooting.rst:77
msgid "Generate new TOTP/HOTP secret"
msgstr "生成新的TOTP/HOTP秘密"

#: ../x230/ubuntu/index.rst:152 ../nitropad/troubleshooting.rst:79
msgid ""
"and follow the on-screen guide. After that the secret and counter should be "
"both reset to a new value."
msgstr "并按照屏幕上的提示操作。之后，秘密和计数器应该都被重置为一个新的值。"

#: ../to-be-integrated.rst:1
msgid "# pro"
msgstr "# ＃亲"

#: ../to-be-integrated.rst:5
msgid "PKCS#11 Driver"
msgstr "PKCS#11驱动程序"

#: ../to-be-integrated.rst:7
msgid ""
"If you want to use S/MIME email encryption with Thunderbird, to use "
"TrueCrypt/VeraCrypt, certificate-based SSL authentication with Firefox, "
"PuTTY/KiTTY, OpenSSH, OpenSSL, or any other PKCS#11 compatible software, you "
"should install OpenSC."
msgstr ""
"如果你想用Thunderbird使用S/MIME电子邮件加密，使用TrueCrypt/VeraCrypt，用"
"Firefox、PuTTY/KiTTY、OpenSSH、OpenSSL或任何其他PKCS#11兼容软件进行基于证书的"
"SSL认证，你应该安装OpenSC。"

#: ../to-be-integrated.rst:9
msgid ""
"Note that a Nitrokey initialized with OpenSC doesn't work with GnuPG/"
"OpenPGP. But the other way around works fine. If you want to use Nitrokey "
"with both GnuPG and PKCS#11, generate the keys with GnuPG."
msgstr ""
"请注意，用OpenSC初始化的Nitrokey在GnuPG/OpenPGP中无法使用。但另一种方式可以正"
"常工作。如果你想在GnuPG和PKCS#11中使用Nitrokey，请用GnuPG生成密钥。"

#: ../to-be-integrated.rst:11
msgid ""
"Don't use PKCS#11 in parallel with GnuPG because both may interfere and "
"unexpected issues may result. (There is another promising project scd-pkcs11 "
"in development which may overcome this limitation eventually. Currently it's "
"limit to the authentication certificate and not widely tested yet.)"
msgstr ""
"不要将PKCS#11与GnuPG并行使用，因为两者可能会相互干扰，并可能产生意想不到的问"
"题。(有一个很有前途的项目scd-pkcs11正在开发中，最终可能会克服这个限制。目前它"
"只限于认证证书，还没有经过广泛测试）。"

#: ../to-be-integrated.rst:13
msgid ""
"Instructions, how to create a valid X.509 certificate with Nitrokey (1, 2, "
"3). These are general instructions how to use X.509 certificates. "
"Alternative PKCS#11 Driver:"
msgstr ""
"说明，如何用Nitrokey创建一个有效的X.509证书（1，2，3）。这些是如何使用X.509证"
"书的一般说明。替代的PKCS#11驱动程序。"

#: ../to-be-integrated.rst:16
msgid "The recommended PKCS#11 driver is OpenSC."
msgstr "推荐的PKCS#11驱动是OpenSC。"

#: ../to-be-integrated.rst:18
msgid "Windows Mini Driver"
msgstr "Windows 迷你版驱动程序"

#: ../to-be-integrated.rst:20
msgid ""
"This Mini Driver allows to integrate Nitrokey with Window's certificate "
"store. Subsequently all applications which use this certificate storage can "
"be used with Nitrokey (e.g. Internet Explorer, Google Chrome web browser, "
"Windows Login). To install the driver, you may need to allow the "
"installation of unsigned drivers first. Aloaha"
msgstr ""
"这个迷你驱动允许将Nitrokey与Window的证书存储集成。随后，所有使用该证书存储的"
"应用程序都可以与Nitrokey一起使用（如Internet Explorer、Google Chrome网络浏览"
"器、Windows登录）。要安装该驱动程序，你可能需要先允许安装未签署的驱动程序。阿"
"罗哈"

#: ../to-be-integrated.rst:23
msgid ""
"All applications of Aloaha are working with the Nitrokey. This includes a "
"middleware to integrate Nitrokey with other PKCS#11 based applications and "
"with Windows as well as applications to encrypt and sign PDFs and the hard "
"disk."
msgstr ""
"Aloaha的所有应用程序都与Nitrokey一起工作。这包括将Nitrokey与其他基于PKCS#11的"
"应用程序和Windows以及用于加密和签署PDF和硬盘的应用程序集成的中间件。"

#: ../to-be-integrated.rst:25
msgid "Alternative PKCS#11 Driver:"
msgstr "替代的PKCS#11驱动程序。"

#: ../to-be-integrated.rst:27
msgid ""
"The recommended PKCS#11 driver is OpenSC. Alternatively, you could use Peter "
"Koch's PKCS#11 driver which has the following limitations:"
msgstr ""
"推荐的PKCS#11驱动程序是OpenSC。另外，你也可以使用Peter Koch'的PKCS#11驱动，它"
"有以下限制。"

#: ../to-be-integrated.rst:29
msgid ""
"No import of existing X.509 certificates. (Instead, keys have to be "
"generated on the Nitrokey) The Linux version does not allow to generate "
"keys. Modification of the password/PIN under Linux is not possible."
msgstr ""
"不能导入现有的X.509证书。(相反，必须在Nitrokey上生成密钥）Linux版本不允许生成"
"密钥。在Linux下修改密码/PIN是不可能的。"

#: ../to-be-integrated.rst:33
msgid "p11-glue"
msgstr "p11-胶水"

#: ../to-be-integrated.rst:35
msgid ""
"P11-glue uses PKCS#11 as glue between crypto libraries and security "
"applications on the open source desktop. Articles in German"
msgstr ""
"P11-glue使用PKCS#11作为开源桌面上的加密库和安全应用程序之间的胶水。德文版文章"

#: ../to-be-integrated.rst:38
msgid ""
"Eine allgemeine und gut verständliche Einführung bietet der Artikel "
"Magisches Leuchten im Linux Magazin 2010/12. Eine umfangreiche Anleitung "
"gibt es auf Pro-Linux. Einen ausfuehrlichen Erfahrungsbericht unter CentOS."
msgstr ""
"在Linux杂志2010/12期中，《Magisches Leuchten》一书提供了一个全面和完整的介"
"绍。在Pro-Linux上可以找到一份详尽的指南。关于CentOS的经验之谈。"

#: ../to-be-integrated.rst:44
msgid "**Q:** How can I login into Windows?"
msgstr "**问：**我怎样才能登录到Windows？"

#: ../to-be-integrated.rst:44
msgid ""
"To access Nitrokey devices read-only, download and install this Mini Driver "
"(CSP). If you are using Windows Server you may need to disable the driver "
"signature verification before being able to install the driver. Note that "
"the Mini Driver for Nitrokey Pro may not work yet for write mode."
msgstr ""
"要访问Nitrokey设备的只读性，请下载并安装这个迷你驱动程序（CSP）。如果你使用的"
"是Windows Server，你可能需要在安装驱动前禁用驱动签名验证。请注意，Nitrokey "
"Pro的迷你驱动程序可能还不能用于写模式。"

#: ../to-be-integrated.rst:46
msgid "There exist different ways to use a Nitrokey to logon on Windows:"
msgstr "在Windows上使用Nitrokey登录存在不同的方式。"

#: ../to-be-integrated.rst:48
msgid ""
"Login on stand alone Windows computers based on EIDAuthenticate. "
"Alternatively install OpenSC and use Aloaha Smart Login's PKCS#11 "
"Credentials. Login on Windows domain computers using MS Active Directory "
"based OpenPGP-CSP minidriver for Nitrokey Storage 2 Nitrokey Pro 2 Login on "
"Windows domain computers using MS Active Directory based on Smart Policy for "
"other Nitrokey devices."
msgstr ""
"基于EIDAuthenticate在独立的Windows电脑上登录。或者安装OpenSC并使用Aloaha "
"Smart Login'的PKCS#11凭证。在Windows域计算机上使用基于MS Active Directory的"
"OpenPGP-CSP迷你驱动程序登录Nitrokey Storage 2 Nitrokey Pro 2 在Windows域计算"
"机上使用基于智能策略的MS Active Directory登录其他Nitrokey设备。"

#: ../to-be-integrated.rst:53
msgid "**Q:** How can I login into Linux? Linux Login with PAM"
msgstr "**问：**我怎样才能登录到Linux？用PAM登录Linux"

#: ../to-be-integrated.rst:56
msgid "You have two options: pam_p11 or Poldi."
msgstr "你有两个选择：pam_p11或Poldi。"

#: ../to-be-integrated.rst:58
msgid ""
"The solution with pam_p11 is more difficult to achieve and is based on S/"
"MIME certificates. Please have a look at the documentation for more "
"information."
msgstr ""
"使用pam_p11的解决方案更难实现，它是基于S/MIME证书的。请看一下文件以了解更多信"
"息。"

#: ../to-be-integrated.rst:60
msgid ""
"Poldi 0.4.1 works flawlessly with Nitrokey for PAM authentication with RSA "
"keys (see Troubleshooting for information on ECC keys). Besides the "
"installation of poldi (e.g. 'sudo apt-get install libpam-poldi' on Ubuntu) "
"the following steps are needed to get it working."
msgstr ""
"Poldi 0.4.1与Nitrokey配合使用RSA密钥进行PAM认证，效果完美无缺（关于ECC密钥的"
"信息，请参见故障排除）。除了安装Poldi（例如在Ubuntu上的'sudo apt-get install "
"libpam-poldi'），还需要以下步骤来使其工作。"

#: ../to-be-integrated.rst:62
msgid ""
"It is necessary to already have keys generated on the Nitrokey, as the "
"authentication key is used by PAM."
msgstr "有必要在Nitrokey上已经生成密钥，因为认证密钥是由PAM使用的。"

#: ../to-be-integrated.rst:64
msgid ""
"At first you need to find out the \"Application ID\" of your Nitrokey. You "
"can use \"gpg --card-status | grep Application\" to find out what's yours. "
"It looks like 'D00600012401020000000000xxxxxxxx' or similiar. Now you have "
"to add a line to /etc/poldi/localdb/users which contains the following "
"information"
msgstr ""
"首先，你需要找出你的Nitrokey的\"应用ID\"。你可以使用\"gpg --card-status | "
"grep Application\"来找出你的ID。它看起来"
"像'D00600012401020000000000xxxxxxxx'或类似的。现在你必须在/etc/poldi/localdb/"
"users中添加一行，其中包含以下信息"

#: ../to-be-integrated.rst:66
msgid "<YourApplicationID> <YourUsername>"
msgstr "<YourApplicationID> <YourUsername>"

#: ../to-be-integrated.rst:68
msgid ""
"This could look like 'D00600012401020000000000xxxxxxxx nitrokeyuser'. Now "
"dump the public key from the Nitrokey into poldi local db:"
msgstr ""
"这可能看起来像'D00600012401020000000000xxxxxxxx nitrokeyuser'。现在把公钥从"
"Nitrokey转储到Poldi本地数据库中。"

#: ../to-be-integrated.rst:70
msgid ""
"sudo sh -c 'gpg-connect-agent \"/datafile /etc/poldi/localdb/keys/"
"<YourApplicationID>\" \"SCD READKEY --advanced OPENPGP.3\" /bye'"
msgstr ""
"sudo sh -c 'gpg-connect-agent \"/datafile /etc/poldi/localdb/keys/"
"<YourApplicationID>\" \"SCD READKEY --advanced OPENPGP.3\" /bye'。"

#: ../to-be-integrated.rst:72
msgid ""
"Please be aware that you have to insert your Application ID in the line "
"above with the one of your stick!"
msgstr "请注意，你必须在上面的一行中插入你的申请ID和你的棍子的ID!"

#: ../to-be-integrated.rst:74
msgid ""
"Then you have to configure PAM. Just add \"auth sufficient pam_poldi.so\" to "
"pam configuration files according to your needs:"
msgstr ""
"然后你必须配置PAM。只要根据你的需要在pam配置文件中加入\"auth sufficient "
"pam_poldi.so\"即可。"

#: ../to-be-integrated.rst:76
msgid ""
"/etc/pam.d/common-auth for graphical user login /etc/pam.d/login for console "
"login /etc/pam.d/sudo for sudo authentication /etc/pam.d/gnome-screensaver "
"for login back from a locked screen etc."
msgstr ""
"/etc/pam.d/common-auth用于图形用户登录/etc/pam.d/login用于控制台登录/etc/pam."
"d/sudo用于sudo认证/etc/pam.d/gnome-screensaver用于从锁定的屏幕返回登录等等。"

#: ../to-be-integrated.rst:82
msgid ""
"Note: Pam is dangerous to play around with, so make sure you have a way of "
"accessing the machine if you break authentication completely. Remember that "
"booting into rescue mode from Grub requires a root password, so keep that or "
"a live CD which can read your filesystems to hand."
msgstr ""
"注意：玩Pam是很危险的，所以要确保你有办法在完全破坏认证的情况下访问机器。请记"
"住，从Grub启动到救援模式需要一个root密码，所以请保留这个密码或一张可以读取文"
"件系统的Live CD。"

#: ../to-be-integrated.rst:84
msgid ""
"Here you find further instructions (in German, partially outdated). "
"Troubleshooting"
msgstr "在这里你可以找到进一步的说明（德语，部分已过时）。疑难解答"

#: ../to-be-integrated.rst:87
msgid ""
"If you get an error similar to 'ERR 100663414 Invalid ID <SCD>' you should "
"try instead"
msgstr ""
"如果你得到一个类似于'ERR 100663414 Invalid ID <SCD>'的错误，你应该尝试一下。"

#: ../to-be-integrated.rst:89
msgid ""
"poldi-ctrl -k > <YourApplicationID>; sudo mv <YourApplicationID> /etc/poldi/"
"localdb/keys"
msgstr ""
"poldi-ctrl -k > <YourApplicationID>; sudo mv <YourApplicationID> /etc/poldi/"
"localdb/keys"

#: ../to-be-integrated.rst:91
msgid ""
"Please be aware that you have to insert your Application ID in the line "
"above with the one of your stick! ECC Keys Unfortunately, poldi has no "
"support for ECC keys yet. But there is a patch for ECC keys used with "
"Nitrokey Start. This is already included in the master branch of the poldi "
"development repository and thus will be released in a newer version "
"eventually. In the meantime the only option is to build poldi from source."
msgstr ""
"请注意，你必须在上面的一行中插入你的应用ID和你的棍子的ID!不幸的是，poldi还不"
"支持ECC钥匙。但有一个用于Nitrokey Start的ECC钥匙的补丁。这已经包含在poldi开发"
"库的主分支中，因此最终会在一个较新的版本中发布。在这期间，唯一的选择是从源码"
"构建poldi。"

#: ../to-be-integrated.rst:97
msgid "**Q:** How can I login with One Time Passwords?"
msgstr "**问：**我如何用一次性密码登录？"

#: ../to-be-integrated.rst:97
msgid ""
"One-Time-Passwords (OTP) are used for secure login to websites and local "
"applications."
msgstr "一次性密码（OTP）用于安全登录网站和本地应用程序。"

#: ../to-be-integrated.rst:99
msgid "Two OTP modes exist:"
msgstr "存在两种OTP模式。"

#: ../to-be-integrated.rst:101
msgid ""
"Time-based One-time Passwords (TOTP) is widely used for websites. If unsure, "
"assume you are using this mode. HMAC-based One-time Passwords (HOTP) is used "
"for local applications and computer logins."
msgstr ""
"基于时间的一次性密码（TOTP）被广泛用于网站。如果不确定，请假设您正在使用这种"
"模式。基于HMAC的一次性密码（HOTP）用于本地应用程序和计算机登录。"

#: ../to-be-integrated.rst:104
msgid ""
"To use One-Time-Passwords with your Nitrokey Pro or Nitrokey Storage, you "
"need to download and install the latest Nitrokey App. Time-based One-time "
"Passwords - TOTP"
msgstr ""
"要在你的Nitrokey Pro或Nitrokey Storage中使用一次性密码，你需要下载并安装最新"
"的Nitrokey应用程序。基于时间的一次性密码 - TOTP"

#: ../to-be-integrated.rst:107
msgid ""
"For login to a Google account. For login to a Microsoft account. For login "
"to a Nextcloud account. Generic instructions for all other services."
msgstr ""
"用于登录到谷歌账户。用于登录微软账户。用于登录Nextcloud账户。所有其他服务的通"
"用说明。"

#: ../to-be-integrated.rst:112
msgid "**Q:** How can I use the Nitrokey Pro with Android?"
msgstr "**问：**我如何在安卓系统中使用Nitrokey Pro？"

#: ../to-be-integrated.rst:114
msgid ""
"It is possible to use the Nitrokey on an Android devices in combination with "
"OpenKeychain. This enables one to encrypt/decrypt E-Mails or files via "
"OpenPGP."
msgstr ""
"可以在安卓设备上使用Nitrokey与OpenKeychain相结合。这使得人们能够通过OpenPGP对"
"电子邮件或文件进行加密/解密。"

#: ../to-be-integrated.rst:116
msgid ""
"Cotech provides Android software with commercial support. Please have a look "
"there, if you like. The following instructions are based on OpenKeychain."
msgstr ""
"Cotech提供具有商业支持的Android软件。如果你喜欢，请去那里看看。下面的说明是基"
"于OpenKeychain的。"

#: ../to-be-integrated.rst:118
msgid ""
"Tested with Nitrokey Start, Pro and Storage in combination with Android 7.1, "
"OpenKeychain 4.5 and K9Mail 5.207. Prerequisites"
msgstr ""
"使用Nitrokey Start、Pro和Storage与Android 7.1、OpenKeychain 4.5和K9Mail 5.207"
"相结合进行了测试。前提条件"

#: ../to-be-integrated.rst:121
msgid ""
"Android phone which is capable of USB OTG USB OTG cable to connect the "
"Nitrokey with your phone OpenKeychain installed on Device Public key saved "
"on the device or uploaded on a keyserver"
msgstr ""
"能够使用USB OTG的安卓手机 用USB OTG线将Nitrokey与你的手机连接起来 设备上安装"
"的OpenKeychain 公钥保存在设备上或上传到钥匙服务器。"

#: ../to-be-integrated.rst:126
msgid "First steps"
msgstr "第一个步骤"

#: ../to-be-integrated.rst:128
msgid ""
"To import the keys of the Nitrokey you should at first start the "
"OpenKeychain app. Then insert the Nitrokey with the USB OTG cable. "
"OpenKeychain starts a dialog to use the Nitrokey (you may have to accept the "
"usage of the key with OpenKeychain first). Now you can choose between "
"looking for public key on a keyserver or choosing the public key from "
"storage. After the public key got imported you have to tap on 'connect key' "
"to import a reference to the private key of the Nitrokey. That’s basically "
"it."
msgstr ""
"要导入Nitrokey的钥匙，你首先要启动OpenKeychain应用程序。然后用USB OTG线插入"
"Nitrokey。OpenKeychain会启动一个使用Nitrokey的对话框（你可能需要先接受"
"OpenKeychain对钥匙的使用）。现在你可以选择在钥匙服务器上寻找公钥或从存储器中"
"选择公钥。导入公钥后，你必须点击'连接密钥'来导入Nitrokey的私钥参考。这基本上"
"就是了。"

#: ../to-be-integrated.rst:130
msgid ""
"In the case that no there are no keys on the Nitrokey yet, OpenKeychain will "
"help with the creation of a new key pair instead. Usage"
msgstr ""
"如果Nitrokey上还没有钥匙，OpenKeychain将帮助创建一个新的钥匙对。使用方法"

#: ../to-be-integrated.rst:133
msgid ""
"You can use all functions of OpenKeychain and Apps which make use of "
"OpenKeychain. Therefore you can just encrypt/decrypt messages or files by "
"hand using the app directly or for example you combine K9Mail with "
"OpenKeychain to decrypt your mails automatically. It is important to choose "
"the right key in the K9Mail account settings first."
msgstr ""
"你可以使用OpenKeychain的所有功能和使用OpenKeychain的应用程序。因此，你可以直"
"接使用应用程序手动加密/解密邮件或文件，或者例如你将K9Mail与OpenKeychain结合起"
"来，自动解密你的邮件。首先在K9Mail账户设置中选择正确的密钥是很重要的。"

#: ../to-be-integrated.rst:135
msgid ""
"Note that you may have to enable the on-screen keyboard in the android "
"settings to type the PIN as the system recognizes the Nitrokey as a physical "
"keyboard and therefore tries to hide the on-screen keyboard. Go to 'Language "
"and Input' > 'Current Keyboard' > 'Hardware show input method'."
msgstr ""
"请注意，你可能必须在安卓设置中启用屏幕键盘来输入密码，因为系统将Nitrokey识别"
"为物理键盘，因此会试图隐藏屏幕键盘。进入'语言和输入'>'当前键盘'>'硬件显示输入"
"法'。"

#: ../to-be-integrated.rst:138
msgid "**Q:** How can I use the Nitrokey Pro with Iphone?"
msgstr "**问：**我如何用Iphone使用Nitrokey Pro？"

#: ../to-be-integrated.rst:139
msgid "Currently it is not possible"
msgstr "目前，它不可能"

#: ../to-be-integrated.rst:141
msgid "**Q:** How can I use the Nitrokey Pro with Ubuntu Phone?"
msgstr "**问：**我如何在Ubuntu手机上使用Nitrokey Pro？"

#: ../to-be-integrated.rst:141
msgid ""
"There are instructions on gnupg.org about how to use a OpenPGP Card on a "
"UbuntuPhone which should work for the Nitrokey Start, Pro and Storage."
msgstr ""
"gnupg.org上有关于如何在UbuntuPhone上使用OpenPGP卡的说明，它应该适用于"
"Nitrokey Start、Pro和Storage。"

#: ../to-be-integrated.rst:143
msgid ""
"**Q:** How can I do Email encryption? There are two widely used standards "
"for email encryption. While OpenPGP/GnuPG is popular among individuals, S/"
"MIME/X.509 is mostly used by enterprises. If you are in doubt which one to "
"choose, you should use OpenPGP."
msgstr ""
"**问：**我如何进行电子邮件加密？目前有两种广泛使用的电子邮件加密标准。"
"OpenPGP/GnuPG在个人中很受欢迎，而S/MIME/X.509则大多被企业使用。如果你对选择哪"
"一个有疑问，你应该使用OpenPGP。"

#: ../to-be-integrated.rst:146
msgid ""
"instructions for using the OpenPGP standard with the Nitrokey instructions "
"for using S/MIME with the Nitrokey. Note: SMIME certificates can be "
"purchased cheaply from CERTUM and SSLTrust."
msgstr ""
"使用Nitrokey的OpenPGP标准的说明 使用Nitrokey的S/MIME的说明。注意：SMIME证书可"
"以从CERTUM和SSLTrust那里廉价购买。"

#: ../to-be-integrated.rst:149
msgid ""
"Please note, that it is currently advised to use either OpenPGP or S/MIME "
"encryption, but not both with the Nitrokey."
msgstr "请注意，目前建议使用OpenPGP或S/MIME加密，但不能同时使用Nitrokey。"

#: ../to-be-integrated.rst:151
msgid ""
"To use a Nitrokey Storage with Thunderbird 78+, you can try this tutorial."
msgstr "要在Thunderbird 78+中使用Nitrokey存储，你可以试试这个教程。"

#: ../to-be-integrated.rst:153
msgid "**Q:** How can I do Hard Disk Encryption?"
msgstr "**问：**我如何进行硬盘加密？"

#: ../to-be-integrated.rst:156
msgid ""
"For: Nitrokey Pro, Nitrokey Storage, Nitrokey Start VeraCrypt (formerly "
"TrueCrypt)"
msgstr ""
"用于。Nitrokey Pro, Nitrokey Storage, Nitrokey Start VeraCrypt (formerly "
"TrueCrypt)"

#: ../to-be-integrated.rst:159
msgid ""
"VeraCrypt is a free and Open Source disk encryption software for Windows, "
"macOS, and GNU/Linux. It is the successor of TrueCrypt and thus recommended, "
"although the following instructions should apply to TrueCrypt as well. "
"Follow these steps to use the program with Nitrokey Storage or Pro:"
msgstr ""
"VeraCrypt是一款免费的开源磁盘加密软件，适用于Windows、macOS和GNU/Linux。它是"
"TrueCrypt的后继者，因此被推荐使用，尽管以下说明也应适用于TrueCrypt。按照这些"
"步骤，将该程序与Nitrokey Storage或Pro一起使用。"

#: ../to-be-integrated.rst:161 ../to-be-integrated.rst:673
msgid ""
"Install OpenSC Choose the library in VeraCrypt under "
"Settings>Preferences>Security Token (location depends on system, e.g. /usr/"
"lib/opensc). Generate a 64 Byte key file via Tools>Keyfile Generator. Now "
"you should be able to import the generated key file via Tools>Manage "
"Security Token Keyfiles. You should choose the first Slot ([0] User PIN). "
"The keyfile is then stored on the Nitrokey as 'Private Data Object 1' "
"(PrivDO1). After this you should wipe the original keyfile on your Computer "
"securely! Now you can use VeraCrypt with the Nitrokey: Create a container, "
"choose the keyfile on the device as an alternative to a password."
msgstr ""
"安装OpenSC 在VeraCrypt的Settings>Preferences>Security Token下选择该库（位置取"
"决于系统，例如/usr/lib/opensc）。通过Tools>Keyfile Generator生成一个64字节的"
"密钥文件。现在你应该能够通过Tools>Manage Security Token Keyfiles导入生成的密"
"钥文件。你应该选择第一个插槽（[0] 用户密码）。然后，该密钥文件将作为'私人数据"
"对象1'（PrivDO1）储存在Nitrokey上。在这之后，你应该安全地擦除你电脑上的原始密"
"钥文件!现在你可以用Nitrokey使用VeraCrypt：创建一个容器，选择设备上的密钥文件"
"作为密码的替代品。"

#: ../to-be-integrated.rst:168
msgid ""
"Security Consideration: Please note that VeraCrypt doesn't make use of the "
"full security which Nitrokey (and smart cards in general) offer. Instead it "
"stores a keyfile on the Nitrokey which theoretically could be stolen by a "
"computer virus after the user enters the PIN."
msgstr ""
"安全方面的考虑。请注意，VeraCrypt并没有利用Nitrokey（以及一般的智能卡）提供的"
"全部安全性。相反，它在Nitrokey上存储了一个密钥文件，理论上，在用户输入PIN后，"
"该文件可能被计算机病毒窃取。"

#: ../to-be-integrated.rst:170
msgid ""
"Note: Aloaha Crypt is based on TrueCrypt/VeraCrypt but without the described "
"security limitation."
msgstr "注意：Aloaha Crypt是基于TrueCrypt/VeraCrypt的，但没有所述的安全限制。"

#: ../to-be-integrated.rst:173
msgid ""
"Hard Disk Encryption on Linux, Based on LUKS/dm-crypt Here are excellent "
"instructions how to use Nitrokey to encrypt your hard disk under Linux with "
"LUKS/dm-crypt. Other instruction."
msgstr ""
"Linux上的硬盘加密，基于LUKS/dm-crypt 这里是如何使用Nitrokey在Linux下用LUKS/"
"dm-crypt加密硬盘的出色说明。其他指示。"

#: ../to-be-integrated.rst:176
msgid ""
"Purism has created a simple script to add the Nitrokey/LibremKey as a way to "
"unlock LUKS partitions (not tested by Nitrokey yet)."
msgstr ""
"Purism创建了一个简单的脚本，将Nitrokey/LibremKey作为解锁LUKS分区的一种方式"
"（尚未经过Nitrokey的测试）。"

#: ../to-be-integrated.rst:178
msgid ""
"This project aims to ease the use of LUKS with the Nitrokey Pro or Storage "
"based on the Password Safe (not tested by Nitrokey yet). A description on "
"how to use it on Gentoo can be found here."
msgstr ""
"这个项目旨在简化LUKS与Nitrokey Pro或基于Password Safe（尚未被Nitrokey测试）的"
"存储的使用。关于如何在Gentoo上使用它的描述可以在这里找到。"

#: ../to-be-integrated.rst:180
msgid ""
"For Arch Linux, see initramfs-scencrypt. Storage Encryption on Linux, Based "
"on EncFS"
msgstr "对于Arch Linux，见initramfs-scencrypt。Linux上的存储加密，基于EncFS"

#: ../to-be-integrated.rst:183
msgid ""
"Prerequisite: Please ensure that you installed the device driver, changed "
"the default PINs and generated or imported keys with GnuPG."
msgstr ""
"前提是。请确保你安装了设备驱动程序，改变了默认的PIN码，并使用GnuPG生成或导入"
"了密钥。"

#: ../to-be-integrated.rst:185
msgid ""
"An easy to use encrypted file system is EncFS, which is based on FUSE. You "
"may follow these steps to use it with very long passwords and Nitrokey:"
msgstr ""
"一个易于使用的加密文件系统是EncFS，它是基于FUSE的。你可以按照这些步骤来使用它"
"的很长的密码和Nitrokey。"

#: ../to-be-integrated.rst:187 ../pro/linux/hard-disk-encryption.rst:69
#: ../nethsm/_tutorial.rst:3
msgid "Initialization"
msgstr "初始化"

#: ../to-be-integrated.rst:189
msgid ""
"# Create a key file with random data: $ dd bs=64 count=1 if=/dev/urandom "
"of=keyfile"
msgstr ""
"# 用随机数据创建一个密钥文件： $ dd bs=64 count=1 if=/dev/urandom of=keyfile"

#: ../to-be-integrated.rst:192
msgid ""
"# Encrypt the key file and use the User-ID of your Nitrokey $ gpg --encrypt "
"keyfile"
msgstr ""
"# 对钥匙文件进行加密，并使用你的Nitrokey的用户ID $ gpg --encrypt keyfile"

#: ../to-be-integrated.rst:195
msgid ""
"# Remove the key file in clear text: $ rm keyfile # you may want to use "
"'wipe' or 'shred' to securely delete the keyfile"
msgstr ""
"# 以明文方式删除钥匙文件：$ rm keyfile # 你可能想用'wipe'或'shred'来安全地删"
"除钥匙文件。"

#: ../to-be-integrated.rst:198
msgid "# Create mount point: $ mkdir ~/.cryptdir ~/cryptdir"
msgstr "# 创建装载点： $ mkdir ~/.cryptdir ~/cryptdir"

#: ../to-be-integrated.rst:201
msgid ""
"# Create the actual encryption folder $ gpg -d keyfile.gpg | encfs -S ~/."
"cryptdir ~/cryptdir"
msgstr ""
"# 创建实际的加密文件夹 $ gpg -d keyfile.gpg | encfs -S ~/.cryptdir ~/cryptdir"

#: ../to-be-integrated.rst:204
msgid ""
"# There may appears an error message about missing permission of fusermount "
"# This message can be ignored"
msgstr ""
"# 可能会出现一条错误信息，说缺少fusermount的权限 # 这个信息可以忽略不计"

#: ../to-be-integrated.rst:207
msgid "# Unmount the new file system: $ fusermount -u ~/cryptdir"
msgstr "# 卸载新的文件系统： $ fusermount -u ~/cryptdir"

#: ../to-be-integrated.rst:210 ../fido2/linux/desktop-login.rst:244
#: ../pro/openpgp-outlook.rst:26 ../pro/openpgp.rst:49
#: ../pro/smime-outlook.rst:36 ../pro/smime-thunderbird.rst:45
#: ../pro/smime.rst:57 ../start/multiple-identities.rst:15
#: ../pro/linux/automatic-screen-lock.rst:77
#: ../pro/linux/disk-encryption-luks.rst:140
#: ../pro/linux/hard-disk-encryption.rst:116
#: ../pro/windows/openvpn-viscosity.rst:39
msgid "Usage"
msgstr "使用方法"

#: ../to-be-integrated.rst:212
msgid ""
"# Mount encrypted file system and enter PIN of Nitrokey: $ gpg -d keyfile."
"gpg | encfs -S ~/.cryptdir ~/cryptdir"
msgstr ""
"# 挂载加密的文件系统并输入Nitrokey的PIN码： $ gpg -d keyfile.gpg | encfs -S "
"~/.cryptdir ~/cryptdir"

#: ../to-be-integrated.rst:215
msgid "# After usage, unmount the file system: $ fusermount -u ~/cryptdir"
msgstr "# 使用后，卸载文件系统： $ fusermount -u ~/cryptdir"

#: ../to-be-integrated.rst:219
msgid "Storage Encryption on Linux, Based on ECryptFS"
msgstr "基于ECryptFS的Linux上的存储加密"

#: ../to-be-integrated.rst:221
msgid ""
"eCryptfs is a file based transparent encryption file system for Linux which "
"can be used with Nitrokey through a PKCS#11 driver. See these instructions. "
"Alternatively, try ESOSI or follow these steps using OpenSC and OpenVPN:"
msgstr ""
"eCryptfs是一个基于文件的Linux透明加密文件系统，可以通过PKCS#11驱动与Nitrokey"
"一起使用。请看这些说明。另外，也可以尝试ESOSI或按照这些步骤使用OpenSC和"
"OpenVPN。"

#: ../to-be-integrated.rst:223
msgid "Warning: This will delete existing keys on your Nitrokey!"
msgstr "警告。这将会删除你的Nitrokey上的现有钥匙!"

#: ../to-be-integrated.rst:225
msgid ""
"# Import the certificate and key to the Nitrokey $ pkcs15-init --delete-"
"objects privkey,pubkey --id 3 --store-private-key user@example.com.p12 --"
"format pkcs12 --auth-id 3 --verify-pin"
msgstr ""
"# 向Nitrokey导入证书和密钥 $ pkcs15-init --delete-objects privkey,pubkey --"
"id 3 --store-private key user@example.com.p12 --format pkcs12 --auth-id 3 --"
"verify-pin"

#: ../to-be-integrated.rst:228
msgid "# Create the file ~/.ecryptfsrc.pkcs11: $ editor ~/.ecryptfsrc.pkcs11"
msgstr "# 创建文件 ~/.ecryptfsrc.pkcs11: $ editor ~/.ecryptfsrc.pkcs11"

#: ../to-be-integrated.rst:231
msgid ""
"# Enter this content: $ pkcs11-log-level=5 pkcs11-provider1,name=name,"
"library=/usr/lib/opensc-pkcs11.so,cert-private=true $ openvpn --show-pkcs11-"
"ids path to opensc-pkcs11 module Certificate"
msgstr ""
"# 输入这些内容： $ pkcs11-log-level=5 pkcs11-provider1,name=name,library=/"
"usr/lib/opensc-pkcs11.so,cert-private=true $ openvpn --show-pkcs11-ids "
"opensc-pkcs11模块的路径 证书"

#: ../to-be-integrated.rst:235
msgid ""
"DN: /description=Iv4IQpLO02Mnix9i/CN=user@example.com/"
"emailAddress=user@example.com Serial: 066E04 Serialized id: ZeitControl/"
"PKCS\\x2315\\x20emulated/000500000c7f/"
"OpenPGP\\x20card\\x20\\x28User\\x20PIN\\x29/03"
msgstr ""
"DN: /description=Iv4IQpLO02Mnix9i/CN=user@example.com/"
"emailAddress=user@example.com Serial:066E04 序列化的ID。ZeitControl/"
"PKCS\\x2315\\x20emulated/000500000c7f/"
"OpenPGP\\x20card\\x20\\x28User\\x20PIN\\x29/03"

#: ../to-be-integrated.rst:239
msgid "# Copy the serialized id for later usage: $ ecryptfs-manager"
msgstr "# 复制序列化的ID供以后使用。$ ecryptfs-manager"

#: ../to-be-integrated.rst:242
msgid ""
"# This will show list option. Choose option \"Add public key to keyring\" # "
"Choose pkcs11-helper # Enter the serialized ID of step 3 to PKCS#11 ID."
msgstr ""
"# 这将显示列表选项。选择选项\"添加公钥到钥匙圈\" # 选择pkcs11-helper # 输入步"
"骤3的序列化ID到PKCS#11 ID。"

#: ../to-be-integrated.rst:250
msgid "**Q:** How can I sign and encrypt Files and PDFs? GnuPG"
msgstr "**问：**我如何签署和加密文件和PDF？GnuPG"

#: ../to-be-integrated.rst:253
msgid ""
"Use the gpgsm tool to sign, verify, encrypt and decrypt files. Use a "
"signature key on a Nitrokey to sign documents using Acrobat Reader, Open "
"Office / Libre Office or any other PDF reader supporting electronic "
"signatures."
msgstr ""
"使用gpgsm工具来签署、验证、加密和解密文件。使用Nitrokey上的签名密钥，使用"
"Acrobat Reader、Open Office / Libre Office或任何其他支持电子签名的PDF阅读器签"
"署文件。"

#: ../to-be-integrated.rst:256
msgid "GPA - GNU Privacy Assistant"
msgstr "GPA - GNU隐私助理"

#: ../to-be-integrated.rst:258
msgid ""
"The Gnu Privacy Assistant (GPA) recognizes Nitrokey out-of-the-box, has "
"various features to manage keys and cards. It also allows file operations "
"such as file encryption, decryption, signing."
msgstr ""
"Gnu隐私助理（GPA）能够识别Nitrokey，具有管理密钥和卡片的各种功能。它还允许文"
"件操作，如文件加密、解密、签名。"

#: ../to-be-integrated.rst:261
msgid "SOPS - Secrect OPerationS"
msgstr "SOPS - 正确的操作"

#: ../to-be-integrated.rst:263
msgid ""
"SOPS is an editor of encrypted files that supports YAML, JSON and BINARY "
"formats and encrypts with AWS KMS and PGP. You can find it on github."
msgstr ""
"SOPS是一个加密文件的编辑器，支持YAML、JSON和BINARY格式，用AWS KMS和PGP加密。"
"你可以在github上找到它。"

#: ../to-be-integrated.rst:266
msgid "Aloaha"
msgstr "Aloaha"

#: ../to-be-integrated.rst:268
msgid ""
"Aloaha provides several applications to encrypt and sign PDFs. All of them, "
"which allow smart card integration, work with Nitrokey. You can for example "
"import key and certificate by using OpenSC or any other appropriate variant. "
"After this Windows recognize your certificate and you can sign the document "
"as it is shown in the screencast below."
msgstr ""
"Aloaha提供了几个应用程序来加密和签署PDF文件。所有这些允许智能卡集成的应用程序"
"都与Nitrokey一起工作。例如，你可以通过使用OpenSC或任何其他适当的变体来导入密"
"钥和证书。在这之后，Windows会识别你的证书，你就可以像下面的截屏一样签署文件。"

#: ../to-be-integrated.rst:270
msgid "GpgEx for Windows Explorer"
msgstr "用于Windows Explorer的GpgEx"

#: ../to-be-integrated.rst:272
msgid ""
"GpgEx integrates smoothly into Windows Explorer to allow encryption and "
"decryption of files. Install it as part of the GPG4Win package."
msgstr ""
"GpgEx顺利地集成到Windows Explorer中，允许对文件进行加密和解密。把它作为"
"GPG4Win软件包的一部分来安装。"

#: ../to-be-integrated.rst:275
msgid ""
"Before you start to use any of these applications with your Nitrokey, please "
"ensure that you installed the device driver and initialized the device (e.g. "
"generated keys)."
msgstr ""
"在你开始用你的Nitrokey使用这些应用程序之前，请确保你已经安装了设备驱动程序并"
"初始化了设备（如生成了钥匙）。"

#: ../to-be-integrated.rst:277
msgid ""
"Certificate-based login with TLS and web browser is a very secure "
"authentication method but it is only used rarely. If you are unsure what "
"this means, this approach is most likely not relevant for you."
msgstr ""
"使用TLS和网络浏览器的基于证书的登录是一种非常安全的认证方法，但它只是很少使"
"用。如果你不确定这意味着什么，这种方法很可能与你无关。"

#: ../to-be-integrated.rst:279
msgid ""
"This page refers to websites and applications which support certificate "
"authentication, so that users don't need to enter username and password when "
"login. For instance WebID is a great protocol which makes use of it. "
"Certificate authentication can be used easily with the Nitrokey and also "
"with any other certificate storages. Mozilla Firefox"
msgstr ""
"本页指的是支持证书认证的网站和应用程序，这样用户在登录时就不需要输入用户名和"
"密码。例如，WebID是一个伟大的协议，它利用了这一点。证书认证可以很容易地用于"
"Nitrokey，也可以用于任何其他的证书储存器。火狐浏览器"

#: ../to-be-integrated.rst:282
msgid "You need to install the PKCS#11 driver:"
msgstr "你需要安装PKCS#11驱动。"

#: ../to-be-integrated.rst:284
msgid ""
"Download the PKCS11 driver and store it on your local hard disk or install "
"OpenSC. Open the Preferences in Firefox and go to  Privacy & Security -> "
"Security (just a headline) -> Button 'Security Devices...' Press the button "
"Load. Enter \"Nitrokey\" as the Module Name and press the Browse button to "
"select the previously downloaded PKCS11 driver file. Confirm and close all "
"dialogs."
msgstr ""
"下载PKCS11驱动程序并将其存储在你的本地硬盘上，或者安装OpenSC。打开火狐浏览器"
"的首选项，进入隐私& 安全 -> 安全（只是一个标题） -> 按钮 '安全设备...' 按下加"
"载按钮。输入\"Nitrokey\"作为模块名称，并按浏览按钮，选择先前下载的PKCS11驱动"
"文件。确认并关闭所有对话框。"

#: ../to-be-integrated.rst:288
msgid ""
"Now you are ready to access websites which provide certificate "
"authentication. Internet Explorer"
msgstr "现在你已经准备好访问提供证书认证的网站了。互联网浏览器"

#: ../to-be-integrated.rst:291
msgid ""
"Install this Mini Driver for Windows. Now you are ready to access websites "
"which provide certificate authentication. Google Chrome"
msgstr ""
"安装这个Mini Driver for Windows。现在你已经准备好访问提供证书认证的网站了。谷"
"歌浏览器"

#: ../to-be-integrated.rst:294
msgid ""
"Under Windows, install this Mini Driver. Under Linux, follow these "
"instructions. Now you are ready to access websites which provide certificate "
"authentication. WebID"
msgstr ""
"在Windows下，安装这个迷你驱动程序。在Linux下，请遵循这些指示。现在你已经准备"
"好访问提供证书认证的网站了。网络身份认证"

#: ../to-be-integrated.rst:297
msgid ""
"WebID is a technology to enable secure and federated social websites. Here "
"is a video (WebM, Ogg video, H.264) which demonstrates how to use Nitrokey "
"to create a WebID profile and subsequently to use it in an Internet cafe in "
"Singapore. Nitrokey protects against computer viruses which might otherwise "
"steel the username and password. Websites Web Site        Category CAcert  "
"community-based Certificate Authority PrivaSphere     Secure messaging HM "
"Revenue & Customs    UK's tax administration Software Application     "
"Category Roundcube (plugin)      Webmail Drupal (WebID, Certificate "
"login)       Content management system Media Wiki (plugin)     Wiki "
"Joomla!         Content management system Apache + mod_ssl        Web server "
"OpenSSH         SSH (remote secure shell) client and server Wordpress "
"(plugin)      Blog and CMS Tivoli  System management framework Globalscape "
"EFT         managed file transfer (MFT) Oracle Identity Manager         I&AM "
"Fuse Source     Middleware Liferay         Blog FusionForge     web-based "
"project-management and collaboration software"
msgstr ""
"WebID是一项实现安全和联合社会网站的技术。这里有一段视频（WebM，Ogg视频，"
"H.264），演示了如何使用Nitrokey创建一个WebID配置文件，并随后在新加坡的一家网"
"吧使用。Nitrokey可以防止计算机病毒的入侵，否则这些病毒可能会将用户名和密码钢"
"化。网站 网站类别 CAcert 基于社区的证书颁发机构 PrivaSphere 安全消息 HM "
"Revenue & Customs UK's tax administration 软件应用类别 Roundcube（插件） "
"Webmail Drupal（WebID，证书登录） 内容管理系统 Media Wiki（插件） Wiki "
"Joomla!         内容管理系统 Apache + mod_ssl 网络服务器 OpenSSH SSH（远程安"
"全外壳）客户端和服务器 Wordpress（插件） 博客和CMS Tivoli 系统管理框架 "
"Globalscape EFT 管理文件传输（MFT） Oracle Identity Manager I&AM Fuse 源码中"
"间件 Liferay 博客 FusionForge 基于网络的项目管理和协作软件"

#: ../to-be-integrated.rst:319
msgid ""
"This website is a good read about strong authentication mechanisms, why "
"client certificate authentication isn't popular and better alternatives at "
"the horizon."
msgstr ""
"这个网站是一个关于强认证机制的好读物，为什么客户证书认证不流行，以及更好的替"
"代方案在地平线上。"

#: ../to-be-integrated.rst:321
msgid "**Q:** How can I use Enterprise Authentication?"
msgstr "**问：**我怎样才能使用企业认证？"

#: ../to-be-integrated.rst:323
msgid ""
"LinOTP privacyIDEA RCDevs OpenOTP Usage of Nitrokey HSM as a secure key "
"store for the Forgerock OpenDJ server and Forgerock Identity Gateway"
msgstr ""
"LinOTP privacyIDEA RCDevs OpenOTP 使用Nitrokey HSM作为Forgerock OpenDJ服务器"
"和Forgerock身份网关的安全密钥存储。"

#: ../to-be-integrated.rst:329
msgid ""
"**Q:** How can I do SSH for Server Administration on Windows? The Nitrokey "
"should already have PGP keys installed and the local GnuPG keyring should be "
"aware of the keys, that is to say GPG4Win should be installed on the system "
"(only the core application GnuPG is needed). Furthermore you should install "
"PuTTY. Preparation on client"
msgstr ""
"**问：**如何在Windows上进行服务器管理的SSH？Nitrokey应该已经安装了PGP密钥，本"
"地的GnuPG钥匙圈应该知道这些密钥，也就是说GPG4Win应该安装在系统上（只需要核心"
"程序GnuPG）。此外，你应该安装PuTTY。在客户端的准备工作"

#: ../to-be-integrated.rst:333 ../to-be-integrated.rst:705
msgid ""
"There are two steps needed to make PuTTY work. At first we need to enable "
"PuTTY support of GnuPG. To achieve this we use the following command:"
msgstr ""
"要使PuTTY工作，需要两个步骤。首先，我们需要启用PuTTY对GnuPG的支持。为了实现这"
"一点，我们使用以下命令。"

#: ../to-be-integrated.rst:335 ../to-be-integrated.rst:707
msgid "echo enable-putty-support >> AppData\\Roaming\\gnupg\\gpg-agent.conf"
msgstr "echo enable-putty-support >> AppData\\Roaming\\gnupg\\gpg-agent.conf"

#: ../to-be-integrated.rst:337 ../to-be-integrated.rst:709
msgid ""
"Now we want to make sure, that the gpg-agent is starting automatically in "
"the background (you can start it manually with the command below, if you "
"prefer). We create a shortcut to gpg-connect-agent.exe. Press and hold the "
"Windows-key and press 'R'. Type in \"shell:startup\" in the opening "
"textfield (see picture below). The Windows-Explorer opens and you right-"
"click on an empty space and choose \"New\" -> \"Shortcut\". Now you should "
"insert the actual command and proceed:"
msgstr ""
"现在我们要确保 gpg-agent 在后台自动启动（如果你愿意，你可以用下面的命令手动启"
"动它）。我们创建一个 gpg-connect-agent.exe 的快捷方式。按住 Windows-键，然后"
"按 'R'。在打开的文本字段中输入\"shell:startup\"（见下图）。Windows-Explorer打"
"开了，你在一个空位上点击右键，选择\"新建\"->\"快捷方式\"。现在你应该插入实际"
"的命令并继续。"

#: ../to-be-integrated.rst:339 ../to-be-integrated.rst:711
msgid "\"C:\\Program Files (x86)\\gnupg\\bin\\gpg-connect-agent.exe\" /bye"
msgstr "\"C:\\Program Files (x86)\\gnupg\\bin\\gpg-connect-agent.exe\" /bye"

#: ../to-be-integrated.rst:343 ../to-be-integrated.rst:715
msgid ""
"Reboot your system to make sure the shortcut works. If everything is alright "
"you now can use PuTTY as usual and PuTTY will make use of the Nitrokey "
"automatically. Preparation for the server"
msgstr ""
"重新启动你的系统，以确保该快捷方式有效。如果一切正常，你现在可以像往常一样使"
"用PuTTY，PuTTY会自动使用Nitrokey。为服务器做准备"

#: ../to-be-integrated.rst:346 ../to-be-integrated.rst:718
msgid "You can generate an authorized_keys file by running"
msgstr "你可以通过运行以下程序生成一个authorized_keys文件"

#: ../to-be-integrated.rst:348 ../to-be-integrated.rst:720
msgid ""
"\"C:\\Program Files (x86)\\gnupg\\bin\\gpg.exe\" --export-ssh-key keyID >> "
"authorized_keys"
msgstr ""
"\"C:\\Program Files (x86)\\gnupg\\bin\\gpg.exe\" --export-ssh-key keyID >> "
"authorized_keys"

#: ../to-be-integrated.rst:350 ../to-be-integrated.rst:722
msgid ""
"where 'keyID' is either the fingerprint of your key or just the E-Mail "
"address bind to your key. The Nitrokey must already be known to the local "
"GnuPG keyring. You can now append that file to a remote server's "
"authorized_keys and when you ssh to the server you'll be asked for a pin "
"rather than a passphrase."
msgstr ""
"其中'keyID'是你的钥匙的指纹或只是与你的钥匙绑定的电子邮件地址。Nitrokey必须已"
"经为本地GnuPG钥匙圈所知。你现在可以将该文件添加到远程服务器的authorized_keys"
"中，当你ssh到服务器时，就会要求你输入密码而不是口令。"

#: ../to-be-integrated.rst:357
msgid "**Q:** How can I do SSH for Server Administration on Linux?"
msgstr "**问：**我如何在Linux上进行服务器管理的SSH？"

#: ../to-be-integrated.rst:359 ../to-be-integrated.rst:726
msgid ""
"The Nitrokey should already have PGP keys installed and the local GnuPG "
"keyring should know the keys. Preparation on client"
msgstr ""
"Nitrokey应该已经安装了PGP密钥，本地的GnuPG钥匙圈应该知道这些密钥。在客户端的"
"准备工作"

#: ../to-be-integrated.rst:362 ../to-be-integrated.rst:729
msgid ""
"Make sure ~/.gnupg/gpg.conf contains 'use-agent' Add ssh support to gnupg-"
"agent by adding 'enable-ssh-support' to ~/.gnupg/gpg-agent.conf If the file "
"does not exist yet, you can just create it. Add the following code somewhere "
"into your ~/.bashrc (for fish shell, look here)"
msgstr ""
"确保 ~/.gnupg/gpg.conf 包含 'use-agent' 在 ~/.gnupg/gpg-agent.conf 中添加 "
"'enable-ssh-support'，为 gnupg-agent 添加 ssh 支持 如果该文件尚不存在，你可以"
"直接创建它。在你的 ~/.bashrc 中添加以下代码（对于 fish shell，请看这里）。"

#: ../to-be-integrated.rst:367 ../to-be-integrated.rst:734
msgid ""
"unset SSH_AGENT_PID if [ \"${gnupg_SSH_AUTH_SOCK_by:-0}\" -ne $$ ]; then "
"export SSH_AUTH_SOCK=\"$(gpgconf --list-dirs agent-ssh-socket)\" fi"
msgstr ""
"unset SSH_AGENT_PID if [ \"${gnupg_SSH_AUTH_SOCK_by:-0}\" -ne $$ ]; then "
"export SSH_AUTH_SOCK=\"$（gpgconf -list-dirs agent-ssh-socket）\" fi"

#: ../to-be-integrated.rst:372 ../to-be-integrated.rst:739
msgid ""
"Simply restart your system or try pkill gpg-agent and open a new commandline "
"to make sure everything is set In case of problems, please try gpg2 --card-"
"status on first usage to make sure the gpg-agent gets started"
msgstr ""
"如果出现问题，请在第一次使用时尝试 gpg2 --card-status，以确保 gpg-agent 被启"
"动。"

#: ../to-be-integrated.rst:375 ../to-be-integrated.rst:742
msgid "Preparation for the server"
msgstr "为服务器做准备"

#: ../to-be-integrated.rst:377 ../to-be-integrated.rst:744
msgid "You can generate an authorized_keys file by running either"
msgstr "你可以通过运行以下命令之一来生成一个authorized_keys文件"

#: ../to-be-integrated.rst:379 ../to-be-integrated.rst:746
msgid ""
"gpgkey2ssh keyID >> ~/authorized_keys #(for GnuPG version <= 2.1.11) or gpg2 "
"--export-ssh-key keyID >> ~/authorized_keys #(for newer GnuPG versions)"
msgstr ""
"gpgkey2ssh keyID >> ~/authorized_keys #(for GnuPG version <= 2.1.11) or gpg2 "
"--export-ssh-key keyID >> ~/authorized_keys #(for newer GnuPG version)"

#: ../to-be-integrated.rst:382 ../to-be-integrated.rst:749
msgid "where"
msgstr "其中"

#: ../to-be-integrated.rst:384 ../to-be-integrated.rst:751
msgid "keyID"
msgstr "keyID"

#: ../to-be-integrated.rst:386 ../to-be-integrated.rst:753
msgid ""
"is the subkey id being used for authentication on your Nitrokey. The "
"Nitrokey must already be known to the local GnuPG keyring. You can now "
"append that file to a remote server's authorized_keys and when you ssh to "
"the server you'll be asked for a pin rather than a passphrase."
msgstr ""
"是在你的Nitrokey上用于认证的子键ID。Nitrokey必须已经被本地的GnuPG钥匙圈所知。"
"你现在可以将该文件添加到远程服务器的authorized_keys中，当你ssh到该服务器时，"
"就会要求你输入密码而不是口令。"

#: ../to-be-integrated.rst:391 ../to-be-integrated.rst:758
msgid "If you are still asked for a password please make sure that"
msgstr "如果你仍然被要求提供密码，请确保"

#: ../to-be-integrated.rst:393 ../to-be-integrated.rst:760
msgid "echo $SSH_AUTH_SOCK"
msgstr "echo $SSH_AUTH_SOCK"

#: ../to-be-integrated.rst:395 ../to-be-integrated.rst:762
msgid ""
"returns something reasonable like '/run/user/1000/gnupg/S.gpg-agent.ssh' or "
"'/home/username/.gnupg/.S.gpg-agent.ssh'. Unfortunately there were some "
"changes in GnuPG in the past so that the actual content can differ from "
"system and GnuPG version. On some systems there may are even multiple "
"folders in this variable saved. You have to adapt the above given code in ."
"bashrc so that the variable SSH_AUTH_SOCK is correct. In doubt look for "
"'SSH_AUTH_SOCK' in"
msgstr ""
"返回一些合理的信息，如'/run/user/1000/gnupg/S.gpg-agent.ssh'或'/home/"
"username/.gnupg/.S.gpg-agent.ssh'。不幸的是，GnuPG在过去有一些变化，所以实际"
"内容可能因系统和GnuPG版本而异。在一些系统中，这个变量中甚至可能保存有多个文件"
"夹。你必须调整上述.bashrc中的代码，使SSH_AUTH_SOCK这个变量正确。如有疑问，请"
"在.bashrc中查找'SSH_AUTH_SOCK'。"

#: ../to-be-integrated.rst:397 ../to-be-integrated.rst:764
msgid "man gpg-agent"
msgstr "man gpg-agent"

#: ../to-be-integrated.rst:399 ../to-be-integrated.rst:766
msgid "to find the actual code for your version/system."
msgstr "来找到你的版本/系统的实际代码。"

#: ../to-be-integrated.rst:401 ../to-be-integrated.rst:768
msgid ""
"You may check if you have a 'pinentry' program installed via your package "
"manager. You may need to set it in the gpg-agent.conf as well. You may need "
"to point gpg-agent to the correct TTY."
msgstr ""
"你可以通过你的软件包管理器检查你是否安装了'pinentry'程序。你可能也需要在 gpg-"
"agent.conf 中进行设置。你可能需要将 gpg-agent 指向正确的 TTY。"

#: ../to-be-integrated.rst:415
msgid "**Q:** How can I use the Nitrokey for VPN access?"
msgstr "**问：**我如何使用Nitrokey进行VPN访问？"

#: ../to-be-integrated.rst:418 ../to-be-integrated.rst:789
msgid ""
"For: Nitrokey Pro, Nitrokey Storage, Nitrokey Start, Nitrokey HSM OpenVPN"
msgstr ""
"对于。Nitrokey Pro, Nitrokey Storage, Nitrokey Start, Nitrokey HSM OpenVPN"

#: ../to-be-integrated.rst:421 ../to-be-integrated.rst:792
msgid "Generate a key on Nitrokey via pkcs11-tool."
msgstr "通过pkcs11-tool在Nitrokey上生成一个密钥。"

#: ../to-be-integrated.rst:423 ../to-be-integrated.rst:794
msgid "Generate a certificate signing request via openssl + pkcs11 module:"
msgstr "通过openssl + pkcs11模块生成一个证书签名请求。"

#: ../to-be-integrated.rst:425 ../to-be-integrated.rst:796
msgid ""
"$ openssl req -engine pkcs11 -sha256 -new -key id_3 -keyform engine -out "
"<CSR FILE.CSR> -config <OPENSSL.CNF> -extensions usr_client"
msgstr ""
"$ openssl req -engine pkcs11 -sha256 -new -key id_3 -keyform engine -out "
"<CSR FILE.CSR> -config <OPENSSL.CNF> -extensions usr_client"

#: ../to-be-integrated.rst:427 ../to-be-integrated.rst:798
msgid "Sign the certificate with our certificate authority"
msgstr "用我们的证书颁发机构签署证书"

#: ../to-be-integrated.rst:429 ../to-be-integrated.rst:800
msgid ""
"$ openssl ca -cert <CA.CRT> -keyfile <CA.KEY> -in <FILE.CSR> -out <FILE.CRT> "
"-config <OPENSSL.CNF> -extensions usr_client"
msgstr ""
"$ openssl ca -cert <CA.CRT> -keyfile <CA.KEY> -in <FILE.CSR> -out <FILE.CRT> "
"-config <OPENSSL.CNF> -extensions usr_client"

#: ../to-be-integrated.rst:431 ../to-be-integrated.rst:478
#: ../to-be-integrated.rst:802 ../to-be-integrated.rst:849
msgid "Import  the certificate into the Nitrokey via pkcs11-tool"
msgstr "通过pkcs11工具将证书导入到Nitrokey。"

#: ../to-be-integrated.rst:433 ../to-be-integrated.rst:804
msgid "$ pkcs15-init --update-existing --store-certificate <FILE.PEM> --id 3"
msgstr "$ pkcs15-init --update-existing --store-certificate <FILE.PEM> --id 3"

#: ../to-be-integrated.rst:435 ../to-be-integrated.rst:806
msgid "Read the certificate's ID required for openvpn configuration:"
msgstr "读取openvpn配置所需的证书'的ID。"

#: ../to-be-integrated.rst:437 ../to-be-integrated.rst:808
msgid "$ openvpn --show-pkcs11-ids /usr/lib64/opensc-pkcs11.so"
msgstr "$ openvpn --show-pkcs11-ids /usr/lib64/opensc-pkcs11.so"

#: ../to-be-integrated.rst:439 ../to-be-integrated.rst:810
msgid ""
"Modify your openvpn configuration. Add the certificate ID which you gathered "
"in the previous step: E.g."
msgstr "修改你的openvpn配置。添加你在上一步骤中收集的证书ID。例如"

#: ../to-be-integrated.rst:441 ../to-be-integrated.rst:812
msgid ""
"$ pkcs11-id 'OpenPGP\\x20project/PKCS\\x2315\\x20emulated/fffe43211234/"
"User\\x20PIN\\x20\\x28OpenPGP\\x20card\\x29/03'"
msgstr ""
"$ pkcs11-id 'OpenPGP\\x20project/PKCS\\x2315\\x20emulated/fffe43211234/"
"User\\x20PIN\\x20\\x28OpenPGP\\x20card\\x29/03'"

#: ../to-be-integrated.rst:443 ../to-be-integrated.rst:814
msgid "Add the PKCS#11 driver to the configuration too, e.g.:"
msgstr "把PKCS#11驱动也添加到配置中，例如。"

#: ../to-be-integrated.rst:445 ../to-be-integrated.rst:816
msgid "$ pkcs11-providers '/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so'"
msgstr ""
"$ pkcs11-providers '/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so'。"

#: ../to-be-integrated.rst:447 ../to-be-integrated.rst:818
msgid "See this link for further information."
msgstr "更多信息见此链接。"

#: ../to-be-integrated.rst:451 ../to-be-integrated.rst:822
msgid ""
"Now all configurations are done. When executing OpenVPN client, Nitrokey's "
"PIN needs to be entered. Unfortunately OpenVPN doesn't prompt to enter the "
"PIN and it has to be entered in the following way:"
msgstr ""
"现在所有的配置都完成了。在执行OpenVPN客户端时，需要输入Nitrokey'的PIN。不幸的"
"是，OpenVPN没有提示输入PIN码，必须按以下方式输入。"

#: ../to-be-integrated.rst:453 ../to-be-integrated.rst:824
msgid "$ telnet 8888 password 'User PIN (OpenPGP card) token' <PIN>"
msgstr "$ telnet 8888 password 'User PIN (OpenPGP card) token' < PIN>"

#: ../to-be-integrated.rst:455 ../to-be-integrated.rst:826
msgid ""
"Alternatively you could recompile OpenVPN client with systemd support "
"disabled and it will prompt you for the PIN as expected. Alternatively to "
"the OpenVPN client you could use the Viscosity client which provides a "
"better user experience especially for entering the PIN."
msgstr ""
"另外，你可以在禁用systemd支持的情况下重新编译OpenVPN客户端，它就会如期提示你"
"输入PIN。除了OpenVPN客户端，你还可以使用Viscosity客户端，它提供了更好的用户体"
"验，特别是在输入PIN时。"

#: ../to-be-integrated.rst:458 ../to-be-integrated.rst:829
msgid "IPsec"
msgstr "IPsec"

#: ../to-be-integrated.rst:460 ../to-be-integrated.rst:831
msgid ""
"Strong Swan works using the PKCS#11 driver. Basically follow these steps:"
msgstr "Strong Swan使用PKCS#11驱动工作。基本上遵循这些步骤。"

#: ../to-be-integrated.rst:462 ../to-be-integrated.rst:833
msgid ""
"Generate a key on Nitrokey via pkcs11-tool. In this example it's a 4096 bit "
"RSA key."
msgstr ""
"通过pkcs11工具在Nitrokey上生成一个密钥。在这个例子中，它是一个4096位的RSA密"
"钥。"

#: ../to-be-integrated.rst:464 ../to-be-integrated.rst:835
msgid ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so -l -"
"k --key-type rsa:4096 --id 10 --label 'Staging Access'"
msgstr ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so -l -"
"k -key-type rsa:4096 --id 10 --label 'Staging Access'。"

#: ../to-be-integrated.rst:466 ../to-be-integrated.rst:837
msgid "Generate a certificate signing request via openssl + pkcs11 module"
msgstr "通过openssl + pkcs11模块生成一个证书签名请求"

#: ../to-be-integrated.rst:468 ../to-be-integrated.rst:839
msgid ""
"$ openssl OpenSSL> engine dynamic -pre SO_PATH:/usr/lib/x86_64-linux-gnu/"
"engines-1.1/pkcs11.so -pre ID:pkcs11 -pre LIST_ADD:1 -pre LOAD -pre "
"MODULE_PATH:/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so OpenSSL> req -"
"engine pkcs11 -sha256 -new -key id_10 -keyform engine -out user@email.com-"
"staging-cert.csr -subj '/C=GB/L=Cambridge/O=Organization/OU=Staging Access/"
"CN=user@email.com/emailAddress=user@email.com'"
msgstr ""
"$ openssl OpenSSL> engine dynamic -pre SO_PATH:/usr/lib/x86_64-linux-gnu/"
"engines-1.1/pkcs11.so -pre ID:pkcs11 -pre LIST_ADD:1 -pre LOAD -pre "
"MODULE_PATH:/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11。so OpenSSL> req -"
"engine pkcs11 -sha256 -new -key id_10 -keyform engine -out user@email.com-"
"staging-cert.csr -subj '/C=GB/L=Cambridge/O=Organization/OU=Staging Access/"
"CN=user@email.com/emailAddress=user@email.com'"

#: ../to-be-integrated.rst:472 ../to-be-integrated.rst:843
msgid "Sign the certificate with your certificate authority"
msgstr "用你的证书颁发机构签署证书"

#: ../to-be-integrated.rst:474 ../to-be-integrated.rst:845
msgid "Convert the certificate to DER"
msgstr "将证书转换为DER"

#: ../to-be-integrated.rst:476 ../to-be-integrated.rst:847
msgid ""
"$ openssl x509 -in user@email.com-staging-cert.csr -out user@email.com-"
"staging-cert.der -outform DER"
msgstr ""
"$ openssl x509 -in user@email.com-staging-cert.csr -out user@email.com-"
"staging-cert.der -out form DER"

#: ../to-be-integrated.rst:480 ../to-be-integrated.rst:851
msgid ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so -l -"
"y cert -w user@email.com-staging-cert.der --id 10 --label 'Staging Access'"
msgstr ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so -l -"
"y cert -w user@email.com-staging-cert.der --id 10 --label 'Staging Access'。"

#: ../to-be-integrated.rst:482 ../to-be-integrated.rst:853
msgid ""
"Configure Strongswan to load opensc-pkcs11 module then to load the "
"certificate on Nitrokey. Edit /etc/strongswan.d/charon/pkcs11.conf and add "
"the following module:"
msgstr ""
"配置Strongswan以加载opensc-pkcs11模块，然后在Nitrokey上加载证书。编辑/etc/"
"strongswan.d/charon/pkcs11.conf并添加以下模块。"

#: ../to-be-integrated.rst:486 ../to-be-integrated.rst:857
msgid "modules {"
msgstr "模块 {"

#: ../to-be-integrated.rst:485 ../to-be-integrated.rst:856
msgid "Nitrokey {"
msgstr "Nitrokey {"

#: ../to-be-integrated.rst:486 ../to-be-integrated.rst:857
msgid "path = /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so"
msgstr "path = /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so"

#: ../to-be-integrated.rst:487 ../to-be-integrated.rst:488
#: ../to-be-integrated.rst:858 ../to-be-integrated.rst:859
msgid "}"
msgstr "}"

#: ../to-be-integrated.rst:490 ../to-be-integrated.rst:861
msgid ""
"Initiate the VPN connection via IPSec/Strongswan, then prompt for Nitrokey "
"PIN"
msgstr "通过IPSec/Strongswan启动VPN连接，然后提示输入Nitrokey PIN。"

#: ../to-be-integrated.rst:492 ../to-be-integrated.rst:863
msgid "8. VPN is now connected Stunnel"
msgstr "8.VPN现在已经连接上了Stunnel"

#: ../to-be-integrated.rst:495 ../to-be-integrated.rst:866
msgid ""
"Stunnel works as an SSL encryption wrapper between remote client and local "
"(inetd-startable) or remote server. It can be used to add SSL functionality "
"to commonly used inetd daemons like POP2, POP3, and IMAP servers without any "
"changes in the programs' code."
msgstr ""
"Stunnel在远程客户端和本地（可启动的inetd）或远程服务器之间作为一个SSL加密包装"
"器工作。它可以用来将SSL功能添加到常用的inetd守护程序中，如POP2、POP3和IMAP服"
"务器，而无需对程序的代码进行任何修改。"

#: ../to-be-integrated.rst:497 ../to-be-integrated.rst:868
msgid "Stunnel is able to load OpenSC PKCS#11 engine using this configuration:"
msgstr "Stunnel能够使用这种配置加载OpenSC PKCS#11引擎。"

#: ../to-be-integrated.rst:499 ../to-be-integrated.rst:870
msgid ""
"engine=dynamic engineCtrl=SO_PATH:/usr/lib/opensc/engine_pkcs11.so "
"engineCtrl=ID:pkcs11 engineCtrl=LIST_ADD:1 engineCtrl=LOAD "
"engineCtrl=MODULE_PATH:/usr/lib/pkcs11/opensc-pkcs11.so engineCtrl=INIT"
msgstr ""
"engine=dynamic engineCtrl=SO_PATH:/usr/lib/opensc/engine_pkcs11.so "
"engineCtrl=ID:pkcs11 engineCtrl=LIST_ADD:1 engineCtrl=LOAD "
"engineCtrl=MODULE_PATH:/usr/lib/pkcs11/opensc-pkcs11.so engineCtrl=INIT"

#: ../to-be-integrated.rst:507 ../to-be-integrated.rst:878
msgid "[service] engineNum=1 key=id_45"
msgstr "[服务] engineNum=1 key=id_45"

#: ../to-be-integrated.rst:525
msgid "**Q:** How can I do PKI / Certificate Authority (CA)?"
msgstr "**问：**如何进行PKI/证书授权（CA）？"

#: ../to-be-integrated.rst:527
msgid "CA keys are very sensitive and must not be compromised or lost. GnuPG"
msgstr "CA密钥是非常敏感的，决不能被破坏或丢失。GnuPG"

#: ../to-be-integrated.rst:530
msgid "Instructions OpenSSL"
msgstr "说明OpenSSL"

#: ../to-be-integrated.rst:533
msgid ""
"Install OpenSC'S engine_pkcs11 Run the command \"pkcs11-tool --list-slots\" "
"to list the available slots. Run the command \"openssl> req -engine pkcs11 -"
"new -key slot_X-id_XXXX -keyform engine -x509 -out cert.pem -text\" where X "
"is the appropriate slot number and XXXX is the slot ID, e.g. \"... -key "
"slot_5-id_c6f280080fb0ed1ebff0480a01d00a98a1b3b89a ...\" Test"
msgstr ""
"安装OpenSC'S引擎_pkcs11 运行命令\"pkcs11-tool --list-slots\" 列出可用的插槽。"
"运行命令 \"openssl> req -engine pkcs11 -new -key slot_X-id_XXXX -keyform "
"engine -x509 -out cert.pem -text\" 其中 X 是适当的插槽编号，XXXX 是插槽 ID，"
"例如：\"...-key slot_5-id_c6f280080fb0ed1ebff0480a01d00a98a1b3b89a ...\" 测试"

#: ../to-be-integrated.rst:538
msgid "Other"
msgstr "其他"

#: ../to-be-integrated.rst:540
msgid ""
"Please see this PDF (p. 30) from heinlein-support.de for summarized "
"instructions in German."
msgstr "请参阅heinlein-support.de的PDF文件（第30页），了解德文的简要说明。"

#: ../to-be-integrated.rst:542
msgid ""
"µ-CA-tool is a script based on GnuPG, OpenSC and OpenSSL which helps to "
"perform basic tasks of a CA. It works with Nitrokey Pro and Nitrokey Storage."
msgstr ""
"µ-CA-tool是一个基于GnuPG、OpenSC和OpenSSL的脚本，有助于执行CA的基本任务。它与"
"Nitrokey Pro和Nitrokey Storage一起工作。"

#: ../to-be-integrated.rst:550
msgid "**Q:** How can I use the password manager?"
msgstr "**问：**我怎样才能使用密码管理器？"

#: ../to-be-integrated.rst:552
msgid "You have the following options:"
msgstr "你有以下选择。"

#: ../to-be-integrated.rst:554
msgid ""
"Use Nitrokey's built-in Password Safe to store passwords securely. For this "
"you need the Nitrokey App. Maximum are 16 passwords. Use Pass (simple "
"commandline password manager for Unix systems, mainly for experts). Use "
"KeePass as described below."
msgstr ""
"使用Nitrokey'内置的密码保险箱来安全存储密码。为此，你需要使用Nitrokey应用程"
"序。最多有16个密码。使用Pass（Unix系统的简单命令行密码管理器，主要针对专"
"家）。使用KeePass，如下所述。"

#: ../to-be-integrated.rst:558
msgid "Protecting KeePass with Nitrokey's One-Time Passwords"
msgstr "用Nitrokey'的一次性密码保护KeePass"

#: ../to-be-integrated.rst:560
msgid ""
"You can also follow this video (It contains a mistake around time 4:22 which "
"is described later below). Keepass Installation"
msgstr ""
"你也可以关注这个视频（它在4:22左右包含了一个错误，下面会介绍）。Keepass的安装"

#: ../to-be-integrated.rst:563
msgid ""
"Install Keepass 2.3.5. For Ubuntu: Because the main repository contains the "
"older 2.3.4, you have to use some other source like this private PPA (please "
"run these commands in terminal):"
msgstr ""
"安装Keepass 2.3.5。对于Ubuntu。因为主仓库包含较旧的2.3.4，你必须使用一些其他"
"来源，如这个私人PPA（请在终端运行这些命令）。"

#: ../to-be-integrated.rst:566
msgid ""
"sudo add-apt-repository ppa:jtaylor/keepass sudo apt-get update sudo apt-get "
"install keepass2"
msgstr ""
"sudo add-apt-repository ppa:jtaylor/keepass sudo apt-get update sudo apt-get "
"install keepass2"

#: ../to-be-integrated.rst:570
msgid ""
"Install the OtpKeyProv plugin by downloading the archive, unzipping and "
"copying the content to Keypass' Plugin directory. On Linux: sudo cp "
"OtpKeyProv.plgx /usr/lib/keepass2/Plugins/ For Linux, optional: Install mono-"
"complete package if plugin is not detected when running Keepass2 (you can "
"check that in Tools/Plugins):"
msgstr ""
"安装OtpKeyProv插件，方法是下载档案，解压并复制内容到Keypass'插件目录。在Linux"
"上：sudo cp OtpKeyProv.plgx /usr/lib/keepass2/Plugins/ 对于Linux，可选：如果"
"运行Keepass2时未检测到插件，则安装mono-complete软件包（你可以在Tools/Plugins"
"中检查）。"

#: ../to-be-integrated.rst:574
msgid "sudo apt-get install mono-complete"
msgstr "sudo apt-get安装mono-complete"

#: ../to-be-integrated.rst:576
msgid "Keepass OTP Configuration Existing Database"
msgstr "Keepass OTP配置现有数据库"

#: ../to-be-integrated.rst:579
msgid ""
"Do a backup of your database and keep it until you are really sure "
"everything works fine! Make sure you really did a backup. If you mess up, "
"your passwords are lost! Open database as usual Select File/Change Master "
"Key..."
msgstr ""
"对你的数据库做一个备份，并保留它，直到你真正确定一切工作正常为止!请确保你真的"
"做了备份。如果你搞砸了，你的密码就会丢失!像往常一样打开数据库 选择文件/更改主"
"密钥..."

#: ../to-be-integrated.rst:584
msgid "New Database"
msgstr "新数据库"

#: ../to-be-integrated.rst:586
msgid "Create new database as usual"
msgstr "像往常一样创建新的数据库"

#: ../to-be-integrated.rst:588
msgid "Common"
msgstr "普通"

#: ../to-be-integrated.rst:590
msgid ""
"Insert Master Password (optional) Set Key file / provider: to One-Time "
"Passwords (OATH HOTP) Click OK With Nitrokey App: select HOTP slot and "
"generate HOTP secret (it will be copied to clipboard automatically). Note: "
"You may want write down this secret and store it anywhere secure. Otherwise "
"if you lose your Nitrokey or it gets broken your password database is lost "
"as well!!! Paste the secret to Keepass OTP Plugin window Make sure the "
"Counter field and digits count are set the same in both windows. Click OK in "
"Nitrokey App to save the slot. Select secret type: Base32 Set the other "
"settings as you like. Please consult plugin's manual (should be in same "
"downloaded archive). I would recommend to set look-ahead value to non-zero "
"to prevent locking up the database after accidental code request from used "
"HOTP slot. In that case counters on the device and in Keepass would be out "
"of sync and OTP codes will not be the same with expected."
msgstr ""
"插入主密码（可选） 设置密钥文件/供应商：为一次性密码（OATH HOTP） 点击确定 使"
"用Nitrokey应用程序：选择HOTP插槽并生成HOTP密码（会自动复制到剪贴板）。注意："
"您可能需要写下这个秘密，并将其保存在安全的地方。否则，如果您的Nitrokey丢失或"
"被破坏，您的密码数据库也会丢失！！。将秘密粘贴到Keepass OTP插件窗口，确保两个"
"窗口中的计数器字段和数字计数设置相同。在Nitrokey应用程序中点击 \"确定 \"来保"
"存这个槽。选择秘密类型。Base32 按照你的意愿设置其他设置。请参考插件手册（应该"
"在同一个下载文件中）。我建议将前瞻值设置为非零，以防止在使用HOTP插槽意外请求"
"代码后锁定数据库。在这种情况下，设备上的计数器和Keepass中的计数器将不同步，"
"OTP代码将与预期的不一致。"

#: ../to-be-integrated.rst:599
msgid "Unlocking Database"
msgstr "解锁数据库"

#: ../to-be-integrated.rst:601
msgid ""
"Open database Insert Master Password (if set) Key file / provider: to One-"
"Time Passwords (OATH HOTP) Press OK Insert HOTP codes by repeatedly choosing "
"proper HOTP slot from the Nitrokey App and pasting the clipboard content to "
"proper field (the order of the codes is important). Press OK"
msgstr ""
"打开数据库 插入主密码（如果设置了） 密钥文件/供应商：到一次性密码（OATH "
"HOTP） 按确定 从Nitrokey应用程序中反复选择适当的HOTP插槽，将剪贴板内容粘贴到"
"适当的区域，插入HOTP代码（代码的顺序很重要）。按OK键"

#: ../to-be-integrated.rst:608
msgid "Issues"
msgstr "问题"

#: ../to-be-integrated.rst:610
msgid ""
"Due to nature of HOTP solution it is possible to get counters desynchronized "
"(by selecting wrong OTP slot during day-to-day use). Using look-ahead "
"plugin's setting should prevent that (value 10 or so should suffice - "
"depends on desired security requirements - this would allow to 10 accidental "
"requests). TOTP is not having that problem. Setting the OTP protection could "
"be error-prone. There is no secret validation on OtpKeyProv side. In the "
"test movie at 4:22 I have managed to set the Base32 coded secret as Hex "
"(which was not a proper hex value) and it has not complained about it. There "
"is no information what happened to database and how it is now configured. I "
"have not noticed until I have watched the movie."
msgstr ""
"由于HOTP解决方案的性质，有可能出现计数器不同步的情况（在日常使用中选择错误的"
"OTP插槽）。使用前瞻插件的设置应该可以防止这种情况（数值10左右就足够了--取决于"
"所需的安全要求--这将允许10个意外的请求）。TOTP没有这个问题。设置OTP保护可能容"
"易出错。在OtpKeyProv方面没有秘密验证。在4:22的测试影片中，我设法将Base32编码"
"的秘密设置为Hex（这不是一个正确的Hex值），它没有抱怨。没有任何信息表明数据库"
"发生了什么以及它现在是如何配置的。我是在看了电影后才注意到的。"

#: ../to-be-integrated.rst:613
msgid ""
"Tested under Ubuntu 16.10, Nitrokey App v0.6.3 and Nitrokey Storage v0.45."
msgstr "在Ubuntu 16.10下测试，Nitrokey App v0.6.3和Nitrokey Storage v0.45。"

#: ../to-be-integrated.rst:622
msgid "**Q:** How can I use the True Random Number Generator?"
msgstr "**问：**我如何使用真实随机数发生器？"

#: ../to-be-integrated.rst:624
msgid ""
"Both devices are compatible to the OpenPGP Card, so that scdrand should "
"work. This script may be useful. The TRNG provides about 40 kbit/s."
msgstr ""
"这两种设备都与OpenPGP卡兼容，所以scdrand应该可以工作。这个脚本可能是有用的。"
"TRNG提供大约40 kbit/s。"

#: ../to-be-integrated.rst:626
msgid ""
"The user comio created a systemd file to use scdrand and thus the TRNG more "
"generally. He created a ebuild for Gentoo, too."
msgstr ""
"用户 comio 创建了一个 systemd 文件来使用 scdrand，从而更广泛地使用 TRNG。他还"
"为 Gentoo 创建了一个 ebuild。"

#: ../to-be-integrated.rst:632 ../storage/faq.rst:118
msgid "**Q:** Do you have resources for development and integration?"
msgstr "**问：**你们有开发和整合的资源吗？"

#: ../to-be-integrated.rst:635
msgid ""
"Use Nitrokey library to manage the one-time passwords and password safe "
"functionality. The project nitrokey-get-totp and nitrokey-get-password are "
"nice examples for using the python bindings of Nitrokey library to get a "
"custom interface. In order to access the integrated smart card, you can use "
"OpenSC's command line tools. If your application has a PKCS#11 interface, "
"use OpenSC's PKCS#11 driver. To work with the smart card low level, see the "
"OpenPGP Card specification. The source code of the firmware and the hardware "
"layout are available too. To develop special applications or for command "
"line access one can use the nitrocli created by d-e-s-o. Gkey is a go-based "
"command line tool to access the Password Safe and OTP entries. A libnitrokey "
"wrapper for Rust providing access to Nitrokey devices."
msgstr ""
"使用Nitrokey库来管理一次性密码和密码安全功能。项目nitrokey-get-totp和"
"nitrokey-get-password是使用Nitrokey库的python绑定来获得自定义界面的好例子。为"
"了访问集成智能卡，你可以使用OpenSC'的命令行工具。如果你的应用程序有一个"
"PKCS#11接口，请使用OpenSC'的PKCS#11驱动程序。要与智能卡低级别的工作，请参阅"
"OpenPGP卡规范。固件的源代码和硬件布局也是可用的。要开发特殊的应用程序或用于命"
"令行访问，可以使用由d-e-s-o创建的nitrocli。Gkey是一个基于Go的命令行工具，用于"
"访问密码保险箱和OTP条目。一个用于Rust的libnitrokey包装器，提供对Nitrokey设备"
"的访问。"

#: ../to-be-integrated.rst:646
msgid "# HSM 2"
msgstr "# HSM 2"

#: ../to-be-integrated.rst:648
msgid ""
"**Nitrokey HSM:** 124 dataobjects (DF, EF) can be created. Each EF can have "
"a size of up to 256 byte. The total storage capacity of ca. 32 KByte is "
"shared dynamically among keys and data objects."
msgstr ""
"**硝基钥匙HSM：**可以创建124个数据对象（DF，EF）。每个EF的大小可以达到256字"
"节。总存储容量约为32 KByte，在钥匙和数据对象之间动态共享。"

#: ../to-be-integrated.rst:652
msgid "**Q:** How to use the HSM for Login For: Nitrokey HSM"
msgstr "**问：**如何使用HSM进行登录 对于。Nitrokey HSM"

#: ../to-be-integrated.rst:655
msgid "Select your use case:"
msgstr "选择你的用例。"

#: ../to-be-integrated.rst:657
msgid ""
"Login With Nitrokey HSM on Stand Alone Windows Computers Login With Nitrokey "
"HSM on Windows Domain Computers Using MS Active Directory For Unix "
"environments an integration with PAM and OpenSSH is available."
msgstr ""
"在独立的Windows计算机上用Nitrokey HSM登录 使用MS Active Directory在Windows域"
"计算机上用Nitrokey HSM登录 对于Unix环境，可以与PAM和OpenSSH集成。"

#: ../to-be-integrated.rst:661
msgid "**Q:**  How to use the HSM for Email Encryption"
msgstr "**问：**如何使用HSM进行电子邮件加密？"

#: ../to-be-integrated.rst:663
msgid ""
"Encrypt your email using the S/MIME industry standard available in all major "
"e-mail clients."
msgstr "使用所有主要电子邮件客户端中的S/MIME行业标准对您的电子邮件进行加密。"

#: ../to-be-integrated.rst:665
msgid ""
"The Nitrokey HSM has been tested to work with Mozilla Thunderbird and "
"Microsoft Outlook. Other email clients with support for PKCS#11 or Microsoft "
"CSP should work as well."
msgstr ""
"经测试，Nitrokey HSM可以在Mozilla Thunderbird和Microsoft Outlook中使用。其他"
"支持PKCS#11或微软CSP的电子邮件客户端应该也可以使用。"

#: ../to-be-integrated.rst:667
msgid "Note: A certificate can be purchased cheaply from CERTUM."
msgstr "注：可以从CERTUM便宜地购买证书。"

#: ../to-be-integrated.rst:669
msgid ""
"**Q:**   How to use the Nitrokey for Hard Disk Encryption with VeraCrpt?"
msgstr "**问：**如何用VeraCrpt进行硬盘加密的Nitrokey？"

#: ../to-be-integrated.rst:671
msgid ""
"VeraCrypt is a free and Open Source disk encryption software for Windows, "
"macOS, and GNU/Linux. It is the successor of TrueCrypt and thus recommended, "
"although the following instructions should apply to TrueCrypt as well. "
"Follow these steps to use the program with Nitrokey:"
msgstr ""
"VeraCrypt是一款免费的开源磁盘加密软件，适用于Windows、macOS和GNU/Linux。它是"
"TrueCrypt的后继者，因此被推荐使用，尽管以下说明也应适用于TrueCrypt。按照这些"
"步骤来使用该程序和Nitrokey。"

#: ../to-be-integrated.rst:680
msgid ""
"Security Consideration: Please note that VeraCrypt doesn't make use of the "
"full security which Nitrokey (and smart cards in general) offer. Instead it "
"stores a keyfile on the Nitrokey which theoretically could be stolen by a "
"computer virus after the user enters the password."
msgstr ""
"安全方面的考虑。请注意，VeraCrypt并没有利用Nitrokey（以及一般的智能卡）提供的"
"全部安全性。相反，它在Nitrokey上存储了一个密钥文件，理论上在用户输入密码后，"
"该文件可能被计算机病毒窃取。"

#: ../to-be-integrated.rst:682
msgid ""
"Note: Aloaha Crypt is based on TrueCrypt/VeraCrypt but without the described "
"security limitation. (Not tested with Nitrokey HSM!)"
msgstr ""
"注意：Aloaha Crypt是基于TrueCrypt/VeraCrypt的，但没有所述的安全限制。(未用"
"Nitrokey HSM测试！)"

#: ../to-be-integrated.rst:685
msgid "**Q:** How to sign and encrypt files and pdfs?"
msgstr "**问：**如何对文件和pdf进行签名和加密？"

#: ../to-be-integrated.rst:687
msgid "GnuPG"
msgstr "GnuPG"

#: ../to-be-integrated.rst:689
msgid ""
"Starting with version 2.1, GnuPG has build-in but limited support for the "
"Nitrokey HSM. Use the gpgsm tool to sign, verify, encrypt and decrypt files "
"or S/MIME messaging using your Nitrokey HSM. Use a signature key on a "
"Nitrokey HSM to sign documents using Acrobat Reader, Open Office / Libre "
"Office or any other PDF reader supporting electronic signatures. ECC HSM "
"Encryptor"
msgstr ""
"从2.1版开始，GnuPG已经内置了对Nitrokey HSM的有限支持。使用gpgsm工具来签署、验"
"证、加密和解密文件或使用Nitrokey HSM的S/MIME消息。使用Nitrokey HSM上的签名密"
"钥，使用Acrobat Reader、Open Office / Libre Office或任何其他支持电子签名的PDF"
"阅读器来签署文件。ECC HSM加密器"

#: ../to-be-integrated.rst:692
msgid ""
"ECC HSM Encryptor is a small application to encrypt and decrypt files with a "
"Nitrokey HSM."
msgstr "ECC HSM Encryptor是一个用Nitrokey HSM加密和解密文件的小程序。"

#: ../to-be-integrated.rst:694
msgid ""
"**Q:** How to do certificat-based Web login Protect access to sensitive "
"information on your website with 2nd factor authentication."
msgstr ""
"**问：**如何进行基于证书的网络登录 用第二因素认证来保护对你网站上敏感信息的访"
"问。"

#: ../to-be-integrated.rst:697
msgid ""
"Use a Nitrokey HSM as authentication token via the build-in device "
"authentication PKI or use keys and certificates on a Nitrokey HSM for TLS/"
"SSL client authentication."
msgstr ""
"通过内置的设备认证PKI使用Nitrokey HSM作为认证令牌，或者使用Nitrokey HSM上的密"
"钥和证书进行TLS/SSL客户端认证。"

#: ../to-be-integrated.rst:699
msgid ""
"**Q:** SSH for Server Administration with windows For: Nitrokey Pro, "
"Nitrokey Storage, Nitrokey Start, Nitrokey HSM"
msgstr ""
"**问：**用windows进行服务器管理的SSH 对于。Nitrokey Pro, Nitrokey Storage, "
"Nitrokey Start, Nitrokey HSM"

#: ../to-be-integrated.rst:702
msgid ""
"The Nitrokey should already have PGP keys installed and the local GnuPG "
"keyring should be aware of the keys, that is to say GPG4Win should be "
"installed on the system (only the core application GnuPG is needed). "
"Furthermore you should install PuTTY. Preparation on client"
msgstr ""
"Nitrokey应该已经安装了PGP密钥，本地的GnuPG钥匙圈应该知道这些密钥，也就是说"
"GPG4Win应该安装在系统上（只需要核心程序GnuPG）。此外，你应该安装PuTTY。在客户"
"端的准备工作"

#: ../to-be-integrated.rst:724
msgid "**Q:** SSH Server administration on linux"
msgstr "**问：**Linux上的SSH服务器管理"

#: ../to-be-integrated.rst:771
msgid "**Q:** DNSSEC"
msgstr "**Q:** DNSSEC"

#: ../to-be-integrated.rst:774
msgid "For: Nitrokey HSM"
msgstr "对于。Nitrokey HSM"

#: ../to-be-integrated.rst:776
msgid ""
"Protect your domain name resolution using DNSSEC and a Nitrokey HSM as "
"secure key store. It's based on Smartcard-HSM which is why the following "
"resource apply:"
msgstr ""
"使用DNSSEC和Nitrokey HSM作为安全密钥存储，保护你的域名解析。它是基于智能卡-"
"HSM的，这就是为什么以下资源适用。"

#: ../to-be-integrated.rst:778
msgid ""
"Signing NSD DNSSEC Zones with Nitrokey HSM by Vadim Penzin. Integration with "
"OpenDNSSEC has been successfully tested in a demo by Richard Lamb. Luis D "
"Espinoza Sanchez & Eberhard W Lisse held a session on using the SmartCard-"
"HSM for DNSSEC at the 2015 ICAAN Meeting in Singapore. Jan-Piet Mens wrote a "
"nice article about integrating the SmartCard-HSM with PowerDNS."
msgstr ""
"Vadim Penzin用Nitrokey HSM签署NSD DNSSEC区域。Richard Lamb在一个演示中成功地"
"测试了与OpenDNSSEC的整合。Luis D Espinoza Sanchez & Eberhard W Lisse在新加坡"
"举行的2015年ICAAN会议上举行了关于使用SmartCard-HSM进行DNSSEC的会议。Jan-Piet "
"Mens写了一篇关于SmartCard-HSM与PowerDNS整合的好文章。"

#: ../to-be-integrated.rst:784
msgid ""
"**Q:** Physical Access Control With it's unique build-in device "
"authentication PKI, a Nitrokey HSM has a cryptographically protected unique "
"identity that can be verified in a fast authentication protocol. An access "
"control terminal can verify authenticity and identity of the device, create "
"a secure communication channel and perform offline PIN verification. The "
"coolPACS project has all the details."
msgstr ""
"**问：**物理访问控制 凭借其独特的内置设备认证PKI，Nitrokey HSM有一个加密保护"
"的唯一身份，可以在快速认证协议中进行验证。一个访问控制终端可以验证设备的真实"
"性和身份，创建一个安全的通信通道，并执行离线PIN验证。coolPACS项目有所有的细"
"节。"

#: ../to-be-integrated.rst:787 ../to-be-integrated.rst:883
msgid "**Q:**"
msgstr "**Q:**"

#: ../to-be-integrated.rst:885
msgid "PKI / Certificate Authority (CA)"
msgstr "公钥基础设施/证书机构（CA）"

#: ../to-be-integrated.rst:887
msgid "**Q:** Secret Management and Cloud Infrastructure"
msgstr "**问：**秘密管理和云基础设施"

#: ../to-be-integrated.rst:889
msgid ""
"An approach to secure keys for Hashicorp Vault/Bank-Vault on a Nitrokey HSM "
"can be found at banzaicloud.com."
msgstr ""
"在Nitrokey HSM上为Hashicorp Vault/Bank-Vault提供安全钥匙的方法可以在"
"banzaicloud.com找到。"

#: ../to-be-integrated.rst:891
msgid "**Q:** How to do N-of-m Schemes"
msgstr "**问：**如何进行N-of-m计划"

#: ../to-be-integrated.rst:893
msgid ""
"The Nitrokey HSM 2 supports two different n-of-m schemes - one for secure "
"sharing of key material/passwords and one for public key authentication to "
"control the access to the device. Please see this blog post for more "
"detailed information. N-of-m for DKEK Shares"
msgstr ""
"Nitrokey HSM 2支持两种不同的n-of-m方案--一种用于安全共享密钥材料/密码，另一种"
"用于公共密钥认证，以控制对设备的访问。更详细的信息请参见这篇博文。DKEK共享的"
"N-of-m"

#: ../to-be-integrated.rst:896
msgid ""
"This feature can be used with OpenSC as described here. The general approach "
"is seen in the videos below (external links)."
msgstr ""
"这个功能可以与OpenSC一起使用，如这里所述。在下面的视频中可以看到一般的方法"
"（外部链接）。"

#: ../to-be-integrated.rst:898
msgid "Nitrokey HSM's Secure Key Backup and Restore:"
msgstr "Nitrokey HSM'的安全密钥备份和恢复。"

#: ../to-be-integrated.rst:900
msgid "Screencast"
msgstr "录像带"

#: ../to-be-integrated.rst:902
msgid "Nitrokey HSM's M-of-N Threshold Scheme:"
msgstr "Nitrokey HSM'的M-of-N阈值方案。"

#: ../to-be-integrated.rst:904
msgid "screencast N-of-m for public key authentication"
msgstr "公钥认证的截屏N-of-m"

#: ../to-be-integrated.rst:907
msgid ""
"So far n-of-m authentication is only supported in OpenSCDP. The blog post "
"gives an overview and a how-to here (CDN access required) is shown the "
"process step by step in the Smart Card Shell. For OpenSC there is a ticket "
"to get that integrated."
msgstr ""
"到目前为止，只有OpenSCDP支持n-of-m认证。这篇博文给出了一个概述，这里的方法"
"（需要CDN访问）显示了在智能卡外壳中一步一步的过程。对于OpenSC来说，有一个票据"
"可以将其整合。"

#: ../to-be-integrated.rst:909
msgid ""
"n-of-m authentication is also supported in the PKI-as-a-Service Portal for "
"locally and remote connected HSMs. The PKI-as-a-Service Portal is based on "
"OpenSCDP."
msgstr ""
"PKI-as-a-Service门户网站也支持本地和远程连接HSM的n-of-m认证。PKI-as-a-Service"
"门户网站是基于OpenSCDP的。"

#: ../to-be-integrated.rst:911
msgid "**Q:** How to safe Cryptocurrences in the Nitrokey HSM"
msgstr "**问：**如何在Nitrokey HSM中确保加密货币的安全。"

#: ../to-be-integrated.rst:914
msgid ""
"J.v.d.Bosch wrote a simple, free python program to secure the private key of "
"a Bitcoin wallet in a HSM. See here for further information. Using the HSM "
"in an Ethereum PoA Chain. Tezos has been reported to work with Nitrokey HSM."
msgstr ""
"J.v.d.Bosch写了一个简单的、免费的python程序来保护HSM中比特币钱包的私钥。更多"
"信息请看这里。在Ethereum PoA链中使用HSM。据报道，Tezos已经与Nitrokey HSM一起"
"工作。"

#: ../to-be-integrated.rst:918
msgid ""
"**Q:** How to use the True Random Number Generator? Nitrokey HSM can be used "
"with Botan and TokenTools by using OpenSC as a PKCS#11 driver."
msgstr ""
"**问：**如何使用真实随机数发生器？Nitrokey HSM可以通过使用OpenSC作为PKCS#11驱"
"动，与Botan和TokenTools一起使用。"

#: ../to-be-integrated.rst:921
msgid ""
"OpenSSL can't use Nitrokey HSM's RNG directly because engine-pkcs11 doesn't "
"contain a mapping for OpenSSL to C_GenerateRandom."
msgstr ""
"OpenSSL不能直接使用Nitrokey HSM的RNG，因为engine-pkcs11不包含OpenSSL对"
"C_GenerateRandom的映射。"

#: ../to-be-integrated.rst:923
msgid "**Q:** What can I use for development and integration?"
msgstr "**问：**我可以用什么来开发和整合？"

#: ../to-be-integrated.rst:925
msgid ""
"se OpenSC's commandline tools If your application has a PKCS#11 interface, "
"use OpenSC's PKCS#11 driver. Depending on your Linux distribution, the PKCS "
"driver may may be located at /usr/lib/x86_64-linux-gnu/opensc-pkcs11.so for "
"example."
msgstr ""
"使用OpenSC'的命令行工具 如果你的应用程序有一个PKCS#11接口，请使用OpenSC'的"
"PKCS#11驱动程序。根据你的Linux发行版，PKCS驱动程序可能位于/usr/lib/x86_64-"
"linux-gnu/opensc-pkcs11.so，例如。"

#: ../to-be-integrated.rst:927
msgid ""
"Alternatively to OpenSC, you might use sc-hsm-embedded PKCS#11 and CSP-"
"Minidriver Module."
msgstr "除了OpenSC，你还可以使用sc-hsm-embedded PKCS#11和CSP-Minidriver模块。"

#: ../to-be-integrated.rst:928
msgid ""
"In case you use Java, you find a JCE Provider as part of Smart Card Shell. "
"You can find information about the m-of-n scheme here. Secure Messaging can "
"be used with the JCE provider. Please register at the CardContact Developer "
"Network to get access to the user manual and further tools. You can also "
"request the manual from us. Smart card forwarding with Fedora A user "
"generated tool on GitHub to provide an easy frontend to OpenSCs toolset - "
"nitrotool A forum post describes the procedure to sign executables with a "
"key stored on HSM on Windows."
msgstr ""
"如果你使用Java，你会发现JCE提供者是智能卡外壳的一部分。你可以在这里找到关于m-"
"of-n方案的信息。安全信息传递可以与JCE提供者一起使用。请在CardContact开发者网"
"络中注册，以获得用户手册和其他工具。您也可以向我们索取该手册。使用Fedora的智"
"能卡转发 GitHub上的一个用户生成的工具，为OpenSCs工具集提供了一个简单的前端 - "
"nitrotool 一个论坛帖子描述了在Windows上用存储在HSM上的密钥签署可执行文件的程"
"序。"

#: ../to-be-integrated.rst:936
msgid "Key Use Counter"
msgstr "关键使用计数器"

#: ../to-be-integrated.rst:938
msgid ""
"The Key Use Counter is displayed in the Key Manager of the Smart Card Shell. "
"At the moment you can only set it with a script "
"(SmartCardHSMKeySpecGenerator.prototype.setKeyUseCounter in the class scsh/"
"sc-hsm/SmartCardHSM.js)."
msgstr ""
"密钥使用计数器显示在智能卡外壳的密钥管理器中。目前你只能用脚本来设置它"
"（SmartCardHSMKeySpecGenerator.prototype.setKeyUseCounter在scsh/sc-sm/"
"SmartCardHSM.js类中）。"

#: ../to-be-integrated.rst:940
msgid ""
"In our PKCS#11 module there is a proprietary attribute "
"CKA_SC_HSM_KEY_USE_COUNTER with the key use of the C_GenerateKeyPair counter "
"can be set. The attribute can then also be set for a key can be queried."
msgstr ""
"在我们的PKCS#11模块中，有一个专有属性CKA_SC_HSM_KEY_USE_COUNTER，可以设置钥匙"
"使用的C_GenerateKeyPair计数器。然后，该属性也可以被设置为一个密钥可以被查询"
"到。"

#: ../to-be-integrated.rst:942
msgid ""
"In OCF and the JCE Provider, the Key Use Counter can be queried with "
"SmartCardHSMKey.getUseCounter() and confirm with SmartCardHSMKeySpec."
"setKeyUseCounter() can be set."
msgstr ""
"在OCF和JCE Provider中，可以用SmartCardHSMKey.getUseCounter()来查询密钥使用计"
"数器，用SmartCardHSMKeySpec.setKeyUseCounter()来确认可以设置。"

#: ../u2f/index.rst:2
msgid "Nitrokey FIDO U2F"
msgstr "Nitrokey FIDO U2F"

#: ../fido2/2fa-odoo.rst:2
msgid "Two-factor authentication for ERP software Odoo"
msgstr "ERP软件Odoo的双因素认证"

#: ../u2f/linux/product_platform_heading.rst:3
msgid "(Nitrokey FIDO U2F - Linux)"
msgstr "(Nitrokey FIDO U2F - Linux)"

#: ../fido2/2fa-odoo.rst:8
msgid ""
"`Odoo <https://www.odoo.com/>`_ is a powerful ERP (Enterprise Resource "
"Planning) software for companies of all sizes. Odoo is available as open "
"source and contains modules for CRM, website/e-commerce, accounting, "
"financial accounting, production, warehouse management, project management, "
"document management, among others."
msgstr ""
"`Odoo <https://www.odoo.com/>`_是一个功能强大的ERP（企业资源计划）软件，适用"
"于各种规模的公司。Odoo是开源的，包含CRM、网站/电子商务、会计、财务会计、生"
"产、仓库管理、项目管理、文档管理等模块。"

#: ../fido2/2fa-odoo.rst:10
msgid ""
"The secure access to such a central software is especially important and can "
"now be realized with the Nitrokey. For this purpose, access is protected by "
"two-factor authentication (2FA) and critical users are given a Nitrokey. "
"From now on the Nitrokey will be checked during user login in addition to "
"the user password. Phishing attacks are thus foiled and your critical "
"company data is protected."
msgstr ""
"对这样一个中央软件的安全访问尤为重要，现在可以通过Nitrokey来实现。为此，访问"
"受到双因素认证（2FA）的保护，关键用户会得到一个Nitrokey。从现在开始，除了用户"
"密码外，在用户登录时还将检查Nitrokey。这样，网络钓鱼攻击就被挫败了，你的重要"
"公司数据也得到保护。"

#: ../fido2/2fa-odoo.rst:12
msgid ""
"The two-factor authentication can be carried out using one-time passwords "
"(TOTP, RFC 6238) and FIDO U2F, thus enabling Nitrokey Pro, Nitrokey Storage "
"and Nitrokey FIDO U2F to be used. It is also possible to configure "
"authentication centrally and to activate it only for selected users."
msgstr ""
"双因素认证可以使用一次性密码（TOTP，RFC 6238）和FIDO U2F进行，因此可以使用"
"Nitrokey Pro、Nitrokey Storage和Nitrokey FIDO U2F。也可以集中配置认证，只对选"
"定的用户激活。"

#: ../fido2/2fa-odoo.rst:14
msgid ""
"This solution was developed together with our partner `initOS <https://www."
"initos.com/>`_, who are specialized in the development and customization of "
"Odoo. If you are interested, please contact us."
msgstr ""
"这个解决方案是与我们的合作伙伴`initOS <https://www.initos.com/>`_一起开发的，"
"他们专门从事Odoo的开发和定制。如果你有兴趣，请联系我们。"

#: ../fido2/2fa-odoo.rst:16
msgid "`Contact <https://www.nitrokey.com/contact>`_"
msgstr "`联系 <https://www.nitrokey.com/contact>`_"

#: ../fido2/2fa-odoo.rst:19
msgid "Video: Two-Factor-Authentication with the Nitrokey FIDO U2F in Odoo"
msgstr "视频。在Odoo中使用Nitrokey FIDO U2F进行双因素认证"

#: ../fido2/linux/desktop-login.rst:2
msgid "Desktop Login and Linux User Authentication"
msgstr "桌面登录和Linux用户认证"

#: ../fido2/linux/desktop-login.rst:9
msgid "Introduction"
msgstr "简介"

#: ../fido2/linux/desktop-login.rst:11
msgid ""
"This guide will walk you through the configuration of Linux to use FIDO "
"Universal 2nd Factor, i.e. FIDO U2F with ``libpam-u2f`` and `Nitrokey FIDO2 "
"<https://shop.nitrokey.com/shop/product/nk-fi2-nitrokey-fido2-55>`_."
msgstr ""
"本指南将指导你完成Linux的配置，以使用FIDO通用第二因子，即使用``libpam-u2f``和"
"`Nitrokey FIDO2 <https://shop.nitrokey.com/shop/product/nk-fi2-nitrokey-"
"fido2-55>`_ 的 FIDO U2F。"

#: ../fido2/linux/desktop-login.rst:13
msgid ""
"If you want to login to you computer using `Nitrokey Pro 2, <https://shop."
"nitrokey.com/shop/product/nk-pro-2-nitrokey-pro-2-3>`_ `Nitrokey Storage 2 "
"<https://shop.nitrokey.com/shop/product/nitrokey-storage-2-56>`_ and "
"`Nitrokey Start <https://shop.nitrokey.com/shop/product/nk-sta-nitrokey-"
"start-6>`_ you can visit the instructions for Windows available `here "
"<https://www.nitrokey.com/documentation/applications#p:nitrokey-pro&a:"
"computer-login&os:windows>`_, and for Linux `here <https://www.nitrokey.com/"
"documentation/applications#p:nitrokey-pro&a:computer-login&os:linux>`_."
msgstr ""
"如果你想用`Nitrokey Pro 2登录到你的电脑。<https://shop.nitrokey.com/shop/"
"product/nk-pro-2-nitrokey-pro-2-3>`_ `Nitrokey Storage 2 <https://shop."
"nitrokey.com/shop/product/nitrokey-storage-2-56>`_ 和 `Nitrokey Start "
"<xid=\"234\"></x>`_你可以访问这里提供的Windows的说明 ` <https://www.nitrokey."
"com/documentation/applications#p:nitrokey-pro&a:computer-login&os:"
"windows>`_。对于Linux ` <https://www.nitrokey.com/documentation/"
"applications#p:nitrokey-pro&a:computer-login&os:linux>`_。"

#: ../fido2/linux/desktop-login.rst:18
#: ../pro/linux/automatic-screen-lock.rst:13
#: ../pro/linux/disk-encryption-luks.rst:26
msgid "Requirements"
msgstr "要求"

#: ../fido2/linux/desktop-login.rst:20
msgid "Ubuntu 20.04 with Gnome Display Manager."
msgstr "Ubuntu 20.04带Gnome显示管理器。"

#: ../fido2/linux/desktop-login.rst:22
msgid ""
"Nitrokey FIDO2 configured following `these instructions <https://www."
"nitrokey.com/documentation/installation#p:nitrokey-fido-u2f&os:linux>`_."
msgstr ""
"按照`这些说明<https://www.nitrokey.com/documentation/installation#p:nitrokey-"
"fido-u2f&os:linux>`_配置了Nitrokey FIDO2。"

#: ../fido2/linux/desktop-login.rst:26 ../pro/linux/disk-encryption-luks.rst:49
msgid "Instructions"
msgstr "说明"

#: ../fido2/linux/desktop-login.rst:29
msgid "GUI method"
msgstr "GUI方法"

#: ../fido2/linux/desktop-login.rst:31
msgid ""
"In the lower left corner click on ``Show Applications`` and type settings in "
"the search bar as following:"
msgstr "在左下角点击``Show Applications``并在搜索栏输入设置，如下所示。"

#: ../fido2/linux/desktop-login.rst:37
msgid "Scroll down in the right bar to ``Users``"
msgstr "在右栏向下滚动到``Users``。"

#: ../fido2/linux/desktop-login.rst:42
msgid ""
"In the left corner click on ``Unlock`` and that would prompt for your "
"password"
msgstr "在左角点击``Unlock``，这将提示您输入密码。"

#: ../fido2/linux/desktop-login.rst:48
msgid ""
"Select ``Administrator`` and enter the user name and password of your choice"
msgstr "选择``Administrator``并输入你选择的用户名和密码。"

#: ../fido2/linux/desktop-login.rst:54
msgid "Once you finish Step 4 you should be done"
msgstr "一旦你完成了第4步，你应该就完成了"

#: ../fido2/linux/desktop-login.rst:60
msgid "CLI method"
msgstr "CLI方法"

#: ../fido2/linux/desktop-login.rst:63
msgid "1. Create a backup user and give it root privileges"
msgstr "1.创建一个备份用户并赋予其root权限"

#: ../fido2/linux/desktop-login.rst:65
msgid "You can do so by using these commands:"
msgstr "你可以通过使用这些命令来做到这一点。"

#: ../fido2/linux/desktop-login.rst:72
msgid ""
"In case you prefer to setup U2F for a single user, and are locked out of "
"your user session, you would still be able to login with the "
"``<backup_user>``, and proceed with the maintenance."
msgstr ""
"如果你喜欢为单个用户设置U2F，并且被锁定在用户会话之外，你仍然能够用"
"``<backup_user>``登录，并继续进行维护。"

#: ../fido2/linux/desktop-login.rst:78
msgid ""
"The following guide can potentially lock you out of your computer. You "
"should be aware of these risks, as it is recommended to first use the "
"instructions below on a secondary computer, or after a full backup."
msgstr ""
"下面的指南有可能将你的电脑锁定。你应该意识到这些风险，因为建议首先在第二台电"
"脑上使用下面的说明，或者在完整备份之后使用。"

#: ../fido2/linux/desktop-login.rst:83
msgid ""
"You might lose access to your data after configuring `PAM modules <http://"
"www.linux-pam.org/Linux-PAM-html/>`_."
msgstr ""
"在配置了`PAM模块<http://www.linux-pam.org/Linux-PAM-html/>`_之后，你可能失去"
"对数据的访问。"

#: ../fido2/linux/desktop-login.rst:88
msgid "2. Set up the ``rules`` to recognize the Nitrokey FIDO2"
msgstr "2.设置``rules``以识别Nitrokey FIDO2。"

#: ../fido2/linux/desktop-login.rst:90
msgid "Under ``/etc/udev/rules.d`` download ``41-nitrokey.rules``"
msgstr "在``/etc/udev/rules.d`下载``41-nitrokey.rules```"

#: ../fido2/linux/desktop-login.rst:97
msgid "And restart ``udev`` service"
msgstr "并重新启动``udev``服务"

#: ../fido2/linux/desktop-login.rst:104
msgid "3. Install ``libpam-u2f``"
msgstr "3.安装``libpam-u2f``。"

#: ../fido2/linux/desktop-login.rst:106
msgid ""
"On Ubuntu 20.04 it is possible to download directly ``libpam-u2f`` from the "
"official repos"
msgstr "在Ubuntu 20.04上，可以直接下载``libpam-u2f``从官方仓库下载"

#: ../fido2/linux/desktop-login.rst:114
msgid "Click for more options"
msgstr "点击查看更多选项"

#: ../fido2/linux/desktop-login.rst:116
msgid ""
"Alternatively you can build ``libpam-u2f`` from `Git <https://github.com/"
"phoeagon/pam-u2f>`_."
msgstr ""
"另外，你可以从`Git<https://github.com/phoeagon/pam-u2f>`_`构建libpam-u2f`。"

#: ../fido2/linux/desktop-login.rst:119
msgid ""
"To verify that the library is properly installed enter the following command:"
msgstr "为了验证该库是否正确安装，请输入以下命令。"

#: ../fido2/linux/desktop-login.rst:126
msgid "The Output should be something like the following:"
msgstr "输出应该是如下内容。"

#: ../fido2/linux/desktop-login.rst:133
msgid "4. Prepare the Directory"
msgstr "4.准备好目录"

#: ../fido2/linux/desktop-login.rst:135
msgid "Create ``.config/Nitrokey/`` under your home directory"
msgstr "在你的主目录下创建``.config/Nitrokey/``。"

#: ../fido2/linux/desktop-login.rst:141
msgid "And plug your Nitrokey FIDO2."
msgstr "并插入你的Nitrokey FIDO2。"

#: ../fido2/linux/desktop-login.rst:143
msgid ""
"Once done with the preparation, we can start to configure the computer to "
"use the Nitrokey FIDO2 for 2nd factor authentication at login and ``sudo``."
msgstr ""
"一旦完成准备工作，我们就可以开始配置计算机，以便在登录和``sudo``时使用"
"Nitrokey FIDO2进行第二因素认证。"

#: ../fido2/linux/desktop-login.rst:146
msgid "5. Generate the U2F config file"
msgstr "5.生成 U2F 配置文件"

#: ../fido2/linux/desktop-login.rst:148
msgid ""
"To generate the configuration file we will use the ``pamu2fcfg`` utility "
"that comes with the ``libpam-u2f``. For convenience, we will directly write "
"the output of the utility to the ``u2f_keys`` file under ``.config/"
"Nitrokey``. First plug your Nitrokey FIDO2 (if you did not already), and "
"enter the following command:"
msgstr ""
"为了生成配置文件，我们将使用``pamu2fcfg``工具，该工具随``libpam-u2f``附带。为"
"方便起见，我们将直接把该工具的输出写入``u2f_keys```文件中，在``.config/"
"Nitrokey```下。首先插入你的Nitrokey FIDO2（如果你还没有），并输入以下命令。"

#: ../fido2/linux/desktop-login.rst:154
msgid ""
"Once you run the command above, you will need to touch the key while it "
"flashes. Once done, ``pamu2fcfg`` will append its output the ``u2f_keys`` in "
"the following format:"
msgstr ""
"一旦你运行上面的命令，你需要在它闪烁的时候触摸按键。一旦完成，``pamu2fcfg``将"
"在其输出中附加``u2f_keys``格式如下。"

#: ../fido2/linux/desktop-login.rst:160
msgid ""
"Note, the output will be much longer, but sensitive parts have been removed "
"here. For better security, and once the config file generated, we will move "
"the ``.config/Nitrokey`` directory under the ``etc/`` directory with this "
"command:"
msgstr ""
"注意，输出结果将更长，但敏感部分在这里已经被删除。为了更好的安全，一旦配置文"
"件生成，我们将用这个命令把``.config/Nitrokey``目录移到``etc/``目录下。"

#: ../fido2/linux/desktop-login.rst:169
msgid "The file under ``.config/Nitrokey`` must be named ``u2f_keys``"
msgstr "``.config/Nitrokey``下的文件必须命名为``u2f_keys``。"

#: ../fido2/linux/desktop-login.rst:171
msgid ""
"It is recommended to first test the instructions with a single user. For "
"this purpose the previous command takes the ``-u`` option, to specify a "
"user, like in the example below:"
msgstr ""
"建议首先用一个用户来测试指令。为此，前面的指令采取``-u``选项，来指定一个用"
"户，就像下面的例子。"

#: ../fido2/linux/desktop-login.rst:179
msgid ""
"For individual user configuration you should point to the home directory in "
"the next step, or not include the ``authfile`` option in the PAM "
"configuration."
msgstr ""
"对于单个用户的配置，你应该在下一步指向主目录，或者在PAM配置中不包括"
"``authfile``选项。"

#: ../fido2/linux/desktop-login.rst:184
msgid "6. Backup"
msgstr "6.备份"

#: ../fido2/linux/desktop-login.rst:186
msgid ""
"This step is optional, however it is advised to have a backup Nitrokey in "
"the case of loss, theft or destruction of your Nitrokey FIDO."
msgstr ""
"这一步是可选的，但建议在您的Nitrokey FIDO丢失、被盗或毁坏的情况下拥有一个备份"
"的Nitrokey。"

#: ../fido2/linux/desktop-login.rst:188
msgid ""
"To set up a backup key, repeat the procedure above, and use ``pamu2fcfg -"
"n``. This will omit the ``<username>`` field, and the output can be appended "
"to the line with your ``<username>`` like this:"
msgstr ""
"要设置一个备份钥匙，重复上述程序，并使用``pamu2fcfg -n``。这将省略"
"``<username>``字段，输出可以附加到你的``<username>``这一行。"

#: ../fido2/linux/desktop-login.rst:195
msgid "7. Modify the Pluggable Authentication Module ``PAM``"
msgstr "7.修改可插拔认证模块 ``PAM``。"

#: ../fido2/linux/desktop-login.rst:197
msgid ""
"The final step is configure the PAM module files under ``/etc/pam.d/``. In "
"this guide we will modify the ``common-auth`` file as it handles the "
"authentication settings which are common to all services, but other options "
"are possible. You can modify the file with the following command:"
msgstr ""
"最后一步是配置``/etc/pam.d/``下的PAM模块文件。在本指南中，我们将修改``common-"
"auth``文件，因为它处理所有服务共有的认证设置，但其他选项也是可能的。你可以用"
"以下命令修改该文件。"

#: ../fido2/linux/desktop-login.rst:204
msgid "And add the following lines:"
msgstr "并添加以下几行。"

#: ../fido2/linux/desktop-login.rst:213
msgid ""
"Since we are using Central Authentication Mapping, we need to tell "
"``pam_u2f`` the location of the file to use with the ``authfile`` option."
msgstr ""
"由于我们使用中央认证映射，我们需要告诉``pam_u2f``使用``authfile``选项的文件位"
"置。"

#: ../fido2/linux/desktop-login.rst:217
msgid ""
"If you often forget to insert the key, ``prompt`` option make ``pam_u2f`` "
"print ``Insert your U2F device, then press ENTER.`` and give you a chance to "
"insert the Nitrokey."
msgstr ""
"#-#-#-#-#  u2f.po (Nitrokey Documentation)  #-#-#-#-#\n"
"如果你经常忘记插入钥匙。``prompt``选项使``pam_u2f``打印``Insert your U2F "
"device, then press ENTER.``并且给你机会插入Nitrokey。\n"
"#-#-#-#-#  nitrokey3.po (Nitrokey Documentation)  #-#-#-#-#\n"
"如果你经常忘记插入钥匙。``prompt``选项使``pam_u2f``打印``Insert your U2F "
"device, then press ENTER.``并且给你机会插入硝基钥匙。\n"
"#-#-#-#-#  fido2.po (Nitrokey Documentation)  #-#-#-#-#\n"
"如果你经常忘记插入钥匙。``prompt``选项使``pam_u2f``打印``Insert your U2F "
"device, then press ENTER.``并且给你机会插入Nitrokey。"

#: ../fido2/linux/desktop-login.rst:221
msgid ""
"If you would like to be prompted to touch the Nitrokey, ``cue`` option will "
"make ``pam_u2f`` print ``Please touch the device.`` message."
msgstr ""
"如果你想被提示触摸硝基钥匙。``cue``选项将使``pam_u2f``打印``Please touch the "
"device.``信息。"

#: ../fido2/linux/desktop-login.rst:225
msgid ""
"`nouserok` will ensure that you can still login using the username and "
"password, you might want to remove this at some point once the setup is "
"working and you don't want regular username & password based logins."
msgstr ""
"`nouserok`将确保你仍然可以使用用户名和密码登录，你可能想在某个时候删除这个，"
"一旦设置工作，你不想要常规的基于用户名和密码的登录。"

#: ../fido2/linux/desktop-login.rst:229
msgid "Once we modified the ``common-auth``, we can save and exit the file."
msgstr "一旦我们修改了``common-auth``，我们可以保存并退出文件。"

#: ../fido2/linux/desktop-login.rst:231
msgid ""
"You can test the configuration by typing ``sudo ls`` in the terminal. You "
"should be prompted the message ``Please touch the device.`` and have a "
"similar output on the terminal:"
msgstr ""
"你可以在终端输入``sudo ls``来测试该配置。你应该得到提示信息``Please touch "
"the device.``并在终端有类似的输出。"

#: ../fido2/linux/desktop-login.rst:238
msgid ""
"You can also test your configuration by logging out of the user session and "
"logging back. A similar screen should be displayed once you you unplug/"
"replug yout Nitrokey FIDO2 and type your password:"
msgstr ""
"你也可以通过注销用户会话并重新登录来测试你的配置。一旦你拔掉/重新拔掉你的"
"Nitrokey FIDO2并输入密码，应该会显示类似的屏幕。"

#: ../fido2/linux/desktop-login.rst:246
msgid ""
"After the PAM module modification, you will be able to test your "
"configuration right away, but it is recommended to reboot your computer, and "
"unplug/replug the Nitrokey FIDO2."
msgstr ""
"修改PAM模块后，你就可以马上测试你的配置，但建议重新启动你的电脑，并拔掉/重新"
"插入Nitrokey FIDO2的插头。"

#: ../fido2/linux/desktop-login.rst:248
msgid ""
"Once you have properly tested the instructions in this guide (and set up a "
"backup), it is recommended to use either the ``required`` or the "
"``requisite`` control flag instead of ``sufficient``."
msgstr ""
"一旦你正确地测试了本指南中的说明（并建立了一个备份）。建议使用``required`或"
"``requisite``控制标志，而不是``sufficient`。"

#: ../fido2/linux/desktop-login.rst:250
msgid ""
"The flags ``required`` and ``requisite`` provide a tighter access control, "
"and will make the Nitrokey FIDO2 necessary to login, and/or use the "
"configured service."
msgstr ""
"标志``required``和``requisite``提供更严格的访问控制，并将使Nitrokey FIDO2成为"
"登录和/或使用配置的服务的必要条件。"

#: ../fido2/linux/desktop-login.rst:252
msgid ""
"If you need more information about Control Flags in the ``PAM`` "
"configuration line, you may see the last section of this guide to understand "
"the difference, and the implications of using each of them."
msgstr ""
"如果你需要更多关于``PAM``配置行中的控制标志的信息，你可以看看本指南的最后一"
"节，了解它们的区别，以及使用它们各自的意义。"

#: ../fido2/linux/desktop-login.rst:256
msgid "PAM modules"
msgstr "PAM模块"

#: ../fido2/linux/desktop-login.rst:258
msgid ""
"There are several PAM modules files that can be modified according to your "
"needs:"
msgstr "有几个PAM模块文件，可以根据你的需要进行修改。"

#: ../fido2/linux/desktop-login.rst:260
msgid ""
"By modifying ``/etc/pam.d/common-auth`` file, you will be able to use you "
"Nitrokey FIDO for 2nd factor authentication for graphic login and ``sudo``. "
"Note: ``common-auth`` should be modified by adding the additional "
"configuration line at the end of the file."
msgstr ""
"通过修改``/etc/pam.d/common-auth``文件，你将能够使用你的Nitrokey FIDO进行图形"
"登录的第二因素认证和``sudo``。注意：``common-auth``应通过在文件末尾添加额外的"
"配置行进行修改。"

#: ../fido2/linux/desktop-login.rst:265
msgid ""
"If you wish to use FIDO U2F authentication solely for Gnome’s graphic login, "
"you might prefer to modify the\\ ``/etc/pam.d/gdm-password``"
msgstr ""
"#-#-#-#-#  u2f.po (Nitrokey Documentation)  #-#-#-#-#\n"
"如果你希望仅在Gnome的图形登录中使用FIDO U2F认证，你可能更喜欢修改：``/etc/"
"pam.d/gdm-password``。\n"
"#-#-#-#-#  nitrokey3.po (Nitrokey Documentation)  #-#-#-#-#\n"
"如果你希望只在Gnome的图形登录中使用FIDO U2F认证，你可能更喜欢修改：``/etc/"
"pam.d/gdm-password``。\n"
"#-#-#-#-#  fido2.po (Nitrokey Documentation)  #-#-#-#-#\n"
"如果你希望仅在Gnome的图形登录中使用FIDO U2F认证，你可能更喜欢修改：``/etc/"
"pam.d/gdm-password``。"

#: ../fido2/linux/desktop-login.rst:268
msgid ""
"Alternatively you can just modify the ``/etc/pam.d/sudo`` file if you wish "
"to use FIDO U2F when using the ``sudo`` command."
msgstr ""
"另外，如果你想在使用``/etc/pam.d/sudo``文件时使用FIDO U2F，你可以直接修改"
"``sudo``命令。"

#: ../fido2/linux/desktop-login.rst:272
msgid "Control flags"
msgstr "控制标志"

#: ../fido2/linux/desktop-login.rst:274
msgid ""
"In step 7 we have used the ``sufficient`` control flag to determine the "
"behavior of the PAM module when the Nitrokey is plugged or not. However it "
"is possible to change this behavior by using the following control flags:"
msgstr ""
"在第7步中，我们使用了``sufficient``控制标志来确定PAM模块在Nitrokey插入或不插"
"入时的行为。然而，可以通过使用以下控制标志来改变这种行为。"

#: ../fido2/linux/desktop-login.rst:276
msgid ""
"``required``: This is the most critical flag. The module result must be "
"successful for authentication to continue. This flag can lock you out of "
"your computer if you do not have access to the Nitrokey."
msgstr ""
"``required``。这是最关键的标志。模块结果必须是成功的，认证才能继续。如果你没"
"有访问Nitrokey的权限，这个标志会把你的电脑锁住。"

#: ../fido2/linux/desktop-login.rst:280
msgid ""
"``requisite``: Similar to ``required`` however, in the case where a specific "
"module returns a failure, control is directly returned to the application, "
"or to the superior PAM stack. This flag can also lock you out of your "
"computer if you do not have access to the Nitrokey."
msgstr ""
"#-#-#-#-#  u2f.po (Nitrokey Documentation)  #-#-#-#-#\n"
"``requisite``。与``required``类似，但是，在特定模块返回失败的情况下，控制权将"
"直接返回到应用程序，或返回到上级PAM栈。如果你没有访问Nitrokey的权限，这个标志"
"也可以将你的电脑锁定。\n"
"#-#-#-#-#  nitrokey3.po (Nitrokey Documentation)  #-#-#-#-#\n"
"``requisite``。与``required``类似，但在特定模块返回失败的情况下，控制权将直接"
"返回给应用程序，或返回给上级PAM栈。如果你没有访问Nitrokey的权限，这个标志也可"
"以将你的电脑锁定。\n"
"#-#-#-#-#  fido2.po (Nitrokey Documentation)  #-#-#-#-#\n"
"``requisite``。与``required``类似，但是，在特定模块返回失败的情况下，控制权将"
"直接返回到应用程序，或返回到上级PAM栈。如果你没有访问Nitrokey的权限，这个标志"
"也可以将你的电脑锁定。"

#: ../fido2/linux/desktop-login.rst:286
msgid ""
"``sufficient``: The module result is ignored if it fails. The ``sufficient`` "
"flag considered to be safe for testing purposes."
msgstr ""
"``sufficient``。如果失败，模块结果将被忽略。``sufficient``标志被认为是安全的"
"测试目的。"

#: ../fido2/linux/desktop-login.rst:289
msgid ""
"``optional``: The success or failure of this module is only important if it "
"is the only module in the stack associated with this service+type. The "
"``optional`` flag is considered to be safe to use for testing purposes."
msgstr ""
"``optional``。该模块的成功或失败只有在它是堆栈中与该服务+类型相关的唯一模块时"
"才重要。``optional``标志被认为是安全的，可用于测试目的。"

#: ../fido2/linux/desktop-login.rst:296
msgid ""
"If ``required`` or ``requisite`` is set, the failure of U2F authentication "
"will cause a failure of the overall authentication. Failure will occur when "
"the configured Nitrokey FIDO is not plugged, lost or destroyed."
msgstr ""
"如果``required`或``requisite``被设置，U2F认证的失败将导致整体认证的失败。当配"
"置的Nitrokey FIDO没有被插上、丢失或毁坏时，就会发生失败。"

#: ../fido2/linux/desktop-login.rst:301
msgid ""
"You will lose access to your computer if you mis-configured the PAM module "
"*and* used the ``required`` or ``requisite`` flags."
msgstr ""
"如果你错误地配置了PAM模块，并且*使用了``required`或``标记，你将失去对你的计算"
"机的访问。"

#: ../fido2/linux/desktop-login.rst:304
msgid ""
"You will also lose the ability to use ``sudo`` if you set up Central "
"Authentication Mapping *and* used the ``required`` or ``requisite`` flags."
msgstr ""
"如果你设置了中央认证映射，你也将失去使用``sudo``的能力。*并*使用``required``"
"或``requisite``标志。"

#: ../u2f/linux/index.rst:2
msgid "Nitrokey FIDO U2F with Linux"
msgstr "使用Linux的Nitrokey FIDO U2F"

#: ../u2f/linux/index.rst:13 ../u2f/mac/index.rst:13
#: ../u2f/windows/index.rst:16
msgid ""
"The Nitrokey FIDO U2F supports **two-factor authentication (2FA)**. With two-"
"factor authentication (2FA), the Nitrokey FIDO U2F is checked in addition to "
"the password."
msgstr ""
"Nitrokey FIDO U2F支持**双因素认证（2FA）**。在双因素认证（2FA）下，除了密码"
"外，还要检查Nitrokey FIDO U2F的情况。"

#: ../u2f/linux/index.rst:17 ../u2f/mac/index.rst:17
#: ../u2f/windows/index.rst:20
msgid "The Nitrokey FIDO U2F can be used with any current browser."
msgstr "Nitrokey FIDO U2F可与当前任何浏览器一起使用。"

#: ../u2f/linux/index.rst:20 ../u2f/mac/index.rst:20
#: ../u2f/windows/index.rst:23 ../nitrokey3/shared/main.rst:39
#: ../fido2/shared/index-content1.rst:44
msgid "Two-Factor Authentication (2FA)"
msgstr "双因素认证(2FA)"

#: ../u2f/linux/index.rst:22 ../u2f/mac/index.rst:22
#: ../u2f/windows/index.rst:25 ../nitrokey3/shared/main.rst:41
#: ../fido2/shared/index-content1.rst:46
msgid ""
"Open one of the `websites that support FIDO U2F <https://www.dongleauth.com/"
">`_."
msgstr "打开支持FIDO U2F的`网站之一 <https://www.dongleauth.com/>`_。"

#: ../u2f/linux/index.rst:24 ../u2f/mac/index.rst:24
#: ../u2f/windows/index.rst:27 ../nitrokey3/shared/main.rst:43
#: ../fido2/shared/index-content1.rst:48
msgid ""
"Log in to the website and enable two-factor authentication in your account "
"settings. (In most cases you will find a link to the documentation of the "
"supported web service at `dongleauth.com <https://www.dongleauth.com/>`_)"
msgstr ""
"登录网站，在你的账户设置中启用双因素认证。(在大多数情况下，你可以在"
"`dongleauth.com <https://www.dongleauth.com/>`_找到支持的网络服务文档的链接)"

#: ../u2f/linux/index.rst:28 ../u2f/mac/index.rst:28
#: ../u2f/windows/index.rst:31
msgid ""
"Register your Nitrokey FIDO U2F in the account settings by touching the "
"button to activate the Nitrokey FIDO U2F. After you have successfully "
"configured the device, you must activate the Nitrokey FIDO U2F this way each "
"time you log in."
msgstr ""
"在账户设置中通过触摸激活Nitrokey FIDO U2F的按钮来注册你的Nitrokey FIDO U2F。"
"在你成功配置设备后，你必须在每次登录时以这种方式激活Nitrokey FIDO U2F。"

#: ../u2f/linux/index.rst:33 ../u2f/mac/index.rst:33
#: ../u2f/windows/index.rst:36
msgid ""
"`Checkout <https://www.nitrokey.com/documentation/applications#p:nitrokey-"
"fido-u2f&os:all>`_ the various use cases and supported applications."
msgstr ""
"`结账 <https://www.nitrokey.com/documentation/applications#p:nitrokey-fido-"
"u2f&os:all>`_各种用例和支持的应用。"

#: ../u2f/linux/index.rst:38 ../u2f/mac/index.rst:38
#: ../u2f/windows/index.rst:41
msgid "The Nitrokey App can not be used for the Nitrokey FIDO U2F."
msgstr "Nitrokey应用程序不能用于Nitrokey FIDO U2F。"

#: ../u2f/linux/index.rst:43
msgid ""
"If the Nitrokey is not accepted immediately, you may need to copy this file "
"`41-nitrokey.rules <https://www.nitrokey.com/sites/default/files/41-nitrokey."
"rules>`_ to ``etc/udev/rules.d/``. In very rare cases, the system will need "
"the `older version <https://raw.githubusercontent.com/Nitrokey/libnitrokey/"
"master/data/41-nitrokey_old.rules>`_ of this file."
msgstr ""
"如果硝基钥匙没有被立即接受，你可能需要复制这个文件`41-nitrokey.rules "
"<https://www.nitrokey.com/sites/default/files/41-nitrokey.rules>`_到``etc/"
"udev/rules.d/``。在非常罕见的情况下，系统将需要这个文件的`较旧版本<https://"
"raw.githubusercontent.com/Nitrokey/libnitrokey/master/data/41-nitrokey_old."
"rules>`_。"

#: ../u2f/linux/index.rst:51
msgid "After copying the file, restart udev via ``sudo service udev restart``."
msgstr "复制文件后，通过``sudo service udev restart``重新启动udev。"

#: ../u2f/mac/product_platform_heading.rst:3
msgid "(Nitrokey FIDO U2F - macOS)"
msgstr "(Nitrokey FIDO U2F - macOS)"

#: ../u2f/mac/index.rst:2
msgid "Nitrokey FIDO U2F with macOS"
msgstr "Nitrokey FIDO U2F与MacOS的关系"

#: ../u2f/windows/product_platform_heading.rst:3
msgid "(Nitrokey FIDO U2F - Windows)"
msgstr "(Nitrokey FIDO U2F - Windows)"

#: ../u2f/windows/index.rst:2
msgid "Nitrokey FIDO U2F with Windows"
msgstr "使用Windows的Nitrokey FIDO U2F"

#: ../u2f/windows/index.rst:13
msgid ""
"The first time you plug in the Nitrokey FIDO U2F Windows may need some time "
"to configure the device."
msgstr "第一次插入Nitrokey FIDO U2F时，Windows可能需要一些时间来配置设备。"

#: ../syntax.rst:2
msgid "Nitrokey Documentation - Syntax"
msgstr "Nitrokey文档 - 语法"

#: ../syntax.rst:5
msgid "(Nitrokey Product - Platform)"
msgstr "(Nitrokey产品-平台)"

#: ../syntax.rst:11
msgid "H2 Heading"
msgstr "H2标题"

#: ../syntax.rst:14
msgid "Some text with ``inline.code();``"
msgstr "一些带有``inline.code();``的文字。"

#: ../syntax.rst:16
msgid "This is a bulleted list."
msgstr "这是一个列举式清单。"

#: ../syntax.rst:17
msgid "It has two items, the second item uses two lines."
msgstr "它有两个项目，第二个项目使用两行。"

#: ../syntax.rst:20 ../syntax.rst:25
msgid "This is a numbered list."
msgstr "这是一份编号的清单。"

#: ../syntax.rst:21 ../syntax.rst:26
msgid "It has two items too."
msgstr "它也有两个项目。"

#: ../syntax.rst:23
msgid "Normal text again."
msgstr "又是正常的文字。"

#: ../syntax.rst:28
msgid "this is"
msgstr "这就是"

#: ../syntax.rst:29
msgid "a list"
msgstr "一览表"

#: ../syntax.rst:31
msgid "with a nested list"
msgstr "用一个嵌套的列表"

#: ../syntax.rst:32
msgid "and some subitems"
msgstr "和一些子项目"

#: ../syntax.rst:34
msgid "and here the parent list continues"
msgstr "而在这里，父母的名单还在继续"

#: ../syntax.rst:36
msgid "These lines are"
msgstr "这些线是"

#: ../syntax.rst:37
msgid "broken exactly like in"
msgstr "破碎，就像在"

#: ../syntax.rst:38
msgid "the source file."
msgstr "的源文件。"

#: ../syntax.rst:41
msgid "H3 Heading"
msgstr "H3标题"

#: ../syntax.rst:44
msgid "Only the following message boxes should be used:"
msgstr "只应使用以下信息框。"

#: ../syntax.rst:48
msgid "Warning text."
msgstr "警告文字。"

#: ../syntax.rst:52
msgid "Note text."
msgstr "注释文本。"

#: ../syntax.rst:56
msgid "Important text."
msgstr "重要文本。"

#: ../syntax.rst:60
msgid "Tip text."
msgstr "提示文本。"

#: ../syntax.rst:69
msgid "Grid Table"
msgstr "网格表"

#: ../syntax.rst:72
msgid "Header 1"
msgstr "页首1"

#: ../syntax.rst:72
msgid "Header 2"
msgstr "标题2"

#: ../syntax.rst:72
msgid "Header 3"
msgstr "标题3"

#: ../syntax.rst:74
msgid "body row 1"
msgstr "身体第1行"

#: ../syntax.rst:74
msgid "column 2"
msgstr "第2栏"

#: ../syntax.rst:74
msgid "column 3"
msgstr "第3栏"

#: ../syntax.rst:76
msgid "body row 2"
msgstr "身体第2行"

#: ../syntax.rst:76
msgid "Cells may span columns."
msgstr "单元格可以跨越列。"

#: ../syntax.rst:78
msgid "body row 3"
msgstr "身体第3行"

#: ../syntax.rst:78
msgid "Cells may span rows."
msgstr "单元格可以横跨行。"

#: ../syntax.rst:78
msgid "Cells"
msgstr "细胞"

#: ../syntax.rst:79
msgid "contain"
msgstr "含有"

#: ../syntax.rst:80
msgid "blocks."
msgstr "块。"

#: ../syntax.rst:80
msgid "body row 4"
msgstr "身体第4行"

#: ../syntax.rst:84
msgid "Simple Table"
msgstr "简单的桌子"

#: ../syntax.rst:87
msgid "Inputs"
msgstr "输入"

#: ../syntax.rst:87
msgid "Output"
msgstr "输出"

#: ../syntax.rst:89
msgid "A"
msgstr "A"

#: ../syntax.rst:89
msgid "B"
msgstr "B"

#: ../syntax.rst:89
msgid "A or B"
msgstr "A或B"

#: ../syntax.rst:91 ../syntax.rst:92 ../syntax.rst:93
msgid "False"
msgstr "假的"

#: ../syntax.rst:92 ../syntax.rst:93 ../syntax.rst:94
msgid "True"
msgstr "真"

#: ../syntax.rst:97
msgid ""
"This is a text that needs to be translated automatically. This is another "
"Line to be translated."
msgstr "这是一个需要自动翻译的文本。这是另一条需要翻译的线路。"

#: ../syntax.rst:100
msgid ""
"This line is one of the tests for the automated translation workflow with "
"weblate."
msgstr "这一行是对weblate的自动翻译工作流程的测试之一。"

#: ../syntax.rst:101
msgid "Adding this text should trigger the conmplete workflow of translation."
msgstr "添加此文本应触发翻译的完整工作流程。"

#: ../syntax.rst:103
msgid ""
"This is `a Link  <https://f-droid.org/F-Droid.apk>`_ with the definition of "
"the url inline."
msgstr "这是`一个链接<https://f-droid.org/F-Droid.apk>`_，内嵌有url的定义。"

#: ../syntax.rst:105
msgid ""
"This is another thest for `a URL  <https://f-droid.org/F-Droid.apk>`_ to "
"test translation."
msgstr "这是对`一个URL <https://f-droid.org/F-Droid.apk>`_的另一个测试翻译。"

#: ../syntax.rst:108
msgid "This is a plain link https://foobar.bas/slug1/slug2"
msgstr "这是一个普通的链接https://foobar.bas/slug1/slug2"

#: ../syntax.rst:110
msgid ""
"This line contains the product name Nitrokey Start an should not be altered "
"by the translation."
msgstr "这一行包含产品名称Nitrokey Start，不应该被翻译所改变。"

#: ../t430/index.rst:2
msgid "NitroPad T430"
msgstr "NitroPad T430"

#: ../t430/qubes/product_platform_heading.rst:3
msgid "(Nitrokey T430 - Qubes OS)"
msgstr "(Nitrokey T430 - Qubes OS)"

#: ../t430/verify-sealed-hardware.rst:19 ../t430/verify-sealed-hardware.rst:27
msgid "img"
msgstr "图片"

#: ../t430/ubuntu/product_platform_heading.rst:3
msgid "(Nitrokey T430 - Ubuntu Linux)"
msgstr "(Nitrokey T430 - Ubuntu Linux)"

#: ../start/faq.rst:2
msgid "Nitrokey Start FAQ"
msgstr "硝基钥匙启动常见问题"

#: ../shared-faqs/nitrokeys.rst:2 ../shared-faqs/generic.rst:5
#: ../nitrokey3/faq.rst:5 ../fido2/faq.rst:6
msgid "**Q:** Which Operating Systems are supported?"
msgstr "**问：**支持哪些操作系统？"

#: ../shared-faqs/nitrokeys.rst:2
msgid "Windows, Linux, and Mac OS X."
msgstr "Windows、Linux和Mac OS X。"

#: ../shared-faqs/nitrokeys.rst:5 ../shared-faqs/generic.rst:26
#: ../shared-faqs/nitrokeys.rst:4 ../nitrokey3/faq.rst:8 ../fido2/faq.rst:9
msgid "**Q:** What can I use the Nitrokey for?"
msgstr "**问：**我可以用硝基钥匙做什么？"

#: ../shared-faqs/nitrokeys.rst:5 ../shared-faqs/generic.rst:26
#: ../nitrokey3/faq.rst:8 ../fido2/faq.rst:9
msgid "See the `frontpage`_ for an overview of supported use cases."
msgstr "请参阅`frontpage`_以了解支持的用例概述。"

#: ../start/faq.rst:11 ../storage/faq.rst:16 ../pro/faq.rst:12
msgid "**Q:** What are the default PINs?"
msgstr "**问：**默认的PIN码是什么？"

#: ../start/faq.rst:7 ../storage/faq.rst:10 ../shared-faqs/generic.rst:8
#: ../pro/faq.rst:8
msgid "**User PIN:** \"123456\""
msgstr "**用户密码：**\"123456\"。"

#: ../start/faq.rst:8 ../storage/faq.rst:11 ../shared-faqs/generic.rst:9
#: ../pro/faq.rst:9
msgid "**Administrator PIN:** \"12345678\""
msgstr "**管理员密码：** \"12345678\"。"

#: ../start/faq.rst:10 ../storage/faq.rst:14 ../shared-faqs/generic.rst:13
#: ../pro/faq.rst:11
msgid ""
"We strongly recommend to change these PINs/password to user-chosen values "
"before using the Nitrokey."
msgstr ""
"#-#-#-#-#  start.po (Nitrokey Documentation)  #-#-#-#-#\n"
"我们强烈建议在使用Nitrokey之前，将这些PINs/密码改为用户选择的值。\n"
"#-#-#-#-#  storage.po (Nitrokey Documentation)  #-#-#-#-#\n"
"我们强烈建议在使用Nitrokey之前，将这些PINs/密码改为用户选择的值。\n"
"#-#-#-#-#  shared-faqs.po (Nitrokey Documentation)  #-#-#-#-#\n"
"我们强烈建议在使用Nitrokey之前，将这些PIN码/密码改为用户选择的值。\n"
"#-#-#-#-#  pro.po (Nitrokey Documentation)  #-#-#-#-#\n"
"我们强烈建议在使用Nitrokey之前，将这些PINs/密码改为用户选择的值。"

#: ../shared-faqs/pins.rst:11 ../shared-faqs/generic.rst:45 ../hsm/faq.rst:17
msgid "**Q:** What is the maximum length of the PIN?"
msgstr "**问：**密码的最大长度是多少？"

#: ../shared-faqs/pins.rst:3 ../shared-faqs/generic.rst:37 ../hsm/faq.rst:9
msgid ""
"Nitrokey uses PINs instead of passwords. The main difference is that the "
"hardware limits the amount of tries to three while a limit doesn't exist for "
"passwords. Because of this, a short PIN is still secure and there is not "
"need to choose a long and complex PIN."
msgstr ""
"Nitrokey使用PIN码而不是密码。主要区别在于，硬件将尝试的次数限制为三次，而密码"
"则不存在限制。正因为如此，一个简短的PIN码仍然是安全的，没有必要选择一个长而复"
"杂的PIN码。"

#: ../shared-faqs/pins.rst:8
msgid ""
"Nitrokey Storage's PINs can be up to 20 digits long and can consist of "
"numbers, characters and special characters. Note: When using GnuPG or "
"OpenSC, 32 character long PINs can be used but aren't supported by Nitrokey "
"App."
msgstr ""
"Nitrokey Storage的PIN码可长达20位，可由数字、字符和特殊字符组成。注意：当使用"
"GnuPG或OpenSC时，可以使用32个字符的PIN码，但不被Nitrokey App支持。"

#: ../shared-faqs/pins.rst:22 ../hsm/faq.rst:27
msgid "**Q:** What is the User PIN for?"
msgstr "**问：**用户密码是什么？"

#: ../shared-faqs/pins.rst:14
msgid ""
"The user PIN is at least 6-digits long and is used to get access to the "
"contect of the Nitrokey. This is the PIN you will use a lot in every day use "
"e.g. for decrypting messages, for unlocking your encrypted storage (NK "
"Storage only) etc."
msgstr ""
"用户PIN码至少有6位数，用于进入Nitrokey的保护范围。这是你在日常使用中经常用到"
"的密码，例如解密信息、解锁加密的存储空间（仅限NK存储）等。"

#: ../shared-faqs/pins.rst:19 ../shared-faqs/generic.rst:53
msgid ""
"The user PIN can have up to 20 digits and other characters (e.g. alphabetic "
"and special characters). But as the user PIN is blocked as soon three wrong "
"PIN attempts were done, it is sufficiently secure to only have a 6 digits "
"PIN. The default PIN is 123456."
msgstr ""
"#-#-#-#-#  start.po (Nitrokey Documentation)  #-#-#-#-#\n"
"用户密码可以有多达20位数字和其他字符（如字母和特殊字符）。但是，由于用户的PIN"
"码在三次错误的PIN码尝试后就会被阻止，所以只有6位数的PIN码就足够安全了。默认的"
"PIN码是123456。\n"
"#-#-#-#-#  storage.po (Nitrokey Documentation)  #-#-#-#-#\n"
"用户密码可以有多达20位数字和其他字符（如字母和特殊字符）。但是，由于用户的PIN"
"码在三次错误的PIN码尝试后就会被阻止，所以只有6位数的PIN码就足够安全了。默认的"
"PIN码是123456。\n"
"#-#-#-#-#  shared-faqs.po (Nitrokey Documentation)  #-#-#-#-#\n"
"用户密码可以有多达20位数字和其他字符（如字母和特殊字符）。但是，由于用户的PIN"
"码在尝试了三次错误的PIN码后就会被阻止，所以只有6位数的PIN码就足够安全了。默认"
"的PIN码是123456。\n"
"#-#-#-#-#  pro.po (Nitrokey Documentation)  #-#-#-#-#\n"
"用户密码可以有多达20位数字和其他字符（如字母和特殊字符）。但是，由于用户的PIN"
"码在三次错误的PIN码尝试后就会被阻止，所以只有6位数的PIN码就足够安全了。默认的"
"PIN码是123456。"

#: ../shared-faqs/pins.rst:34 ../shared-faqs/pins.rst:33
msgid "**Q:** What is the Admin PIN for?"
msgstr "**问：**管理密码是用来做什么的？"

#: ../shared-faqs/pins.rst:25
msgid ""
"The admin PIN is at least 8-digits long and is used to change contents/"
"settings of the Nitrokey. That is to say after initializing the Nitrokey you "
"probably won't need this PIN too often (e.g. if you want to add another "
"password to the password safe of the Nitrokey Pro or Nitrokey Storage)."
msgstr ""
"管理密码至少有8位数，用于改变硝基钥匙的内容/设置。也就是说，在初始化Nitrokey"
"后，你可能不会经常需要这个PIN码（例如，如果你想在Nitrokey Pro或Nitrokey "
"Storage的密码箱中添加另一个密码）。"

#: ../shared-faqs/pins.rst:31 ../shared-faqs/generic.rst:64
msgid ""
"The admin PIN can have up to 20 digits and other characters (e.g. alphabetic "
"and special characters). But as the admin PIN is blocked as soon three wrong "
"PIN attempts were done, it is sufficiently secure to only have 8 digits PIN. "
"The default PIN is 12345678."
msgstr ""
"管理密码最多可以有20位数字和其他字符（如字母和特殊字符）。但是，由于只要有三"
"次错误的PIN尝试，管理PIN就会被阻止，所以只有8位数的PIN就足够安全了。默认的PIN"
"码是12345678。"

#: ../start/faq.rst:27 ../pro/faq.rst:33
msgid "**Q:** Which drivers/tools can be used?"
msgstr "**问：**可以使用哪些驱动程序/工具？"

#: ../start/faq.rst:16 ../pro/faq.rst:22
msgid ""
"GnuPG is required for many use cases. It is a command line tool but usually "
"you don't need to invoke it directly but use another application with user "
"interface."
msgstr ""
"GnuPG在许多使用情况下都是必需的。它是一个命令行工具，但通常你不需要直接调用"
"它，而是使用另一个具有用户接口的应用程序。"

#: ../start/faq.rst:20 ../pro/faq.rst:26
msgid ""
"Don't use GnuPG in parallel with OpenSC or another PKCS#11 driver because "
"both may interfere and unexpected issues may result."
msgstr ""
"不要将GnuPG与OpenSC或其他PKCS#11驱动并行使用，因为两者可能会相互干扰，并可能"
"导致意外问题。"

#: ../start/faq.rst:22 ../pro/faq.rst:28
msgid ""
"Install GPG4Win which contains Gnu Privacy Assistant (GPA) and GnuPG (GPG). "
"Start Gnu Privacy Assistant (GPA) or another application such as your email "
"client to use GnuPG. Advanced users could use GnuPG directly (command line). "
"Please note: The Fellowship smart card is similar to the Nitrokey Pro so "
"that this instructions work Nitrokey as well. In general the official "
"documentation is recommended."
msgstr ""
"安装GPG4Win，其中包含Gnu Privacy Assistant（GPA）和GnuPG（GPG）。启动Gnu "
"Privacy Assistant (GPA)或其他应用程序，如你的电子邮件客户端，以使用GnuPG。高"
"级用户可以直接使用GnuPG（命令行）。请注意：联谊会的智能卡与Nitrokey Pro类似，"
"因此本说明也适用于Nitrokey。一般情况下，建议使用官方文档。"

#: ../shared-faqs/algos.rst:3 ../shared-faqs/generic.rst:96
msgid "**Q:** Which algorithms and maximum key length are supported?"
msgstr "**问：**支持哪些算法和最大密钥长度？"

#: ../shared-faqs/algos.rst:3 ../shared-faqs/generic.rst:96
msgid "See the following table:"
msgstr "见下表。"

#: ../pro/openpgp-keygen-backup.rst:84 ../pro/openpgp-keygen-on-device.rst:193
#: ../shared-faqs/algos.rst:6 ../shared-faqs/generic.rst:99
msgid "Start"
msgstr "开始"

#: ../pro/openpgp-keygen-backup.rst:84 ../pro/openpgp-keygen-on-device.rst:193
#: ../shared-faqs/algos.rst:6 ../shared-faqs/generic.rst:99
msgid "Pro + Storage"
msgstr "专业+存储"

#: ../pro/openpgp-keygen-backup.rst:84 ../pro/openpgp-keygen-on-device.rst:193
#: ../shared-faqs/algos.rst:6 ../shared-faqs/generic.rst:99
msgid "Pro 2 + Storage 2"
msgstr "专业2+存储2"

#: ../shared-faqs/algos.rst:6 ../shared-faqs/generic.rst:99
msgid "HSM"
msgstr "HSM"

#: ../shared-faqs/algos.rst:6 ../shared-faqs/generic.rst:99
msgid "HSM2"
msgstr "HSM2"

#: ../pro/openpgp-keygen-backup.rst:86 ../pro/openpgp-keygen-on-device.rst:195
#: ../shared-faqs/algos.rst:8 ../shared-faqs/generic.rst:101
msgid "rsa1024"
msgstr "rsa1024"

#: ../pro/openpgp-keygen-backup.rst:86 ../pro/openpgp-keygen-backup.rst:87
#: ../pro/openpgp-keygen-backup.rst:88 ../pro/openpgp-keygen-backup.rst:89
#: ../pro/openpgp-keygen-backup.rst:90 ../pro/openpgp-keygen-backup.rst:91
#: ../pro/openpgp-keygen-backup.rst:92 ../pro/openpgp-keygen-backup.rst:93
#: ../pro/openpgp-keygen-on-device.rst:195
#: ../pro/openpgp-keygen-on-device.rst:196
#: ../pro/openpgp-keygen-on-device.rst:197
#: ../pro/openpgp-keygen-on-device.rst:198
#: ../pro/openpgp-keygen-on-device.rst:199
#: ../pro/openpgp-keygen-on-device.rst:200
#: ../pro/openpgp-keygen-on-device.rst:201
#: ../pro/openpgp-keygen-on-device.rst:202 ../shared-faqs/algos.rst:8
#: ../shared-faqs/algos.rst:10 ../shared-faqs/algos.rst:12
#: ../shared-faqs/algos.rst:14 ../shared-faqs/algos.rst:16
#: ../shared-faqs/algos.rst:18 ../shared-faqs/algos.rst:20
#: ../shared-faqs/algos.rst:22 ../shared-faqs/algos.rst:24
#: ../shared-faqs/algos.rst:26 ../shared-faqs/algos.rst:28
#: ../shared-faqs/algos.rst:30 ../shared-faqs/algos.rst:32
#: ../shared-faqs/algos.rst:34 ../shared-faqs/generic.rst:101
#: ../shared-faqs/generic.rst:103 ../shared-faqs/generic.rst:105
#: ../shared-faqs/generic.rst:107 ../shared-faqs/generic.rst:109
#: ../shared-faqs/generic.rst:111 ../shared-faqs/generic.rst:113
#: ../shared-faqs/generic.rst:115 ../shared-faqs/generic.rst:117
#: ../shared-faqs/generic.rst:119 ../shared-faqs/generic.rst:121
#: ../shared-faqs/generic.rst:123 ../shared-faqs/generic.rst:125
#: ../shared-faqs/generic.rst:127
msgid "✓"
msgstr "✓"

#: ../pro/openpgp-keygen-backup.rst:87 ../pro/openpgp-keygen-on-device.rst:196
#: ../shared-faqs/algos.rst:10 ../shared-faqs/generic.rst:103
msgid "rsa2048"
msgstr "rsa2048"

#: ../pro/openpgp-keygen-backup.rst:88 ../pro/openpgp-keygen-on-device.rst:197
#: ../shared-faqs/algos.rst:12 ../shared-faqs/generic.rst:105
msgid "rsa3072"
msgstr "rsa3072"

#: ../pro/openpgp-keygen-backup.rst:89 ../pro/openpgp-keygen-on-device.rst:198
#: ../shared-faqs/algos.rst:14 ../shared-faqs/generic.rst:107
msgid "rsa4096"
msgstr "rsa4096"

#: ../shared-faqs/algos.rst:16 ../shared-faqs/generic.rst:109
msgid "curve25519"
msgstr "曲线25519"

#: ../shared-faqs/algos.rst:18 ../shared-faqs/generic.rst:111
msgid "NIST-P 192"
msgstr "NIST-P 192"

#: ../shared-faqs/algos.rst:20 ../shared-faqs/generic.rst:113
msgid "NIST-P 256"
msgstr "NIST-P 256"

#: ../shared-faqs/algos.rst:22 ../shared-faqs/generic.rst:115
msgid "NIST-P 384-521"
msgstr "NIST-P 384-521"

#: ../shared-faqs/algos.rst:24 ../shared-faqs/generic.rst:117
msgid "Brainpool 192"
msgstr "脑池192"

#: ../shared-faqs/algos.rst:26 ../shared-faqs/generic.rst:119
msgid "Brainpool 256-320"
msgstr "脑库 256-320"

#: ../shared-faqs/algos.rst:28 ../shared-faqs/generic.rst:121
msgid "Brainpool 384-521"
msgstr "脑库 384-521"

#: ../shared-faqs/algos.rst:30 ../shared-faqs/generic.rst:123
msgid "secp192"
msgstr "secp192"

#: ../shared-faqs/algos.rst:32 ../shared-faqs/generic.rst:125
msgid "secp256"
msgstr "secp256"

#: ../shared-faqs/algos.rst:34 ../shared-faqs/generic.rst:127
msgid "secp521"
msgstr "secp521"

#: ../start/faq.rst:33
msgid ""
"**Q:** Does the Nitrokey Start contain a secure chip or just a normal "
"microcontroller?"
msgstr "**问：**Nitrokey Start是否包含一个安全芯片或只是一个普通的微控制器？"

#: ../start/faq.rst:33
msgid "Nitrokey Start is implemented in the microprocessor."
msgstr "Nitrokey Start是在微处理器中实现的。"

#: ../start/faq.rst:38 ../storage/faq.rst:21 ../shared-faqs/generic.rst:34
#: ../pro/faq.rst:68 ../nitrokey3/faq.rst:28 ../fido2/faq.rst:23
msgid "**Q:** How large is the storage capacity?"
msgstr "**问：**存储容量有多大？"

#: ../start/faq.rst:36
msgid ""
"The Nitrokey Start doesn't contain storage capability for ordinary data (it "
"can only store cryptographic keys and certificates)."
msgstr "Nitrokey Start不包含普通数据的存储能力（它只能存储加密密钥和证书）。"

#: ../start/index.rst:2
msgid "Nitrokey Start"
msgstr "Nitrokey Start"

#: ../start/index.rst:6 ../storage/index.rst:6 ../pro/index.rst:7
#: ../nitropad/index.rst:6 ../nitropc/index.rst:7 ../nitrokey3/index.rst:13
#: ../hsm/index.rst:6 ../fido2/index.rst:6
msgid "First check the:"
msgstr "首先检查一下。"

#: ../start/index.rst:14 ../storage/index.rst:14 ../pro/index.rst:15
#: ../nitropad/index.rst:14 ../nitropc/index.rst:15 ../nitrokey3/index.rst:21
#: ../hsm/index.rst:14 ../fido2/index.rst:14
msgid "or choose your operating system:"
msgstr "或选择你的操作系统。"

#: ../start/linux/product_platform_heading.rst:3
msgid "(Nitrokey Start - Linux)"
msgstr "(Nitrokey Start - Linux)"

#: ../start/linux/firmware-update.rst:8
msgid "To update the firmware of your Nitrokey Start, proceed as follows."
msgstr "更新Nitrokey Start固件的步骤如下。"

#: ../start/linux/firmware-update.rst:10
msgid "Install pip3."
msgstr "安装pip3。"

#: ../start/linux/firmware-update.rst:16
msgid "Install pynitrokey. For this you need an Internet connection."
msgstr "安装pynitrokey。为此，你需要一个互联网连接。"

#: ../start/linux/firmware-update.rst:22
msgid "Connect your Nitrokey Start and verify its recognition."
msgstr "连接你的Nitrokey Start并验证其识别。"

#: ../start/linux/firmware-update.rst:31
msgid "Start the update process. For this you need an Internet connection."
msgstr "开始更新过程。为此，你需要一个互联网连接。"

#: ../start/linux/firmware-update.rst:37
msgid ""
"You will then be asked to enter the Admin PIN of your Nitrokey Start. "
"(Default PIN: 12345678)"
msgstr "然后你将被要求输入你的Nitrokey启动的管理密码。(默认密码：12345678)"

#: ../start/linux/firmware-update.rst:50
msgid ""
"Under “Device” you will find information about the current version of your "
"Nitrokey Start. In the first item under “Please note” you can see the latest "
"firmware version available. Now you have to confirm the update with “yes”."
msgstr ""
"在 \"设备 \"下，你可以找到关于你的Nitrokey Start当前版本的信息。在 \"请注意 "
"\"下的第一项中，你可以看到现有的最新固件版本。现在你必须用 \"是 \"来确认更"
"新。"

#: ../start/linux/firmware-update.rst:82
msgid ""
"You can check the firmware version after the upgrade process has completed."
msgstr "你可以在升级过程完成后检查固件版本。"

#: ../pro/gpa.rst:2
msgid "Setup with Gnu Privacy Assistant (GPA)"
msgstr "用Gnu隐私助理（GPA）进行设置"

#: ../pro/gpa.rst:4
msgid ""
"This document describes how to use Gnu Privacy Assistant (GPA) to set up the "
"Nitrokey for its first usage."
msgstr "本文介绍了如何使用Gnu隐私助手（GPA）来设置Nitrokey的首次使用。"

#: ../pro/gpa.rst:6
msgid ""
"First you need to install Gnu Privacy Assistant (GPA). For Windows you "
"should download and install the `GPG4Win <https://www.gpg4win.org/>`_ "
"package which contains GPA. For Linux you should install the GPA package of "
"your distribution (e.g. on Ubuntu: sudo apt-get install gpa )."
msgstr ""
"首先，你需要安装Gnu隐私助理（GPA）。对于Windows，你应该下载并安装`GPG4Win "
"<https://www.gpg4win.org/>`_软件包，其中包含GPA。对于Linux，你应该安装你的发"
"行版的GPA包（例如，在Ubuntu：sudo apt-get install gpa ）。"

#: ../pro/gpa.rst:8
msgid ""
"Start GPA and select the Card Manager; either by pressing the icon at the "
"top or by choosing Card Manager in the Windows menu."
msgstr ""
"启动GPA并选择卡片管理器；可以按顶部的图标或在Windows菜单中选择卡片管理器。"

#: ../pro/gpa.rst:13
msgid ""
"The window of the Card Manager will appear. Enter your salutation, name and "
"optional other information. While doing so you might be asked to enter the "
"admin PIN."
msgstr ""
"将出现卡片管理器的窗口。输入你的问候语、姓名和可选的其他信息。在这样做的时"
"候，你可能会被要求输入管理密码。"

#: ../pro/gpa.rst:18
msgid "Confirm this window and enter the admin PIN in the next window."
msgstr "确认这个窗口，并在下一个窗口输入管理密码。"

#: ../pro/gpa.rst:23
msgid ""
"In the Card Manager window you might need to scroll down until you see the "
"buttons to change the PINs. The term PIN is used interchangeable with "
"\"password\". Press the first button \"Change PIN\" in order to change the "
"user password. Read and confirm the following information window."
msgstr ""
"在卡片管理器窗口中，你可能需要向下滚动，直到你看到改变PIN的按钮。术语PIN与"
"\"密码\"可以互换使用。按第一个按钮\"改变PIN\"，以改变用户密码。阅读并确认以下"
"信息窗口。"

#: ../pro/gpa.rst:28
msgid ""
"Choose and enter your own PIN with a minimum length of six characters. This "
"PIN is required for the daily usage of the Nitrokey."
msgstr ""
"选择并输入你自己的PIN码，长度至少为六个字符。在日常使用Nitrokey时，需要输入这"
"个密码。"

#: ../pro/gpa.rst:33
msgid ""
"Go back to the Card Manager window in step three. This time you choose the "
"third button Change PIN in order to change the admin PIN. The admin PIN is "
"required to change the information on the Nitrokey and to change the "
"cryptographic keys. Proceed as described in steps four and five."
msgstr ""
"回到第三步的卡片管理器窗口。这一次，你选择第三个按钮 \"改变PIN\"，以改变管理"
"PIN。要改变硝基钥匙上的信息和改变加密钥匙，就需要管理密码。按第四和第五步所述"
"进行。"

#: ../pro/gpa.rst:35
msgid ""
"After changing both the user and the admin PIN, you are back in the Card "
"Manager window. Select \"Generate key\" in the \"Card\" menu."
msgstr ""
"在改变了用户和管理员的PIN后，你又回到了卡片管理器窗口。在\"卡片\"菜单中选择"
"\"生成密钥\"。"

#: ../pro/gpa.rst:40
msgid ""
"Enter your name and e-mail address. You should keep \"backup\" enabled in "
"order to create a backup file of your cryptographic keys. Optionally you "
"might select an expiration date for your cryptographic keys."
msgstr ""
"输入你的姓名和电子邮件地址。你应该保持启用\"备份\"，以便为你的加密钥匙创建一"
"个备份文件。您可以选择为您的密码钥匙选择一个到期日。"

#: ../pro/gpa.rst:45
msgid "Wait until the keys are generated successfully."
msgstr "等待，直到钥匙成功生成。"

#: ../pro/gpa.rst:50
msgid ""
"Enter a strong passphrase for your backup keys. We strongly recommend to "
"store the backup file on a separate storage(e.g. CD-ROM) and on a safe "
"location."
msgstr ""
"为你的备份钥匙输入一个强密码。我们强烈建议将备份文件存储在一个单独的存储器"
"（如CD-ROM）上，并放在一个安全的地方。"

#: ../pro/gpa.rst:55
msgid ""
"Congratulations, your Nitrokey is now ready to use. Please see the "
"`applications <https://www.nitrokey.com/documentation/applications>`_ "
"section for further information of its usage."
msgstr ""
"恭喜你，你的Nitrokey现在已经可以使用了。请参阅`应用<https://www.nitrokey.com/"
"documentation/applications>`_部分，了解更多使用信息。"

#: ../start/linux/index.rst:2
msgid "Nitrokey Start, Linux"
msgstr "Nitrokey Start, Linux"

#: ../start/linux/index.rst:13
msgid ""
"Install ``scdaemon`` and GnuPG 2.1 or higher by using your package manager "
"(e.g. ``apt update && apt install scdaemon gnupg2`` on Ubuntu)."
msgstr ""
"使用你的软件包管理器安装``scdaemon``和GnuPG 2.1或更高版本（例如，``apt "
"update && apt install scdaemon gnupg2``在 Ubuntu 上）。"

#: ../start/linux/index.rst:15
msgid "Connect your Nitrokey to your computer."
msgstr "将你的Nitrokey连接到你的电脑。"

#: ../start/linux/index.rst:16 ../start/mac/index.rst:17
#: ../start/windows/index.rst:21
msgid ""
"Use GnuPG to `generate new keys or import existing ones <openpgp.html>`_."
msgstr "使用GnuPG来`生成新的密钥或导入现有的密钥<openpgp.html>`_。"

#: ../start/linux/index.rst:20 ../start/mac/index.rst:21
msgid ""
"It is indeed necessary to first import or create new keys and change the "
"PINs afterwards. Otherwise changing User PIN will fail! Furthermore "
"overriding keys results in PIN reset (default values), please keep this in "
"mind!"
msgstr ""
"确实有必要先导入或创建新的密钥，然后再更改PIN。否则更改用户PIN码将会失败!此"
"外，覆盖钥匙会导致PIN码重置（默认值），请牢记这一点。"

#: ../start/linux/index.rst:25 ../start/mac/index.rst:26
#: ../start/windows/index.rst:26
msgid ""
"Change the Admin PIN (default: ``12345678``) and then the User PIN (default: "
"``123456``) to your own choices."
msgstr ""
"改变管理密码（默认：``12345678`），然后改变用户密码（默认：``123456``）到你自"
"己的选择。"

#: ../start/linux/index.rst:27 ../start/mac/index.rst:28
#: ../start/windows/index.rst:28
msgid ""
"The PIN must consist of at least 14 characters (starting from RTM.8), can "
"contain any character (not only numbers). Do not select only numbers. If "
"your environment allows that, use emoticons or national characters."
msgstr ""
"密码必须由至少14个字符组成（从RTM.8开始），可以包含任何字符（不仅是数字）。不"
"要只选择数字。如果你的环境允许，请使用表情符号或国家字符。"

#: ../start/linux/index.rst:28 ../start/mac/index.rst:29
#: ../start/windows/index.rst:29
msgid ""
"The longer the PIN the better. It is possible to use 6 randomly selected "
"words instead as well for the same or better security than random character "
"string."
msgstr ""
"密码越长越好。也可以用6个随机选择的单词代替，以获得与随机字符串相同或更好的安"
"全性。"

#: ../start/linux/index.rst:29 ../start/mac/index.rst:30
msgid ""
"Use ‘gpg –card-edit’ -> ‘admin’ -> ‘passwd’ to achieve this (for Admin PIN "
"case)."
msgstr ""
"使用'gpg -card-edit' -> 'admin' -> 'passwd'来实现这个目标（对于Admin PIN情"
"况）。"

#: ../start/linux/index.rst:30 ../start/mac/index.rst:31
msgid ""
"Please be careful to change Admin PIN first and User PIN second! Otherwise "
"the admin-less mode got activated, see `this instructions <https://www.fsij."
"org/doc-gnuk/gnuk-passphrase-setting.html#>`_ for further information."
msgstr ""
"请注意，首先要修改管理员密码，其次要修改用户密码！否则，无管理员模式就会被激"
"活。否则，无管理模式就会被激活，更多信息见`本说明<https://www.fsij.org/doc-"
"gnuk/gnuk-passphrase-setting.html#>`_。"

#: ../start/linux/index.rst:31 ../start/mac/index.rst:32
msgid ""
"Optionally Reset code can be set up (`guide <http://www.fsij.org/doc-gnuk/"
"gnuk-passphrase-setting.html>`_). The minimum length accepted is 8 "
"characters, however it should be as long as User PIN."
msgstr ""
"可选择设置重置代码（`指南 <http://www.fsij.org/doc-gnuk/gnuk-passphrase-"
"setting.html>`_）。接受的最小长度是8个字符，但它应该和用户PIN码一样长。"

#: ../start/linux/index.rst:32 ../start/mac/index.rst:33
#: ../start/windows/index.rst:32
msgid ""
"KDF-DO allows for a shorter PIN of 8 characters minimum, by executing part "
"of the calculations on the PC."
msgstr "KDF-DO通过在PC上执行部分计算，允许较短的PIN码，最少为8个字符。"

#: ../start/linux/index.rst:34 ../start/mac/index.rst:35
msgid ""
"**Firmware version 1.2.5 or below: In case you forget a PIN or enter it "
"wrongly three times you need the reset code to unblock the PIN. Otherwise "
"the device wouldn’t be usable anymore! Therefore please** `set the reset "
"code <http://www.fsij.org/doc-gnuk/gnuk-passphrase-setting.html>`_ **as well "
"when initialising the key!**"
msgstr ""
"**固件版本1.2.5或以下。如果你忘记了PIN码或输入错误的PIN码三次，你需要重置码来"
"解除PIN码的限制。否则设备将无法使用因此，请** `设置重置代码 <http://www.fsij."
"org/doc-gnuk/gnuk-passphrase-setting.html>`_ **在初始化密钥时也要设置重置代"
"码！**"

#: ../start/linux/index.rst:41 ../start/mac/index.rst:42
#: ../start/windows/index.rst:41 ../storage/linux/index.rst:35
#: ../storage/mac/index.rst:27 ../storage/windows/index.rst:31
#: ../pro/linux/index.rst:34 ../pro/mac/index.rst:27 ../hsm/linux/index.rst:25
#: ../hsm/mac/index.rst:22 ../hsm/windows/index.rst:22
msgid ""
"Your Nitrokey is now ready to use. `Checkout <https://www.nitrokey.com/"
"documentation/applications>`_ the various use cases and supported "
"applications."
msgstr ""
"你的Nitrokey现在已经可以使用了。`查看<https://www.nitrokey.com/documentation/"
"applications>`_的各种使用情况和支持的应用程序。"

#: ../start/linux/index.rst:46 ../start/mac/index.rst:47
#: ../start/windows/index.rst:46 ../storage/linux/index.rst:45
#: ../storage/mac/index.rst:43 ../storage/windows/index.rst:38
#: ../pro/linux/index.rst:44 ../pro/mac/index.rst:43
#: ../pro/windows/index.rst:38
msgid "Key Creation with OpenPGP or S/MIME"
msgstr "用OpenPGP或S/MIME创建密钥"

#: ../start/linux/index.rst:48 ../start/mac/index.rst:49
#: ../start/windows/index.rst:48 ../storage/linux/index.rst:47
#: ../storage/mac/index.rst:45 ../storage/windows/index.rst:40
#: ../pro/linux/index.rst:46 ../pro/mac/index.rst:45
#: ../pro/windows/index.rst:40
msgid ""
"There are two widely used standards for email encryption. While OpenPGP/"
"GnuPG is popular among individuals, S/MIME/x.509 is mostly used by "
"enterprises. If you are in doubt which one to choose, you should use OpenPGP."
msgstr ""
"目前有两种广泛使用的电子邮件加密标准。OpenPGP/GnuPG在个人中很受欢迎，而S/"
"MIME/x.509则大多被企业使用。如果你对选择哪一个有疑问，你应该使用OpenPGP。"

#: ../start/linux/index.rst:53 ../start/mac/index.rst:54
#: ../start/windows/index.rst:53 ../storage/linux/index.rst:52
#: ../storage/mac/index.rst:50 ../pro/linux/index.rst:51
#: ../pro/mac/index.rst:50 ../pro/windows/index.rst:45
msgid ""
"`instructions <openpgp.html>`_ for using the OpenPGP standard with the "
"Nitrokey"
msgstr "`说明 <openpgp.html>`_使用Nitrokey的OpenPGP标准。"

#: ../start/linux/index.rst:56 ../start/mac/index.rst:57
#: ../start/windows/index.rst:56 ../storage/linux/index.rst:55
#: ../storage/mac/index.rst:53 ../pro/linux/index.rst:54
#: ../pro/mac/index.rst:53 ../pro/windows/index.rst:48
msgid "`instructions <smime.html>`_ for using S/MIME with the Nitrokey"
msgstr "`说明 <smime.html>`_用Nitrokey使用S/MIME。"

#: ../start/linux/index.rst:59 ../start/mac/index.rst:60
#: ../start/windows/index.rst:59
msgid "Please note that the Nitrokey App can not be used for this device!"
msgstr "请注意，Nitrokey应用程序不能用于该设备！请注意。"

#: ../start/linux/index.rst:64
msgid ""
"On some GNU/Linux systems it is necessary to insert the UDEV rules for the "
"Nitrokey device manually. If you followed the above instructions and get the "
"message:"
msgstr ""
"在某些GNU/Linux系统中，有必要手动插入Nitrokey设备的UDEV规则。如果你按照上面的"
"说明，得到了这样的信息。"

#: ../start/linux/index.rst:72
msgid ""
"please install the `Nitrokey App <https://www.nitrokey.com/download>`_ or "
"type the following commands in the terminal to download and install the UDEV "
"rules:"
msgstr ""
"请安装`Nitrokey App <https://www.nitrokey.com/download>`_或者在终端输入以下命"
"令，下载并安装UDEV规则。"

#: ../start/multiple-identities.rst:2
msgid "Multiple Identities"
msgstr "多重身份"

#: ../start/multiple-identities.rst:8
msgid ""
"The multiple identites feature allows to use 3 virtual smart cards in place "
"of one, giving bigger flexibility in the every day use, as well as "
"separation between user identities (business, personal etc.) or even "
"allowing usage of it for more than one user (PINs are separate)."
msgstr ""
"多重身份功能允许使用3张虚拟智能卡代替一张，在日常使用中提供更大的灵活性，以及"
"区分用户身份（商业、个人等），甚至允许多个用户使用它（密码是独立的）。"

#: ../start/multiple-identities.rst:10
msgid ""
"All of the smart cards have separate data objects, meaning they all could "
"have different keys, certificates stored, and PINs set. Identities do not "
"intereact between each other."
msgstr ""
"所有的智能卡都有独立的数据对象，这意味着它们都可以有不同的密钥、存储的证书和"
"设置的PIN。身份信息之间不相互影响。"

#: ../start/multiple-identities.rst:12
msgid ""
"The virtual smart cards are identifyable by the first digit of the serial "
"number, which is replaced by identity number for second (“1”) and third one "
"(“2”). Serial number is not changed for the first identity."
msgstr ""
"虚拟智能卡可通过序列号的第一个数字来识别，第二个（\"1\"）和第三个（\"2\"）的"
"身份号码取代了该数字。对于第一个身份，序列号不改变。"

#: ../start/multiple-identities.rst:17
msgid ""
"To change the identity it suffices to send a custom CCID command. This could "
"be achieved with ``pynitrokey`` tool:"
msgstr ""
"要改变身份，只需发送一个自定义的CCID命令。这可以通过``pynitrokey``工具实现。"

#: ../start/multiple-identities.rst:19
msgid ""
"`Install pynitrokey <https://github.com/Nitrokey/pynitrokey#installation>`_."
msgstr ""
"`安装pynitrokey <https://github.com/Nitrokey/pynitrokey#installation>`_。"

#: ../start/multiple-identities.rst:22
msgid "Connect your Nitrokey Start and verify that it got recognized."
msgstr "连接你的Nitrokey Start并验证它是否被识别。"

#: ../start/multiple-identities.rst:31
msgid "Change the identity, by replacing ``<ID>`` with ``0``, ``1``, or ``2``."
msgstr "改变身份，将``<ID>``替换为``0``。``1``，或 ``2``。"

#: ../start/multiple-identities.rst:42
msgid "Limitations"
msgstr "限制条件"

#: ../start/multiple-identities.rst:44
msgid ""
"As of version RTM.10 there is only one limitation - the third identity can "
"store a certificate not longer than 1024 bytes. The other two identities "
"have standard limit of 2048 bytes per certificate."
msgstr ""
"从RTM.10版本开始，只有一个限制--第三个身份可以存储不超过1024字节的证书。其他"
"两个身份的标准限制是每个证书2048字节。"

#: ../pro/openpgp.rst:2
msgid "OpenPGP Email Encryption"
msgstr "OpenPGP电子邮件加密"

#: ../pro/openpgp.rst:8 ../pro/smime.rst:11
msgid "There are two widely used standards for email encryption."
msgstr "目前有两种广泛使用的电子邮件加密标准。"

#: ../pro/openpgp.rst:10 ../pro/smime.rst:13
msgid "OpenPGP/GnuPG is popular among individuals,"
msgstr "OpenPGP/GnuPG在个人中很受欢迎。"

#: ../pro/openpgp.rst:12 ../pro/smime.rst:15
msgid "S/MIME/X.509 is mostly used by enterprises."
msgstr "S/MIME/X.509大多被企业使用。"

#: ../pro/openpgp.rst:14
msgid ""
"If you are in doubt which one to choose, you should use OpenPGP. While this "
"page describes the usage of OpenPGP, S/MIME is described `here <smime."
"html>`_."
msgstr ""
"如果你对选择哪一个有疑问，你应该使用OpenPGP。本页介绍了OpenPGP的用法，而S/"
"MIME则在`这里<smime.html>`_。"

#: ../pro/openpgp.rst:16
msgid ""
"Please familiarize yourself with the general concept behind the OpenPGP "
"standard first, for example by reading `this info graphic <https://"
"emailselfdefense.fsf.org/en/infographic.html>`_ of the Free Software "
"Foundation."
msgstr ""
"请先熟悉OpenPGP标准背后的一般概念，例如通过阅读`这个信息图形<https://"
"emailselfdefense.fsf.org/en/infographic.html>`_的自由软件基金会。"

#: ../pro/openpgp-keygen-backup.rst:11 ../pro/openpgp-keygen-gpa.rst:13
#: ../pro/openpgp-keygen-on-device.rst:19 ../pro/openpgp.rst:19
msgid "Key Generation"
msgstr "密钥生成"

#: ../pro/openpgp.rst:21
msgid "If you do not have OpenPGP keys yet, you need to generate them first."
msgstr "如果你还没有OpenPGP密钥，你需要先生成它们。"

#: ../pro/openpgp.rst:23
msgid ""
"`Generate keys on Nitrokey <openpgp-keygen-gpa.html>`_ - this is the best "
"option if you are unexperienced, but you won’t have a backup of your keys "
"and therefore won’t be able to mitigate the loss of the Nitrokey"
msgstr ""
"`在Nitrokey上生成钥匙 <openpgp-keygen-gpa.html>`_ - 如果你没有经验，这是最好"
"的选择，但你不会有钥匙的备份，因此无法减轻Nitrokey的损失。"

#: ../pro/openpgp.rst:29
msgid ""
"`Generate keys on Nitrokey with different algorithm or key size <openpgp-"
"keygen-on-device.html>`_ - this is as secure as the previous option and thus "
"you won’t have a backup as well, but you can change the key attributes (that "
"is the algorithm and key size)"
msgstr ""
"`在Nitrokey上生成具有不同算法或密钥大小的密钥 <openpgp-keygen-on-device."
"html>`_ - 这和之前的选项一样安全，因此你也不会有备份，但你可以改变密钥属性"
"（也就是算法和密钥大小）。"

#: ../pro/openpgp.rst:35
msgid ""
"`Generate keys locally <openpgp-keygen-backup.html>`_ and copy them to "
"Nitrokey - this is the most flexible, expert option, but only secure if your "
"system is not compromised, because you can create a backup key outside your "
"Nitrokey A similar description in french can be found `here <https://xieme-"
"art.org/post/importer-des-clefs-gnupg-dans-sa-nitrokey-pro/>`_."
msgstr ""
"`在本地生成密钥 <openpgp-keygen-backup.html>`_并将其复制到Nitrokey - 这是最灵"
"活、最专业的选择，但只有在你的系统没有被破坏时才安全，因为你可以在Nitrokey之"
"外创建一个备份密钥。 类似的法语描述可以在这里找到 ``_。"

#: ../pro/openpgp.rst:44
msgid "Importing Existing Keys"
msgstr "导入现有的钥匙"

#: ../pro/openpgp.rst:46
msgid ""
"If you already have OpenPGP keys you may want to use them with your "
"Nitrokey, instead of generating new ones. Importing exsiting keys works "
"basically the same as generating keys locally first and copy them to the "
"Nitrokey (see above). Therefore, please have a look at the `corresponding "
"instructions <openpgp-keygen-backup.html#key-import>`_. Note that you "
"probably want to generate another subkey for authentication to your existing "
"key. See at the same instructions for `subkey generation <openpgp-keygen-"
"backup.html#subkey-for-authentication>`_."
msgstr ""
"如果你已经有OpenPGP密钥，你可能想在你的Nitrokey上使用它们，而不是生成新的密"
"钥。导入现有密钥的方法与在本地生成密钥并将其复制到Nitrokey上的方法基本相同"
"（见上文）。因此，请看`相应的说明<openpgp-keygen-backup.html#key-import>`_。"
"请注意，你可能想生成另一个子密钥来验证你现有的密钥。请看同样的说明`子密钥生成"
"<openpgp-keygen-backup.html#subkey-for-authentication>`_。"

#: ../pro/openpgp.rst:51 ../pro/smime.rst:59
msgid "You can find further information about the usage on these pages:"
msgstr "你可以在这些网页上找到有关使用的进一步信息。"

#: ../pro/openpgp.rst:53
msgid ""
"for using `OpenPGP encryption with Thunderbird <openpgp-thunderbird.html>`_"
msgstr "为使用`OpenPGP加密的Thunderbird <openpgp-thunderbird.html>`_。"

#: ../pro/openpgp.rst:56
msgid "for using `OpenPGP encryption with Outlook <openpgp-outlook.html>`_"
msgstr "用于使用`OpenPGP加密的Outlook <openpgp-outlook.html>`_"

#: ../pro/openpgp.rst:59
msgid ""
"for using `Claws Mail <https://www.claws-mail.org/plugin.php?plugin=gpg>`_, "
"an email client (and news reader) for Linux and Windows"
msgstr ""
"使用`Claws Mail <https://www.claws-mail.org/plugin.php?plugin=gpg>`_，一个"
"Linux和Windows的电子邮件客户端（和新闻阅读器）。"

#: ../pro/openpgp.rst:63 ../pro/smime.rst:67
msgid ""
"for using `Evolution <https://help.gnome.org/users/evolution/stable/mail-"
"encryption.html.en>`_, an email client for the Gnome Desktop on Linux systems"
msgstr ""
"为使用`Evolution <https://help.gnome.org/users/evolution/stable/mail-"
"encryption.html.en>`_，Linux系统上Gnome桌面的电子邮件客户端。"

#: ../pro/openpgp.rst:67
msgid "for using `GPGTools <https://gpgtools.org/>`_ on macOS."
msgstr "用于在macOS上使用`GPGTools <https://gpgtools.org/>`_。"

#: ../pro/openpgp-keygen-backup.rst:2
msgid "OpenPGP Key Generation With Backup"
msgstr "带备份的OpenPGP密钥生成"

#: ../pro/openpgp-keygen-backup.rst:8
msgid ""
"The following instructions explain the generation of OpenPGP keys and how to "
"copy them to the Nitrokey. This method has the advantage of providing a "
"backup of the keys in case of losing or breaking the Nitrokey. The "
"instructions are based on the command line interface of GnuPG. Thus, you "
"need to have GnuPG installed on your system. The newest GnuPG version for "
"Windows can be found `here <https://www.gpg4win.org/>`_ and the newest "
"version for MacOS can be found `here <https://gpgtools.org/>`_. Users of "
"Linux systems please install GnuPG with help of the package manager."
msgstr ""
"下面的说明解释了OpenPGP密钥的生成以及如何将其复制到Nitrokey上。这种方法的好处"
"是在Nitrokey丢失或损坏的情况下可以提供钥匙的备份。这些说明是基于GnuPG的命令行"
"界面的。因此，你需要在你的系统上安装GnuPG。最新的Windows版GnuPG可以在`这里"
"<https://www.gpg4win.org/>`_，最新的MacOS版可以在`这里<https://gpgtools.org/"
">`_找到。Linux系统的用户请在软件包管理器的帮助下安装GnuPG。"

#: ../pro/openpgp-keygen-backup.rst:13
msgid ""
"At first, you need to generate a key locally. You can decide, which key "
"attributes to use and - most importantly - you can export the key and keep "
"it somewhere save in case you need to restore the key."
msgstr ""
"首先，你需要在本地生成一个密钥。你可以决定使用哪种密钥属性，最重要的是，你可"
"以导出密钥并将其保存在某个地方，以备你需要恢复密钥。"

#: ../pro/openpgp-keygen-backup.rst:16
msgid "Main Key and Encryption Subkey"
msgstr "主密钥和加密子密钥"

#: ../pro/openpgp-keygen-backup.rst:18
msgid ""
"We can use the command ``gpg --full-generate-key --expert`` to start a "
"guided key generation with all possible options. You can choose the key type "
"(usually RSA (1) or ECC (9)), the length of the key and other attributes. "
"The following output is just a simple example, you may choose other values."
msgstr ""
"我们可以使用``gpg --full-generate-key --expert``命令来启动一个具有所有可能选"
"项的指导性密钥生成。你可以选择钥匙类型（通常是RSA（1）或ECC（9）），钥匙的长"
"度和其他属性。下面的输出只是一个简单的例子，你可以选择其他值。"

#: ../pro/openpgp-keygen-backup.rst:81
msgid ""
"The following table illustrates which algorithm can be used on which device, "
"in case you want to use different key attributes."
msgstr "下表说明了在你想使用不同的密钥属性的情况下，哪种算法可用于哪种设备。"

#: ../pro/openpgp-keygen-backup.rst:84 ../pro/openpgp-keygen-on-device.rst:193
msgid "\\"
msgstr "\\"

#: ../pro/openpgp-keygen-backup.rst:90 ../pro/openpgp-keygen-on-device.rst:199
msgid "curve25519 (ECC)"
msgstr "curve25519 (ECC)"

#: ../pro/openpgp-keygen-backup.rst:91 ../pro/openpgp-keygen-on-device.rst:200
msgid "NIST (ECC)"
msgstr "NIST (ECC)"

#: ../pro/openpgp-keygen-backup.rst:92 ../pro/openpgp-keygen-on-device.rst:201
msgid "Brainpool (ECC)"
msgstr "脑库（ECC）"

#: ../pro/openpgp-keygen-backup.rst:93 ../pro/openpgp-keygen-on-device.rst:202
msgid "secp256k1"
msgstr "secp256k1"

#: ../pro/openpgp-keygen-backup.rst:97
msgid "Subkey for Authentication"
msgstr "认证的子密钥"

#: ../pro/openpgp-keygen-backup.rst:99
msgid ""
"You now have a main key with the capability to sign and certify (marked as "
"[SC]) and a subkey for encryption (marked as [E]). It is necessary to have "
"another subkey for use cases in which authentication is needed. This subkey "
"is generated in the next step. Type in ``gpg --edit-key --expert keyID`` to "
"start the process, whereas “keyID” is either the id of the key or the email "
"address used during key generation."
msgstr ""
"你现在有一个能够签名和认证的主钥匙（标记为[SC]）和一个用于加密的子钥匙（标记"
"为[E]）。在需要认证的情况下，有必要拥有另一个子密钥。这个子密钥将在下一步生"
"成。输入``gpg --edit-key --expert keyID``来开始这个过程，而 \"keyID \"是钥匙"
"的id或在钥匙生成时使用的电子邮件地址。"

#: ../pro/openpgp-keygen-backup.rst:120
msgid ""
"Now you are in the interactive mode of GnuPG and you can add a key by simply "
"typing ``addkey``. You need to choose the key you want to use. It is crucial "
"to choose “set your own capabilities”, because we want to have the "
"“authenticate” capability which is not available otherwise. We toggle sign "
"and encrypt by typing ``s`` and ``e`` and we activate authenticate by typing "
"``a``."
msgstr ""
"现在你处于GnuPG的交互式模式，你可以通过简单地输入``addkey``添加一个密钥。你需"
"要选择你想使用的密钥。选择 \"设置你自己的能力 \"是很关键的，因为我们想拥有 "
"\"验证 \"能力，否则就没有这个能力。我们通过输入``s`和``<xid=\"330\"></x>``，"
"我们通过输入``a``激活认证。"

#: ../pro/openpgp-keygen-backup.rst:178
msgid ""
"We quit with ``q``. Afterwards we need to answer the same questions as "
"before. Finally, we have a ready-to-go key set which we can import to our "
"device."
msgstr ""
"我们以``q``退出。之后，我们需要回答和之前一样的问题。最后，我们有一个准备好的"
"密钥集，可以导入到我们的设备中。"

#: ../pro/openpgp-keygen-backup.rst:212
msgid ""
"Now is good time to backup your key. Please keep this backup very secure. It "
"is best practice to never have this key on a regular computer which has "
"connection to the internet, so that the key never gets compromised. You can "
"create a backup with something like:"
msgstr ""
"现在是备份你的钥匙的好时机。请保持这个备份非常安全。最好的做法是永远不要把这"
"个密钥放在有互联网连接的普通计算机上，这样密钥就不会被破坏。你可以用以下方法"
"创建一个备份。"

#: ../pro/openpgp-keygen-backup.rst:219
msgid "Key Import"
msgstr "关键进口"

#: ../pro/openpgp-keygen-backup.rst:221
msgid ""
"You have a main key and two subkeys which can be imported to your Nitrokey. "
"Before proceeding please make sure that you really have a backup of the key, "
"if you need one. The ``keytocard`` command used in the next steps will "
"**delete** your key from your disk!"
msgstr ""
"你有一个主钥匙和两个子钥匙，可以导入到你的Nitrokey。在继续进行之前，请确保你"
"真的有一个钥匙的备份，如果你需要的话。在接下来的步骤中使用的``keytocard``命令"
"将从你的磁盘中**删除你的钥匙!"

#: ../pro/openpgp-keygen-backup.rst:223
msgid ""
"We start the process by accessing the interactive interface of GnuPG again "
"with ``gpg --edit-key --expert keyID``, whereas ``keyID`` is either the id "
"of the key or the email address used during key generation."
msgstr ""
"我们用``gpg --edit-key --expert keyID``再次访问GnuPG的交互式界面，而``keyID``"
"是钥匙的id或钥匙生成时使用的电子邮件地址。"

#: ../pro/openpgp-keygen-backup.rst:259
msgid ""
"We just imported the main key to the card. Now we proceed with the two "
"subkeys. We type ``key 1`` to select the encryption subkey and type in "
"``keytocard`` again and select the slot to use."
msgstr ""
"我们刚刚把主钥匙导入卡中。现在我们继续处理两个子密钥。我们输入``key 1``来选择"
"加密子密钥，并输入``keytocard``，再次选择要使用的插槽。"

#: ../pro/openpgp-keygen-backup.rst:288
msgid ""
"Now we deselect the first key with ``key 1`` and select the second subkey "
"with ``key 2`` and move it as well with ``keytocard``. Afterwards we quit "
"and save the changes."
msgstr ""
"现在我们用``key 1``取消对第一个子键的选择，用<xid=\"79\"></x>`key 2``并且用"
"``keytocard``移动它。之后，我们退出并保存更改。"

#: ../pro/openpgp-keygen-backup.rst:331
msgid ""
"Your keys are now moved to the Nitrokey and thus secured in hardware. "
"Congratulations!"
msgstr "你的钥匙现在已经转移到了Nitrokey，从而在硬件上得到了保障。祝贺你!"

#: ../pro/openpgp-keygen-backup.rst:334 ../pro/openpgp-keygen-gpa.rst:53
#: ../pro/openpgp-keygen-on-device.rst:206
msgid "Exporting Public Key and Keyserver Usage"
msgstr "导出公钥和钥匙服务器的使用"

#: ../pro/openpgp-keygen-backup.rst:336 ../pro/openpgp-keygen-gpa.rst:55
#: ../pro/openpgp-keygen-on-device.rst:208
msgid ""
"Although you can start to use your Nitrokey right away after generating the "
"keys on your system, you need to import your public key on every system, you "
"want to use the Nitrokey on. So to be prepared you have two options: You "
"either save the public key anywhere you like and use it on another system or "
"you save the public key on a webpage/keyserver."
msgstr ""
"虽然你可以在你的系统上生成钥匙后立即开始使用你的Nitrokey，但你需要在每个你想"
"使用Nitrokey的系统上导入你的公钥。所以为了做好准备，你有两个选择。你可以把公"
"钥保存在你喜欢的任何地方，然后在另一个系统上使用，或者把公钥保存在一个网页/钥"
"匙服务器上。"

#: ../pro/openpgp-keygen-backup.rst:339 ../pro/openpgp-keygen-on-device.rst:211
msgid "Generating a Public Key File"
msgstr "生成公钥文件"

#: ../pro/openpgp-keygen-backup.rst:341
msgid ""
"To get a simple file of your public key, you can just use ``gpg --armor --"
"export keyID > pubkey.asc``. Use either the fingerprint as “keyID” (look at "
"``gpg -K`` to get it) or just use your email address as an identifier."
msgstr ""
"要获得你的公钥的简单文件，你可以直接使用``gpg --armor --export keyID > "
"pubkey.asc``。使用指纹作为 \"keyID\"（查看``gpg -K``以获得它），或者直接使用"
"你的电子邮件地址作为标识。"

#: ../pro/openpgp-keygen-backup.rst:343
msgid ""
"You can carry this file with you or send it to anyone who you like. This "
"file is not secret at all. If you want to use the Nitrokey on another "
"system, you first import this public key via ``gpg --import pubkey.asc`` and "
"then types ``gpg --card-status`` so that the system knows where to look for "
"this key. That’s all."
msgstr ""
"你可以随身携带这个文件，或者把它发送给你喜欢的人。这个文件一点也不秘密。如果"
"你想在另一个系统上使用Nitrokey，你首先通过``gpg --import pubkey.asc``导入这个"
"公钥，然后输入``gpg --card-status``，这样系统就知道要在哪里寻找这个密钥。这就"
"是全部。"

#: ../pro/openpgp-keygen-backup.rst:347 ../pro/openpgp-keygen-on-device.rst:218
msgid "Uploading the Public Key"
msgstr "上传公钥"

#: ../pro/openpgp-keygen-backup.rst:349 ../pro/openpgp-keygen-on-device.rst:220
msgid ""
"If you do not want to carry a public keyfile with you, you can upload it to "
"keyserver. You can do this by typing ``gpg --keyserver search.keyserver.net "
"--send-key keyID``. If you are using another machine you can just import it "
"by using ``gpg --keyserver search.keyserver.net --recv-key keyID``."
msgstr ""
"如果你不想随身携带公钥文件，你可以把它上传到钥匙服务器。你可以通过输入``gpg "
"--keyserver search.keyserver.net --send-key keyID``来实现。如果你使用另一台机"
"器，你可以通过使用``gpg --keyserver search.keyserver.net --recv-key keyID``导"
"入它。"

#: ../pro/openpgp-keygen-backup.rst:351
msgid ""
"Another possibility is to change the URL setting on your card. Start ``gpg --"
"card-edit`` again and first set the URL where the key is situated (e.g. on "
"the keyserver or on your webpage etc.) via the ``url`` command. From now on "
"you can import the key on another system by just using the ``fetch`` command "
"within the ``gpg --card-edit environment``."
msgstr ""
"另一个可能性是改变你的卡上的URL设置。再次启动``gpg --card-edit``并首先通过"
"``url``命令设置钥匙所在的URL（例如，在钥匙服务器或你的网页上等）。从现在起，"
"你可以通过使用``fetch``命令在``gpg --card-edit environment``中导入另一个系统"
"上的密钥。"

#: ../pro/openpgp-keygen-gpa.rst:2
msgid "OpenPGP Key Generation Using GPA"
msgstr "使用GPA生成OpenPGP密钥"

#: ../pro/openpgp-keygen-gpa.rst:8
msgid ""
"The following instructions explain the generation of OpenPGP keys directly "
"on the Nitrokey with help of the GNU Privacy Assistant (GPA). You won’t be "
"able to create a backup of these keys. Thus, if you lose the Nitrokey or it "
"breaks you can not decrypt mails or use these keys anymore. Please see `here "
"<openpgp-outlook.html>`_ for a comparison of the different methods to "
"generate OpenPGP keys."
msgstr ""
"下面的说明解释了在GNU隐私助手（GPA）的帮助下直接在Nitrokey上生成OpenPGP密钥的"
"过程。你将无法创建这些密钥的备份。因此，如果你丢失了Nitrokey或它坏了，你就不"
"能再解密邮件或使用这些密钥了。请参阅`这里<openpgp-outlook.html>`_以了解不同方"
"法生成OpenPGP密钥的比较。"

#: ../pro/openpgp-keygen-gpa.rst:10
msgid ""
"You need to have GnuPG and GPA installed on your system. The newest version "
"for Windows can be found `here <https://www.gpg4win.org/>`_ (make sure to "
"check “GPA” during the installation!). Users of Linux systems please install "
"GnuPG and GPA with help of the package manager (e.g. using ``sudo apt "
"install gnupg gpa`` on Ubuntu)."
msgstr ""
"你需要在你的系统上安装GnuPG和GPA。最新的Windows版本可以在`这里找到<https://"
"www.gpg4win.org/>`_（确保在安装时选中 \"GPA\"！）。Linux系统的用户请在软件包"
"管理器的帮助下安装GnuPG和GPA（例如，在Ubuntu上使用``sudo apt install gnupg "
"gpa``）。"

#: ../pro/openpgp-keygen-gpa.rst:15
msgid ""
"At first, open the GNU Privacy Assistant (GPA). You may are asked to "
"generate a key, you can skip this step for now by clicking “Do it later”. In "
"the main window, please click on “Card” or “Card Manager”."
msgstr ""
"首先，打开GNU隐私助理（GPA）。你可能会被要求生成一个密钥，你可以点击 \"以后再"
"做 \"暂时跳过这一步。在主窗口中，请点击 \"卡 \"或 \"卡管理器\"。"

#: ../pro/openpgp-keygen-gpa.rst:22
msgid ""
"Another windows opens. Please go to “Card” -> “Generate key” to start the "
"key generation process."
msgstr "另一个窗口打开。请进入 \"卡片\"-> \"生成密钥\"，开始密钥生成过程。"

#: ../pro/openpgp-keygen-gpa.rst:29
msgid ""
"Now you can put in your name and the email address you want to use for the "
"key that will be generated next. You may choose an expiration date for your "
"key, but you don’t have to."
msgstr ""
"现在你可以输入你的名字和你想用于接下来生成的密钥的电子邮件地址。你可以为你的"
"钥匙选择一个到期日，但你不一定要选择。"

#: ../pro/openpgp-keygen-gpa.rst:31
msgid ""
"**Please do not use the backup checkbox**. This “backup” does only save the "
"encryption key. In case of a loss of the device, you will not be able to "
"restore the whole key set. So on the one hand it is no full backup (use "
"`these instructions <openpgp-keygen-backup.html>`_ instead, if you need one) "
"and on the other hand you risk that someone else can get in possession of "
"your encryption key. The advantage of generating keys on-device is to make "
"sure that keys are stored securely. Therefore, we recommend to skip this "
"half-backup."
msgstr ""
"**请不要使用备份复选框**。这种 \"备份 \"只保存加密密钥。在设备丢失的情况下，"
"你将无法恢复整个密钥集。因此，一方面它不是完整的备份（如果你需要的话，请使用`"
"这些说明<openpgp-keygen-backup.html>`_代替），另一方面，你有可能被别人占有你"
"的加密密钥。在设备上生成密钥的好处是确保密钥被安全地存储。因此，我们建议跳过"
"这个半备份。"

#: ../pro/openpgp-keygen-gpa.rst:38
msgid ""
"You will be asked for the admin PIN (default: 12345678) and the user PIN "
"(default: 123456). When the key generation is finished, you can see the "
"fingerprints of the keys on the bottom of the window. You may fill up the "
"fields shown above, which are saved on your Nitrokey as well."
msgstr ""
"你将被要求提供管理密码（默认：12345678）和用户密码（默认：123456）。当钥匙生"
"成完成后，你可以在窗口的底部看到钥匙的指纹。你可以填写上面显示的字段，这些字"
"段也会保存在你的Nitrokey上。"

#: ../pro/openpgp-keygen-gpa.rst:45
msgid ""
"Now you can close the window and go back to the main window. Your key will "
"be visible in the key manager after refreshing. Every application which "
"makes use of GnuPG will work with your Nitrokey as well, because GnuPG is "
"fully aware of the fact, that the keys are stored on your Nitrokey."
msgstr ""
"现在你可以关闭该窗口并回到主窗口。刷新后，你的钥匙将在钥匙管理器中可见。每一"
"个使用GnuPG的应用程序都可以使用你的Nitrokey，因为GnuPG完全知道钥匙是存储在你"
"的Nitrokey上的事实。"

#: ../pro/openpgp-keygen-gpa.rst:62
msgid ""
"Right-click on your key entry in the key manager and click “Export Keys…” to "
"export the public key to a file and/or “Send Keys…” to upload the key to a "
"keyserver."
msgstr ""
"在钥匙管理器中右击你的钥匙条目，点击 \"导出钥匙...... \"将公钥导出到文件中，"
"和/或点击 \"发送钥匙...... \"将钥匙上传至钥匙服务器。"

#: ../pro/openpgp-keygen-gpa.rst:64
msgid ""
"You can carry the keyfile with you or send it to anyone who you like. This "
"file is not secret at all. If you want to use the Nitrokey on another "
"system, you first import this public key via clicking on “Keys” -> "
"“Importing Keys…” and choosing the file."
msgstr ""
"你可以随身携带钥匙文件，或将其发送给任何你喜欢的人。这个文件根本就不是秘密。"
"如果你想在另一个系统上使用Nitrokey，你首先要通过点击 \"钥匙\"-> \"导入钥"
"匙... \"并选择文件来导入这个公钥。"

#: ../pro/openpgp-keygen-gpa.rst:67
msgid ""
"If you do not want to carry a public keyfile with you, you can upload it to "
"keyserver. If you are using another machine you can just import it by using "
"“Server” -> “Retrieve Keys…” and entering your name or key id."
msgstr ""
"如果你不想随身携带公钥文件，你可以把它上传到keyserver。如果你使用的是另一台机"
"器，你可以通过使用 \"服务器\"-> \"检索钥匙... \"并输入你的名字或钥匙ID来导入"
"它。"

#: ../pro/openpgp-keygen-gpa.rst:69
msgid ""
"Another possibility is to change the URL setting on your card. Open the card "
"manager again and fill in the URL where the key is situated (e.g. on the "
"keyserver or on your webpage etc.). From now on you can import the key on "
"another system by right-clicking on the URL and click on “Fetch Key”."
msgstr ""
"另一种可能是改变你的卡片上的URL设置。再次打开卡片管理器，填写钥匙所在的URL"
"（例如在钥匙服务器或你的网页上等）。从现在开始，你可以通过在URL上点击右键并点"
"击 \"Fetch Key\"，将钥匙导入另一个系统。"

#: ../pro/openpgp-keygen-on-device.rst:2
msgid "OpenPGP Key Generation On-Device"
msgstr "在设备上生成OpenPGP密钥"

#: ../pro/openpgp-keygen-on-device.rst:8
msgid ""
"The following instructions explain the generation of OpenPGP keys directly "
"on the Nitrokey. This is done by using the command line interface of GnuPG. "
"Thus, you need to have GnuPG installed on your system. The newest GnuPG "
"version for Windows can be found `here <https://www.gpg4win.org/>`_ and the "
"newest version for MacOS can be found `here <https://gpgtools.org/>`_. Users "
"of Linux systems please install GnuPG with help of the package manager."
msgstr ""
"下面的说明解释了如何在Nitrokey上直接生成OpenPGP密钥。这是通过使用GnuPG的命令"
"行界面完成的。因此，你需要在你的系统上安装GnuPG。最新的Windows版GnuPG可以在`"
"这里<https://www.gpg4win.org/>`_，最新的MacOS版可以在`这里<https://gpgtools."
"org/>`_找到。Linux系统的用户请在软件包管理器的帮助下安装GnuPG。"

#: ../pro/openpgp-keygen-on-device.rst:12
msgid ""
"These instructions are based on GnuPG version 2.2.6 or higher. Some Linux "
"Distributions have an older version installed. In this case please choose a "
"different method as listed `here <openpgp.html>`_ or install a newer version "
"if possible."
msgstr ""
"这些说明是基于GnuPG 2.2.6或更高版本。有些Linux发行版安装的是旧版本。在这种情"
"况下，请选择不同的方法，如`这里<openpgp.html>`_或者尽可能地安装一个较新的版"
"本。"

#: ../pro/openpgp-keygen-on-device.rst:21
msgid ""
"The following descriptions explain the basic key generation on-device via "
"GnuPG’s command line interface. The default behaviour is to generate RSA "
"keys of 2048 bit size. If you want to change the key algorithm and length, "
"have a look at the next section first."
msgstr ""
"下面的描述说明了通过GnuPG的命令行界面在设备上生成基本的密钥。默认行为是生成"
"2048比特大小的RSA密钥。如果你想改变钥匙的算法和长度，请先看看下一节。"

#: ../pro/openpgp-keygen-on-device.rst:23
msgid "Open a command line and type ``gpg2 --card-edit``."
msgstr "打开一个命令行，输入``gpg2 --card-edit``。"

#: ../pro/openpgp-keygen-on-device.rst:25 ../pro/smime.rst:29
msgid ""
"To open the Windows command line please push the Windows-key and R-key. Now "
"type ‘cmd.exe’ in the text field and hit enter. To open a Terminal on macOS "
"or GNU/Linux please use the application search (e.g. spotlight on macOS)."
msgstr ""
"要打开Windows命令行，请按下Windows键和R键。现在在文本字段中输入 \"cmd.exe "
"\"并点击回车。要在macOS或GNU/Linux上打开终端，请使用应用程序搜索（例如macOS的"
"spotlight）。"

#: ../pro/openpgp-keygen-on-device.rst:53
msgid ""
"Now you are in the interactive interface of GnuPG. Activate the admin "
"commands with ``admin`` and use ``generate`` afterwards to start the "
"generation of keys."
msgstr ""
"现在你进入了GnuPG的交互界面。用``admin``激活管理命令，之后用``generate``开始"
"生成密钥。"

#: ../pro/openpgp-keygen-on-device.rst:95
msgid ""
"**Please do not create the suggested off-card backup.** This “backup” does "
"only save the encryption key, but not the signature and authentication keys. "
"In case of a loss of the device, you will not be able to restore the whole "
"key set. So on the one hand it is no full backup (use `these instructions "
"<openpgp-keygen-backup.html>`_ instead, if you need one) and on the other "
"hand you risk that someone else can get in possession of your encryption "
"key. The advantage of generating keys on-device is to make sure that keys "
"are stored securely. Therefore, we recommend to skip this half-backup."
msgstr ""
"**请不要创建建议的卡外备份。**这种 \"备份 \"只保存加密密钥，但不保存签名和认"
"证密钥。在设备丢失的情况下，你将无法恢复整个密钥集。因此，一方面，它不是完整"
"的备份（如果你需要，可以使用`这些说明<openpgp-keygen-backup.html>`_代替），另"
"一方面，你有可能被其他人占有你的加密密钥。在设备上生成密钥的好处是确保密钥被"
"安全地存储。因此，我们建议跳过这个半备份。"

#: ../pro/openpgp-keygen-on-device.rst:98
msgid ""
"Now you have a complete key set on your device which can be used for the "
"`various applications <https://www.nitrokey.com/documentation/"
"applications>`_ listed on our site. Type ``quit`` and hit enter to exit."
msgstr ""
"现在你的设备上有一个完整的密钥集，可以用于我们网站上列出的各种应用程序"
"`<https://www.nitrokey.com/documentation/applications>`_。输入``quit``并点击"
"回车键退出。"

#: ../pro/openpgp-keygen-on-device.rst:101
msgid "Change Key Attributes"
msgstr "改变关键属性"

#: ../pro/openpgp-keygen-on-device.rst:103
msgid ""
"This section is about changing the key attributes. If you want to use the "
"default values, you can proceed with the next section."
msgstr "本节是关于改变关键属性的。如果你想使用默认值，你可以继续下一节。"

#: ../pro/openpgp-keygen-on-device.rst:105
msgid "Open a command line and type ``gpg2 --card-edit --expert``."
msgstr "打开一个命令行，输入``gpg2 --card-edit --expert``。"

#: ../pro/openpgp-keygen-on-device.rst:131
msgid ""
"Now you are in the interactive interface of GnuPG. As you can see in the "
"“Key attributes” field above, the default value rsa2048 is set. To change "
"them, activate the admin commands with ``admin`` and use ``key-attr`` "
"afterwards to change the attributes of the keys."
msgstr ""
"现在你进入了GnuPG的交互界面。正如你在上面的 \"密钥属性 \"字段中看到的，默认值"
"是rsa2048。要改变它们，用``admin``激活管理命令，然后用``key-attr``来改变钥匙"
"的属性。"

#: ../pro/openpgp-keygen-on-device.rst:162
msgid ""
"You can choose the attribute for each key (that is, signature, encryption "
"and authentication key). Most people will use the same attributes for every "
"key. Type ``list`` to see the results (have look at the “Key attributes” "
"field, which now reads rsa4096)."
msgstr ""
"你可以为每个密钥（即签名、加密和认证密钥）选择属性。大多数人将为每个密钥使用"
"相同的属性。输入``list``以查看结果（请看 \"密钥属性 \"字段，现在是rsa4096）。"

#: ../pro/openpgp-keygen-on-device.rst:188
msgid ""
"Type ``quit`` and hit enter to exit or proceed directly with the previous "
"section to actually generate the keys with the key attributes you just set."
msgstr ""
"输入``quit``，然后点击回车键退出，或者直接进行上一节，用你刚才设置的钥匙属性"
"实际生成钥匙。"

#: ../pro/openpgp-keygen-on-device.rst:190
msgid ""
"The following table illustrates which algorithm can be used on which device."
msgstr "下表说明了哪种算法可以在哪种设备上使用。"

#: ../pro/openpgp-keygen-on-device.rst:213
msgid ""
"To get a simple file of your public key, you can just use ``gpg2 --armor --"
"export keyID > pubkey.asc``. Use either the fingerprint as “keyID” (look at "
"``gpg -K`` to get it) or just use your email address as an identifier."
msgstr ""
"要获得你的公钥的简单文件，你可以直接使用``gpg2 --armor --export keyID > "
"pubkey.asc``。使用指纹作为 \"keyID\"（查看``gpg -K``来获得它），或者直接使用"
"你的电子邮件地址作为标识。"

#: ../pro/openpgp-keygen-on-device.rst:215
msgid ""
"You can carry this file with you or send it to anyone who you like. This "
"file is not secret at all. If you want to use the Nitrokey on another "
"system, you first import this public key via ``gpg2 --import pubkey.asc`` "
"and then types ``gpg2 --card-status`` so that the system knows where to look "
"for this key. That’s all."
msgstr ""
"你可以随身携带这个文件，或者把它发送给你喜欢的人。这个文件一点也不秘密。如果"
"你想在另一个系统上使用Nitrokey，你首先通过``gpg2 --import pubkey.asc``导入这"
"个公钥，然后输入``gpg2 --card-status``，以便系统知道去哪里寻找这个密钥。这就"
"是全部。"

#: ../pro/openpgp-keygen-on-device.rst:222
msgid ""
"Another possibility is to change the URL setting on your card. Start gpg –"
"card-edit again and first set the URL where the key is situated (e.g. on the "
"keyserver or on your webpage etc.) via the ``url`` command. From now on you "
"can import the key on another system by just using the ``fetch`` command "
"within the ``gpg --card-edit`` environment."
msgstr ""
"另一个可能性是改变你卡上的 URL 设置。再次启动 gpg -card-edit 并首先通过 "
"``url`` 命令设置钥匙所在的 URL（例如，在钥匙服务器或你的网页上等）。从现在"
"起，你可以通过在``fetch``命令在``gpg --card-edit``环境中导入密钥。"

#: ../pro/openpgp-outlook.rst:2
msgid "OpenPGP Email Encryption with Outlook"
msgstr "使用Outlook的OpenPGP电子邮件加密"

#: ../pro/openpgp-outlook.rst:10
msgid ""
"Unfortunately, there is no solution to use OpenPGP in Outlook for macOS yet."
msgstr "不幸的是，目前还没有在Outlook for macOS中使用OpenPGP的解决方案。"

#: ../pro/openpgp-outlook.rst:14 ../pro/smime-outlook.rst:9
#: ../pro/smime-thunderbird.rst:9 ../pro/smime.rst:9
#: ../pro/linux/openvpn-easyrsa.rst:24 ../pro/windows/openpgp-csp.rst:11
#: ../pro/windows/openvpn-viscosity.rst:17
#: ../nextbox/technical/replace-drive.rst:12
msgid "Prerequisites"
msgstr "先决条件"

#: ../pro/openpgp-outlook.rst:16
msgid ""
"If you do not have PGP-Keys on your Nitrokey yet, please look at `this page "
"<openpgp.html>`_ first."
msgstr "如果你的Nitrokey上还没有PGP-Keys，请先看看`这个页面<openpgp.html>`_。"

#: ../pro/openpgp-outlook.rst:18
msgid ""
"You need to have GnuPG installed on your System. The newest GnuPG version "
"for Windows can be found `here <https://www.gpg4win.org>`_. You need to make "
"sure to have “GpgOL” checked during installation process (see below)."
msgstr ""
"你需要在你的系统上安装GnuPG。最新的Windows版GnuPG可以在`这里找到 <https://"
"www.gpg4win.org>`_。你需要确保在安装过程中选中 \"GpgOL\"（见下文）。"

#: ../pro/openpgp-outlook.rst:28
msgid ""
"After installing GPG4Win along with GpgOL, you will see a new icon labeled "
"“Secure” in the composing window. To encrypt and sign a mail you just click "
"on the sign like seen below."
msgstr ""
"在安装了GPG4Win和GpgOL之后，你会在合成窗口中看到一个标有 \"安全 \"的新图标。"
"要对邮件进行加密和签名，你只需点击下面的签名即可。"

#: ../pro/openpgp-outlook.rst:35
msgid ""
"GnuPG will start signing and encrypting the mail as soon as you click on "
"‘send’. You are requested to choose the identity you want to sign with and "
"encrypt for."
msgstr ""
"当你点击 \"发送 \"时，GnuPG将开始对邮件进行签名和加密。你被要求选择你想签名和"
"加密的身份。"

#: ../pro/openpgp-outlook.rst:42
msgid ""
"Furthermore, you are asked for typing in the User PIN of the Nitrokey for "
"signing the mail."
msgstr "此外，还要求你输入Nitrokey的用户密码来签署邮件。"

#: ../pro/openpgp-outlook.rst:49
msgid ""
"You will be asked automatically for your User PIN if you want to read an "
"encrypted mail."
msgstr "如果你想阅读加密的邮件，你会被自动要求提供你的用户密码。"

#: ../pro/openpgp-thunderbird.rst:2
msgid "OpenPGP Email Encryption With Thunderbird"
msgstr "使用雷鸟的OpenPGP电子邮件加密"

#: ../pro/openpgp-thunderbird.rst:9
msgid "Thunderbird 78.3 and newer"
msgstr "雷鸟78.3及以上版本"

#: ../pro/openpgp-thunderbird.rst:11
msgid ""
"At the moment Thunderbird’s 78 support for the OpenPGP emails is not easy to "
"set up. See `Thunderbird’s documentation <https://wiki.mozilla.org/"
"Thunderbird:OpenPGP:Smartcards>`_ for details. Here is a `comprehensive "
"German guide <https://decatec.de/it/thunderbird-78-pgp-verschluesselung-mit-"
"dem-nitrokey-storage/>`_."
msgstr ""
"目前，Thunderbird对OpenPGP邮件的78项支持并不容易设置。详情见`Thunderbird的文"
"档<https://wiki.mozilla.org/Thunderbird:OpenPGP:Smartcards>`_。这里有一份`全"
"面的德国指南<https://decatec.de/it/thunderbird-78-pgp-verschluesselung-mit-"
"dem-nitrokey-storage/>`_。"

#: ../pro/openpgp-thunderbird.rst:16
msgid ""
"Error message: ``The configured key ID '4BA0183FCBA844A7' cannot be found on "
"your keyring``"
msgstr ""
"错误信息。``The configured key ID '4BA0183FCBA844A7' cannot be found on your "
"keyring``"

#: ../pro/openpgp-thunderbird.rst:18
msgid ""
"Make sure that the public key is imported to the Thunderbird’s manager and"
msgstr "确保公钥被导入到Thunderbird的管理器和"

#: ../pro/openpgp-thunderbird.rst:19
msgid ""
"The key ID does not contain any whitespace, and consists of 16 characters "
"from range 0-9 A-F"
msgstr "密钥ID不包含任何空格，由16个字符组成，范围为0-9 A-F"

#: ../pro/openpgp-thunderbird.rst:20
msgid "you have GPA or Kleopatra software installed."
msgstr "您已安装GPA或Kleopatra软件。"

#: ../pro/openpgp-thunderbird.rst:22
msgid ""
"Please use Kleopatra or `GPA <openpgp-keygen-gpa.html>`_ software to handle "
"the smart card."
msgstr "请使用Kleopatra或`GPA <openpgp-keygen-gpa.html>`_软件来处理智能卡。"

#: ../pro/openpgp-thunderbird.rst:25
msgid "Thunderbird 77 and older"
msgstr "雷鸟77及以上版本"

#: ../pro/openpgp-thunderbird.rst:28 ../nitrokey3/shared/nitropy.rst:9
msgid "Installation"
msgstr "安装"

#: ../pro/openpgp-thunderbird.rst:30
msgid ""
"Install the device driver as described `here <https://www.nitrokey.com/"
"documentation/installation>`_."
msgstr ""
"按照`的描述安装设备驱动程序 <https://www.nitrokey.com/documentation/"
"installation>`_。"

#: ../pro/openpgp-thunderbird.rst:33
msgid ""
"Install `Thunderbird <https://www.thunderbird.net/en-US/>`_ and the Add-on "
"`Enigmail <https://www.enigmail.net/index.php/en/>`_."
msgstr ""
"安装`Thunderbird <https://www.thunderbird.net/en-US/>`_和插件`Enigmail "
"<https://www.enigmail.net/index.php/en/>`_。"

#: ../pro/openpgp-thunderbird.rst:37
msgid "Changing PINs"
msgstr "更改密码"

#: ../pro/openpgp-thunderbird.rst:39
msgid "There are two PINs for the Nitrokey:"
msgstr "Nitrokey有两个密码。"

#: ../pro/openpgp-thunderbird.rst:41
msgid "The User PIN required for daily work"
msgstr "日常工作所需的用户密码"

#: ../pro/openpgp-thunderbird.rst:43
msgid ""
"The Admin PIN is required to change keys or other settings of the device. In "
"addition, the Nitrokey can be unlocked (for example, after 3 times incorrect "
"input of the User PIN) by means of the Admin PIN."
msgstr ""
"在改变钥匙或设备的其他设置时，需要有管理密码。此外，Nitrokey可以通过管理密码"
"来解锁（例如，在错误输入3次用户密码后）。"

#: ../pro/openpgp-thunderbird.rst:47
msgid ""
"After receiving the Nitrokey, you should immediately change the User PIN = "
"“123456” and Admin PIN = “12345678”."
msgstr ""
"收到硝基钥匙后，你应立即更改用户密码=\"123456 \"和管理员密码=\"12345678\"。"

#: ../pro/openpgp-thunderbird.rst:53
msgid "Insert the Nitrokey into a USB port on your computer."
msgstr "将Nitrokey插入电脑上的USB接口。"

#: ../pro/openpgp-thunderbird.rst:55
msgid "Start Thunderbird."
msgstr "启动Thunderbird。"

#: ../pro/openpgp-thunderbird.rst:57
msgid ""
"In Thunderbird, select as shown in the following picture. “OpenPGP” → "
"“Manage smart card”"
msgstr "在Thunderbird中，选择如下图所示。\"OpenPGP\" → \"管理智能卡\""

#: ../pro/openpgp-thunderbird.rst:65
msgid "In the “SmartCard Details” window, select “SmartCard → Change PIN”"
msgstr "在 \"智能卡详细信息 \"窗口，选择 \"智能卡→更改密码\""

#: ../pro/openpgp-thunderbird.rst:72
msgid ""
"Select “Change PIN”. This is your User PIN you need for daily work. Enter "
"the current PIN ( “123456” for delivery) and twice your new PIN. For this "
"PIN you can use the characters: a-z A-Z 0-9 / .;;:- !? () [] {}% +. The PIN "
"should be at least 6 characters long. Click “OK”."
msgstr ""
"选择 \"更改密码\"。这是你在日常工作中需要的用户密码。输入当前的PIN码"
"（\"123456 \"用于送货）和两次你的新PIN码。对于这个密码，你可以使用以下字符："
"a-z A-Z 0-9 / ...；；：- !?() [] {}% +.密码应该至少有6个字符。点击 \"确定\"。"

#: ../pro/openpgp-thunderbird.rst:83
msgid "Repeat the procedure for the Admin PIN. “SmartCard → Change PIN”"
msgstr "重复管理密码的程序。\"智能卡→更改密码\""

#: ../pro/openpgp-thunderbird.rst:90
msgid ""
"Select Change Admin PIN. This is your Admin PIN that you only rarely need. "
"Enter the current PIN ( “12345678” for delivery) and the new PIN twice. For "
"this PIN, you can use the characters: a-z A-Z 0-9 / .;;:- !? () [] {}% +. "
"The PIN should be at least 8 characters long. Click “OK”."
msgstr ""
"选择 \"更改管理员密码\"。这是你的管理密码，你很少需要。输入当前的PIN码"
"（\"12345678\"，用于交付）和新的PIN码两次。对于这个PIN，您可以使用以下字符："
"a-z A-Z 0-9 / ...；；：- !?() [] {}% +.该PIN码应至少有8个字符。点击 \"确定"
"\"。"

#: ../pro/openpgp-thunderbird.rst:101
msgid ""
"You have now changed the PINs and should continue to generate your personal "
"keys."
msgstr "你现在已经改变了PIN码，应该继续生成你的个人密钥。"

#: ../pro/openpgp-thunderbird.rst:104
msgid "Generation of Keys"
msgstr "钥匙的产生"

#: ../pro/openpgp-thunderbird.rst:106
msgid ""
"To encrypt data and e-mails, a key pair consisting of a public key and a "
"private key, must first be generated. The so-called public key is used to "
"**en**\\ crypt the data or e-mails. You can distribute this to all those "
"with whom you want to communicate securely (for example, publish it publicly "
"on your site). The so-called private key is used to **de**\\ crypt the data "
"or messages. This key should **NEVER** be made known! Usually, you also do "
"not have direct access to it (see below), since this is stored securely on "
"the Nitrokey. Use the Nitrokey to create both keys using the following "
"procedure:"
msgstr ""
"要对数据和电子邮件进行加密，首先必须生成一个由公钥和私钥组成的密钥对。所谓的"
"公钥是用来对数据或电子邮件进行***/加密的。你可以把它分发给所有你想与之进行安"
"全通信的人（例如，在你的网站上公开发布）。所谓的私钥是用来对数据或邮件进行"
"****加密的。这把钥匙应该***永远不被人知道!通常情况下，你也不能直接接触到它"
"（见下文），因为它被安全地储存在Nitrokey上。使用Nitrokey创建这两把钥匙的程序"
"如下。"

#: ../pro/openpgp-thunderbird.rst:109
msgid "Insert the Nitrokey into a USB port on your computer. StartThunderbird"
msgstr "将Nitrokey插入电脑上的USB接口。启动Thunderbird"

#: ../pro/openpgp-thunderbird.rst:112
msgid ""
"In Thunderbird, select as shown in the following picture „OpenPGP“ → „Manage "
"Smart Card“"
msgstr "在Thunderbird中，选择如下图所示的 \"OpenPGP\"→\"管理智能卡\""

#: ../pro/openpgp-thunderbird.rst:115
msgid "In the “SmartCard details” window, select “SmartCard” → “Generate key”"
msgstr "在 \"智能卡详情 \"窗口，选择 \"智能卡\"→\"生成密钥\""

#: ../pro/openpgp-thunderbird.rst:118
msgid ""
"In the following window, select your e-mail address for which you want to "
"generate keys. Verify that the e-mail address specified in “User ID” is "
"correct. You can also specify whether a private key backup copy should be "
"stored on your computer."
msgstr ""
"在下面的窗口中，选择你的电子邮件地址，你想为其生成密钥。确认在 \"用户ID \"中"
"指定的电子邮件地址是正确的。你还可以指定是否要在你的电脑上存储一个私钥备份副"
"本。"

#: ../pro/openpgp-thunderbird.rst:128
msgid ""
"If you do not create a backup copy, you have no chance to get your encrypted "
"data if the Nitrokey is lost or damaged!"
msgstr ""
"如果你不创建一个备份，在Nitrokey丢失或损坏的情况下，你就没有机会得到你的加密"
"数据!"

#: ../pro/openpgp-thunderbird.rst:136
msgid ""
"It is recommended to store this safety device. Select “Save key copy of the "
"key outside the Smard Card”. Then enter your personal password for the "
"backup copy under “Passphrase”. This password should not be less than 8 "
"characters, and should contain both uppercase and lowercase letters and "
"numbers. You can also use a long sentence, but avoid known prose or lyric. "
"Also, no name or known term should be used."
msgstr ""
"建议储存这个安全装置。选择 \"在Smard卡外保存钥匙副本\"。然后在 \"Passphrase "
"\"下输入备份副本的个人密码。这个密码不应少于8个字符，并应包含大写和小写字母和"
"数字。你也可以使用一个长句子，但要避免已知的散文或抒情诗。另外，不应使用姓名"
"或已知术语。"

#: ../pro/openpgp-thunderbird.rst:144
msgid ""
"**Allowed characters**: a-z A-Z 0-9 /.,;:-!?( )%+ (no umlauts ä,ü,ö,Ä,Ü,Ö or "
"ß)"
msgstr ""
"**允许的字符**: a-z A-Z 0-9 /。,;:-!( )%+ (没有 umlauts ä、ü、ö、Ä、Ü、Ö 或 "
"ß)"

#: ../pro/openpgp-thunderbird.rst:146
msgid ""
"**Poor Password**: qwerty123, ILoveSusi3, Password, If you can dream it, you "
"can do it."
msgstr ""
"**可怜的密码**: qwerty123, ILoveSusi3, 密码, 如果你能梦想，你就能做到。"

#: ../pro/openpgp-thunderbird.rst:148
#, python-format
msgid ""
"**Strong Password**: g(Ak?2Pn7Yn or Ki.stg2bLqzp%d or A dog with greeen Earz "
"and fife legs (spelling errors increase security)"
msgstr ""
"**强密码**：g(Ak?2Pn7Yn或Ki.stg2bLqzp%d或一只有格里恩-厄兹和法夫腿的狗（拼写"
"错误会增加安全性）。"

#: ../pro/openpgp-thunderbird.rst:150
msgid ""
"You do **not** need this password for daily work. It is only necessary for "
"the restoration of the secret key, e.g. if you have lost the Nitrokey. "
"Therefore, keep the password in a safe place."
msgstr ""
"在日常工作中，你不**需要这个密码。只有在恢复密匙时才需要，例如，如果你丢失了"
"Nitrokey。因此，请将该密码保存在安全的地方。"

#: ../pro/openpgp-thunderbird.rst:152
msgid ""
"You can also specify whether and when the key should be automatically "
"invalid. This means, from this point onwards, no more e-mails can be "
"encrypted with this key and you have to create a new key pair."
msgstr ""
"你还可以指定该密钥是否以及何时自动失效。这意味着，从这时起，就不能再用这个密"
"钥加密电子邮件了，你必须创建一个新的密钥对。"

#: ../pro/openpgp-thunderbird.rst:154
msgid "Finally, click on “Generate key pair”."
msgstr "最后，点击 \"生成密钥对\"。"

#: ../pro/openpgp-thunderbird.rst:161
msgid "You are now asked if the key should be generated. Confirm with “Yes”."
msgstr "现在会问你是否应该生成密钥。请确认 \"是\"。"

#: ../pro/openpgp-thunderbird.rst:168
msgid ""
"In order for the program to write your keys to the stick, you must enter the "
"admin PIN and the user PIN (changed above)."
msgstr ""
"为了让程序把你的钥匙写到记忆棒上，你必须输入管理密码和用户密码（上面已经改"
"变）。"

#: ../pro/openpgp-thunderbird.rst:176
msgid ""
"The key generation can take a few minutes. Do not terminate the program "
"prematurely!"
msgstr "钥匙的生成可能需要几分钟的时间。不要过早地终止该程序!"

#: ../pro/openpgp-thunderbird.rst:178
msgid ""
"When the key generation is complete, you receive the following message. A "
"certificate is now created that allows you to invalidate your key in an "
"emergency. This certificate is automatically saved with your private key. "
"This should be printed out or backed up on at least one other external "
"medium so that you can revoke the validity of the keys if your keys and "
"backups are lost. Click “Yes”"
msgstr ""
"当密钥生成完成后，你会收到以下信息。现在已经创建了一个证书，允许你在紧急情况"
"下使你的钥匙失效。该证书会自动与你的私钥一起保存。这应该被打印出来或至少备份"
"到另一个外部媒介上，这样，如果你的钥匙和备份丢失，你就可以撤销钥匙的有效性。"
"点击 \"是\""

#: ../pro/openpgp-thunderbird.rst:185
msgid ""
"You can now select the directory in which the backup copy is stored. This "
"copy is encrypted with your password entered above. This means that no one "
"can read or use the keys without your password. Do not give your password to "
"anyone. This file with the name of your e-mail address and the suffix “.asc” "
"should be backed up on another medium. After selecting the directory, click "
"“Save”."
msgstr ""
"现在你可以选择存储备份副本的目录。这个副本是用你上面输入的密码加密的。这意味"
"着，没有你的密码，任何人都不能阅读或使用这些钥匙。不要把你的密码给任何人。这"
"个带有你的电子邮件地址名称和后缀\".asc \"的文件应该被备份在另一个介质上。选择"
"目录后，点击 \"保存\"。"

#: ../pro/openpgp-thunderbird.rst:192
msgid ""
"Here you must again specify your user PIN or passphrase. Then click “OK”"
msgstr "在这里你必须再次指定你的用户密码或口令。然后点击 \"确定\""

#: ../pro/openpgp-thunderbird.rst:200
msgid ""
"You will now see the message that the certificate was created and saved. "
"Click “OK”"
msgstr "现在你会看到证书已创建并保存的信息。点击 \"确定\""

#: ../pro/openpgp-thunderbird.rst:208
msgid ""
"Key generation is now complete. You can now exit the program (File - Close)."
msgstr "钥匙生成现在已经完成。你现在可以退出程序（文件-关闭）。"

#: ../pro/openpgp-thunderbird.rst:216
msgid ""
"Your Nitrokey is personalized and ready to use. **Have fun with the secure "
"email encryption!**"
msgstr ""
"你的Nitrokey是个性化的，可以随时使用。**在安全的电子邮件加密中享受乐趣！**。"

#: ../pro/putty.rst:2
msgid "PuTTY"
msgstr "浦发银行"

#: ../pro/putty.rst:8
msgid ""
"This mini-howto assumes that the Nitrokey has been initialized and contains "
"cryptographic keys."
msgstr "本小手册假设Nitrokey已经被初始化并包含了加密密钥。"

#: ../pro/putty.rst:10
msgid "**Required on the client side:**"
msgstr "**在客户端需要：**。"

#: ../pro/putty.rst:12
msgid ""
"`PuTTY <https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html>`_ or "
"a variant of it"
msgstr ""
"`PuTTY <https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html>`_或者"
"它的一个变体"

#: ../pro/putty.rst:15
msgid ""
"`GPG4Win <https://gpg4win.org/>`_ or `pageant.exe <https://smartcard-auth.de/"
"download-de.html>`_ with Smartcard support from Dr. Peter Koch"
msgstr ""
"`GPG4Win <https://gpg4win.org/>`_或 `pageant.exe <https://smartcard-auth.de/"
"download-de.html>`_，Peter Koch博士提供智能卡支持。"

#: ../pro/putty.rst:19
msgid ""
"Optional: `OpenPGP Minidriver <https://wald.intevation.org/frs/?"
"group_id=49&release_id=353>`_"
msgstr ""
"可选的。`OpenPGP Minidriver <https://wald.intevation.org/frs/?"
"group_id=49&release_id=353>`_"

#: ../pro/putty.rst:22
msgid "**1) Pageant**"
msgstr "**1)选美**"

#: ../pro/putty.rst:24
msgid ""
"start pageant.exe. That this is running is shown in the notification area of "
"the taskbar."
msgstr "启动pageant.exe。该程序正在运行，并显示在任务栏的通知区域。"

#: ../pro/putty.rst:31
msgid "A double click opens the view of the current keys."
msgstr "双击可以打开当前按键的视图。"

#: ../pro/putty.rst:38
msgid "After inserting the key it looks like this."
msgstr "插入钥匙后，它看起来像这样。"

#: ../pro/putty.rst:45
msgid ""
"If nothing is displayed here, pageant may have to be restarted or another "
"application is already using the stick. A possibly running pgp-agent must be "
"terminated! Now we only need the public key we want to store in the ssh "
"configuration of the server. Therefore we press CTRL while inserting the "
"stick…"
msgstr ""
"如果这里没有显示，pageant可能需要重新启动，或者其他应用程序已经在使用这个棍"
"子。一个可能正在运行的pgp-agent必须被终止!现在我们只需要将公钥储存在服务器的"
"ssh配置中。因此，我们在插入棍子的同时按CTRL键…"

#: ../pro/putty.rst:52
msgid "and then view the Pageant-PublicKeys.txt."
msgstr "然后查看Pageant-PublicKeys.txt。"

#: ../pro/putty.rst:59
msgid ""
"I searched for the ssh-rsa entry of the auth key and added the line on the "
"server to the authorized_keys."
msgstr ""
"我搜索了auth钥匙的ssh-rsa条目，并在服务器上把这一行添加到authorized_keys中。"

#: ../pro/putty.rst:61
msgid "**2) PuTTY**"
msgstr "**2)PuTTY**"

#: ../pro/putty.rst:63
msgid "There is surprisingly little to say about PuTTY itself."
msgstr "关于PuTTY本身，令人惊讶的是没有什么可说的。"

#: ../pro/putty.rst:70
msgid ""
"“Attempt authentication using Pageant” must be set, which is the default "
"anyway."
msgstr "必须设置 \"尝试使用Pageant认证\"，反正这是默认的。"

#: ../pro/putty.rst:72
msgid ""
"That’s it, as soon as you connect to the server while pageant is running and "
"you have the keys, you will be asked for the password of the Crypto-Stick "
"and can log in."
msgstr ""
"就这样，只要你在选美比赛进行时连接到服务器，并且你有钥匙，你就会被要求提供"
"Crypto-Stick的密码并可以登录。"

#: ../pro/putty.rst:74
msgid "**3) openpgp-minidriver (optional)**"
msgstr "**3) openpgp-minidriver（可选）**"

#: ../pro/putty.rst:76
msgid ""
"If you are annoyed that Windows reports every time you plug in the stick "
"that no driver could be found for “Smartcard”, you can get rid of it. You "
"just have to install the x86 or x64 version of the above mentioned driver "
"and the smartcard looks like this:"
msgstr ""
"如果你对Windows在你每次插入记忆棒时报告说找不到 \"智能卡 \"的驱动程序感到恼"
"火，你可以摆脱它。你只需安装上述驱动程序的x86或x64版本，智能卡就会变成这样。"

#: ../start/setting-kdf-do.rst:2
msgid "Setting KDF-DO"
msgstr "设置KDF-DO"

#: ../start/setting-kdf-do.rst:8
msgid ""
"At the moment it is only possible to set the KDF-DO, when the Nitrokey Start "
"is empty (just after a factory reset)."
msgstr ""
"目前，只有在Nitrokey Start为空的情况下，才有可能设置KDF-DO（刚刚在出厂前复"
"位）。"

#: ../start/setting-kdf-do.rst:11
msgid "Overview"
msgstr "概述"

#: ../start/setting-kdf-do.rst:13
msgid "Run factory reset"
msgstr "运行工厂重置"

#: ../start/setting-kdf-do.rst:14
msgid "Set up KDF-DO using GnuPG"
msgstr "使用GnuPG设置KDF-DO"

#: ../start/setting-kdf-do.rst:15
msgid ""
"Change Admin PIN (optional; without keys only Admin PIN change is possible)"
msgstr "更改管理员PIN码（可选；没有钥匙的话，只能更改管理员PIN码）。"

#: ../start/setting-kdf-do.rst:16
msgid "Import / generate keys"
msgstr "导入/生成密钥"

#: ../start/setting-kdf-do.rst:17 ../pro/change-pins.rst:2
msgid "Change User and Admin PIN"
msgstr "更改用户和管理员密码"

#: ../start/setting-kdf-do.rst:21
msgid "Setting KDF-DO using GnuPG"
msgstr "使用GnuPG设置KDF-DO"

#: ../start/setting-kdf-do.rst:23
msgid "Run `gpg2 --card-edit`"
msgstr "运行`gpg2 --card-edit`。"

#: ../start/setting-kdf-do.rst:24
msgid "`$ admin`"
msgstr "`$ admin `"

#: ../start/setting-kdf-do.rst:25
msgid "`$ kdf-setup`"
msgstr "`$ kdf-setup`。"

#: ../start/setting-kdf-do.rst:26
msgid "Enter Admin PIN"
msgstr "输入管理密码"

#: ../start/setting-kdf-do.rst:27
msgid ""
"Verify current state state by looking at the card details (`gpg2 --card-"
"status`), where `KDF setting ......: on` should be visible, e.g.:"
msgstr ""
"通过查看卡片的详细信息（`gpg2 --card-status`）验证当前的状态，其中`KDF设"
"置......: on`应该是可见的，例如。"

#: ../start/setting-kdf-do.rst:39
msgid "Tested with"
msgstr "测试对象为"

#: ../start/setting-kdf-do.rst:41
msgid "gpg (GnuPG) 2.2.20 / 2.2.25"
msgstr "gpg (GnuPG) 2.2.20 / 2.2.25"

#: ../start/setting-kdf-do.rst:42
msgid "Nitrokey Start RTM.10"
msgstr "Nitrokey Start RTM.10"

#: ../start/setting-kdf-do.rst:43
msgid "Curve 25519 keys"
msgstr "曲线25519键"

#: ../pro/smime.rst:2
msgid "S/MIME Email Encryption"
msgstr "S/MIME电子邮件加密"

#: ../pro/smime.rst:17
msgid ""
"If you are in doubt which one to choose, you should use OpenPGP, see `here "
"<openpgp.html>`_. This page describes the usage of S/MIME email encryption."
msgstr ""
"如果你对选择哪一种有疑问，你应该使用OpenPGP，见`这里<openpgp.html>`_。本页介"
"绍了S/MIME电子邮件加密的用法。"

#: ../pro/smime.rst:19
msgid ""
"You need to purchase a S/MIME certificate or may already got one by your "
"company. Furthermore, you need to install `OpenSC <https://github.com/OpenSC/"
"OpenSC/wiki>`_ on your System. While GNU/Linux users usually can install "
"OpenSC over the package manager (e.g. ``sudo apt install opensc`` on "
"Ubuntu), macOS and Windows users can download the installation files from "
"the `OpenSC <https://github.com/OpenSC/OpenSC/wiki>`_ page."
msgstr ""
"你需要购买一个S/MIME证书，或者你的公司可能已经有了一个。此外，你需要在你的系"
"统上安装`OpenSC <https://github.com/OpenSC/OpenSC/wiki>`_。虽然GNU/Linux用户"
"通常可以通过软件包管理器来安装OpenSC（例如：``sudo apt install opensc``在"
"Ubuntu上），但MacOS和Windows用户可以从`OpenSC<https://github.com/OpenSC/"
"OpenSC/wiki>`_页面下载安装文件。"

#: ../pro/smime-outlook.rst:17 ../pro/smime-thunderbird.rst:17
#: ../pro/smime.rst:22
msgid ""
"Windows users with 64-bit system (standard) need to install both, the 32-bit "
"and the 64-bit version of OpenSC!"
msgstr "使用64位系统（标准）的Windows用户需要同时安装32位和64位版本的OpenSC!"

#: ../pro/smime.rst:25
msgid "Import Existing Key and Certificate"
msgstr "导入现有的密钥和证书"

#: ../pro/smime.rst:27
msgid ""
"The following instructions are based on the `wiki of OpenSC <https://github."
"com/OpenSC/OpenSC/wiki/OpenPGP-card>`_. We will assume, that you already got "
"a key-certificate pair as a .p12 file. Please have a look at the wiki page, "
"if you got a separate key and certificate file."
msgstr ""
"下面的说明是基于OpenSC的`wiki <https://github.com/OpenSC/OpenSC/wiki/OpenPGP-"
"card>`_。我们将假设你已经得到了一个作为.p12文件的密钥-证书对。如果你有一个单"
"独的密钥和证书文件，请看一下wiki页面。"

#: ../pro/smime.rst:31
msgid ""
"To make these commands as simple as possible, the .p12 file needs to be in "
"your home folder. On Windows this is usually ‘C:\\Users\\yourusername’ and "
"on macOS and GNU/Linux system it will be ‘/home/yourusername’. If you do not "
"store the .p12 file there, you have to adapt the path in the commands below. "
"Please plug in the Nitrokey before submitting the commands."
msgstr ""
"为了使这些命令尽可能简单，.p12文件需要放在你的主文件夹中。在Windows系统中，这"
"通常是'C:\\Users\\yusername'，在macOS和GNU/Linux系统中，它将是'/home/"
"yourusername'。如果你没有把.p12文件存放在那里，你必须调整下面的命令中的路径。"
"在提交命令之前，请插入Nitrokey。"

#: ../pro/smime.rst:33
msgid ""
"Assuming that your key-certificate file reads ‘myprivate.p12’ the commands "
"for Windows looks like this:"
msgstr "假设你的密钥证书文件是 \"myprivate.p12\"，Windows的命令看起来像这样。"

#: ../pro/smime.rst:40
msgid "and on macOS and GNU/Linux it will be"
msgstr "而在macOS和GNU/Linux上，它将是"

#: ../pro/smime.rst:47
msgid ""
"The two commands copy the key-certificate pair to the slot 2 (needed for "
"decrypting emails) and slot 3 (needed for signing). The output looks on both "
"systems something like this:"
msgstr ""
"这两条命令将密钥-证书对复制到槽2（解密邮件需要）和槽3（签名需要）。在两个系统"
"上的输出看起来都是这样的。"

#: ../pro/smime.rst:54
msgid ""
"Please note that there will be error messages that can be safely ignored "
"(see output example above). You now have the key-certificate pair loaded on "
"the Nitrokey."
msgstr ""
"请注意，会有一些可以安全忽略的错误信息（见上面的输出例子）。现在你已经在"
"Nitrokey上加载了钥匙-证书对。"

#: ../pro/smime.rst:61
msgid "for using `S/MIME encryption on Thunderbird <smime-thunderbird.html>`_"
msgstr "用于在Thunderbird上使用`S/MIME加密<smime-thunderbird.html>`_。"

#: ../pro/smime.rst:64
msgid "for using `S/MIME encryption on Outlook <smime-outlook.html>`_"
msgstr "用于在Outlook上使用`S/MIME加密<smime-outlook.html>`_。"

#: ../pro/smime.rst:74
msgid ""
"On Windows: Did you install **both**, the 32-bit and the 64-bit version of "
"OpenSC?"
msgstr "在Windows上。你是否同时安装了***，32位和64位版本的OpenSC？"

#: ../pro/smime.rst:77
msgid ""
"Nitrokey Storage 2: You need to install OpenSC in version 0.18 or higher. "
"You can find the files on the `OpenSC website <https://github.com/OpenSC/"
"OpenSC/releases>`_ for Windows and macOS user or `here <https://github.com/"
"Nitrokey/opensc-build>`_ for Debian/Ubuntu users."
msgstr ""
"Nitrokey Storage 2: 你需要安装0.18或更高版本的OpenSC。你可以在`OpenSC网站"
"<https://github.com/OpenSC/OpenSC/releases>`_为Windows和macOS用户找到这些文"
"件，或者`这里<https://github.com/Nitrokey/opensc-build>`_为Debian/Ubuntu用"
"户。"

#: ../pro/smime-outlook.rst:2
msgid "S/MIME Email Encryption with Outlook"
msgstr "使用Outlook的S/MIME电子邮件加密"

#: ../pro/smime-outlook.rst:11
msgid ""
"If you do not have a S/MIME key-certificate pair installed on your Nitrokey "
"yet, please look at `this page <smime.html>`_ first."
msgstr ""
"如果你的Nitrokey上还没有安装S/MIME密钥-证书对，请先看`这个页面<smime."
"html>`_。"

#: ../pro/smime-outlook.rst:13
msgid ""
"You need to have OpenSC installed on your System. Please have a look at the "
"`wiki page of the OpenSC project <https://github.com/OpenSC/OpenSC/wiki>`_."
msgstr ""
"你需要在你的系统上安装OpenSC。请看看OpenSC项目的`wiki页面<https://github.com/"
"OpenSC/OpenSC/wiki>`_。"

#: ../pro/smime-outlook.rst:21
msgid "Settings in Outlook"
msgstr "Outlook中的设置"

#: ../pro/smime-outlook.rst:23
msgid ""
"Before you can use the Nitrokey in Outlook you have to activate S/MIME "
"encryption. You can achieve this by clicking on to ‘Start’ -> ‘Options’ and "
"clicking on ‘Trust Center’ in the options window. In section ‘Email "
"Security’ you can choose your S/MIME identity. Your certificate should "
"already be recognized by Outlook."
msgstr ""
"在Outlook中使用Nitrokey之前，你必须先激活S/MIME加密功能。你可以通过点击'开"
"始'->'选项'并在选项窗口中点击'信任中心'来实现这一目标。在'电子邮件安全'部分，"
"你可以选择你的S/MIME身份。你的证书应该已经被Outlook所识别。"

#: ../pro/smime-outlook.rst:38
msgid ""
"When composing a mail you can now choose to encrypt and sign the message in "
"the ‘Options’ ribbon of the compose window."
msgstr ""
"在撰写邮件时，你现在可以在撰写窗口的 \"选项 \"功能区选择对邮件进行加密和签"
"名。"

#: ../pro/smime-outlook.rst:45
msgid ""
"Outlook will only encrypt message to mail addresses which are saved in your "
"address book. So make sure, that the persons you want to write an encrypted "
"mail to have an entry in Outlook’s contacts. You can ask the person to write "
"you a signed mail, so that you can import the certificate information."
msgstr ""
"Outlook只对保存在通讯录中的邮件地址进行加密。因此，请确保你想写加密邮件的人在"
"Outlook的联系人中拥有一个条目。你可以要求对方给你写一封签名邮件，这样你就可以"
"导入证书信息。"

#: ../pro/smime-outlook.rst:47
msgid ""
"Depending on your certificate or the certificate of your partners you may "
"have to import a so-called root certificate. This is the certificate of the "
"party which issued the certificate you or your partner uses. You should "
"usually got informed if this is necessary."
msgstr ""
"根据你的证书或你的合作伙伴的证书，你可能必须导入一个所谓的根证书。这是签发你"
"或你的伙伴使用的证书的一方的证书。如果有必要，你通常应该得到通知。"

#: ../pro/smime-thunderbird.rst:2
msgid "S/MIME Email Encryption with Thunderbird"
msgstr "使用雷鸟的S/MIME电子邮件加密"

#: ../pro/smime-thunderbird.rst:11
msgid ""
"If you do not have a S/MIME key-certificate pair installed on your Nitrokey "
"yet or if you did not installed OpenSC, please look at `this page <smime."
"html>`_ first."
msgstr ""
"如果你的Nitrokey上还没有安装S/MIME密钥-证书对，或者你没有安装OpenSC，请先看`"
"这个页面<smime.html>`_。"

#: ../pro/smime-thunderbird.rst:13
msgid ""
"You need to have `OpenSC installed <https://github.com/OpenSC/OpenSC/wiki>`_ "
"on your System. While GNU/Linux users usually can install OpenSC over the "
"package manager (e.g. ``sudo apt update && sudo apt install opensc`` on "
"Ubuntu), macOS and Windows users can download the installation files from "
"OpenSC directly."
msgstr ""
"你需要在你的系统上安装`OpenSC <https://github.com/OpenSC/OpenSC/wiki>`_。虽然"
"GNU/Linux用户通常可以通过软件包管理器来安装OpenSC（例如：``sudo apt update "
"&& sudo apt install opensc``在Ubuntu上），但macOS和Windows用户可以直接从"
"OpenSC下载安装文件。"

#: ../pro/smime-thunderbird.rst:21
msgid "Settings in Thunderbird"
msgstr "雷鸟中的设置"

#: ../pro/smime-thunderbird.rst:23
msgid ""
"Before you can use the Nitrokey in Thunderbird you have to activate S/MIME "
"encryption in the account settings. You can achieve this by clicking on the "
"menu and go to ‘Preferences’ -> ‘Account Settings’ and clicking on "
"‘Security’ in the account settings window."
msgstr ""
"在雷鸟中使用Nitrokey之前，您必须在账户设置中激活S/MIME加密。你可以通过点击菜"
"单，进入 \"偏好\"-> \"账户设置\"，并在账户设置窗口中点击 \"安全 \"来实现。"

#: ../pro/smime-thunderbird.rst:30
msgid ""
"Click on “Security Devices” to import the right PCKS11 module. Click on "
"“Load” on the right-hand side. Now give the Module a name (like “OpenSC "
"Module”) and click on “Browse” to choose the location of the Module (see "
"below)."
msgstr ""
"点击 \"安全设备\"，导入正确的PCKS11模块。点击右侧的 \"加载\"。现在给模块起个"
"名字（比如 \"OpenSC模块\"），并点击 \"浏览 \"选择模块的位置（见下文）。"

#: ../pro/smime-thunderbird.rst:37
msgid ""
"On Windows the right file lays under “C:\\Windows\\System32\\opensc-pkcs11."
"dll”. On macOS and GNU/Linux the file should be in “/lib/pkcs11/opensc-"
"pkcs11.so” or “/usr/lib/pkcs11/opensc-pkcs11.so” or alike. Press “OK” twice "
"and you are back in security section of the account settings. Now you can "
"actually choose a certificate on the upper part of the window. You should "
"get asked for a PIN to unlock your Nitrokey. Please type in your User PIN."
msgstr ""
"在 Windows 上，正确的文件位于 \"C:\\Windows\\System32\\opensc-pkcs11.dll "
"\"下。在MacOS和GNU/Linux上，该文件应该在\"/lib/pkcs11/opensc-pkcs11.so \"或"
"\"/usr/lib/pkcs11/opensc-pkcs11.so \"或类似的地方。按两次 \"确定\"，你就回到"
"了账户设置的安全部分。现在你可以在窗口的上部选择一个证书。你应该被要求输入密"
"码以解锁你的Nitrokey。请键入你的用户密码。"

#: ../pro/smime-thunderbird.rst:47
msgid ""
"When composing an email you can now choose to encrypt and sign the message."
msgstr "在撰写电子邮件时，你现在可以选择对邮件进行加密和签名。"

#: ../start/mac/index.rst:2
msgid "Nitrokey Start, Mac"
msgstr "Nitrokey Start, Mac"

#: ../start/mac/index.rst:13
msgid "Install `GnuPG 2.1 <https://gpgtools.org/>`_ or higher."
msgstr "安装`GnuPG 2.1 <https://gpgtools.org/>`_或者更高。"

#: ../start/mac/index.rst:14 ../start/windows/index.rst:14
#: ../storage/windows/index.rst:13
msgid ""
"Connect your Nitrokey to your computer and confirm all dialogs so that the "
"USB smart card device driver gets installed almost automatically."
msgstr ""
"将你的Nitrokey连接到电脑上，并确认所有的对话框，这样USB智能卡设备的驱动程序就"
"会几乎自动安装。"

#: ../start/mac/product_platform_heading.rst:3
msgid "(Nitrokey Start - macOS)"
msgstr "(Nitrokey Start - macOS)"

#: ../start/windows/index.rst:2
msgid "Nitrokey Start, Windows"
msgstr "Nitrokey Start, Windows"

#: ../start/windows/index.rst:13
msgid "Install `Gpg4win <https://www.gpg4win.org/>`_ on your Computer."
msgstr "在你的电脑上安装`Gpg4win <https://www.gpg4win.org/>`_。"

#: ../start/windows/index.rst:19 ../storage/windows/index.rst:17
msgid ""
"Windows may fail to install an additional device driver for the smart card. "
"Its safe to ignore this warning."
msgstr ""
"Windows可能无法为智能卡安装一个额外的设备驱动程序。忽略这个警告是安全的。"

#: ../start/windows/index.rst:24
msgid ""
"It is indeed necessary to first import or create new keys and change the "
"PINs afterwards. Otherwise changing User PIN will fail! Furthermore "
"overriding keys results in PIN reset (default values),  please keep this in "
"mind!"
msgstr ""
"确实有必要先导入或创建新的密钥，然后再更改PIN。否则更改用户PIN码将会失败!此"
"外，覆盖钥匙会导致PIN码重置（默认值），请牢记这一点。"

#: ../start/windows/index.rst:30
msgid ""
"Use ‘gpg –card-edit’ -> ‘admin’ -> ‘passwd’ to achieve this (for Admin PIN "
"case). - Please be careful to change Admin PIN first and User PIN second! "
"Otherwise the admin-less mode got activated, see `this instructions <https://"
"www.fsij.org/doc-gnuk/gnuk-passphrase-setting.html#>`_ for further "
"information."
msgstr ""
"使用'gpg -card-edit' -> 'admin' -> 'passwd'来实现这一目标（针对管理员PIN码的"
"情况）。- 请注意先改管理员密码，后改用户密码!否则，无管理模式就会被激活，详情"
"请见`本说明<https://www.fsij.org/doc-gnuk/gnuk-passphrase-setting.html#>`_。"

#: ../start/windows/index.rst:31
msgid ""
"Optionally Reset code can be set up (`guide <https://www.fsij.org/doc-gnuk/"
"gnuk-passphrase-setting.html>`_). The minimum length accepted is 8 "
"characters, however it should be as long as User PIN."
msgstr ""
"可选择设置重置代码（`指南 <https://www.fsij.org/doc-gnuk/gnuk-passphrase-"
"setting.html>`_）。接受的最小长度是8个字符，但它应该和用户PIN码一样长。"

#: ../start/windows/index.rst:34
msgid ""
"**Firmware version 1.2.5 or below: In case you forget a PIN or enter it "
"wrongly three times you need the reset code to unblock the PIN. Otherwise "
"the device wouldn’t be usable anymore! Therefore please** `set the reset "
"code <https://www.fsij.org/doc-gnuk/gnuk-passphrase-setting.html>`_ **as "
"well when initialising the key!**"
msgstr ""
"**固件版本1.2.5或以下。如果你忘记了PIN码或输入错误的PIN码三次，你需要重置码来"
"解除PIN码的限制。否则设备将无法使用因此，请** `设置重置代码 <https://www."
"fsij.org/doc-gnuk/gnuk-passphrase-setting.html>`_ **在初始化密钥时也要设置重"
"置代码！**"

#: ../start/windows/product_platform_heading.rst:3
msgid "(Nitrokey Start - Windows)"
msgstr "(Nitrokey Start - Windows)"

#: ../storage/factory-reset.rst:8
msgid "There are two types of factory resets for Nitrokey Storage devices:"
msgstr "Nitrokey存储设备有两种类型的出厂重置。"

#: ../storage/factory-reset.rst:10 ../pro/factory-reset.rst:10
msgid ""
"a factory reset of the OpenPGP smart card, for example using ``gpg --card-"
"edit``, followed by ``admin`` and finally: ``factory-reset``"
msgstr ""
"对OpenPGP智能卡进行出厂重置，例如使用``gpg --card-edit`，然后是``admin```，最"
"后。``factory-reset``。"

#: ../storage/factory-reset.rst:12 ../pro/factory-reset.rst:12
msgid "a factory reset of the entire Nitrokey device using the Nitrokey App."
msgstr "使用Nitrokey应用程序对整个Nitrokey设备进行出厂重置。"

#: ../storage/factory-reset.rst:14
msgid ""
"Also, it is possible to generate a new AES key that is used to encrypt the "
"Password Safe and the Encrypted Volume without performing a factory reset."
msgstr ""
"此外，还可以生成一个新的AES密钥，用于加密密码保险箱和加密卷，而无需执行出厂重"
"置。"

#: ../storage/factory-reset.rst:19 ../pro/factory-reset.rst:19
msgid ""
"The Nitrokey App always generates a new AES key after performing a factory "
"reset."
msgstr "Nitrokey应用程序在执行出厂重置后总是会生成一个新的AES密钥。"

#: ../storage/factory-reset.rst:22 ../pro/factory-reset.rst:22
msgid ""
"The following table describes the differences between these three operations:"
msgstr "下表描述了这三种操作之间的区别。"

#: ../storage/factory-reset.rst:25 ../pro/factory-reset.rst:25
msgid "Property"
msgstr "财产"

#: ../storage/factory-reset.rst:25 ../pro/factory-reset.rst:25
msgid "OpenPGP factory reset"
msgstr "OpenPGP工厂重置"

#: ../storage/factory-reset.rst:25 ../pro/factory-reset.rst:25
msgid "Nitrokey factory reset"
msgstr "硝基钥匙工厂重置"

#: ../storage/factory-reset.rst:25 ../pro/factory-reset.rst:25
msgid "Generate AES key"
msgstr "生成AES密钥"

#: ../storage/factory-reset.rst:27 ../pro/factory-reset.rst:27
msgid "Requires admin PIN"
msgstr "需要管理员密码"

#: ../storage/factory-reset.rst:27 ../storage/factory-reset.rst:28
#: ../storage/factory-reset.rst:30 ../pro/factory-reset.rst:27
#: ../pro/factory-reset.rst:28 ../pro/factory-reset.rst:30
msgid "no"
msgstr "不"

#: ../storage/factory-reset.rst:27 ../storage/factory-reset.rst:28
#: ../storage/factory-reset.rst:29 ../storage/factory-reset.rst:30
#: ../pro/factory-reset.rst:27 ../pro/factory-reset.rst:28
#: ../pro/factory-reset.rst:29 ../pro/factory-reset.rst:30
msgid "yes"
msgstr "是"

#: ../storage/factory-reset.rst:28 ../pro/factory-reset.rst:28
msgid "Destroys OpenPGP keys"
msgstr "销毁OpenPGP密钥"

#: ../storage/factory-reset.rst:29 ../pro/factory-reset.rst:29
msgid "Destroys Password Safe"
msgstr "破坏密码保险箱"

#: ../storage/factory-reset.rst:29 ../storage/factory-reset.rst:31
#: ../pro/factory-reset.rst:29
msgid "yes [1]_"
msgstr "是[1]_"

#: ../storage/factory-reset.rst:30 ../pro/factory-reset.rst:30
msgid "Destroys One-Time Passwords"
msgstr "破坏一次性密码"

#: ../storage/factory-reset.rst:30
msgid "yes [2]_"
msgstr "是[1]_"

#: ../storage/factory-reset.rst:31
msgid "Destroys Encrypted Volume"
msgstr "销毁加密卷"

#: ../storage/factory-reset.rst:34 ../pro/factory-reset.rst:33
msgid "Clears the encryption key without overwriting the encrypted data."
msgstr "清除加密密钥而不覆盖加密数据。"

#: ../storage/factory-reset.rst:35
msgid "This is expected to change in new Nitrokey Storage firmware versions."
msgstr "预计这将在新的Nitrokey存储固件版本中发生变化。"

#: ../storage/faq.rst:2
msgid "Nitrokey Storage FAQ"
msgstr "尼特罗基存储常见问题"

#: ../storage/faq.rst:4
msgid ""
"As the Nitrokey Storage 2 is essentially a Nitrokey Pro 2 including a non-"
"volatile (encrypted) storage, the :doc:`Nitrokey Pro 2 FAQ <../pro/faq>` "
"also partly applies."
msgstr ""
"由于Nitrokey Storage 2本质上是一个包括非易失性（加密）存储的Nitrokey Pro 2，"
"所以:doc:`Nitrokey Pro 2 FAQ <./pro/faq>`也部分适用。"

#: ../storage/faq.rst:12
msgid "**Firmware Password**: \"12345678\""
msgstr "**固件密码**：\"12345678\"。"

#: ../storage/faq.rst:19 ../shared-faqs/generic.rst:33
msgid ""
"Nitrokey Storage can store and encrypt 8, 32, or 64 GB of data (depending on "
"particular model)."
msgstr "Nitrokey Storage可以存储和加密8、32或64GB的数据（取决于特定的型号）。"

#: ../storage/faq.rst:26
msgid ""
"**Q:** Why can't I access the encrypted storage on a new Nitrokey Storage?"
msgstr "**问：**为什么我不能访问新的Nitrokey存储器上的加密存储？"

#: ../storage/faq.rst:24
msgid ""
"On a new Nitrokey Storage device, before you can access the encrypted volume "
"make sure you first \"Destroy encrypted data\" inside the Nitrokey App."
msgstr ""
"在一个新的Nitrokey存储设备上，在访问加密卷之前，请确保你首先在Nitrokey应用程"
"序中\"销毁加密的数据\"。"

#: ../storage/faq.rst:34
msgid ""
"**Q:** Why does my Nitrokey Storage hang when switching between nitrokey-app "
"and GnuPG?"
msgstr ""
"**问：**为什么在nitrokey-app和GnuPG之间切换时，我的Nitrokey存储会挂起？"

#: ../storage/faq.rst:32 ../pro/faq.rst:17
msgid ""
"GnuPG and nitrokey-app sometimes tend to hand each other. This is a known "
"problem and it can be fixed by re-inserting the Nitrokey into the USB slot."
msgstr ""
"GnuPG和nitrokey-app有时会互相牵制。这是一个已知的问题，它可以通过将硝基钥匙重"
"新插入USB插槽来解决。"

#: ../storage/faq.rst:45
msgid "**Q:** What is the firmware PIN for?"
msgstr "**问：**固件的PIN码是什么？"

#: ../storage/faq.rst:37
msgid ""
"The firmware password should meet general password recommandations (e.g. use "
"alphabetic characters, digits and special characters or use a usfficiently "
"long password). The firmware password is needed to update the firmware of "
"the Nitrokey Storage. See further instructions for update process here."
msgstr ""
"固件密码应符合一般的密码建议（例如，使用字母、数字和特殊字符或使用足够长的密"
"码）。更新Nitrokey存储器的固件时需要固件密码。请参阅更新过程的进一步说明。"

#: ../storage/faq.rst:43 ../shared-faqs/generic.rst:75
msgid ""
"The firmware password is never blocked. An attacker could try to guess the "
"password and would have unlimited attempts. Therefore you must choose a "
"strong password. The default password is 12345678."
msgstr ""
"固件密码永远不会被封锁。攻击者可以尝试猜测密码，而且会有无限次的尝试。因此，"
"你必须选择一个强大的密码。默认的密码是12345678。"

#: ../storage/faq.rst:50 ../shared-faqs/generic.rst:93 ../hsm/faq.rst:41
msgid "**Q:** How many keys can I store?"
msgstr "**问：**我可以存储多少个钥匙？"

#: ../storage/faq.rst:48
msgid ""
"The Nitrokey Storage can store three RSA key pairs. All keys use the same "
"identity but are used for different purposes: authentication, encryption and "
"signing."
msgstr ""
"Nitrokey存储器可以存储三个RSA密钥对。所有的钥匙都使用相同的身份，但用于不同的"
"目的：认证、加密和签名。"

#: ../storage/faq.rst:58 ../shared-faqs/generic.rst:134 ../pro/faq.rst:41
#: ../hsm/faq.rst:49
msgid "**Q:** How fast is encryption and signing?"
msgstr "**问：**加密和签名的速度如何？"

#: ../storage/faq.rst:53
msgid "Encryption of 50kiB of data:"
msgstr "对50kiB的数据进行加密。"

#: ../storage/faq.rst:55
msgid "256 bit AES, 2048 bytes per command -> 880 bytes per second"
msgstr "256位AES，每条命令2048字节 -> 每秒880字节"

#: ../storage/faq.rst:56
msgid "128 bit AES, 2048 bytes per command -> 893 bytes per second"
msgstr "128位AES，每条命令2048字节 -> 每秒893字节"

#: ../storage/faq.rst:57
msgid "256 bit AES, 240 bytes per command -> 910 bytes per second"
msgstr "256位AES，每个命令240字节 -> 每秒910字节"

#: ../storage/faq.rst:58
msgid "128 bit AES, 240 bytes per command -> 930 bytes per second"
msgstr "128位AES，每条命令240字节 -> 每秒930字节"

#: ../storage/faq.rst:63
msgid ""
"**Q:** Does the Nitrokey Storage contain a secure chip or just a normal "
"microcontroller?"
msgstr "**问：**尼特罗基存储器是否包含安全芯片或只是一个普通的微控制器？"

#: ../storage/faq.rst:63
msgid "Nitrokey Storage contains a tamper resistant smart card."
msgstr "Nitrokey存储器包含一个防篡改的智能卡。"

#: ../storage/faq.rst:71
msgid "**Q:** Is the Nitrokey Storage Common Criteria or FIPS certified?"
msgstr "**问：**Nitrokey存储系统是否经过通用标准或FIPS认证？"

#: ../storage/faq.rst:66
msgid ""
"`Cure53`_ has performed an `independent security audit`_ of the hardware, "
"firmware, and Nitrokey App. The security controler's hardware is Common "
"Criteria certified (`Report`_; See `here`_, click \"ICs, Smart Cards and "
"Smart Card-Related Devices and Systems\" and search for \"NXP Smart Card "
"Controller P5CD081V1A and its major configurations P5CC081V1A, P5CN081V1A, "
"P5CD041V1A, P5CD021V1A and P5CD016V1A each with IC dedicated Software\")."
msgstr ""
"`Cure53`_已经对硬件、固件和Nitrokey应用程序进行了`独立的安全审计`_。安全控制"
"器的硬件通过了通用标准认证（`报告`_；见`这里`_，点击\"集成电路、智能卡和智能"
"卡相关的设备和系统\"。并搜索\"恩智浦智能卡控制器P5CD081V1A及其主要配置"
"P5CC081V1A、P5CN081V1A、P5CD041V1A、P5CD021V1A和P5CD016V1A各自的IC专用软件"
"\"）。"

#: ../storage/faq.rst:84
msgid "**Q:** How can I use the encrypted mobile Storage?"
msgstr "**问：**我如何使用加密的移动存储？"

#: ../storage/faq.rst:74
msgid ""
"Prior of using the encrypted mobile storage you need to install and "
"initialize the Nitrokey Storage and download the latest Nitrokey App."
msgstr ""
"在使用加密的移动存储之前，你需要安装和初始化Nitrokey存储并下载最新的Nitrokey"
"应用程序。"

#: ../storage/faq.rst:76
msgid "Start the Nitrokey App."
msgstr "启动Nitrokey应用程序。"

#: ../storage/faq.rst:77
msgid "Press its tray icon and select \"unlock encrypted volume\" in the menu."
msgstr "按其托盘图标，在菜单中选择\"解锁加密卷\"。"

#: ../storage/faq.rst:78
msgid "Enter your User PIN in the appearing popup window."
msgstr "在出现的弹出窗口中输入你的用户密码。"

#: ../storage/faq.rst:79
msgid ""
"If this is the first time you may need to create a partition on the "
"encrypted volume. Windows will open an appropriate window and ask you to do "
"so. On Linux and Mac you may need to open a partition manager and create a "
"partition manually. You can create as many partitions as you want. We "
"recommend FAT(32) if you want to access the partition from various operating "
"systems."
msgstr ""
"如果这是第一次，您可能需要在加密的卷上创建一个分区。Windows会打开一个适当的窗"
"口并要求你这样做。在Linux和Mac上，您可能需要打开一个分区管理器并手动创建一个"
"分区。您可以根据您的需要创建任意多的分区。如果你想从不同的操作系统访问该分"
"区，我们建议使用FAT(32)。"

#: ../storage/faq.rst:80
msgid ""
"Now you can use the encrypted volume as you would use any other ordinary USB "
"drive. But all data stored on it will be encrypted in the Nitrokey hardware "
"automatically."
msgstr ""
"现在你可以像使用其他普通USB驱动器一样使用加密的卷。但是，存储在上面的所有数据"
"都将在Nitrokey硬件中自动加密。"

#: ../storage/faq.rst:81
msgid ""
"To remove or lock the encrypted volume you should unmount/eject it first."
msgstr "要删除或锁定加密的卷，你应该先卸载/弹出它。"

#: ../storage/faq.rst:82
msgid ""
"Afterwards you can disconnect the Nitrokey or select \"lock encrypted "
"volume\" from the Nitrokey App menu."
msgstr ""
"之后，你可以断开Nitrokey的连接，或从Nitrokey应用程序菜单中选择\"锁定加密卷"
"\"。"

#: ../storage/faq.rst:84
msgid ""
"The Nitrokey Storage is able to create hidden volumes as well. Please have a "
"look at the corresponding instructions for hidden volumes."
msgstr "Nitrokey Storage也能够创建隐藏卷。请看一下隐藏卷的相应说明。"

#: ../storage/faq.rst:107
msgid "**Q:** How can I use the hidden volume?"
msgstr "**问：**如何使用隐藏卷？"

#: ../storage/faq.rst:87
msgid ""
"Hidden volumes allow to hide data in the encrypted volume. The data is "
"protected with an additional password. Without the password the data "
"existence's can't be proven. Hidden volumes are not setup by default so that "
"their existence can be denied plausibly. The concept is similar to "
"VeraCrypt's/TrueCrypt's hidden volume but with Nitrokey Storage the entire "
"functionality of hidden volumes is implemented in hardware."
msgstr ""
"隐藏卷允许在加密卷中隐藏数据。这些数据受到额外密码的保护。没有密码，数据的存"
"在就不能被证明。默认情况下，隐藏卷不会被设置，因此它们的存在可以被合理地否"
"认。这个概念类似于VeraCrypt/TrueCrypt的隐藏卷，但在Nitrokey Storage中，隐藏卷"
"的整个功能是在硬件中实现的。"

#: ../storage/faq.rst:94 ../storage/hidden.rst:8
msgid ""
"You can configure up to four hidden volumes. Once unlocked, hidden volumes "
"behave like ordinary storage where you can create various partitions, "
"filesystems and store files as you like."
msgstr ""
"你最多可以配置四个隐藏卷。一旦解锁，隐藏卷的行为与普通存储一样，你可以创建各"
"种分区、文件系统，并按你的意愿存储文件。"

#: ../storage/faq.rst:98
msgid ""
"If you decide to configure Hidden Volumes, you can not use the encrypted "
"storage anymore. Because the Hidden Volume is situated on the free space of "
"the encrypted storage, there is the potential of overwriting data in the "
"Hidden Volume. You can say, even the encrypted storage \"does not know\" "
"that there is a hidden volumes. The general structure is shown in the "
"diagram below. Therefore, please do not write anything in the encrypted "
"storage after creating a hidden volume (you have to unlock it first though)."
msgstr ""
"如果您决定配置隐藏卷，您就不能再使用加密的存储。因为隐藏卷位于加密存储的自由"
"空间上，有可能会覆盖隐藏卷中的数据。你可以说，即使是加密存储也不知道有一个隐"
"藏卷。一般的结构如下图所示。因此，在创建了隐藏卷之后，请不要在加密存储中写入"
"任何东西（虽然你必须先解锁它）。"

#: ../storage/faq.rst:106
msgid ""
"Hidden volumes are like containers inside of a container, the encrypted "
"volume."
msgstr "隐藏卷就像一个容器中的容器，即加密卷。"

#: ../storage/faq.rst:110
msgid ""
"Use Nitrokey library to manage the encrypted mass store, one-time passwords "
"and password safe functionality."
msgstr "使用Nitrokey库来管理加密的大量存储、一次性密码和密码安全功能。"

#: ../storage/faq.rst:111
msgid ""
"The project nitrokey-get-totp and nitrokey-get-password are nice examples "
"for using the python bindings of Nitrokey library to get a custom interface."
msgstr ""
"nitrokey-get-totp和nitrokey-get-password项目是使用Nitrokey库的python绑定来获"
"得自定义界面的好例子。"

#: ../storage/faq.rst:112
msgid ""
"In order to access the integrated smart card, you can use OpenSC's command "
"line tools."
msgstr "为了访问集成智能卡，你可以使用OpenSC'的命令行工具。"

#: ../storage/faq.rst:113
msgid ""
"If your application has a PKCS#11 interface, use OpenSC's PKCS#11 driver."
msgstr "如果你的应用程序有一个PKCS#11接口，请使用OpenSC'的PKCS#11驱动程序。"

#: ../storage/faq.rst:114
msgid ""
"To work with the smart card low level, see the OpenPGP Card specification."
msgstr "要与智能卡低级别的工作，请参阅OpenPGP卡规范。"

#: ../storage/faq.rst:115
msgid ""
"The source code of the firmware and the hardware layout are available too."
msgstr "固件的源代码和硬件布局也是可用的。"

#: ../storage/faq.rst:116
msgid ""
"To develop special applications or for command line access one can use the "
"nitrocli created by d-e-s-o."
msgstr "要开发特殊的应用程序或用于命令行访问，可以使用d-e-s-o创建的nitrocli。"

#: ../storage/faq.rst:117
msgid "A libnitrokey wrapper for Rust providing access to Nitrokey devices."
msgstr "一个用于Rust的libnitrokey包装器，提供对Nitrokey设备的访问。"

#: ../storage/firmware-update-manually.rst:2
msgid "Activate Update Mode Manually"
msgstr "手动激活更新模式"

#: ../storage/firmware-update-manually.rst:10
msgid ""
"The following steps are only necessary if you are using Windows 10 Build "
"1809 (or higher) and Nitrokey Storage with firmware 0.52 or older. In all "
"other cases, or if you have access to another system, the regular update as "
"described `here <firmware-update.html>`_ is sufficient and easier."
msgstr ""
"只有当你使用Windows 10 Build 1809（或更高版本）和固件为0.52或更高版本的"
"Nitrokey Storage时，才需要进行以下步骤。在所有其他情况下，或者如果你可以使用"
"另一个系统，那么按照`这里<firmware-update.html>`_所述的常规更新就足够了，而且"
"更容易。"

#: ../storage/firmware-update-manually.rst:13
msgid "What is needed"
msgstr "需要什么"

#: ../storage/firmware-update-manually.rst:15
msgid ""
"To put the Nitrokey Storage manually into Update Mode (without using the "
"Nitrokey App), the following is required:"
msgstr ""
"要将硝基钥匙存储器手动放入更新模式（不使用硝基钥匙应用程序），需要以下条件。"

#: ../storage/firmware-update-manually.rst:17
msgid ""
"A USB stick (**All data on the USB stick will be lost! Please make a backup "
"of the creation before!**)"
msgstr ""
"一个U盘（**U盘上的所有数据都会丢失！请在创建前做好备份！**）。请在创建之前做"
"一个备份！**)"

#: ../storage/firmware-update-manually.rst:20
msgid "The `Balena Etcher <https://www.balena.io/etcher/>`_ software"
msgstr "`Balena Etcher <https://www.balena.io/etcher/>`_软件"

#: ../storage/firmware-update-manually.rst:22
msgid ""
"The `USB Image <https://github.com/Nitrokey/nitrokey-storage-update-boot/"
"releases/latest>`_ we created for this purpose. Please download only the "
"file ending with “.img.zip”."
msgstr ""
"`USB图像<https://github.com/Nitrokey/nitrokey-storage-update-boot/releases/"
"latest>`_我们为此目的而创建。请只下载以\".img.zip \"结尾的文件。"

#: ../storage/firmware-update-manually.rst:28
msgid "Install Balena Etcher"
msgstr "安装Balena Etcher"

#: ../storage/firmware-update-manually.rst:30
msgid ""
"Balena Etcher helps us to install the USB image on the USB stick. Please "
"double click on the `previously downloaded installation file <https://www."
"balena.io/etcher/>`_ and follow the instructions."
msgstr ""
"Balena Etcher帮助我们在U盘上安装USB镜像。请双击`之前下载的安装文件<https://"
"www.balena.io/etcher/>`_并按照指示操作。"

#: ../storage/firmware-update-manually.rst:43
msgid "Installing the USB image with Balena Etcher"
msgstr "用Balena Etcher安装USB镜像"

#: ../storage/firmware-update-manually.rst:45
msgid ""
"The program usually opens immediately after installation. If not, you will "
"find a shortcut on the desktop. Using the application, select the "
"`previously downloaded image file <https://github.com/Nitrokey/nitrokey-"
"storage-update-boot/releases>`_, which ends with “.img.zip”. Now insert the "
"USB stick. It should be recognized automatically. Press “Flash!” to proceed."
msgstr ""
"该程序通常在安装后立即打开。如果没有，你会在桌面上找到一个快捷方式。使用该程"
"序，选择`之前下载的图像文件<https://github.com/Nitrokey/nitrokey-storage-"
"update-boot/releases>`_，它以\".img.zip \"结尾。现在插入U盘。它应该被自动识"
"别。按 \"Flash！\"继续。"

#: ../storage/firmware-update-manually.rst:55
msgid "You must allow the application to make changes."
msgstr "你必须允许应用程序进行更改。"

#: ../storage/firmware-update-manually.rst:67
msgid ""
"After the image has been successfully transferred, Windows may ask if the "
"device should be formatted. It is important that you click “Cancel”, "
"otherwise the USB stick will be overwritten by Windows."
msgstr ""
"镜像成功传输后，Windows可能会问是否应该格式化设备。重要的是，你要点击 \"取消"
"\"，否则U盘将被Windows覆盖。"

#: ../storage/firmware-update-manually.rst:75
msgid "Booting from the USB stick"
msgstr "从U盘启动"

#: ../storage/firmware-update-manually.rst:77
msgid ""
"Now the system must be restarted. The USB stick must remain in the USB port "
"so that the system can be started on the USB stick. Some devices are "
"configured to start automatically from USB stick if it contains a system. If "
"Windows instead of the USB image is booting right after the restart, you "
"have to set your BIOS to boot from USB. On many systems this can be done "
"with the Escape key, the F10, F11 or F12 key. Often, when starting the "
"device there is also a hint which key to use the so-called “boot menu”."
msgstr ""
"现在必须重新启动系统。U盘必须保持在USB端口中，这样才能从U盘上启动系统。一些设"
"备被配置为如果它包含一个系统，就会自动从U盘启动。如果重启后马上启动的是"
"Windows而不是USB镜像，你必须将BIOS设置为从USB启动。在许多系统上，这可以通过"
"Escape键、F10、F11或F12键完成。通常，在启动设备时，也会有一个提示，即使用所谓"
"的 \"启动菜单 \"的哪个键。"

#: ../storage/firmware-update-manually.rst:79
msgid ""
"After the system has started, please choose the language by typing 1 "
"(English) and hit Enter."
msgstr "系统启动后，请选择语言，输入1（英语）并点击回车键。"

#: ../storage/firmware-update-manually.rst:86
msgid "Please insert the Nitrokey Storage when asked to."
msgstr "请在要求时插入Nitrokey存储。"

#: ../storage/firmware-update-manually.rst:93
msgid ""
"The Firmware Update Mode will be started automatically if the standard "
"password is set. Otherwise you need to input your password and hit enter."
msgstr ""
"如果设置了标准密码，固件更新模式就会自动启动。否则你需要输入密码并点击回车。"

#: ../storage/firmware-update-manually.rst:100
msgid ""
"After the system has activated the firmware update on the Nitrokey Storage, "
"a restart is issued after 60 seconds. Please remove the USB Stick. "
"Afterwards you can use the Nitrokey Update Tool in Windows as described "
"`here <firmware-update.html>`_."
msgstr ""
"在系统激活了Nitrokey存储的固件更新后，60秒后会发出重启。请取出U盘。之后，你可"
"以在Windows中使用Nitrokey更新工具，如`这里<firmware-update.html>`_所述。"

#: ../storage/firmware-update-manually.rst:103
msgid "Restoring the USB Stick"
msgstr "恢复U盘"

#: ../storage/firmware-update-manually.rst:105
msgid ""
"Windows should automatically ask to format your USB Stick as soon as you "
"insert the USB Stick the first time again in Windows. Just accept the "
"request for being able to use the USB Stick as previously."
msgstr ""
"当你第一次在Windows中插入U盘时，Windows会自动要求你格式化U盘。只要接受要求就"
"可以像以前一样使用U盘。"

#: ../storage/hidden.rst:2
msgid "Hidden Storage"
msgstr "隐藏式存储"

#: ../storage/hidden.rst:4
msgid ""
"Hidden volumes allow hiding data inside of the encrypted volume. This data "
"is protected by an additional passphrase. Without the passphrase, it is "
"impossible to know whether hidden volumes are present. They are not "
"configured with a default password so that their existence can be `denied "
"plausibly <https://en.wikipedia.org/wiki/Plausible_deniability>`_. The "
"concept is similar to `VeraCrypt's/TrueCrypt's hidden volume <https://"
"veracrypt.eu/en/docs/hidden-volume/>`_ but with Nitrokey Storage the entire "
"functionality of hidden volumes is implemented in hardware."
msgstr ""
"隐藏卷允许在加密卷中隐藏数据。这些数据是由一个额外的口令保护的。没有口令，就"
"不可能知道隐藏卷是否存在。它们没有被配置为默认密码，所以它们的存在可以被`合理"
"地否认<https://en.wikipedia.org/wiki/Plausible_deniability>`_。这个概念类似于"
"`VeraCrypt's/TrueCrypt'的隐藏卷<https://veracrypt.eu/en/docs/hidden-volume/"
">`_，但在Nitrokey Storage中，隐藏卷的整个功能是通过硬件实现的。"

#: ../storage/hidden.rst:11
msgid ""
"If you chose to use hidden volumes, you must not write any data to the "
"encrypted volume, or you risk loosing data in the hidden volume."
msgstr ""
"如果您选择使用隐藏卷，您必须不向加密卷写入任何数据，否则您有可能丢失隐藏卷中"
"的数据。"

#: ../storage/hidden.rst:14
msgid ""
"Hidden volumes are hidden within the free space of the encrypted volume, "
"which will be overwritten when writing data to the encrypted volume. There "
"are no mechanisms to prevent accidental overwritting of hidden data, as they "
"would reveal the existence of hidden volumes. Data written to the encrypted "
"volume before the creation of the hidden volume can still be read."
msgstr ""
"隐藏卷隐藏在加密卷的自由空间内，当向加密卷写入数据时，会被覆盖。没有任何机制"
"可以防止隐藏数据被意外覆盖，因为它们会暴露隐藏卷的存在。在创建隐藏卷之前写入"
"加密卷的数据仍然可以被读取。"

#: ../storage/hidden.rst:23
msgid "Configuring hidden volumes"
msgstr "配置隐藏卷"

#: ../storage/hidden.rst:26
msgid ""
"Copy some files to the encrypted volume prior to creating the hidden volume."
msgstr "在创建隐藏卷之前，将一些文件复制到加密卷中。"

#: ../storage/hidden.rst:29
msgid ""
"Using a journaling filesystem may risk overwriting the hidden data. The "
"encrypted filesystem is formated to FAT32 by default, and it is recommended "
"to leave it that way when using hidden volumes."
msgstr ""
"使用日记文件系统可能有覆盖隐藏数据的风险。加密文件系统的格式默认为FAT32，建议"
"在使用隐藏卷时保持这种格式。"

#: ../storage/hidden.rst:32
msgid "Unlock the encrypted volume using the Nitrokey App."
msgstr "使用Nitrokey应用程序解锁加密的卷。"

#: ../storage/hidden.rst:33
msgid "In the menu, select \"setup hidden volume\"."
msgstr "在菜单中，选择\"设置隐藏音量\"。"

#: ../storage/hidden.rst:38
msgid ""
"Enter a strong passphrase twice. Unlike the encrypted volume PIN, there are "
"no limit to the number of attempts at opening hidden volumes, so the "
"strength of the passphrase is extremely important."
msgstr ""
"输入两次强大的口令。与加密卷的PIN码不同，打开隐藏卷的尝试次数是没有限制的，所"
"以口令的强度是非常重要的。"

#: ../storage/hidden.rst:39
msgid ""
"Define the storage area to be used. Hidden volumes are stored in the free "
"areas of the encrypted volume. When creating multiple hidden volume, you "
"need to allocate a part of the free area for each volume, making sure they "
"do not overlap."
msgstr ""
"定义要使用的存储区域。隐藏卷被存储在加密卷的空闲区域。当创建多个隐藏卷时，你"
"需要为每个卷分配一部分空闲区域，确保它们不重叠。"

#: ../storage/hidden.rst:45
msgid "Using hidden volumes"
msgstr "使用隐藏卷"

#: ../storage/hidden.rst:47
msgid "Unlock the encrypted volume."
msgstr "解除对加密卷的锁定。"

#: ../storage/hidden.rst:48
msgid ""
"Select \"unlock hidden volume\" and enter any of the hidden volume's "
"passwords."
msgstr "选择\"解锁隐藏卷\"，并输入任何一个隐藏卷的密码'。"

#: ../storage/hidden.rst:52
msgid ""
"Make sure to unmount/eject all partitions on the hidden volumes before "
"locking or disconnecting the Nitrokey."
msgstr "在锁定或断开Nitrokey之前，请确保卸载/弹出隐藏卷上的所有分区。"

#: ../storage/index.rst:2
msgid "Nitrokey Storage 2"
msgstr "Nitrokey Storage 2"

#: ../pro/2fa-google.rst:2
msgid "Two-factor Authentication for Google"
msgstr "谷歌的双因素认证"

#: ../storage/linux/product_platform_heading.rst:3
msgid "(Nitrokey Storage 2 - Linux)"
msgstr "(Nitrokey Storage 2 - Linux)"

#: ../pro/2fa-google.rst:8
msgid ""
"These are the basic steps for registering the Nitrokey Pro or Nitrokey "
"Storage as a second factor of a Google account:"
msgstr ""
"这些是注册Nitrokey Pro或Nitrokey Storage作为谷歌账户第二要素的基本步骤。"

#: ../pro/2fa-google.rst:10
msgid ""
"Go to `https://myaccount.google.com/security#signin <https://myaccount."
"google.com/intro/security>`_"
msgstr ""
"转到`https://myaccount.google.com/security#signin <https://myaccount.google."
"com/intro/security>`_。"

#: ../pro/2fa-google.rst:13
msgid "Click “2-Step Verification” on the right side"
msgstr "点击右侧的 \"2步验证\"。"

#: ../pro/2fa-google.rst:15
msgid ""
"You need to define a first 2-Step Verfication (e.g. your phone number) "
"method to have access to the alternative second step option (the first 2-"
"Step Verification can’t be the security key)"
msgstr ""
"你需要定义第一个2步验证（例如你的电话号码）方法，以便能够访问替代的第二步选项"
"（第一个2步验证不能是安全密钥）。"

#: ../pro/2fa-google.rst:19
msgid ""
"Choose “Authenticator App” as second step (though you won’t actually need "
"the app)"
msgstr "第二步选择 \"认证器应用程序\"（尽管你实际上不需要这个应用程序）。"

#: ../pro/2fa-google.rst:22
msgid ""
"Choose Android -> press on “Can’t scan it” below the qrcode to see the "
"secret key"
msgstr "选择安卓->；按qrcode下面的 \"无法扫描 \"查看密匙。"

#: ../pro/2fa-google.rst:25
msgid ""
"Copy the key (you can ignore the whitespaces, they do not get copied "
"anyway!) and paste the key into the corresponding field in the Nitrokey App"
msgstr ""
"复制钥匙（你可以忽略空白处，反正它们不会被复制！）并将钥匙粘贴到Nitrokey应用"
"程序的相应区域。"

#: ../pro/2fa-google.rst:29
msgid ""
"Click “Next” and follow the instructions (but you use the Nitrokey App "
"instead of the Google Authenticator app to generate the keys)"
msgstr ""
"点击 \"下一步 \"并按照指示操作（但你要使用Nitrokey应用程序而不是Google "
"Authenticator应用程序来生成密钥）。"

#: ../pro/2fa-google.rst:32
msgid ""
"It is possible to use the same secret key for the Google Autenticator app "
"and the Nitrokey App as well. Just make sure to follow the above procedure "
"and use the qrcode for the Authenticator app afterwards before clicking "
"“Next”. Now you can use either the Google Authenticator app or the Nitrokey "
"App."
msgstr ""
"在谷歌Autenticator应用程序和Nitrokey应用程序中也可以使用相同的秘密密钥。只要"
"确保按照上述程序操作，并在点击 \"下一步 \"之前使用认证器应用程序的qrcode。现"
"在你可以使用谷歌认证器应用程序或Nitrokey应用程序。"

#: ../pro/2fa-nextcloud.rst:2
msgid "Two-factor Authentication for Nextcloud accounts"
msgstr "Nextcloud账户的双因素认证"

#: ../pro/2fa-nextcloud.rst:8
msgid ""
"These are the basic steps for registering the Nitrokey Pro or Nitrokey "
"Storage as a second factor of a Nextcloud account."
msgstr ""
"这些是注册Nitrokey Pro或Nitrokey Storage作为Nextcloud账户第二要素的基本步骤。"

#: ../pro/2fa-nextcloud.rst:10
msgid ""
"At first, log in to your Nextcloud account, click on the top right symbol of "
"your account and open the settings menu."
msgstr "首先，登录您的Nextcloud账户，点击您账户的右上方符号，打开设置菜单。"

#: ../pro/2fa-nextcloud.rst:17
msgid "Now choose “Security” on the left hand side."
msgstr "现在，在左手边选择 \"安全\"。"

#: ../pro/2fa-nextcloud.rst:24
msgid ""
"Now you can tick the box reading “Enable TOTP”. There is shown the TOTP "
"secret which we need to add to our Nitrokey via the Nitrokey App."
msgstr ""
"现在你可以勾选 \"启用TOTP \"的方框。这里显示了TOTP的秘密，我们需要通过"
"Nitrokey应用程序将其添加到我们的Nitrokey中。"

#: ../pro/2fa-nextcloud.rst:31
msgid "Copy and save secret code into the Nitrokey App."
msgstr "复制并保存秘密代码到Nitrokey应用程序。"

#: ../pro/2fa-nextcloud.rst:43
msgid ""
"Now we request a one-time password for the Nextcloud to verify the process "
"by inserting the password on the website and pressing “verify”."
msgstr ""
"现在我们要求Nextcloud的一次性密码，通过在网站上插入密码并按下 \"验证 \"来验证"
"这一过程。"

#: ../pro/2fa-nextcloud.rst:55
msgid ""
"From now on, when signing in you need an OTP additionally to your password. "
"Get one by the Nitrokey App like before and insert it in when logging in."
msgstr ""
"从现在开始，当你登录时，除了你的密码之外，还需要一个OTP。像以前一样通过"
"Nitrokey应用程序获得一个，并在登录时插入。"

#: ../pro/2fa-nextcloud.rst:62
msgid ""
"Nextcloud provides you with backup codes, in case you lost your Nitrokey. It "
"is recommended to print out these codes and store them somewhere save "
"otherwise you might not be able to log in to your account anymore!"
msgstr ""
"Nextcloud为您提供了备份代码，以防您丢失您的Nitrokey。建议您打印出这些代码，并"
"将其保存在某个地方，否则您可能无法再登录您的账户了。"

#: ../pro/2fa-odoo.rst:2
msgid "Two-factor Authentication for ERP Software Odoo"
msgstr "ERP软件Odoo的双因素认证"

#: ../pro/2fa-odoo.rst:8
msgid ""
"`Odoo <https://www.odoo.com/>`_ is a powerful ERP (Enterprise Resource "
"Planning) software for companies of all sizes. Odoo is available as open "
"source and contains modules for CRM, website, e-commerce, accounting, "
"financial accounting, production, warehouse management, project management, "
"document management, among others."
msgstr ""
"`Odoo <https://www.odoo.com/>`_是一个功能强大的ERP（企业资源计划）软件，适用"
"于各种规模的公司。Odoo以开放源码的形式提供，包含CRM、网站、电子商务、会计、财"
"务会计、生产、仓库管理、项目管理、文档管理等模块。"

#: ../pro/2fa-odoo.rst:10
msgid ""
"The secure access to such a central software is especially important and can "
"be realized with the Nitrokey. In this case the Nitrokey will be checked "
"during user login in addition to the user password. Phishing attacks are "
"thus foiled and your critical company data is protected."
msgstr ""
"对这样一个中央软件的安全访问特别重要，可以用Nitrokey来实现。在这种情况下，除"
"了用户密码外，在用户登录时还会检查Nitrokey。这样，钓鱼式攻击就被挫败了，你的"
"重要公司数据也得到保护。"

#: ../pro/2fa-odoo.rst:13
msgid ""
"Video: Zwei-Faktor-Authentifizierung mit dem Nitrokey Pro und Nitrokey "
"Storage in Odoo"
msgstr ""
"视频。在Odoo中用Nitrokey Pro和Nitrokey Storage进行Zwei-Faktor-"
"Authentifizierung操作"

#: ../pro/linux/automatic-screen-lock.rst:2
msgid "Automatic Screen Lock at Removal"
msgstr "移除时的自动屏幕锁"

#: ../pro/linux/automatic-screen-lock.rst:8
msgid ""
"This guide will walk you through the configuration of your computer, to "
"automatically lock your session when you remove the Nitrokey."
msgstr "本指南将指导你完成电脑的配置，以便在你移除Nitrokey时自动锁定你的会话。"

#: ../pro/linux/automatic-screen-lock.rst:10
msgid ""
"The configuration requires the creation of two files under two different "
"directories."
msgstr "该配置要求在两个不同的目录下创建两个文件。"

#: ../pro/linux/automatic-screen-lock.rst:15
msgid ""
"Ubuntu 20.04 or Debian 10 (Buster), both with `Gnome Display Manager "
"<https://wiki.gnome.org/Projects/GDM>`_ installed."
msgstr ""
"Ubuntu 20.04或Debian 10（Buster），都安装了`Gnome显示管理器<https://wiki."
"gnome.org/Projects/GDM>`_。"

#: ../pro/linux/automatic-screen-lock.rst:18
msgid "Nitrokey Pro 2, Nitrokey Storage 2, or Nitrokey HSM 2"
msgstr "Nitrokey Pro 2，Nitrokey Storage 2，或Nitrokey HSM 2"

#: ../pro/linux/automatic-screen-lock.rst:21
msgid "Configuration"
msgstr "配置"

#: ../pro/linux/automatic-screen-lock.rst:24
msgid "Create the ``.rules`` file"
msgstr "创建``.rules``文件。"

#: ../pro/linux/automatic-screen-lock.rst:26
msgid ""
"With your favorite text editor create a file called ``85-nitrokey.rules``"
msgstr "用你最喜欢的文本编辑器创建一个名为``的文件，85-nitrokey.rules``。"

#: ../pro/linux/automatic-screen-lock.rst:32
msgid "Add the following line to the file"
msgstr "在文件中添加以下一行"

#: ../pro/linux/automatic-screen-lock.rst:38
msgid "Save the file and quit the editor."
msgstr "保存文件并退出编辑器。"

#: ../pro/linux/automatic-screen-lock.rst:40
msgid ""
"This file sets up a new hardware rule that executes the ``gnome-screensaver-"
"lock`` at removal of the Nitrokey device."
msgstr ""
"这个文件设置了一个新的硬件规则，在移除Nitrokey设备时执行``gnome-screensaver-"
"lock``。"

#: ../pro/linux/automatic-screen-lock.rst:42
msgid ""
"You should change the configuration according to the device you are using as "
"following:"
msgstr "你应该根据你所使用的设备改变配置，如下所示。"

#: ../pro/linux/automatic-screen-lock.rst:44
msgid "Nitrokey Pro: ``ENV{PRODUCT}==\"20a0/4108/101\"``"
msgstr "Nitrokey Pro。``ENV{PRODUCT}==\"20a0/4108/101\"``<"

#: ../pro/linux/automatic-screen-lock.rst:45
msgid "Nitrokey HSM: ``ENV{PRODUCT}==\"20a0/4230/101\"``"
msgstr "Nitrokey HSM: ``ENV{PRODUCT}==\"20a0/4230/101\"``。"

#: ../pro/linux/automatic-screen-lock.rst:46
msgid "Nitrokey Storage: ``ENV{PRODUCT}==\"20a0/4109/101\"``"
msgstr "硝基键存储。``ENV{PRODUCT}==\"20a0/4109/101\"``"

#: ../pro/linux/automatic-screen-lock.rst:49
msgid "Create the ``gnome-screensaver-lock`` script"
msgstr "创建``gnome-screensaver-lock``脚本。"

#: ../pro/linux/automatic-screen-lock.rst:51
msgid ""
"With your favorite text editor create a file called ``gnome-screensaver-"
"lock``"
msgstr "用你最喜欢的文本编辑器创建一个名为``的文件，gnome-screensaver-lock``。"

#: ../pro/linux/automatic-screen-lock.rst:57
msgid "Add the following text"
msgstr "添加以下文字"

#: ../pro/linux/automatic-screen-lock.rst:67
msgid ""
"In the first step, this script looks for the user-name of the gnome session, "
"i.e. ``user``."
msgstr "在第一步，这个脚本寻找gnome会话的用户名，即``user``。"

#: ../pro/linux/automatic-screen-lock.rst:69
msgid ""
"When it is called at Nitrokey removal, the script queries ``user``, switches "
"to its session, and locks the screen by prompting the screen-saver screen."
msgstr ""
"当它在移除Nitrokey时被调用，脚本查询``user``，切换到它的会话，并通过提示屏保"
"画面锁定屏幕。"

#: ../pro/linux/automatic-screen-lock.rst:72
msgid "Execute the script"
msgstr "执行脚本"

#: ../pro/linux/automatic-screen-lock.rst:74
msgid ""
"Once all set up, execute the script once, and it will lock the screen. It "
"does not matter if the Nitrokey is plugged or not for this first execution."
msgstr ""
"一旦全部设置完毕，执行一次脚本，它就会锁定屏幕。在第一次执行时，硝基钥匙是否"
"被插上并不重要。"

#: ../pro/linux/automatic-screen-lock.rst:79
msgid ""
"By now you can log back to your session by entering your password, and "
"(re)plug you Nitrokey if you did not do it before."
msgstr ""
"现在，你可以通过输入密码登录到你的会话中，如果你以前没有这样做，可以（重新）"
"插入你的Nitrokey。"

#: ../pro/linux/automatic-screen-lock.rst:81
msgid ""
"The next time(s) you unplug your Nitrokey from the computer, it will "
"automatically lock the screen."
msgstr "下次你从电脑上拔下Nitrokey时，它将自动锁定屏幕。"

#: ../pro/change-pins.rst:9
msgid "User PIN"
msgstr "用户密码"

#: ../pro/change-pins.rst:11
msgid ""
"The user PIN is at least 6-digits long and is used to get access to the "
"content of the Nitrokey. This is the PIN you will use a lot in every day use "
"e.g. for decrypting messages, for unlocking your encrypted storage (NK "
"Storage only) etc."
msgstr ""
"用户PIN码至少有6位数，用于访问Nitrokey的内容。这是你在日常使用中经常用到的PIN"
"码，例如解密信息、解锁你的加密存储空间（仅限NK存储）等。"

#: ../pro/change-pins.rst:13
msgid ""
"You can change the user PIN with the Nitrokey App if using a Nitrokey Pro or "
"Nitrokey Storage. In the `Nitrokey <https://www.nitrokey.com/download>`_ App "
"open ‘Menu -> Configure -> Change User PIN’ to open the dialog to change the "
"PIN."
msgstr ""
"如果使用Nitrokey Pro或Nitrokey Storage，你可以通过Nitrokey应用程序改变用户的"
"PIN码。在`Nitrokey <https://www.nitrokey.com/download>`_应用程序中，打开'菜"
"单-> 配置-> 更改用户密码'以打开更改密码的对话框。"

#: ../pro/change-pins.rst:21
msgid "You can change the User PIN in the dialog window now."
msgstr "你现在可以在对话窗口中更改用户密码。"

#: ../pro/change-pins.rst:23
msgid ""
"The user PIN can have up to 20 digits and other characters (e.g. alphabetic "
"and special characters). But as the user PIN is blocked as soon three wrong "
"PIN attempts were done, it is sufficiently secure to only have a 6 digits "
"PIN. The default PIN is 123456."
msgstr ""
"用户密码可以有多达20位数字和其他字符（如字母和特殊字符）。但是，由于用户的PIN"
"码在三次错误的PIN码尝试后就会被阻止，所以只有6位数的PIN码就足够安全了。默认的"
"PIN码是123456。"

#: ../pro/change-pins.rst:31
msgid "Admin PIN"
msgstr "管理密码"

#: ../pro/change-pins.rst:33
msgid ""
"The admin PIN is at least 8-digits long and is used to change contents/"
"settings of the Nitrokey. That is to say after initializing the Nitrokey you "
"probably won’t need this PIN too often (e.g. if you want to add another "
"password to the password safe of the Nitrokey Pro or Nitrokey Storage)."
msgstr ""
"管理密码至少有8位数，用于改变硝基钥匙的内容/设置。也就是说，在初始化Nitrokey"
"后，你可能不会经常需要这个PIN码（例如，如果你想在Nitrokey Pro或Nitrokey "
"Storage的密码箱中添加另一个密码）。"

#: ../pro/change-pins.rst:35
msgid ""
"You can change the admin PIN with the Nitrokey App if using a Nitrokey Pro "
"or Nitrokey Storage. In the `Nitrokey App <https://www.nitrokey.com/"
"download>`_ open ‘Menu -> Configure -> Change Admin PIN’ to open the dialog "
"to change the PIN."
msgstr ""
"如果使用Nitrokey Pro或Nitrokey Storage，你可以通过Nitrokey App更改管理密码。"
"在`硝基钥匙应用程序<https://www.nitrokey.com/download>`_打开'菜单-> 配置-> 更"
"改管理密码'，以打开更改密码的对话框。"

#: ../pro/change-pins.rst:43
msgid "You can change the admin PIN in the dialog window now."
msgstr "你现在可以在对话窗口中改变管理密码。"

#: ../pro/change-pins.rst:45
msgid ""
"The admin PIN can have up to 20 digits and other characters (e.g. alphabetic "
"and special characters). But as the admin PIN is blocked as soon three wrong "
"PIN attempts were done, it is sufficiently secure to only have 8 digits PIN. "
"The default PIN is 12345678."
msgstr ""
"管理密码最多可以有20位数字和其他字符（如字母和特殊字符）。但是，由于只要有三"
"次错误的PIN尝试，管理PIN就会被阻止，所以只有8位数的PIN就足够安全了。默认的PIN"
"码是12345678。"

#: ../pro/linux/disk-encryption-luks.rst:2
msgid "Full-Disk Encryption With cryptsetup/LUKS"
msgstr "用cryptsetup/LUKS进行全盘加密"

#: ../pro/linux/disk-encryption-luks.rst:8
msgid ""
"This guide shows how to configure LUKS-encrypted volumes, to authenticate at "
"boot with `Nitrokey Pro <https://shop.nitrokey.com/shop/product/nk-pro-2-"
"nitrokey-pro-2-3>`_ or `Nitrokey Storage <https://shop.nitrokey.com/shop/"
"product/nitrokey-storage-2-56>`_."
msgstr ""
"本指南展示了如何配置LUKS加密卷，在启动时用`Nitrokey Pro <https://shop."
"nitrokey.com/shop/product/nk-pro-2-nitrokey-pro-2-3>`_或`Nitrokey Storage "
"<https://shop.nitrokey.com/shop/product/nitrokey-storage-2-56>`_验证。"

#: ../pro/linux/disk-encryption-luks.rst:10
msgid ""
"To provide some background, cryptsetup-initramfs now has support for using "
"OpenPGP smart cards like the Nitrokey Pro and Nitrokey Storage to unlock "
"LUKS-encrypted volumes. Once you finish the setup, you will just need to "
"insert your Nitrokey at boot and enter your User PIN, instead of typing in "
"your regular disk encryption passphrase."
msgstr ""
"为了提供一些背景资料，cryptsetup-initramfs现在支持使用Nitrokey Pro和Nitrokey "
"Storage等OpenPGP智能卡来解锁LUKS加密的卷。一旦你完成设置，你只需要在启动时插"
"入Nitrokey并输入用户密码，而不是输入常规的磁盘加密口令。"

#: ../pro/linux/disk-encryption-luks.rst:16
msgid "These instructions have been tested on Ubuntu 20.04 and Debian 10."
msgstr "这些说明已经在Ubuntu 20.04和Debian 10上进行了测试。"

#: ../pro/linux/disk-encryption-luks.rst:20
msgid ""
"The following guide can potentially lock you out of your computer. You "
"should be aware of these risks, and we recommend you use the script below on "
"a secondary computer, or after a full backup as you might lose your data."
msgstr ""
"下面的指南有可能会把你的电脑锁住。你应该意识到这些风险，我们建议你在第二台电"
"脑上使用下面的脚本，或者在完全备份后使用，因为你可能会丢失你的数据。"

#: ../pro/linux/disk-encryption-luks.rst:28
msgid "An Ubuntu or Debian computer with at least one LUKS-encrypted volume."
msgstr "一台至少有一个LUKS加密卷的Ubuntu或Debian电脑。"

#: ../pro/linux/disk-encryption-luks.rst:30
msgid ""
"See the section below to determine which method is compatible with this "
"guide."
msgstr "请参阅下面的章节，以确定哪种方法与本指南兼容。"

#: ../pro/linux/disk-encryption-luks.rst:32
msgid ""
"A Nitrokey Pro 2 or Nitrokey Storage 2 `initialized <openpgp.html>`_ with "
"keys."
msgstr "一个Nitrokey Pro 2或Nitrokey Storage 2 `初始化<openpgp.html>`_的键。"

#: ../pro/linux/disk-encryption-luks.rst:37
msgid "Known Issues"
msgstr "已知问题"

#: ../pro/linux/disk-encryption-luks.rst:39
msgid ""
"So far, the script works only with manually-partitioned volumes, that are "
"composed of an unencrypted ``/boot`` partition, and an encrypted root ``/`` "
"partition."
msgstr ""
"到目前为止，该脚本只适用于手动分区的卷，即由未加密的``/boot``分区和加密的根"
"``/`` 分区组成。"

#: ../pro/linux/disk-encryption-luks.rst:43
msgid ""
"Please do not select the automatic full-disk encryption provided by the "
"operating system you are using for this guide. You will face recurrent "
"errors when the partitioning is done automatically, using the installation "
"interface on Ubuntu and Debian."
msgstr ""
"请不要选择你所使用的操作系统为本指南提供的自动全盘加密功能。在Ubuntu和Debian"
"上使用安装界面自动进行分区时，你将面临反复的错误。"

#: ../pro/linux/disk-encryption-luks.rst:51
msgid "Install dependencies"
msgstr "安装依赖项"

#: ../pro/linux/disk-encryption-luks.rst:58
msgid "Create smartcard-luks directory"
msgstr "创建智能卡-鲁克斯目录"

#: ../pro/linux/disk-encryption-luks.rst:65
msgid "Download the smartcard-luks-script"
msgstr "下载智能卡-鲁克斯-脚本"

#: ../pro/linux/disk-encryption-luks.rst:73
msgid "Export the public key"
msgstr "导出公钥"

#: ../pro/linux/disk-encryption-luks.rst:75
msgid "To export your public key from GnuPG’s keyring:"
msgstr "要从GnuPG的钥匙圈中导出你的公钥。"

#: ../pro/linux/disk-encryption-luks.rst:82
msgid ""
"If you already have uploaded a public key to a keyserver (or have it stored "
"somewhere else), you should retrieve it in the way you are most comfortable "
"with, and proceed to step 5."
msgstr ""
"如果你已经将公钥上传到钥匙服务器（或将其储存在其他地方），你应该以你最习惯的"
"方式检索它，并继续进行第5步。"

#: ../pro/linux/disk-encryption-luks.rst:86
msgid ""
"Determine and verify the correct LUKS device name for your root-partition:"
msgstr "为你的根分区确定并验证正确的LUKS设备名称。"

#: ../pro/linux/disk-encryption-luks.rst:94
msgid ""
"Usually this should be something like `nvme0n1p3_crypt` (for NitroPC) or "
"`sda3_crypt` (for NitroPads).  You can and should crosscheck that the UUID "
"referred inside `/etc/crypttab` is the designated partition by checking the "
"symbolic link inside `/dev/disks/by-uuid/`."
msgstr ""
"通常这应该是`nvme0n1p3_crypt`（用于NitroPC）或`sda3_crypt`（用于"
"NitroPads）。  你可以而且应该通过检查`/etc/crypttab`中提到的UUID是指定的分"
"区，即`/dev/disks/by-uuid/`中的符号链接。"

#: ../pro/linux/disk-encryption-luks.rst:99
msgid ""
"Execute the script with the luks device name (e.g., `nvme0n1p3_crypt`) and "
"`pubkey.asc` as arguments."
msgstr ""
"以luks设备名称（例如：`nvme0n1p3_crypt`）和`pubkey.asc`为参数执行脚本。"

#: ../pro/linux/disk-encryption-luks.rst:107
msgid ""
"Once, you run the script with the OpenPGP public key as argument, it "
"automatically sets up a new LUKS secret, encrypts it against that public "
"key, and sets up crypttab, LUKS, initramfs, and GRUB."
msgstr ""
"一旦你用OpenPGP公钥作为参数运行该脚本，它就会自动设置一个新的LUKS秘密，用该公"
"钥进行加密，并设置crypttab、LUKS、initramfs和GRUB。"

#: ../pro/linux/disk-encryption-luks.rst:111
msgid "First you will be prompted for the ``User PIN``"
msgstr "首先，你会被提示``User PIN``。"

#: ../pro/linux/disk-encryption-luks.rst:116
msgid ""
"Once you unlock the Nitrokey, you will be prompted for your ``OLD "
"passphrase``. It is the passphrase you entered to encrypt your volume at "
"installation."
msgstr ""
"一旦你解锁了Nitrokey，你会被提示你的``OLD passphrase``。这是你在安装时输入的"
"加密卷的口令。"

#: ../pro/linux/disk-encryption-luks.rst:122
msgid ""
"This is a fall-back alternative in case you lose your Nitrokey, or if it’s "
"unavailable. So far, it was not tested, and users must be aware of the risk "
"of getting locked out of their computer, if the fall-back method does not "
"work."
msgstr ""
"这是在你丢失Nitrokey或无法使用的情况下的一种后备选择。到目前为止，它还没有经"
"过测试，用户必须意识到，如果后备方法不奏效，就有可能被锁在电脑外。"

#: ../pro/linux/disk-encryption-luks.rst:127
msgid ""
"Once you enter the passphrase, the script finishes the setup in about one "
"minute. Do not interrupt the script, or you might get locked out of your "
"computer after reboot."
msgstr ""
"一旦你输入了口令，脚本就会在大约一分钟内完成设置。不要打断脚本，否则你可能会"
"在重启后被锁定在你的电脑之外。"

#: ../pro/linux/disk-encryption-luks.rst:134
msgid "Done!"
msgstr "完成了!"

#: ../pro/linux/disk-encryption-luks.rst:136
msgid ""
"By now you must reboot, and you should be able to use your Nitrokey to "
"unlock your encrypted drive."
msgstr "现在你必须重新启动，你应该能够使用你的Nitrokey来解锁你的加密驱动器。"

#: ../pro/linux/disk-encryption-luks.rst:142
msgid "After reboot you should be prompted for your User PIN"
msgstr "重新启动后，系统会提示你输入用户密码。"

#: ../pro/linux/disk-encryption-luks.rst:147
msgid "Enter your User PIN to unlock the drive"
msgstr "输入你的用户密码以解锁硬盘"

#: ../pro/linux/disk-encryption-luks.rst:154
msgid "Further Hints"
msgstr "进一步提示"

#: ../pro/linux/disk-encryption-luks.rst:157
msgid "Change Passphrase"
msgstr "更改密码锁"

#: ../pro/linux/disk-encryption-luks.rst:159
msgid ""
"Once this setup is done, you should not use the (gnome) *disks* utility "
"anymore to change the (fallback) passphrase. The proper way to do this is to "
"call *cryptsetup* directly like this:"
msgstr ""
"一旦完成这个设置，你就不应该再使用（gnome）*disks*工具来改变（后备）密码。正"
"确的方法是像这样直接调用*cryptsetup*。"

#: ../pro/linux/disk-encryption-luks.rst:167
msgid "With `nvme0n1p3` being the partition you set up the keys for."
msgstr "`nvme0n1p3`是你为之设置钥匙的分区。"

#: ../pro/linux/disk-encryption-luks.rst:170
msgid "Use Multiple Keys"
msgstr "使用多个键"

#: ../pro/linux/disk-encryption-luks.rst:172
msgid ""
"It is easy to use multiple (hardware) security keys so that each of them is "
"able to unlock the LUKS drive independently. Just export multiple public "
"keys and also *pass multiple keys* to the setup script like this:"
msgstr ""
"使用多个（硬件）安全密钥是很容易的，这样每个密钥都能独立解锁LUKS驱动器。只要"
"导出多个公钥，同时*将多个密钥*传给设置脚本，像这样。"

#: ../pro/linux/disk-encryption-luks.rst:182
msgid "Set Cardholder Name"
msgstr "设置持卡人姓名"

#: ../pro/linux/disk-encryption-luks.rst:184
msgid ""
"During the PIN entry on boot for decryption of the LUKS root partition a "
"cardholder is presented to the user, to set this please use ``$ gpg --edit-"
"card`` and inside the prompt type ``admin`` and ``name`` to set the "
"cardholder for the OpenPGP Card (Nitrokey Storage 2 or Nitrokey Pro 2)."
msgstr ""
"在启动时输入PIN码以解密LUKS根分区时，会向用户展示一个持卡人。请使用``$ gpg --"
"edit-card``并在提示中输入 ``admin<xid=\"189\"></x>`和``name``来设置OpenPGP卡"
"（Nitrokey Storage 2或Nitrokey Pro 2）的持卡人。"

#: ../pro/linux/disk-encryption-luks.rst:190
msgid "Replace/Delete Keys"
msgstr "替换/删除钥匙"

#: ../pro/linux/disk-encryption-luks.rst:192
msgid ""
"It is not possible to add/remove keys directly. Therefore you need to delete/"
"remove the old setup and re-run the setup with the designated key(s):"
msgstr ""
"不可能直接添加/删除钥匙。因此，你需要删除/删除旧的设置，然后用指定的钥匙重新"
"运行设置。"

#: ../pro/linux/disk-encryption-luks.rst:196
msgid ""
"Remove the keyfile (path, if you used the script above) from luks-device "
"(*nvme0n1p3*):"
msgstr ""
"从luks-device（*nvme0n1p3*）中删除密钥文件（路径，如果你使用了上面的脚本）。"

#: ../pro/linux/disk-encryption-luks.rst:202
msgid "Remove the keyfile itself:"
msgstr "删除密钥文件本身。"

#: ../pro/linux/disk-encryption-luks.rst:208
msgid "Re-run setup above."
msgstr "重新运行上述设置。"

#: ../pro/linux/disk-encryption-luks.rst:211
msgid "Unlocking LUKS2 with X509 certificate"
msgstr "用X509证书解锁LUKS2"

#: ../pro/linux/disk-encryption-luks.rst:213
msgid ""
"SystemD supports unlocking a LUKS2 partition using a X509 certificate, find "
"a great blog entry on how to realize this at the `Personal blog of Vladimir "
"Timofeenko`_"
msgstr ""
"SystemD支持使用X509证书解锁LUKS2分区，在`Vladimir Timofeenko的个人博客上有一"
"篇关于如何实现这一功能的精彩博客文章。"

#: ../pro/ecc.rst:2
msgid "Elliptic Curves (ECC) Support"
msgstr "椭圆曲线（ECC）支持"

#: ../pro/ecc.rst:9
msgid "RSA-2048 Becomes Increasingly Insecure"
msgstr "RSA-2048变得越来越不安全了"

#: ../pro/ecc.rst:11
msgid ""
"For security reasons, the German Federal Office for Information Security "
"(Bundesamt für Sicherheit in der Informationstechnik, BSI) no longer "
"recommends RSA keys with a length of 2048 bit `to be used after 2022 "
"<https://www.bsi.bund.de/SharedDocs/Downloads/EN/BSI/Publications/"
"TechGuidelines/TG02102/BSI-TR-02102-1.pdf?_blob=publicationFile&v=10>`_. "
"This means that longer keys will need to come into use in the foreseeable "
"future. Assuming a usage period of five years, is is already necessary to "
"generate longer keys. However, longer RSA keys with 3072 bit or 4096 bit are "
"significantly slower. For this reason the new Nitrokey Storage 2 and Pro 2 "
"(resp. the integrated OpenPGP Card version 3.3) supports encryption by means "
"of `elliptic-curve cryptography (ECC) <https://en.wikipedia.org/wiki/"
"Elliptic-curve_cryptography>`_. This method is considered to be just as "
"secure with smaller ECC keys as longer RSA keys and is also considerably "
"faster."
msgstr ""
"出于安全考虑，德国联邦信息安全办公室（Bundesamt für Sicherheit in der "
"Informationstechnik, BSI）不再建议在2022年之后使用长度为2048位的RSA密钥` "
"<https://www.bsi.bund.de/SharedDocs/Downloads/EN/BSI/Publications/"
"TechGuidelines/TG02102/BSI-TR-02102-1.pdf?_blob=publicationFile&v=10>`_。这意"
"味着在可预见的未来，更长的密钥将需要投入使用。假设使用期为5年，已经有必要产生"
"更长的密钥了。然而，3072位或4096位的较长RSA密钥的速度明显较慢。由于这个原因，"
"新的Nitrokey Storage 2和Pro 2（即集成的OpenPGP卡3.3版）支持通过`椭圆曲线加密"
"法（ECC）<https://en.wikipedia.org/wiki/Elliptic-curve_cryptography>`_加密。"
"这种方法被认为与较长的RSA密钥一样，使用较小的ECC密钥是安全的，而且速度也相当"
"快。"

#: ../pro/ecc.rst:16
msgid "Basics of Elliptic-Curve Cryptography"
msgstr "椭圆曲线加密法的基础知识"

#: ../pro/ecc.rst:18
msgid ""
"In contrast to RSA, there are many different forms (so-called curves) of "
"elliptic-curve cryptography. Notably, the `NSA was involved <https://www."
"schneier.com/essays/archives/2007/11/did_nsa_put_a_secret.html>`_ in the "
"development of the NIST curves. Even if there is no evidence of back doors "
"in the curves, using a certain curve can pose a question of trust. "
"Fortunately the new Nitrokey Storage 2 and Pro 2 support two kind of curves, "
"namely NIST and Brainpool. In what follows we will use Brainpool curves. "
"`This article <https://arstechnica.com/information-technology/2013/10/a-"
"relatively-easy-to-understand-primer-on-elliptic-curve-cryptography/>`_ "
"provides a good entry point for gaining a general understanding of elliptic-"
"curve cryptography."
msgstr ""
"与RSA相比，椭圆曲线加密法有许多不同的形式（所谓的曲线）。值得注意的是，`NSA参"
"与了<https://www.schneier.com/essays/archives/2007/11/did_nsa_put_a_secret."
"html>`_NIST曲线的开发工作。即使没有证据表明曲线中存在后门，使用某种曲线也会带"
"来信任问题。幸运的是，新的Nitrokey Storage 2和Pro 2支持两种曲线，即NIST和"
"Brainpool。在下面的内容中，我们将使用Brainpool曲线。`这篇文章<https://"
"arstechnica.com/information-technology/2013/10/a-relatively-easy-to-"
"understand-primer-on-elliptic-curve-cryptography/>`_为获得对椭圆曲线密码学的"
"一般理解提供了一个很好的入口。"

#: ../pro/ecc.rst:21
msgid "System Requirements"
msgstr "系统要求"

#: ../pro/ecc.rst:23
msgid ""
"In order to create keys based on elliptic curves a Nitrokey Storage 2 / Pro "
"2 and GnuPG version 2.1.17 or higher are required."
msgstr ""
"为了创建基于椭圆曲线的钥匙，需要Nitrokey Storage 2 / Pro 2和GnuPG 2.1.17版或"
"更高版本。"

#: ../pro/ecc.rst:26
msgid "You can read Nitrokey’s OpenPGP Card version via ``gpg2 —card-status``:"
msgstr "你可以通过``gpg2 —card-status``读取Nitrokey的OpenPGP卡版本。"

#: ../pro/ecc.rst:36
msgid ""
"The ‘Version’ field represents the version of the OpenPGP Card integrated in "
"the Nitrokey — in this case it is 3.3 as needed for Elliptic-curve "
"cryptography. OpenPGP Card version 2.2 doesn’t support ECC."
msgstr ""
"版本 \"字段表示集成在Nitrokey中的OpenPGP卡的版本--在这种情况下，它是3.3，因为"
"椭圆曲线加密法需要。OpenPGP卡2.2版本不支持ECC。"

#: ../pro/ecc.rst:38
msgid ""
"You can learn about the installed version of GnuPG via ``gpg2  --version``. "
"At least version 2.1.16 is required. The newest GnuPG version for Windows "
"can be found `here <https://www.gpg4win.org/>`_ and the newest version for "
"MacOS can be found `here <https://gpgtools.org/>`_. A suitable version of "
"GnuPG is included in the GNU/Linux distributions Ubuntu (since 18.04), "
"Debian (from Stretch onwards), Arch Linux, Fedora (from Release 26 onwards) "
"and openSUSE Tumbleweed. At the end of this articles are instructions how to "
"manually update GnuPG on older Ubuntu versions."
msgstr ""
"你可以通过``gpg2  --version``了解GnuPG的安装版本。至少需要2.1.16版本。最新的"
"Windows版GnuPG可以在`这里<https://www.gpg4win.org/>`_，最新的MacOS版可以在`这"
"里<https://gpgtools.org/>`_找到。GNU/Linux发行版Ubuntu（从18.04开始）、Debian"
"（从Stretch开始）、Arch Linux、Fedora（从26版开始）和openSUSE Tumbleweed中都"
"有合适的GnuPG版本。在这篇文章的末尾有如何在较早的Ubuntu版本上手动更新GnuPG的"
"说明。"

#: ../pro/ecc.rst:42
msgid ""
"GnuPG 2.0 is still being used, but support for it has been discontinuied in "
"2017. All communication partners must use GnuPG 2.1 or newer for email "
"encryption by means of ECC, otherwise incompatibility issues might arise. "
"Therefore you should only use ECC if you are sure you will be able to "
"circumvent this problem."
msgstr ""
"GnuPG 2.0仍在使用，但对它的支持已在2017年停止。所有通信伙伴必须使用GnuPG 2.1"
"或更新版本，通过ECC进行电子邮件加密，否则可能出现不兼容问题。因此，你应该只使"
"用ECC，如果你确定你将能够规避这个问题。"

#: ../pro/ecc.rst:49
msgid "Key Generation on the Nitrokey Storage 2 / Pro 2"
msgstr "在Nitrokey Storage 2 / Pro 2上生成钥匙"

#: ../pro/ecc.rst:51
msgid ""
"Once these requirements are fulfilled, you can get started. (Warning: "
"existing keys will be overwritten in the process!) You now have two options. "
"The first option is to create the key directly on the Nitrokey Storage 2 / "
"Pro 2. The benefit here is that the key will never be outside the device and "
"as such can never be read out. The second option is to import a previously "
"locally generated key. The advantage in this case is that you can securely "
"store a backup of the key, which can then be restored in case the Nitrokey "
"is lost. Only the first option is described below. In order to create a key "
"with backup, you can access `the following instructions <https://www.gniibe."
"org/memo/software/gpg/keygen-25519.html>`_ and use this `general information "
"<https://wiki.fsfe.org/TechDocs/CardHowtos/CardWithSubkeysUsingBackups>`_ to "
"transfer the key to the Nitrokey."
msgstr ""
"一旦这些要求得到满足，你就可以开始了。(警告：现有的钥匙在这个过程中会被覆"
"盖！）你现在有两个选择。第一个选择是直接在Nitrokey Storage 2 / Pro 2上创建钥"
"匙。这样做的好处是，钥匙将永远不会在设备之外，因此永远不会被读出。第二个选择"
"是导入以前在本地生成的密钥。这种情况的好处是，你可以安全地存储钥匙的备份，一"
"旦硝基钥匙丢失，就可以恢复。下面只介绍第一个选项。为了创建一个带备份的钥匙，"
"你可以访问`下面的说明<https://www.gniibe.org/memo/software/gpg/keygen-25519."
"html>`_并使用这个`一般信息<https://wiki.fsfe.org/TechDocs/CardHowtos/"
"CardWithSubkeysUsingBackups>`_来将钥匙转移到Nitrokey上。"

#: ../pro/ecc.rst:53
msgid ""
"Within GnuPG there is already a “generate” command, which can be used to "
"easily create keys on the device. However it is not as yet possible to "
"select the type of key directly, so the key must first be prepared. We use "
"the following commands for this:"
msgstr ""
"在GnuPG中，已经有一个 \"生成 \"命令，可以用来在设备上轻松地创建钥匙。但是，目"
"前还不能直接选择钥匙的类型，所以必须首先准备好钥匙。我们使用以下命令来实现这"
"一点。"

#: ../pro/ecc.rst:61
msgid ""
"Alternatively, other curves could be selected, as described in the next "
"section."
msgstr "另外，也可以选择其他曲线，如下一节所述。"

#: ../pro/ecc.rst:63
msgid ""
"Now we enter ``gpg2 --card-edit`` and see that brainpoolP256r1 is under “key "
"attributes” instead of rsa2048."
msgstr ""
"现在我们输入``gpg2 --card-edit``，看到brainpoolP256r1在 \"密钥属性 \"下而不是"
"rsa2048。"

#: ../pro/ecc.rst:89
msgid "Then we create the key."
msgstr "然后我们创建密钥。"

#: ../pro/ecc.rst:121
msgid ""
"The Nitrokey now incorporates elliptic-curve cryptography instead of RSA "
"keys and can be used as usual."
msgstr "Nitrokey现在采用了椭圆曲线加密法，而不是RSA密钥，可以照常使用。"

#: ../pro/ecc.rst:124
msgid "Available Curves"
msgstr "可用的曲线"

#: ../pro/ecc.rst:126
msgid ""
"In the above procedure we chose the Brainpool curves. Alternatively, NIST "
"curves can be used. The configuration is carried out as follows:"
msgstr ""
"在上述程序中，我们选择了Brainpool的曲线。另外，也可以使用NIST曲线。配置工作按"
"以下方式进行。"

#: ../pro/ecc.rst:135
msgid "Update of GnuPG on Ubuntu"
msgstr "Ubuntu上GnuPG的更新"

#: ../pro/ecc.rst:137
msgid ""
"The following steps are needed only if you are running a Ubuntu version "
"older than 18.04. You can install GnuPG 2.1.18 on such system with the "
"commands below. This involves newer Debian packages, which is the easiest "
"option. This approach has been tested successfully on Ubuntu 17.10 and "
"propbably works on 16.04 as well. However, the occurence of problems during "
"usage can‘t be excluded."
msgstr ""
"只有当你运行的Ubuntu版本超过18.04时才需要以下步骤。你可以用下面的命令在这种系"
"统上安装GnuPG 2.1.18。这涉及到较新的Debian软件包，这是最简单的选择。这种方法"
"已经在Ubuntu 17.10上测试成功，可能在16.04上也适用。然而，不能排除在使用过程中"
"出现问题的可能性。"

#: ../pro/ecc.rst:152
msgid ""
"In case you want to undo the installation, you have to execute the following "
"commands:"
msgstr "如果你想撤消安装，你必须执行以下命令。"

#: ../storage/linux/firmware-update.rst:10
#: ../storage/windows/firmware-update.rst:10
msgid ""
"You should backup all data from the device before upgrading, as firmware "
"upgrades may destroy all data on the device (especially coming from firmware "
"version <0.45)!"
msgstr ""
"在升级之前，你应该备份设备上的所有数据，因为固件升级可能会破坏设备上的所有数"
"据（特别是来自固件版本<0.45的数据）!"

#: ../storage/linux/firmware-update.rst:14
msgid ""
"Download the `Nitrokey App <https://www.nitrokey.com/download>`_ and the "
"program “dfu-programmer” which should be available through your package-"
"manager, e.g. ``apt-get update && apt-get install dfu-programmer`` on Debian-"
"based systems."
msgstr ""
"下载`Nitrokey应用程序<https://www.nitrokey.com/download>`_和 \"dfu-"
"programmer \"程序，这应该可以通过你的软件包管理器获得，例如``apt-get update "
"&& apt-get install dfu-programmer``在基于 Debian 的系统上。"

#: ../storage/linux/firmware-update.rst:16
msgid ""
"Download the latest firmware \".hex\" file from `here <https://github.com/"
"Nitrokey/nitrokey-storage-firmware/releases/latest>`_ and store it as "
"\"firmware.hex\" in your home folder. Older releases are `here <https://"
"github.com/Nitrokey/nitrokey-storage-firmware/releases>`_."
msgstr ""
"从`这里<https://github.com/Nitrokey/nitrokey-storage-firmware/releases/"
"latest>`_下载最新的固件\".hex\"文件，并将其作为\"firmware.hex\"存储在你的主文"
"件夹中。较早的版本是 `这里 <https://github.com/Nitrokey/nitrokey-storage-"
"firmware/releases>`_。"

#: ../storage/linux/firmware-update.rst:18
#: ../storage/windows/firmware-update.rst:18
msgid ""
"Right click on the icon of the Nitrokey App and go to “Configure” -> “Enable "
"Firmware Update”. The default firmware password is ‘12345678’."
msgstr ""
"右击Nitrokey应用程序的图标，进入 \"配置\"-> \"启用固件更新\"。默认的固件密码"
"是 \"12345678\"。"

#: ../storage/linux/firmware-update.rst:25
#: ../storage/windows/firmware-update.rst:25
msgid ""
"The Nitrokey Storage is not detected by Nitrokey App anymore once update "
"mode got activated. You have to proceed with the instructions described "
"below to make it work again."
msgstr ""
"一旦更新模式被激活，Nitrokey应用程序就无法检测到Nitrokey存储。你必须按照下面"
"的说明进行操作，使其重新工作。"

#: ../storage/linux/firmware-update.rst:30
msgid "Open a terminal and execute:"
msgstr "打开一个终端并执行。"

#: ../storage/linux/firmware-update.rst:39
msgid ""
"whereas “firmware.hex” needs to be the path and file name of the firmware "
"which you downloaded in step 2."
msgstr "而 \"firmware.hex \"需要是你在步骤2中下载的固件的路径和文件名。"

#: ../pro/linux/hard-disk-encryption.rst:2
msgid "Hard Disk Encryption"
msgstr "硬盘加密"

#: ../pro/linux/hard-disk-encryption.rst:9
msgid "VeraCrypt (formerly TrueCrypt)"
msgstr "VeraCrypt (以前的TrueCrypt)"

#: ../pro/linux/hard-disk-encryption.rst:11
msgid ""
"`VeraCrypt <https://www.veracrypt.fr/en/Home.html>`_ is a free and Open "
"Source disk encryption software for Windows, macOS, and GNU/Linux. It is the "
"successor of TrueCrypt and thus recommended, although the following "
"instructions should apply to TrueCrypt as well."
msgstr ""
"`VeraCrypt <https://www.veracrypt.fr/en/Home.html>`_是一款适用于Windows、"
"macOS和GNU/Linux的免费开源磁盘加密软件。它是TrueCrypt的继承者，因此被推荐使"
"用，尽管以下说明也应适用于TrueCrypt。"

#: ../pro/linux/hard-disk-encryption.rst:13
msgid ""
"Follow these steps to use the program with `Nitrokey Storage 2 <https://shop."
"nitrokey.com/shop/product/nitrokey-storage-2-56>`_ or `Nitrokey Pro 2 "
"<https://shop.nitrokey.com/shop/product/nk-pro-2-nitrokey-pro-2-3>`_:"
msgstr ""
"按照这些步骤，在`Nitrokey Storage 2 <https://shop.nitrokey.com/shop/product/"
"nitrokey-storage-2-56>`_或`Nitrokey Pro 2 <https://shop.nitrokey.com/shop/"
"product/nk-pro-2-nitrokey-pro-2-3>`_使用程序。"

#: ../pro/linux/hard-disk-encryption.rst:17
msgid ""
"Install the latest release of `OpenSC <https://github.com/OpenSC/OpenSC/"
"wiki>`_, or download the `PKCS#11 library <http://smartcard-auth.de/download-"
"en.html>`_."
msgstr ""
"安装最新版本的`OpenSC <https://github.com/OpenSC/OpenSC/wiki>`_，或下载"
"`PKCS#11库 <http://smartcard-auth.de/download-en.html>`_。"

#: ../pro/linux/hard-disk-encryption.rst:20
msgid ""
"Choose the library in VeraCrypt under Settings>Preferences>Security Token "
"(location depends on system, e.g. ``/usr/lib/opensc``)."
msgstr ""
"在VeraCrypt的Settings>Preferences>Security Token（位置取决于系统，例如：``/"
"usr/lib/opensc``）中选择库。"

#: ../pro/linux/hard-disk-encryption.rst:22
msgid "Generate a 64 Byte key file via Tools>Keyfile Generator."
msgstr "通过Tools>Keyfile Generator生成一个64字节的密钥文件。"

#: ../pro/linux/hard-disk-encryption.rst:23
msgid ""
"Now you should be able to import the generated key file via Tools>Manage "
"Security Token Keyfiles. You should choose the first Slot (``[0] User "
"PIN``). The keyfile is then stored on the Nitrokey as ‘Private Data Object "
"1’ (``PrivDO1``)."
msgstr ""
"现在你应该能够通过Tools>Manage Security Token Keyfiles导入生成的密钥文件。你"
"应该选择第一个插槽（``[0] User PIN``）。然后，该密钥文件将作为 \"私人数据对象"
"1\"（``PrivDO1``）存储在Nitrokey上。"

#: ../pro/linux/hard-disk-encryption.rst:27
msgid ""
"After this you should wipe the original keyfile on your Computer securely!"
msgstr "在这之后，你应该安全地擦除你电脑上的原始密钥文件!"

#: ../pro/linux/hard-disk-encryption.rst:29
msgid ""
"Now you can use VeraCrypt with the Nitrokey: Create a container, choose the "
"keyfile on the device as an alternative to a password."
msgstr ""
"现在你可以用Nitrokey使用VeraCrypt：创建一个容器，选择设备上的密钥文件作为密码"
"的替代。"

#: ../pro/linux/hard-disk-encryption.rst:34
msgid "Security Consideration"
msgstr "安全方面的考虑"

#: ../pro/linux/hard-disk-encryption.rst:36
msgid ""
"Please note that VeraCrypt doesn’t make use of the full security which "
"Nitrokey (and smart cards in general) offer. Instead it stores a keyfile on "
"the Nitrokey which theoretically could be stolen by a computer virus after "
"the user enters the PIN."
msgstr ""
"请注意，VeraCrypt并没有利用Nitrokey（以及一般的智能卡）提供的全部安全性。相"
"反，它在Nitrokey上存储了一个密钥文件，理论上，在用户输入PIN后，该文件可能被计"
"算机病毒窃取。"

#: ../pro/linux/hard-disk-encryption.rst:41
msgid ""
"Note: `Aloaha Crypt <http://www.aloaha.com/aloaha-crypt-disk/>`_ is based on "
"TrueCrypt/VeraCrypt but without the described security limitation."
msgstr ""
"注意：`Aloaha Crypt <http://www.aloaha.com/aloaha-crypt-disk/>`_是基于"
"TrueCrypt/VeraCrypt，但没有描述的安全限制。"

#: ../pro/linux/hard-disk-encryption.rst:44
msgid "Hard Disk Encryption on Linux with LUKS/dm-crypt"
msgstr "在Linux上用LUKS/dm-crypt进行硬盘加密"

#: ../pro/linux/hard-disk-encryption.rst:46
msgid ""
"Here are `excellent instructions <http://blog.kumina.nl/2010/07/two-factor-"
"luks-using-ubuntu/>`_ how to use Nitrokey to encrypt your hard disk under "
"Linux with LUKS/dm-crypt. `Other instructions <https://wiki.ubuntu.com/"
"SmartCardLUKSDiskEncryption>`_."
msgstr ""
"这里有`出色的说明<http://blog.kumina.nl/2010/07/two-factor-luks-using-ubuntu/"
">`_如何在Linux下使用Nitrokey用LUKS/dm-crypt加密你的硬盘。`其他说明 <https://"
"wiki.ubuntu.com/SmartCardLUKSDiskEncryption>`_。"

#: ../pro/linux/hard-disk-encryption.rst:48
msgid ""
"Purism has created a `simple script <https://docs.puri.sm/PureBoot/"
"LibremKeyLUKS.html>`_ to add the Nitrokey/LibremKey as a way to unlock LUKS "
"partitions (not tested by Nitrokey yet)."
msgstr ""
"Purism创建了一个`简单的脚本<https://docs.puri.sm/PureBoot/LibremKeyLUKS."
"html>`_来添加Nitrokey/LibremKey作为解锁LUKS分区的方法（还没有经过Nitrokey测"
"试）。"

#: ../pro/linux/hard-disk-encryption.rst:50
msgid ""
"`This project <https://github.com/artosan/nitroluks/>`_ aims to ease the use "
"of LUKS with the Nitrokey Pro or Storage based on the Password Safe (not "
"tested by Nitrokey yet). A description on how to use it on Gentoo can be "
"found `here <https://amedeos.github.io/gentoo/nitrokey/2019/01/21/gentoo-"
"nitrokey-luks.html>`_."
msgstr ""
"`这个项目<https://github.com/artosan/nitroluks/>`_旨在使LUKS与Nitrokey Pro或"
"基于Password Safe的Storage（尚未经过Nitrokey的测试）的使用更加简便。关于如何"
"在Gentoo上使用它的描述可以在`这里找到<https://amedeos.github.io/gentoo/"
"nitrokey/2019/01/21/gentoo-nitrokey-luks.html>`_。"

#: ../pro/linux/hard-disk-encryption.rst:52
msgid ""
"For Arch Linux, see `initramfs-scencrypt <https://github.com/fuhry/initramfs-"
"scencrypt>`_."
msgstr ""
"对于Arch Linux，见`initramfs-scencrypt <https://github.com/fuhry/initramfs-"
"scencrypt>`_。"

#: ../pro/linux/hard-disk-encryption.rst:55
msgid "Storage Encryption on Linux with EncFS"
msgstr "在Linux上用EncFS进行存储加密"

#: ../pro/linux/hard-disk-encryption.rst:59
msgid "Prerequisite"
msgstr "先决条件"

#: ../pro/linux/hard-disk-encryption.rst:61
msgid ""
"Please ensure that you `installed the device driver, changed the default "
"PINs and generated or imported keys with GnuPG <https://www.nitrokey.com/"
"start>`_."
msgstr ""
"请确保你`安装了设备驱动程序，改变了默认的PIN码，并使用GnuPG <https://www."
"nitrokey.com/start>`_生成或导入密钥。"

#: ../pro/linux/hard-disk-encryption.rst:65
msgid ""
"`EncFS <http://www.arg0.net/encfs>`_ is an easy to utlity for encrypted file "
"systems and it is based on `FUSE <http://de.wikipedia.org/wiki/"
"Filesystem_in_Userspace>`_. You may follow these steps to use it with very "
"long passwords and Nitrokey Pro 2:"
msgstr ""
"`EncFS <http://www.arg0.net/encfs>`_是一个易于使用的加密文件系统，它是基于"
"`FUSE <http://de.wikipedia.org/wiki/Filesystem_in_Userspace>`_。你可以按照这"
"些步骤，用很长的密码和Nitrokey Pro 2来使用它。"

#: ../pro/linux/hard-disk-encryption.rst:71
msgid "Create a key file with random data:"
msgstr "创建一个具有随机数据的密钥文件。"

#: ../pro/linux/hard-disk-encryption.rst:78
msgid "Encrypt the key file and use the User-ID of your Nitrokey"
msgstr "加密密钥文件，并使用你的Nitrokey的用户ID。"

#: ../pro/linux/hard-disk-encryption.rst:85
msgid "Remove the key file in clear text:"
msgstr "移除明文的密钥文件。"

#: ../pro/linux/hard-disk-encryption.rst:92
msgid "Create mount point:"
msgstr "创建挂载点。"

#: ../pro/linux/hard-disk-encryption.rst:99
msgid "Create the actual encryption folder"
msgstr "创建实际的加密文件夹"

#: ../pro/linux/hard-disk-encryption.rst:108
msgid "Unmount the new file system:"
msgstr "解除对新文件系统的挂载。"

#: ../pro/linux/hard-disk-encryption.rst:118
msgid "Mount encrypted file system and enter PIN of Nitrokey:"
msgstr "挂载加密的文件系统，并输入Nitrokey的PIN码。"

#: ../pro/linux/hard-disk-encryption.rst:125
msgid "After usage, unmount the file system:"
msgstr "使用完毕后，解除对文件系统的挂载。"

#: ../pro/linux/hard-disk-encryption.rst:133
msgid "Storage Encryption on Linux with ECryptFS"
msgstr "在Linux上使用ECryptFS进行存储加密"

#: ../pro/linux/hard-disk-encryption.rst:135
msgid ""
"`eCryptfs <https://www.ecryptfs.org/>`_ is a file based transparent "
"encryption file system for Linux which can be used with Nitrokey through a "
"PKCS#11 driver."
msgstr ""
"`eCryptfs <https://www.ecryptfs.org/>`_是一个基于文件的Linux透明加密文件系"
"统，可以通过一个PKCS#11驱动与Nitrokey一起使用。"

#: ../pro/linux/hard-disk-encryption.rst:137
msgid "See `these <http://tkxuyen.com/blog/?p=293>`_ instructions:"
msgstr "见`这些<http://tkxuyen.com/blog/?p=293>`_说明。"

#: ../pro/linux/hard-disk-encryption.rst:139
msgid "Import the certificate and key to the Nitrokey"
msgstr "将证书和密钥导入到Nitrokey。"

#: ../pro/linux/hard-disk-encryption.rst:147
msgid "Create the file ~/.ecryptfsrc.pkcs11:"
msgstr "创建文件~/.ecryptfsrc.pkcs11。"

#: ../pro/linux/hard-disk-encryption.rst:154
msgid "Enter this content:"
msgstr "输入这个内容。"

#: ../pro/linux/hard-disk-encryption.rst:166
msgid "Copy the serialized id for later usage:"
msgstr "复制序列化的ID，供以后使用。"

#: ../pro/linux/hard-disk-encryption.rst:176
msgid ""
"Alternatively, try `ESOSI <http://sourceforge.net/projects/esosi/>`_ or "
"follow these steps using OpenSC and OpenVPN."
msgstr ""
"或者，尝试`ESOSI <http://sourceforge.net/projects/esosi/>`_或者使用OpenSC和"
"OpenVPN遵循这些步骤。"

#: ../pro/linux/hard-disk-encryption.rst:178
msgid ""
"Source of the guide: https://www.nitrokey.com/documentation/applications#a:"
"hard-disk-encryption"
msgstr ""
"指南的来源：https://www.nitrokey.com/documentation/applications#a:hard-disk-"
"encryption"

#: ../storage/linux/hidden-os-specific-partitioning.rst:1
msgid ""
"*If this is the first time you unlock the hidden volume, you may need to "
"create a partition on the hidden volume. You will need to open a partition "
"manager such as* `GParted <https://gparted.org/>`_ *and create one or more "
"partitions manually. Make sure to create the partitions on the device that "
"appeared when unlocking the hidden volume.*"
msgstr ""
"*如果这是您第一次解锁隐藏卷，您可能需要在隐藏卷上创建一个分区。您需要打开一个"
"分区管理器，如* `GParted <https://gparted.org/>`_ *并手动创建一个或多个分区。"
"请确保在解锁隐藏卷时出现的设备上创建分区*。"

#: ../storage/linux/index.rst:2
msgid "Nitrokey Storage, Linux"
msgstr "Nitrokey Storage, Linux"

#: ../storage/linux/index.rst:13 ../pro/linux/index.rst:13
msgid ""
"To access the OpenPGP smart card of the Nitrokey, install the package "
"libccid. On Debian/Ubuntu based Distributions type in terminal: *sudo apt-"
"get update && sudo apt-get install libccid*"
msgstr ""
"要访问Nitrokey的OpenPGP智能卡，请安装libccid软件包。在基于Debian/Ubuntu的发行"
"版上，在终端键入。*sudo apt-get update && sudo apt-get install libccid*。"

#: ../storage/linux/index.rst:17 ../pro/linux/index.rst:17
msgid ""
"If your distribution has a rather old version of libccid (<1.4.21) you have "
"to add the device information by yourself (for example if you are using "
"Ubuntu 14.04 or older). In this case please follow these `instructions "
"<https://www.nitrokey.com/documentation/frequently-asked-questions-"
"faq#latest-device-driver-missing-on-older-linux-distribution>`_."
msgstr ""
"如果你的发行版有一个相当老的libccid（<1.4.21）版本，你必须自己添加设备信息"
"（例如，如果你使用Ubuntu 14.04或更老的版本）。在这种情况下，请遵循这些`说明"
"<https://www.nitrokey.com/documentation/frequently-asked-questions-"
"faq#latest-device-driver-missing-on-older-linux-distribution>`_。"

#: ../storage/linux/index.rst:23 ../pro/windows/index.rst:20
msgid ""
"Download and start the `Nitrokey App <https://www.nitrokey.com/download>`_."
msgstr "下载并启动`Nitrokey App <https://www.nitrokey.com/download>`_。"

#: ../storage/linux/index.rst:26 ../storage/mac/index.rst:19
#: ../storage/windows/index.rst:25
msgid ""
"Open the About window from Nitrokey App’s menu and check if you have the "
"`latest firmware <https://github.com/Nitrokey/nitrokey-storage-firmware/"
"releases>`_ installed. If it’s not the latest, please `update <firmware-"
"update.html>`_."
msgstr ""
"从Nitrokey应用程序的菜单中打开关于窗口，检查你是否安装了`最新的固件<https://"
"github.com/Nitrokey/nitrokey-storage-firmware/releases>`_。如果它不是最新的，"
"请`更新<firmware-update.html>`_。"

#: ../storage/linux/index.rst:32 ../storage/mac/index.rst:24
#: ../storage/windows/index.rst:28
msgid ""
"Use the Nitrokey App to change the default User PIN (default: 123456) and "
"Admin PIN (default: 12345678) to your own choices."
msgstr ""
"使用Nitrokey应用程序，将默认的用户密码（默认：123456）和管理密码（默认："
"12345678）改为您自己的选择。"

#: ../storage/linux/index.rst:41 ../storage/mac/index.rst:39
#: ../storage/windows/index.rst:35 ../pro/mac/index.rst:39
#: ../pro/windows/index.rst:35
msgid ""
"For many use cases described, it is necessary to have either OpenPGP or S/"
"MIME keys installed on the device (see below)."
msgstr "对于所述的许多用例，有必要在设备上安装OpenPGP或S/MIME密钥（见下文）。"

#: ../pro/linux/openvpn-easyrsa.rst:2
msgid "OpenVPN Configuration with Easy-RSA"
msgstr "用Easy-RSA配置OpenVPN"

#: ../pro/linux/openvpn-easyrsa.rst:11
msgid ""
"This guide is work-in-progress, and will be updated accordinlgy. Please take "
"this status into consideration."
msgstr "本指南是正在进行的工作，并将根据情况进行更新。请考虑到这一状况。"

#: ../pro/linux/openvpn-easyrsa.rst:13
msgid ""
"This guide shows how to configure OpenVPN clients to login using a `Nitrokey "
"Pro 2 <https://shop.nitrokey.com/shop/product/nk-pro-2-nitrokey-pro-2-3>`_ "
"or a `Nitrokey Storage 2 <https://shop.nitrokey.com/de_DE/shop/product/"
"nitrokey-storage-2-56>`_. For software key management we will be using `Easy-"
"RSA <https://github.com/OpenVPN/easy-rsa>`_, a utility that has been "
"evolving alongside OpenVPN."
msgstr ""
"本指南展示了如何配置OpenVPN客户端使用`Nitrokey Pro 2 <https://shop.nitrokey."
"com/shop/product/nk-pro-2-nitrokey-pro-2-3>`_或`Nitrokey Storage 2 <https://"
"shop.nitrokey.com/de_DE/shop/product/nitrokey-storage-2-56>`_登陆。对于软件密"
"钥管理，我们将使用`Easy-RSA <https://github.com/OpenVPN/easy-rsa>`_，一个与"
"OpenVPN一起发展的工具。"

#: ../pro/linux/openvpn-easyrsa.rst:17
msgid ""
"To sign the certificates, we will use a `Nitrokey HSM 2 <https://shop."
"nitrokey.com/shop/product/nk-pro-2-nitrokey-pro-2-3>`_ set up as "
"`Certificate Authority <certificate-authority.html#creating-the-intermediate-"
"certificate-authority>`_, however this guide does not cover the set up of "
"the CA itself (it is clear and `well documented here <certificate-authority."
"html#sign-a-server-certificate>`_)."
msgstr ""
"为了签署证书，我们将使用`Nitrokey HSM 2 <https://shop.nitrokey.com/shop/"
"product/nk-pro-2-nitrokey-pro-2-3>`_设置为`认证机构<certificate-authority."
"html#creating-the-intermediate-certificate-authority>`_。然而，本指南并不包括"
"CA本身的设置（它很清楚，并且`这里有很好的记录<certificate-authority."
"html#sign-a-server-certificate>`_）。"

#: ../pro/linux/openvpn-easyrsa.rst:20
msgid ""
"We will use Easy-RSA, because it seems to provide some flexibility, and "
"allows key management via external PKIs. We will use it on the server to "
"issue the signing request, and repeat the same process on the client. The "
"Certificate Signing Requests will be signed by the CA on the Nitorkey HSM, "
"and re-transmitted to the server and the client."
msgstr ""
"我们将使用Easy-RSA，因为它似乎提供了一些灵活性，并允许通过外部PKI进行密钥管"
"理。我们将在服务器上使用它来发出签名请求，并在客户端重复同样的过程。证书签名"
"请求将由Nitorkey HSM上的CA签名，并重新传送到服务器和客户端。"

#: ../pro/linux/openvpn-easyrsa.rst:26
msgid ""
"In the following documentation we will require 3 different machines as "
"following:"
msgstr "在下面的文件中，我们将需要3台不同的机器，如下。"

#: ../pro/linux/openvpn-easyrsa.rst:28
msgid "OpenVPN server (v. 2.5) on Debian 10 (EC2 virtual machine - AWS)"
msgstr "OpenVPN服务器（2.5版）在Debian 10上（EC2虚拟机-AWS）。"

#: ../pro/linux/openvpn-easyrsa.rst:30
msgid "OpenVPN client (v. 2.4.9) on Fedora 30 (local machine)"
msgstr "Fedora 30上的OpenVPN客户端（2.4.9版）（本地机）。"

#: ../pro/linux/openvpn-easyrsa.rst:32
msgid ""
"The Certificate Authority will be accessible from a standalone machine with "
"Fedora 30 (local machine)"
msgstr "证书颁发机构将可以从一台装有Fedora 30的独立机器上访问（本地机器）。"

#: ../pro/linux/openvpn-easyrsa.rst:35
msgid ""
"To interact with the devices we will require `OpenSC 0.20 <https://github."
"com/OpenSC/OpenSC/wiki>`_ installed on the client and CA machine (the local "
"machines). You can follow the instructions to set it up in `this link "
"(*Unix) <https://github.com/OpenSC/OpenSC/wiki/Compiling-and-Installing-on-"
"Unix-flavors>`_."
msgstr ""
"为了与设备互动，我们需要在客户机和CA机（本地机器）上安装`OpenSC 0.20 "
"<https://github.com/OpenSC/OpenSC/wiki>`_。你可以按照`这个链接（*Unix）"
"<https://github.com/OpenSC/OpenSC/wiki/Compiling-and-Installing-on-Unix-"
"flavors>`_中的说明来设置它。"

#: ../pro/linux/openvpn-easyrsa.rst:38
msgid ""
"To download the dependencies on Fedora machines we can this instruction:"
msgstr "要在Fedora机器上下载依赖项，我们可以用这个指令。"

#: ../pro/linux/openvpn-easyrsa.rst:44
msgid ""
"For Debian Linux, more recent OpenSC packages are available `here <https://"
"github.com/Nitrokey/opensc-build>`_."
msgstr ""
"对于Debian Linux，更多最新的OpenSC软件包可以在`这里获得 <https://github.com/"
"Nitrokey/opensc-build>`_。"

#: ../pro/linux/openvpn-easyrsa.rst:46
msgid "We will use the following Nitrokeys for physical key management:"
msgstr "我们将使用以下硝基钥匙进行物理钥匙管理。"

#: ../pro/linux/openvpn-easyrsa.rst:48
msgid ""
"An authentication key using the `Nitrokey Pro 2 (pdf) <https://www.nitrokey."
"com/files/doc/Nitrokey_Pro_factsheet.pdf>`_"
msgstr ""
"一个使用`Nitrokey Pro 2 (pdf)的认证密钥 <https://www.nitrokey.com/files/doc/"
"Nitrokey_Pro_factsheet.pdf>`_"

#: ../pro/linux/openvpn-easyrsa.rst:51
msgid ""
"A Certificate Authority (CA) using the `Nitrokey HSM 2 (pdf) <https://www."
"nitrokey.com/files/doc/Nitrokey_HSM_factsheet.pdf>`_"
msgstr ""
"一个使用`Nitrokey HSM 2 (pdf) <https://www.nitrokey.com/files/doc/"
"Nitrokey_HSM_factsheet.pdf>`_的证书机构（CA）。"

#: ../pro/linux/openvpn-easyrsa.rst:54
msgid ""
"As a reminder, to build a Certificate Authority on Nitrokey HSM 2, you may "
"follow the instructions available `in the documentation <certificate-"
"authority.html#sign-a-server-certificate>`_."
msgstr ""
"作为提醒，要在Nitrokey HSM 2上建立一个证书颁发机构，你可以按照文档`中提供的说"
"明<certificate-authority.html#sign-a-server-certificate>`_。"

#: ../pro/linux/openvpn-easyrsa.rst:56
msgid ""
"Alternatively you may set up your own CA on a `on a separate machine "
"<https://www.digitalocean.com/community/tutorials/how-to-set-up-and-"
"configure-a-certificate-authority-ca-on-ubuntu-20-04>`_, or use the OpenVPN "
"tutorial which also relies on `Easy-RSA <https://openvpn.net/community-"
"resources/setting-up-your-own-certificate-authority-ca/>`_. The last 2 "
"options rely on software solutions for key management."
msgstr ""
"另外，你可以在`单独的机器上<https://www.digitalocean.com/community/tutorials/"
"how-to-set-up-and-configure-a-certificate-authority-ca-on-ubuntu-20-04>`_设置"
"你自己的CA，或者使用OpenVPN教程，它也依赖于`Easy-RSA <https://openvpn.net/"
"community-resources/setting-up-your-own-certificate-authority-ca/>`_。后面2个"
"选项依靠软件解决方案进行密钥管理。"

#: ../pro/linux/openvpn-easyrsa.rst:61
msgid "Server side"
msgstr "服务器端"

#: ../pro/linux/openvpn-easyrsa.rst:64
msgid "1. Install OpenVPN"
msgstr "1.安装OpenVPN"

#: ../pro/linux/openvpn-easyrsa.rst:66
msgid ""
"First we need to enable IP Forwarding by editing ``/etc/sysctl.conf`` file"
msgstr "首先，我们需要通过编辑``/etc/sysctl.conf``文件启用IP转发功能。"

#: ../pro/linux/openvpn-easyrsa.rst:72
msgid "Uncomment or edit accordingly the following line"
msgstr "取消注释或相应地编辑以下一行"

#: ../pro/linux/openvpn-easyrsa.rst:78
msgid "Close after saving it, and enter this command"
msgstr "保存后关闭，并输入以下命令"

#: ../pro/linux/openvpn-easyrsa.rst:84
msgid ""
"Once IP forwarding is done, we will need to download the latest release of "
"OpenvPN for our Debian 10 server, according to `these instructions <https://"
"community.openvpn.net/openvpn/wiki/OpenvpnSoftwareRepos>`_:"
msgstr ""
"一旦IP转发完成，我们将需要为我们的Debian 10服务器下载最新版本的OpenvPN，根据`"
"这些说明<https://community.openvpn.net/openvpn/wiki/OpenvpnSoftwareRepos>`_。"

#: ../pro/linux/openvpn-easyrsa.rst:86
msgid "Change to root and download the GPG key that signed the package"
msgstr "改为根目录，下载签署软件包的GPG密钥。"

#: ../pro/linux/openvpn-easyrsa.rst:93
msgid ""
"Add the URL of the adequate OpenVPN packages to the ``sources.list`` file"
msgstr "在``sources.list``文件中添加足够的OpenVPN包的URL。"

#: ../pro/linux/openvpn-easyrsa.rst:100
msgid ""
"We downloaded OpenVPN 2.5 as “password prompt” requires at least OpenVPN "
"`version 2.4.8 <https://community.openvpn.net/openvpn/ticket/1215>`_ to "
"login."
msgstr ""
"我们下载了OpenVPN 2.5，因为 \"密码提示 \"至少需要OpenVPN `版本2.4.8 <https://"
"community.openvpn.net/openvpn/ticket/1215>`_才能登陆。"

#: ../pro/linux/openvpn-easyrsa.rst:103
msgid "Next we download OpenVPN"
msgstr "接下来我们下载OpenVPN"

#: ../pro/linux/openvpn-easyrsa.rst:109
msgid ""
"If you want to check the version, it possible by calling ``--version`` and "
"print the following:"
msgstr "如果你想检查版本，可以通过调用``--version``并打印如下。"

#: ../pro/linux/openvpn-easyrsa.rst:122
msgid "2. Install Easy-RSA"
msgstr "2.安装Easy-RSA"

#: ../pro/linux/openvpn-easyrsa.rst:124
msgid ""
"To build the PKI, we will download the latest version of Easy-RSA on the "
"server and client machines. To get the latest release, go to the `Releases "
"page on the official EasyRSA GitHub project <https://github.com/OpenVPN/easy-"
"rsa/releases>`_, copy the download link for the file ending in ``.tgz``, and "
"then paste it into the following command:"
msgstr ""
"为了构建PKI，我们将在服务器和客户机上下载最新版本的Easy-RSA。要获得最新版本，"
"请到EasyRSA官方GitHub项目的`Releases页面<https://github.com/OpenVPN/easy-rsa/"
"releases>`_，复制以``.tgz``结尾的文件下载链接，然后将其粘贴到以下命令。"

#: ../pro/linux/openvpn-easyrsa.rst:126
msgid "Download the latest release"
msgstr "下载最新版本"

#: ../pro/linux/openvpn-easyrsa.rst:133
msgid "Extract the tarball"
msgstr "提取tarball文件"

#: ../pro/linux/openvpn-easyrsa.rst:142
msgid "3. Create a PKI for OpenVPN server"
msgstr "3.为OpenVPN服务器创建一个PKI"

#: ../pro/linux/openvpn-easyrsa.rst:144
msgid ""
"Before you can create your OpenVPN server’s private key and certificate, you "
"need to create a local Public Key Infrastructure directory on your OpenVPN "
"server. You will use this directory to manage the server and clients’ "
"certificate requests, instead of making them directly on your CA server."
msgstr ""
"在创建OpenVPN服务器的私钥和证书之前，你需要在OpenVPN服务器上创建一个本地公钥"
"基础设施目录。你将使用这个目录来管理服务器和客户的证书请求，而不是直接在你的"
"CA服务器上提出。"

#: ../pro/linux/openvpn-easyrsa.rst:146
msgid ""
"To build a PKI directory on your OpenVPN server, you’ll need to populate a "
"file called ``vars`` with some default values."
msgstr ""
"要在你的OpenVPN服务器上建立一个PKI目录，你需要在一个名为``vars``的文件中填充"
"一些默认值。"

#: ../pro/linux/openvpn-easyrsa.rst:148
msgid "Create a ``vars`` file"
msgstr "创建一个``vars``文件"

#: ../pro/linux/openvpn-easyrsa.rst:156
msgid "Once the file is opened, paste in the following two lines"
msgstr "一旦文件被打开，粘贴以下两行内容"

#: ../pro/linux/openvpn-easyrsa.rst:163
msgid ""
"These are the only two lines that you need in this ``vars`` file on your "
"OpenVPN server since it will not be used as a Certificate Authority. They "
"will ensure that your private keys and certificate requests are configured "
"to use Elliptic Curve Cryptography (ECC) to generate keys, and secure "
"signatures for your clients and OpenVPN server."
msgstr ""
"这是你在OpenVPN服务器上的``vars``文件中唯一需要的两行，因为它不会被用作证书授"
"权。他们将确保你的私钥和证书请求被配置为使用椭圆曲线加密法（ECC）来生成密钥，"
"并为你的客户和OpenVPN服务器提供安全签名。"

#: ../pro/linux/openvpn-easyrsa.rst:165
msgid ""
"In regards to the choice of the cryptographic algorithms, I follow the model "
"in `this tutorial <https://www.digitalocean.com/community/tutorials/how-to-"
"set-up-and-configure-an-openvpn-server-on-centos-8>`_, and you can customize "
"these according to your specific needs."
msgstr ""
"关于加密算法的选择，我遵循`本教程<https://www.digitalocean.com/community/"
"tutorials/how-to-set-up-and-configure-an-openvpn-server-on-centos-8>`_中的模"
"式，你可以根据你的具体需要来定制这些算法。"

#: ../pro/linux/openvpn-easyrsa.rst:167
msgid "Initialize the PKI"
msgstr "初始化PKI"

#: ../pro/linux/openvpn-easyrsa.rst:169
msgid ""
"Once you have populated the ``vars`` file you can proceed with creating the "
"PKI directory. To do so, run the easyrsa script with the init-pki option:"
msgstr ""
"一旦你填充了``vars``文件，就可以继续创建PKI目录。要做到这一点，请使用init-pki"
"选项运行easyrsa脚本。"

#: ../pro/linux/openvpn-easyrsa.rst:175
msgid ""
"After you’ve initialized your PKI on the OpenVPN server, you are ready to "
"move on to the next step, which is creating an OpenVPN server certificate "
"request and private key."
msgstr ""
"在你初始化了OpenVPN服务器上的PKI后，你就可以进入下一步了，也就是创建OpenVPN服"
"务器证书请求和私钥。"

#: ../pro/linux/openvpn-easyrsa.rst:178
msgid "4. Create ``server.req`` and ``server.key``"
msgstr "4.创建``server.req`和``server.key``。"

#: ../pro/linux/openvpn-easyrsa.rst:180
msgid ""
"Now that your OpenVPN server has all the prerequisites installed, the next "
"step is to generate a key pair composed of a private key (to keep secret), "
"and a Certificate Signing Request (``.csr``) on your OpenVPN server."
msgstr ""
"现在你的OpenVPN服务器已经安装了所有先决条件，下一步是在你的OpenVPN服务器上生"
"成一个由私钥（保密）和证书签名请求（``.csr``）组成的密钥对。"

#: ../pro/linux/openvpn-easyrsa.rst:182
msgid ""
"In general terms, on systems where we generate a key and request, these "
"files are left unencrypted by using the ``nopass`` argument, since servers "
"usually need to start up without any password input. This generates an "
"*unencrypted key*, so mind *protect its access and file permissions* "
"carefully."
msgstr ""
"一般来说，在我们生成密钥和请求的系统上，这些文件通过使用``nopass``参数而不被"
"加密，因为服务器通常需要在没有任何密码输入的情况下启动。这就产生了一个*未加密"
"的密钥，所以要注意*保护其访问和文件权限*。"

#: ../pro/linux/openvpn-easyrsa.rst:186
msgid "Configuration notes from OpenVPN:"
msgstr "来自OpenVPN的配置说明。"

#: ../pro/linux/openvpn-easyrsa.rst:188
msgid ""
"The server, and each client, must have their own cert and key file. The "
"server and all clients will use the same CA file."
msgstr ""
"服务器和每个客户都必须有自己的证书和密钥文件。服务器和所有客户将使用同一个CA"
"文件。"

#: ../pro/linux/openvpn-easyrsa.rst:190
msgid "Server certificate should have the following:"
msgstr "服务器证书应具有以下内容。"

#: ../pro/linux/openvpn-easyrsa.rst:192
msgid "``keyUsage:  digitalSignature, keyEncipherment``"
msgstr "``keyUsage:  digitalSignature, keyEncipherment``"

#: ../pro/linux/openvpn-easyrsa.rst:194
msgid "``extendedKeyUsage: serverAuth``"
msgstr "``extendedKeyUsage: serverAuth``"

#: ../pro/linux/openvpn-easyrsa.rst:196
msgid "Create the signing request for the server"
msgstr "为服务器创建签名请求"

#: ../pro/linux/openvpn-easyrsa.rst:198
msgid ""
"Navigate to the ``~/easyrsa`` directory on your OpenVPN Server as your non-"
"root user, and enter the following commands:"
msgstr ""
"以非root用户身份导航到OpenVPN服务器上的``~/easyrsa`目录，并输入以下命令。"

#: ../pro/linux/openvpn-easyrsa.rst:205
msgid ""
"This will create a private key for the server and a certificate request file "
"called ``server.req``."
msgstr "这将为服务器创建一个私钥和一个名为``的证书请求文件，server.req``。"

#: ../pro/linux/openvpn-easyrsa.rst:207
msgid ""
"Once you have a signed certificate, you’ll transfer it back to the OpenVPN "
"server."
msgstr "一旦你有了签名的证书，你就把它转回OpenVPN服务器。"

#: ../pro/linux/openvpn-easyrsa.rst:209
msgid "Copy the key to the OpenVPN server directory"
msgstr "复制密钥到OpenVPN服务器目录"

#: ../pro/linux/openvpn-easyrsa.rst:215
msgid ""
"After completing these steps, you have successfully created a private key "
"for your OpenVPN server. You have also generated a Certificate Signing "
"Request for the OpenVPN server."
msgstr ""
"完成这些步骤后，你已经成功为你的OpenVPN服务器创建了一个私钥。你还为OpenVPN服"
"务器生成了一个证书签名请求。"

#: ../pro/linux/openvpn-easyrsa.rst:219
msgid "File extensions for certificate signing requests"
msgstr "证书签署请求的文件扩展名"

#: ../pro/linux/openvpn-easyrsa.rst:221
msgid ""
"The file extension that is adopted by the CA and HSM tutorial indicates the "
"creation of a ``.csr`` file, however Easy-RSA creates certificate signing "
"requests with a ``.req`` extension."
msgstr ""
"CA和HSM教程采用的文件扩展名表示创建``.csr``文件，然而Easy-RSA创建的证书签署请"
"求是``.req``扩展名。"

#: ../pro/linux/openvpn-easyrsa.rst:225
msgid ""
"We will use interchangeably both extensions, while making sure that we "
"transfer the right files to the Certificate Authority, and generate a final "
"certificate with a ``.crt`` extension."
msgstr ""
"我们将交替使用这两个扩展名，同时确保将正确的文件传输给证书颁发机构，并生成一"
"个带有``.crt``扩展的最终证书。"

#: ../pro/linux/openvpn-easyrsa.rst:229
msgid ""
"In the next section of this guide, we will sign a ``.req`` file with our CA "
"on deployed on the HSM 2 device. For this purpose, I will use a dedicated "
"machine to sign the requests."
msgstr ""
"在本指南的下一节，我们将用我们部署在HSM 2设备上的CA签署一个``.req``文件。为"
"此，我将使用一台专用机器来签署请求。"

#: ../pro/linux/openvpn-easyrsa.rst:232
msgid "5. Sign and retrieve ``server.crt``"
msgstr "5.签署和检索``server.crt``。"

#: ../pro/linux/openvpn-easyrsa.rst:234
msgid ""
"The following instructions require the transfer of the ``server.req`` (or "
"``server.csr``) file to the CA system."
msgstr "以下指令要求将``server.req``（或``server.csr``）文件传输到CA系统。"

#: ../pro/linux/openvpn-easyrsa.rst:237
msgid ""
"The transfer itself is not security sensitive, though it is wise to verify "
"if the received file matches the sender’s copy, if the transport is "
"untrusted."
msgstr ""
"传输本身并不具有安全敏感性，不过，如果传输不受信任，验证收到的文件是否与发送"
"者的副本相符是明智的。"

#: ../pro/linux/openvpn-easyrsa.rst:239
msgid ""
"In order to go through these steps, I will extensively rely on `these "
"instructions <certificate-authority.html#creating-the-intermediate-"
"certificate-authority>`_, to sign the certificate signing requests, once we "
"generated them with Easy-RSA."
msgstr ""
"为了完成这些步骤，我将广泛依靠`这些说明<certificate-authority.html#creating-"
"the-intermediate-certificate-authority>`_，来签署证书签署请求，一旦我们用"
"Easy-RSA生成它们。"

#: ../pro/linux/openvpn-easyrsa.rst:242
msgid "5.1. Sign the ``server.req`` file"
msgstr "5.1.签署``server.req``文件"

#: ../pro/linux/openvpn-easyrsa.rst:244
msgid ""
"On the local machine dedicated to access the HSM, we will use the tools "
"provided by Opensc 0.20 in order to sign the ``.req`` file, and send it back "
"to the OpenVPN server. We assume we have transferred the file from the "
"server machine to the CA machine."
msgstr ""
"在专用于访问HSM的本地机器上，我们将使用Opensc 0.20提供的工具来签署``.req``文"
"件，并把它送回OpenVPN服务器。我们假设我们已经将文件从服务器机器传输到CA机器。"

#: ../pro/linux/openvpn-easyrsa.rst:246
msgid ""
"First we start by plugging the HSM Nitrokey, and enter this instruction for "
"listing the keys available."
msgstr "首先，我们先插上HSM Nitrokey，并输入这个指令，列出可用的按键。"

#: ../pro/linux/openvpn-easyrsa.rst:248
msgid "Query the list of available devices"
msgstr "查询可用设备的列表"

#: ../pro/linux/openvpn-easyrsa.rst:256
msgid "The key’s URI should be in this format:"
msgstr "该钥匙的URI应该是这种格式。"

#: ../pro/linux/openvpn-easyrsa.rst:262
msgid "Create ``openvpn/`` directory under ``certificate-authority/``"
msgstr "在``openvpn/``目录下创建``certificate-authority/``。"

#: ../pro/linux/openvpn-easyrsa.rst:269
msgid "Sign the ``server.req``"
msgstr "签署``server.req``。"

#: ../pro/linux/openvpn-easyrsa.rst:276
msgid "5.2. Retrieve the ``server.crt`` file to the server machine"
msgstr "5.2.检索``server.crt``文件到服务器机上"

#: ../pro/linux/openvpn-easyrsa.rst:278
msgid "Transfer the signed certificates to the server"
msgstr "将签名的证书转移到服务器上"

#: ../pro/linux/openvpn-easyrsa.rst:280
msgid ""
"From the CA machine, copy the files ``server.crt`` and ``chain.crt`` to the "
"OpenVPN server. In this example we will use the ``scp`` command as following:"
msgstr ""
"从CA机器上复制文件``server.crt`和``chain.crt``到OpenVPN服务器。在这个例子中，"
"我们将使用``scp``命令，如下所示。"

#: ../pro/linux/openvpn-easyrsa.rst:286
msgid "Place the certificates on the server’s directory"
msgstr "将证书放在服务器的目录上"

#: ../pro/linux/openvpn-easyrsa.rst:294
msgid "CA Certificate and ``chain.crt``"
msgstr "CA证书和``chain.crt``。"

#: ../pro/linux/openvpn-easyrsa.rst:296
msgid ""
"In the above, the CA returns the signed sever certificate, and includes the "
"CA certificate ``CA.crt`` which is the ``chain.crt`` file. This can be done "
"over an insecure channel, though the client is encouraged to confirm if the "
"received ``chain.crt`` is valid, if the transport is untrusted."
msgstr ""
"在上面，CA返回已签名的sever证书，并包括CA证书``CA.crt``，这是``chain.crt`` 文"
"件。这可以通过不安全的通道进行，尽管鼓励客户端确认收到的``chain.crt``是否有"
"效，如果传输是不信任的。"

#: ../pro/linux/openvpn-easyrsa.rst:302
msgid ""
"It is possible to rename the file ``chain.crt`` file to ``CA.crt`` on the "
"target machine, however we will use ``chain.crt`` in the next instructions."
msgstr ""
"可以在目标机上将``chain.crt``文件重命名为``CA.crt`。但是我们将在接下来的说明"
"中使用``chain.crt``。"

#: ../pro/linux/openvpn-easyrsa.rst:307
msgid "6. Configure the OpenVPN server"
msgstr "6.配置OpenVPN服务器"

#: ../pro/linux/openvpn-easyrsa.rst:309
msgid ""
"A connection that uses TLS requires multiple `certificates and keys for "
"authentication <https://wiki.teltonika-networks.com/view/"
"OpenVPN_configuration_examples>`_. Now that we issued and signed those, we "
"can place them in the right directories. The breakdown of the certificates "
"and keys that must be located at the root directory are the following:"
msgstr ""
"一个使用TLS的连接需要多个`证书和密钥用于认证<https://wiki.teltonika-networks."
"com/view/OpenVPN_configuration_examples>`_。现在，我们发布并签署了这些证书，"
"我们可以把它们放在正确的目录中。必须位于根目录下的证书和密钥的分类如下。"

#: ../pro/linux/openvpn-easyrsa.rst:320
msgid ""
"On your OpenVPN server, now you can create the configuration file ``server."
"conf`` with your favorite text editor. The file can be configured according "
"to your needs, while we make sure to change the server certificate and key "
"sections according the names you chose for the your the files we signed:"
msgstr ""
"在你的OpenVPN服务器上，现在你可以用你喜欢的文本编辑器创建配置文件``server."
"conf``。该文件可以根据你的需要进行配置，同时我们确保根据你为我们签署的文件选"
"择的名称来改变服务器证书和密钥部分。"

#: ../pro/linux/openvpn-easyrsa.rst:329
msgid ""
"Here is the configuration file we can use for testing these instructions:"
msgstr "这里是我们可以用来测试这些指令的配置文件。"

#: ../pro/linux/openvpn-easyrsa.rst:359
msgid ""
"To test if the configuration functions properly, we can use this command:"
msgstr "为了测试配置的功能是否正常，我们可以使用这个命令。"

#: ../pro/linux/openvpn-easyrsa.rst:366
msgid "7. Start the OpenVPN service on the server"
msgstr "7.在服务器上启动OpenVPN服务"

#: ../pro/linux/openvpn-easyrsa.rst:368
msgid ""
"Enable the OpenVPN service by adding it to systemctl, and start it using "
"these commands:"
msgstr "将OpenVPN服务添加到systemctl中启用，并使用这些命令启动它。"

#: ../pro/linux/openvpn-easyrsa.rst:375
msgid "To Double check if the OpenVPN service is active use this command:"
msgstr "要重复检查OpenVPN服务是否激活，请使用此命令。"

#: ../pro/linux/openvpn-easyrsa.rst:381
msgid "The OpenVPN should be running at this point."
msgstr "这时，OpenVPN应该正在运行。"

#: ../pro/linux/openvpn-easyrsa.rst:386
msgid "Client side configuration"
msgstr "客户端配置"

#: ../pro/linux/openvpn-easyrsa.rst:400
msgid "1. Install OpenVPN and Easy-RSA"
msgstr "1.安装OpenVPN和Easy-RSA"

#: ../pro/linux/openvpn-easyrsa.rst:402
msgid "Install the software"
msgstr "安装软件"

#: ../pro/linux/openvpn-easyrsa.rst:404
msgid ""
"We can use directly ``dnf install`` to install OpenVPN 2.4.9 and Easy-RSA "
"3.0.7"
msgstr "我们可以直接使用``dnf install``来安装OpenVPN 2.4.9 和 Easy-RSA 3.0.7"

#: ../pro/linux/openvpn-easyrsa.rst:410
msgid "Then we create as non-root a directory for Easy RSA called ``Easy-RSA``"
msgstr "然后我们为Easy RSA创建一个非根目录，名为``Easy-RSA``。"

#: ../pro/linux/openvpn-easyrsa.rst:416
msgid "And link it to the Easy RSA package we just installed"
msgstr "并将其链接到我们刚刚安装的Easy RSA软件包上"

#: ../pro/linux/openvpn-easyrsa.rst:423
msgid "2. Create a PKI for the OpenVPN client"
msgstr "2.为OpenVPN客户端创建一个PKI"

#: ../pro/linux/openvpn-easyrsa.rst:425
msgid ""
"In the same manner we created a PKI on the OpenVPN server, we will create a "
"PKI using Easy-RSA on the client side."
msgstr ""
"按照我们在OpenVPN服务器上创建PKI的方式，我们将在客户端使用Easy-RSA创建一个"
"PKI。"

#: ../pro/linux/openvpn-easyrsa.rst:428
msgid "3. Create a ``client.req`` and ``client.key``"
msgstr "3.创建一个``client.req`和``client.key``。"

#: ../pro/linux/openvpn-easyrsa.rst:430
msgid ""
"In the same manner we issued the key pair on the sever, we generate a key "
"pair for the client which will be composed of the ``client.req`` file and "
"the ``client.key`` file. The latter must be kept secret on the client "
"machine."
msgstr ""
"以我们在服务器上发布密钥对的同样方式，我们为客户机生成一个密钥对，它将由"
"``client.req`文件和``client.key`文件组成。后者必须在客户机上保持秘密。"

#: ../pro/linux/openvpn-easyrsa.rst:434
msgid "4. Sign ``client.req`` and issue the ``client.crt`` file"
msgstr "4.签署``client.req``并发布``client.crt``文件"

#: ../pro/linux/openvpn-easyrsa.rst:436
msgid ""
"To transfer the ``client.req`` file to the CA machine, we will use the same "
"method as we did for the ``server.req`` file."
msgstr ""
"要把``client.req``文件传输到CA机器，我们将使用与``server.req``文件同样的方"
"法。"

#: ../pro/linux/openvpn-easyrsa.rst:438
msgid ""
"Once transferred, on the CA machine we sign the certificate signing request "
"file with this command"
msgstr "一旦转移，在CA机器上我们用这个命令签署证书签署请求文件"

#: ../pro/linux/openvpn-easyrsa.rst:445
msgid "5. Import ``client.crt`` on the Nitrokey from the CA machine"
msgstr "5.从CA机器上导入``client.crt``在Nitrokey上。"

#: ../pro/linux/openvpn-easyrsa.rst:447
msgid ""
"After creating the ``client.crt`` file, we plug the Nitrokey Pro 2 device in "
"the CA machine, and import the ``.crt`` to the Pro 2 device using this "
"command:"
msgstr ""
"在创建了``client.crt``文件后，我们将Nitrokey Pro 2设备插入CA机器，并使用这个"
"命令将``.crt``导入到Pro 2设备。"

#: ../pro/linux/openvpn-easyrsa.rst:453
msgid ""
"You can see if the key is effectively stored on the Nitrokey using this "
"command:"
msgstr "你可以用这个命令查看钥匙是否有效地存储在Nitrokey上。"

#: ../pro/linux/openvpn-easyrsa.rst:459
msgid "Or alternatively"
msgstr "或者说是"

#: ../pro/linux/openvpn-easyrsa.rst:465
msgid ""
"Fore more commands you can refer to the `OpenSC wiki <https://github.com/"
"OpenSC/OpenSC/wiki/OpenPGP-card>`_."
msgstr ""
"更多的命令你可以参考`OpenSC wiki <https://github.com/OpenSC/OpenSC/wiki/"
"OpenPGP-card>`_。"

#: ../pro/linux/openvpn-easyrsa.rst:468
msgid "6. Retrieve the ``chain.crt`` file from the CA machine"
msgstr "6.从CA机器上获取``chain.crt``文件"

#: ../pro/linux/openvpn-easyrsa.rst:470
msgid ""
"While we keep the ``client.crt``\\ stored on the nitrokey Pro 2 device, we "
"must retrieve the ``chain.crt`` file on the client machine, and store it in "
"the adequate directory. We may use ``scp`` as in the method explained in the "
"server section of this guide."
msgstr ""
"虽然我们把``client.crt``\\ stored on the nitrokey Pro 2 device, we must "
"retrieve the ``chain.crt``文件保存在客户端机器上，并把它存放在足够的目录中。"
"我们可以使用``scp``，正如本指南的服务器部分所解释的方法。"

#: ../pro/linux/openvpn-easyrsa.rst:473
msgid "7. Configure the client to interact with the Nitrokey"
msgstr "7.配置客户端以与Nitrokey进行交互。"

#: ../pro/linux/openvpn-easyrsa.rst:475
msgid ""
"Now back on the client machine, we will plug the Nitrokey Pro and use it to "
"establish the VPN connection with the server. In general terms, a connection "
"that uses TLS requires multiple certificates and keys for authentication:"
msgstr ""
"现在回到客户机上，我们将插入Nitrokey Pro，用它来建立与服务器的VPN连接。一般来"
"说，使用TLS的连接需要多个证书和密钥进行认证。"

#: ../pro/linux/openvpn-easyrsa.rst:484
msgid ""
"For this guide we can the following ``client.conf`` file, and add the "
"required options to it accordingly:"
msgstr ""
"对于这个指南，我们可以在下面的``client.conf``文件中，相应地添加需要的选项。"

#: ../pro/linux/openvpn-easyrsa.rst:506
msgid "Determine the correct object"
msgstr "确定正确的对象"

#: ../pro/linux/openvpn-easyrsa.rst:508
msgid ""
"Each PKCS#11 provider can support multiple devices. In order to view the "
"available object list you can use the following command:"
msgstr ""
"每个PKCS#11提供者可以支持多个设备。为了查看可用的对象列表，你可以使用以下命"
"令。"

#: ../pro/linux/openvpn-easyrsa.rst:524
msgid ""
"Each certificate/private key pair have unique ``Serialized id`` string. The "
"serialized id string of the requested certificate should be specified, in "
"the configuration file. We can do this by adding the ``pkcs11-id`` option "
"using single quote marks."
msgstr ""
"每个证书/私钥对都有唯一的``Serialized id``字符串。应在配置文件中指定请求的证"
"书的序列化id字符串。我们可以通过添加``pkcs11-id``选项，使用单引号来实现这一"
"点。"

#: ../pro/linux/openvpn-easyrsa.rst:530
msgid "Add retrieved Serialized ID to the configuration file"
msgstr "将检索到的序列化ID添加到配置文件中"

#: ../pro/linux/openvpn-easyrsa.rst:532
msgid ""
"Using your favorite text editor, open the server.conf file, and add the "
"following lines, while taking care to insert your own ``Serialized id``:"
msgstr ""
"使用你喜欢的文本编辑器，打开server.conf文件，并添加以下几行，同时注意插入你自"
"己的``Serialized id``。"

#: ../pro/linux/openvpn-easyrsa.rst:539
msgid ""
"For additional `settings related to OpenVPN <https://openvpn.net/community-"
"resources/how-to/>`_ authentication, you may also add few lines to handle "
"key maganagement, although it is optional."
msgstr ""
"对于与OpenVPN有关的额外`设置<https://openvpn.net/community-resources/how-to/"
">`_认证，你也可以添加几行来处理密钥管理，尽管它是可选的。"

#: ../pro/linux/openvpn-easyrsa.rst:543 ../pro/linux/openvpn-easyrsa.rst:567
msgid "Click to view the code"
msgstr "点击查看代码"

#: ../pro/linux/openvpn-easyrsa.rst:560
msgid "Optional step"
msgstr "可选步骤"

#: ../pro/linux/openvpn-easyrsa.rst:563
msgid ""
"If you need to test the configuration, with and without the token on the "
"Nitrokey, you may add lines to the same ``client.conf`` and comment/"
"uncomment the relevant lines according to your needs:"
msgstr ""
"如果你需要测试配置，在有和没有Nitrokey的情况下，你可以在同一个``client.conf``"
"中添加行，并根据你的需要注释/取消注释相关行。"

#: ../pro/linux/openvpn-easyrsa.rst:577
msgid "Configure the OpenVPN client"
msgstr "配置OpenVPN客户端"

#: ../pro/linux/openvpn-easyrsa.rst:579
msgid "The final configuration file ``client.conf`` should look like this one:"
msgstr "最终的配置文件``client.conf``应该看起来像这样的文件。"

#: ../pro/linux/openvpn-easyrsa.rst:622
msgid "Known issues"
msgstr "已知问题"

#: ../pro/linux/openvpn-easyrsa.rst:624
msgid ""
"There are some known issues related to OpenVPN login with OpenSC. Please "
"consult these issues `here <https://github.com/Nitrokey/wiki/wiki/3rd-Party-"
"Issues>`_."
msgstr ""
"有一些与OpenVPN登录OpenSC有关的已知问题。请参考这些问题 `这里 <https://"
"github.com/Nitrokey/wiki/wiki/3rd-Party-Issues>`_。"

#: ../pro/linux/openvpn-easyrsa.rst:627
msgid "8. Start the OpenVPN client"
msgstr "8.启动OpenVPN客户端"

#: ../pro/linux/openvpn-easyrsa.rst:629
msgid "Start the OpenVPN service on the client"
msgstr "在客户端启动OpenVPN服务"

#: ../pro/linux/openvpn-easyrsa.rst:631
msgid "Enable the OpenVPN service, and start it using these commands:"
msgstr "启用OpenVPN服务，并使用这些命令启动它。"

#: ../pro/linux/openvpn-easyrsa.rst:638
msgid "To double check if the OpenVPN service is active use this command:"
msgstr "要仔细检查OpenVPN服务是否激活，请使用此命令。"

#: ../pro/linux/openvpn-easyrsa.rst:644
msgid "Enter your User PIN"
msgstr "输入你的用户密码"

#: ../pro/linux/openvpn-easyrsa.rst:646
msgid "When executing OpenVPN client, Nitrokey’s PIN needs to be entered:"
msgstr "在执行OpenVPN客户端时，需要输入Nitrokey的PIN。"

#: ../pro/linux/openvpn-easyrsa.rst:656
msgid ""
"Unfortunately OpenVPN doesn’t seem to be able to establish a handshake and "
"stops at an error as reported `here <https://support.nitrokey.com/t/nitrokey-"
"pro-with-openssl-1-1-1-tls-1-3-and-rsa-based-certificates/2180/2>`_, `here "
"<https://support.nitrokey.com/t/openvpn-openssl-error-141f0006/2637>`_ and "
"`here <https://community.openvpn.net/openvpn/ticket/1215>`_"
msgstr ""
"不幸的是，OpenVPN似乎无法建立握手，并停在一个错误上，如报告的那样 `这里 "
"<https://support.nitrokey.com/t/nitrokey-pro-with-openssl-1-1-1-tls-1-3-and-"
"rsa-based-certificates/2180/2>`_。`这里 <https://support.nitrokey.com/t/"
"openvpn-openssl-error-141f0006/2637>`_和 `这里 <https://community.openvpn."
"net/openvpn/ticket/1215>`_"

#: ../pro/linux/openvpn-easyrsa.rst:660
msgid "error output"
msgstr "错误输出"

#: ../pro/linux/openvpn-easyrsa.rst:662
msgid ""
"``$ sudo openvpn --client --config client.conf`` ``Fri Sep 11 17:42:01 2020 "
"OpenVPN 2.4.9 x86_64-redhat-linux-gnu [SSL (OpenSSL)] [LZO] [LZ4] [EPOLL] "
"[PKCS11] [MH/PKTINFO] [AEAD] built on Apr 24 2020`` ``Fri Sep 11 17:42:01 "
"2020 library versions: OpenSSL 1.1.1g FIPS  21 Apr 2020, LZO 2.08`` ``Fri "
"Sep 11 17:42:01 2020 PKCS#11: Adding PKCS#11 provider '/usr/lib64/pkcs11/"
"opensc-pkcs11.so'`` ``Enter User PIN (OpenPGP card) token Password: ******`` "
"``Fri Sep 11 17:42:12 2020 TCP/UDP: Preserving recently used remote address: "
"[AF_INET]18.157.180.240:1194`` ``Fri Sep 11 17:42:12 2020 Socket Buffers: "
"R=[212992->212992] S=[212992->212992]`` ``Fri Sep 11 17:42:12 2020 UDP link "
"local: (not bound)`` ``Fri Sep 11 17:42:12 2020 UDP link remote: "
"[AF_INET]18.157.180.240:1194`` ``Fri Sep 11 17:42:12 2020 NOTE: UID/GID "
"downgrade will be delayed because of --client, --pull, or --up-delay`` ``Fri "
"Sep 11 17:42:12 2020 TLS: Initial packet from [AF_INET]18.157.180.240:1194, "
"sid=d79690cf 9e38ce89`` ``Fri Sep 11 17:42:12 2020 VERIFY OK: depth=1, "
"CN=server_CA`` ``Fri Sep 11 17:42:12 2020 VERIFY KU OK`` ``Fri Sep 11 "
"17:42:12 2020 Validating certificate extended key usage`` ``Fri Sep 11 "
"17:42:12 2020 ++ Certificate has EKU (str) TLS Web Server Authentication, "
"expects TLS Web Server Authentication`` ``Fri Sep 11 17:42:12 2020 VERIFY "
"EKU OK`` ``Fri Sep 11 17:42:12 2020 VERIFY OK: depth=0, CN=server`` ``Fri "
"Sep 11 17:42:12 2020 OpenSSL: error:141F0006:SSL routines:"
"tls_construct_cert_verify:EVP lib`` ``Fri Sep 11 17:42:12 2020 TLS_ERROR: "
"BIO read tls_read_plaintext error`` ``Fri Sep 11 17:42:12 2020 TLS Error: "
"TLS object -> incoming plaintext read error`` ``Fri Sep 11 17:42:12 2020 TLS "
"Error: TLS handshake failed`` ``Fri Sep 11 17:42:12 2020 SIGUSR1[soft,tls-"
"error] received, process restarting`` ``Fri Sep 11 17:42:12 2020 Restart "
"pause, 5 second(s)``"
msgstr ""
"``$ sudo openvpn --client --config client.conf`````Fri Sep 11 17:42:01 2020 "
"OpenVPN 2.4.9 x86_64-redhat-linux-gnu [SSL (OpenSSL)] [LZO] [LZ4] [EPOLL] "
"[PKCS11] [MH/PKTINFO] [AEAD] built on Apr 24 2020 ````Fri Sep 11 17:42:01 "
"2020 library versions: OpenSSL 1.1.1g FIPS  21 Apr 2020, LZO 2.08`` "
"<xid=\"292\"></x>`Fri Sep 11 17:42:01 2020 PKCS#11: Adding PKCS#11 provider "
"'/usr/lib64/pkcs11/opensc-pkcs11.so'````Enter User PIN (OpenPGP card) token "
"Password: ******````Fri Sep 11 17:42:12 2020 TCP/UDP: Preserving recently "
"used remote address: [AF_INET]18.157.180.240:1194 `` <x``Fri Sep 11 17:42:12 "
"2020 Socket Buffers: R=[212992->212992] S=[212992->212992]`` ``Fri Sep 11 "
"17:42:12 2020 UDP link local: (not bound)` `` ``Fri Sep 11 17:42:12 2020 UDP "
"link remote: [AF_INET]18.157.180.240:1194` ````Fri Sep 11 17:42:12 2020 "
"NOTE: UID/GID downgrade will be delayed because of --client, --pull, or --up-"
"delay`` ``Fri Sep 11 17:42:12 2020 TLS: Initial packet from "
"[AF_INET]18.157.180.240:1194, sid=d79690cf 9e38ce89`` ``Fri Sep 11 17:42:12 "
"2020 VERIFY OK: depth=1, CN=server_CA````Fri Sep 11 17:42:12 2020 VERIFY KU "
"OK`` ``Fri Sep 11 17:42:12 2020 Validating certificate extended key usage `` "
"``Fri Sep 11 17:42:12 2020 ++ Certificate has EKU (str) TLS Web Server "
"Authentication, expects TLS Web Server Authentication<xid=\"1288\"></x>` "
"``Fri Sep 11 17:42:12 2020 VERIFY EKU OK `` ``Fri Sep 11 17:42:12 2020 "
"VERIFY OK: depth=0, CN=server ````<xid=\"1395\"></x>`` `` Fri Sep 11 "
"17:42:12 2020 TLS_ERROR: BIO read tls_read_plaintext error`` `` Fri Sep 11 "
"17:42:12 2020 TLS Error: TLS object -> incoming plaintext read error`` "
"<xid=\"1651\"></x>`Fri Sep 11 17:42:12 2020 TLS Error: TLS handshake "
"failed`` ``Fri Sep 11 17:42:12 2020 SIGUSR1[soft,tls-error] received, "
"process restarting`` ``Fri Sep 11 17:42:12 2020 Restart pause, 5 second(s)`"

#: ../pro/linux/openvpn-easyrsa.rst:686
msgid ""
"In some reported cases it does not prompt for a PIN on the terminal. One "
"workaround would be to use to use this command to login with the PIN:"
msgstr ""
"在一些报告的案例中，它没有在终端上提示密码。一个变通的办法是使用这个命令用PIN"
"码来登录。"

#: ../pro/linux/openvpn-easyrsa.rst:692
msgid ""
"Alternatively, you could `recompile OpenVPN <https://forums.openvpn.net/"
"viewtopic.php?f=4&t=23318>`_ client with systemd support disabled, and it "
"will prompt you for the PIN as expected."
msgstr ""
"另外，你可以`重新编译OpenVPN <https://forums.openvpn.net/viewtopic.php?"
"f=4&t=23318>`_客户端，禁用systemd支持，它将如期提示你输入密码。"

#: ../pro/linux/openvpn-easyrsa.rst:694
msgid ""
"Another option, would be to login to your OpenVPN instance with the "
"Viscosity client which provides a better user experience especially for "
"entering the PIN."
msgstr ""
"另一个选择是用Viscosity客户端登录OpenVPN实例，它提供了更好的用户体验，特别是"
"在输入PIN码方面。"

#: ../pro/otp.rst:2
msgid "Two-factor Authentication with One-Time Passwords (OTP)"
msgstr "使用一次性密码（OTP）的双因素认证"

#: ../pro/otp.rst:8
msgid ""
"The use of One-time Passwords (OTP) is called very differently on the "
"various services supporting it. Sometimes it is referred to as Multi-factor "
"Authentication (MFA), sometimes it is Two-factor Authentication (2FA) or "
"just “authentication via authenticator app” like Google Authenticator. Most "
"of these services are compatible for usage with the Nitrokey Pro and "
"Nitrokey Storage. The following instructions show how to enable OTP on our "
"`support forum <https://support.nitrokey.com/>`_. The procedure is quite "
"similar on most services. For a list of websites supporting OTP have a look "
"at `dongleauth.com <https://www.dongleauth.com/>`_."
msgstr ""
"一次性密码（OTP）的使用在支持它的各种服务中的称呼非常不同。有时它被称为多因素"
"认证（MFA），有时是双因素认证（2FA），或者只是 \"通过认证器应用程序认证\"，如"
"谷歌认证器。这些服务大多与硝基钥匙专业版和硝基钥匙存储兼容使用。下面的说明显"
"示了如何在我们的`支持论坛<https://support.nitrokey.com/>`_启用OTP。该程序在大"
"多数服务上都很相似。关于支持OTP的网站列表，请看`dongleauth.com <https://www."
"dongleauth.com/>`_。"

#: ../pro/otp.rst:10
msgid ""
"You need to have the `Nitrokey App <https://www.nitrokey.com/download>`_ "
"installed to use the OTP feature of the Nitrokey Pro and Nitrokey Storage."
msgstr ""
"你需要安装`Nitrokey应用程序<https://www.nitrokey.com/download>`_来使用"
"Nitrokey Pro和Nitrokey Storage的OTP功能。"

#: ../pro/otp.rst:13
msgid "Configure a Website/Application to Use OTP"
msgstr "配置一个网站/应用程序以使用OTP"

#: ../pro/otp.rst:15
msgid ""
"Login to the website which supports OTP (in this example, the `support forum "
"<https://support.nitrokey.com/>`_). Usually you find the option to enable "
"two-factor-authentication under your profile or in the settings."
msgstr ""
"登录支持OTP的网站（本例中，`支持论坛<https://support.nitrokey.com/>`_）。通常"
"情况下，你可以在你的个人资料或设置中找到启用双因素认证的选项。"

#: ../pro/otp.rst:22
msgid ""
"Most of the time, you will get a QR-Code as seen below. There should be an "
"option, to show the secret key directly."
msgstr ""
"大多数时候，你会得到一个QR码，如下图所示。应该有一个选项，可以直接显示密匙。"

#: ../pro/otp.rst:29
msgid "We need to copy the secret code."
msgstr "我们需要复制秘密代码。"

#: ../pro/otp.rst:31
msgid ""
"This is what the Nitrokey is actually protecting. You may create a backup of "
"it now (in case the Nitrokey get lost or breaks) by writing it down on a "
"sheet of paper and storing it securely. But be aware that anybody who is in "
"possession of this secret code, can create one-time passwords for your "
"account! *Please note that you won’t be able to backup this code, once it is "
"stored in the Nitrokey!*"
msgstr ""
"这就是Nitrokey的实际保护内容。你现在可以把它写在一张纸上并安全地保存起来，以"
"建立一个备份（以防硝基钥匙丢失或损坏）。但请注意，任何拥有这个秘密代码的人都"
"可以为你的账户创建一次性密码。*请注意，一旦这个密码被储存在Nitrokey中，你将无"
"法备份！*。"

#: ../pro/otp.rst:38
msgid "Now start the Nitrokey App and open the “OTP Slot Configuration”."
msgstr "现在启动Nitrokey应用程序并打开 \"OTP插槽配置\"。"

#: ../pro/otp.rst:45
msgid ""
"Paste in the secret key in the corresponding field and choose an appropiate "
"slot name. Click on “Save” and type in your admin PIN if requested."
msgstr ""
"在相应的字段中粘贴密匙，并选择一个合适的插槽名称。点击 \"保存 \"并按要求输入"
"管理密码。"

#: ../pro/otp.rst:52
msgid ""
"After saving the slot you can go to “Menu” -> “Passwords” -> YourSlotName to "
"get your very first one-time password."
msgstr ""
"保存插槽后，你可以到 \"菜单\"-> \"密码\"->YourSlotName获得你的第一个一次性密"
"码。"

#: ../pro/otp.rst:60
msgid ""
"The one-time password is copied to your clipboard automatically. You just "
"need to paste it to the field on the website to confirm the correct setup "
"and thus to activate the two-factor authentication."
msgstr ""
"一次性密码会自动复制到你的剪贴板上。你只需要把它粘贴到网站上的字段，以确认正"
"确的设置，从而激活双因素认证。"

#: ../pro/otp.rst:68
msgid "Securely Login to Website/Application"
msgstr "安全登录到网站/应用程序"

#: ../pro/otp.rst:70
msgid ""
"From now on you will get asked for a one-time password additionally to your "
"other credentials if you try to login the the website. You just need to open "
"the Nitrokey App and go to “Menu” -> “Passwords” -> YourSlotName again to "
"get the one-time password."
msgstr ""
"从现在开始，如果你试图登录网站，除了其他证书外，你还会被要求提供一个一次性密"
"码。你只需打开Nitrokey应用程序，进入 \"菜单\"-> \"密码\"-> YourSlotName，即可"
"获得一次性密码。"

#: ../storage/mac/product_platform_heading.rst:3
msgid "(Nitrokey Storage 2 - macOS)"
msgstr "(Nitrokey Storage 2 - macOS)"

#: ../pro/eidauthenticate.rst:2
msgid "Login With EIDAuthenticate on Stand Alone Windows Computers"
msgstr "在独立的Windows电脑上用EIDAuthenticate登录"

#: ../pro/eidauthenticate.rst:8
msgid ""
"Download and install the latest version of `OpenSC <https://github.com/"
"OpenSC/OpenSC/wiki>`_. Please install the `OpenPGP-CSP <https://github.com/"
"vletoux/OpenPGP-CSP/releases/tag/1.3>`_ driver **instead** if using Nitrokey "
"Storage 2 or Nitrokey Pro 2."
msgstr ""
"下载并安装最新版本的`OpenSC <https://github.com/OpenSC/OpenSC/wiki>`_。如果使"
"用Nitrokey Storage 2或Nitrokey Pro 2，请安装`OpenPGP-CSP <https://github.com/"
"vletoux/OpenPGP-CSP/releases/tag/1.3>`_驱动程序**代替。"

#: ../pro/eidauthenticate.rst:9
msgid ""
"Download and install `EIDAuthenticate <https://www.mysmartlogon.com/"
"eidauthenticate/>`_."
msgstr ""
"下载并安装`EIDAuthenticate <https://www.mysmartlogon.com/eidauthenticate/"
">`_。"

#: ../pro/eidauthenticate.rst:12
msgid ""
"The free community edition is disabled. You may test the enterprise edition "
"instead."
msgstr "免费的社区版已被禁用。你可以测试企业版。"

#: ../pro/eidauthenticate.rst:14
msgid "Start EIDConfigurationWizard.exe"
msgstr "启动EIDConfigurationWizard.exe"

#: ../pro/eidauthenticate.rst:15
msgid "Select “Associate a new certificate”"
msgstr "选择 \"关联一个新的证书\""

#: ../pro/eidauthenticate.rst:22
msgid ""
"Select or generate a Certificate Authority which should issue the user’s "
"certificate on the Nitrokey."
msgstr "选择或生成一个证书颁发机构，该机构应在Nitrokey上颁发用户的证书。"

#: ../pro/eidauthenticate.rst:30
msgid ""
"Enter the user PIN which you defined previously in step 4. Wait a moment "
"until a new keypair and certificate are generated. In case your Nitrokey is "
"not detected you may want to execute “certutil -scinfo” for troubleshooting."
msgstr ""
"输入你之前在第4步定义的用户密码。稍等片刻，新的密钥对和证书就会生成。如果你的"
"Nitrokey没有被检测到，你可能要执行 \"certutil -scinfo \"来排除故障。"

#: ../pro/eidauthenticate.rst:40
msgid "Select the newly generated certificate and press continue."
msgstr "选择新生成的证书并按继续。"

#: ../pro/eidauthenticate.rst:47
msgid "All checks should succeed. Press continue."
msgstr "所有检查都应该成功。按继续。"

#: ../pro/eidauthenticate.rst:54
msgid "Enter the password of your user account."
msgstr "输入你的用户账户的密码。"

#: ../pro/eidauthenticate.rst:61
msgid "Enter the user PIN which you defined previously in step 4."
msgstr "输入你之前在步骤4中定义的用户密码。"

#: ../pro/eidauthenticate.rst:68
msgid "The final screen may look like this."
msgstr "最后的屏幕可能看起来像这样。"

#: ../pro/eidauthenticate.rst:75
msgid ""
"You may perform further configurations such as activate the force smart card "
"policy or automatically lock the computer when removing the Nitrokey (by "
"using EIDConfigurationWizardElevated.exe)."
msgstr ""
"你可以进行进一步的配置，如激活强制智能卡策略或在移除Nitrokey时自动锁定电脑"
"（通过使用EIDConfigurationWizardElevated.exe）。"

#: ../pro/eidauthenticate.rst:77 ../pro/smart-policy.rst:95
msgid ""
"From now on, when logging on to your Windows computer you need to connect "
"the Nitrokey and enter your PIN."
msgstr "从现在起，在登录Windows电脑时，你需要连接Nitrokey并输入密码。"

#: ../storage/windows/firmware-update.rst:14
msgid ""
"Download the `Nitrokey App <https://www.nitrokey.com/download>`_ and the "
"`Nitrokey Update Tool <https://github.com/Nitrokey/nitrokey-update-tool/"
"releases/latest>`_. The Nitrokey Update Tool is currently available for "
"macOS and Windows only."
msgstr ""
"下载`Nitrokey应用程序<https://www.nitrokey.com/download>`_和`Nitrokey更新工具"
"<https://github.com/Nitrokey/nitrokey-update-tool/releases/latest>`_。"
"Nitrokey更新工具目前仅适用于macOS和Windows。"

#: ../storage/windows/firmware-update.rst:16
msgid ""
"Download the latest firmware \".hex\" file from `here <https://github.com/"
"Nitrokey/nitrokey-storage-firmware/releases/latest>`_. Older releases are "
"`here <https://github.com/Nitrokey/nitrokey-storage-firmware/releases>`_."
msgstr ""
"从`这里<https://github.com/Nitrokey/nitrokey-storage-firmware/releases/"
"latest>`_下载最新的固件\" .hex\" 文件。较早的版本是`这里<https://github.com/"
"Nitrokey/nitrokey-storage-firmware/releases>`_。"

#: ../storage/windows/firmware-update.rst:31
msgid ""
"If you are using Microsoft Windows Build 1809 and Nitrokey Storage Firmware "
"0.52 or lower, you need to use another system or if this is not feasible use "
"`these instructions <firmware-update-manually.html>`_ to enable the Firmware "
"Update mode."
msgstr ""
"如果你使用的是微软Windows Build 1809和Nitrokey Storage Firmware 0.52或更低版"
"本，你需要使用其他系统，如果这不可行，请使用`这些说明<firmware-update-"
"manually.html>`_来启用固件更新模式。"

#: ../storage/windows/firmware-update.rst:37
msgid ""
"Start the Nitrokey Update Tool and click “Select firmware file”. Select the "
"previously downloaded firmware \".hex\" file. Click on “Update firmware” to "
"start the update process. Your device should get detected by the Nitrokey "
"App again as soon as the update is finished."
msgstr ""
"启动Nitrokey更新工具并点击 \"选择固件文件\"。选择先前下载的固件\".hex\"文件。"
"点击 \"更新固件\"，开始更新过程。更新完成后，你的设备应该会被Nitrokey应用程序"
"再次检测到。"

#: ../storage/mac/hidden-os-specific-partitioning.rst:1
msgid ""
"*If this is the first time you unlock the hidden volume, you may need to "
"create a partition on the hidden volume. You will need to use* `Disk Utility "
"<https://support.apple.com/en-gb/guide/disk-utility/dskutl14027/mac>`_. "
"*Make sure to create the partitions on the device that appeared when "
"unlocking the hidden volume.*"
msgstr ""
"*如果这是您第一次解锁隐藏卷，您可能需要在隐藏卷上创建一个分区。您将需要使用* "
"`Disk Utility <https://support.apple.com/en-gb/guide/disk-utility/"
"dskutl14027/mac>`_。*请确保在解锁隐藏卷时出现的设备上创建分区*。"

#: ../storage/mac/index.rst:2
msgid "Nitrokey Storage, Mac"
msgstr "Nitrokey Storage, Mac"

#: ../storage/mac/index.rst:13
msgid ""
"Important: Once you plug in the Nitrokey, your computer will start the "
"Keyboard Setup Assistant. **Don’t run through this assistant but exit it "
"right away.**"
msgstr ""
"重要的是。一旦你插入Nitrokey，你的电脑将启动键盘设置助手。**不要运行这个助"
"手，而是立即退出。"

#: ../storage/mac/index.rst:16
msgid ""
"Download and start the `Nitrokey App <https://www.nitrokey.com/download>`_. "
"Perhaps you want to store it on the unencrypted partition of your Nitrokey "
"Storage"
msgstr ""
"下载并启动`Nitrokey应用程序<https://www.nitrokey.com/download>`_。也许你想把"
"它储存在你的Nitrokey存储器的未加密分区上"

#: ../storage/mac/index.rst:33 ../pro/mac/index.rst:33
msgid ""
"For some Versions of MacOS it is necessary to install custom `ccid driver "
"<https://github.com/martinpaljak/osx-ccid-installer>`_ (for information see "
"`here <https://ludovicrousseau.blogspot.com/2016/04/os-x-el-capitan-and-ccid-"
"driver-upgrades.html>`_), but in general MacOS should have the driver "
"onboard."
msgstr ""
"对于某些版本的MacOS来说，有必要安装自定义的`ccid驱动<https://github.com/"
"martinpaljak/osx-ccid-installer>`_（信息见`这里<https://ludovicrousseau."
"blogspot.com/2016/04/os-x-el-capitan-and-ccid-driver-upgrades.html>`_），但一"
"般来说MacOS应该有板载驱动。"

#: ../pro/smart-policy.rst:2
msgid "Login to Windows Domain Computers With MS Active Directory"
msgstr "用MS Active Directory登录Windows域计算机"

#: ../pro/smart-policy.rst:8
msgid ""
"Download and install the latest `OpenSC <https://github.com/OpenSC/OpenSC/"
"wiki>`_."
msgstr "下载并安装最新的`OpenSC <https://github.com/OpenSC/OpenSC/wiki>`_。"

#: ../pro/smart-policy.rst:10
msgid ""
"Use a text editor to add the following settings to *C:\\Program Files:"
"\\OpenSC Project\\OpenSC\\opensc.conf*."
msgstr ""
"使用文本编辑器将以下设置添加到*C:\\Program Files:\\OpenSC "
"Project\\OpenSC\\opensc.conf*。"

#: ../pro/smart-policy.rst:49
msgid ""
"Open a command terminal and enter “regedit”. Use regedit to import `this "
"file <https://www.nitrokey.com/sites/default/files/nk-hsm.reg>`_."
msgstr ""
"打开一个命令终端，输入 \"regedit\"。使用regedit导入`这个文件<https://www."
"nitrokey.com/sites/default/files/nk-hsm.reg>`_。"

#: ../pro/smart-policy.rst:52
msgid ""
"Now you can enroll Nitrokeys for your users managed in Microsoft Active "
"Directory. You may either use Microsoft PKI, `gpgsm <https://www.gnupg.org/"
"documentation/manuals/gnupg/Howto-Create-a-Server-Cert.html>`_, or `Smart "
"Policy <https://www.mysmartlogon.com/products/smart-policy.html>`_. The "
"following steps describe the usage of Smart Policy."
msgstr ""
"现在你可以为你在微软活动目录中管理的用户注册Nitrokeys。你可以使用微软的PKI，"
"`gpgsm <https://www.gnupg.org/documentation/manuals/gnupg/Howto-Create-a-"
"Server-Cert.html>`_，或者`Smart Policy <https://www.mysmartlogon.com/"
"products/smart-policy.html>`_。下面的步骤描述了智能策略的用法。"

#: ../pro/smart-policy.rst:58
msgid ""
"`Download <http://download.mysmartlogon.com/SmartPolicyv2/SmartPolicy%20-"
"%20Stage%203.exe>`_ and install Smart Policy."
msgstr ""
"`下载<http://download.mysmartlogon.com/SmartPolicyv2/SmartPolicy%20-"
"%20Stage%203.exe>`_并安装Smart Policy。"

#: ../pro/smart-policy.rst:60
msgid "Select “Read a smart card”"
msgstr "选择 \"读取智能卡\""

#: ../pro/smart-policy.rst:67
msgid "Select the certificate, mapping, and user."
msgstr "选择证书、映射和用户。"

#: ../pro/smart-policy.rst:74
msgid "Verify the device status via CRL."
msgstr "通过CRL验证设备状态。"

#: ../pro/smart-policy.rst:81
msgid "Choose a Group Policy Object (GPO)."
msgstr "选择一个组策略对象（GPO）。"

#: ../pro/smart-policy.rst:88
msgid "Confirm applying the mapping."
msgstr "确认应用该映射。"

#: ../storage/windows/product_platform_heading.rst:3
msgid "(Nitrokey Storage 2 - Windows)"
msgstr "(Nitrokey Storage 2 - Windows)"

#: ../pro/windows/2fa-microsoft.rst:2
msgid "Two-factor Authentication for Microsoft Account"
msgstr "微软账户的双因素认证"

#: ../pro/windows/2fa-microsoft.rst:8
msgid ""
"These are the basic steps for registering the Nitrokey Pro or Nitrokey "
"Storage as a second factor of a Microsoft account."
msgstr ""
"这些是注册Nitrokey Pro或Nitrokey Storage作为微软账户第二要素的基本步骤。"

#: ../pro/windows/2fa-microsoft.rst:10
msgid ""
"Visit https://account.live.com/proofs/Manage/additional and log in to your "
"Microsoft account if prompted."
msgstr ""
"访问https://account.live.com/proofs/Manage/additional，如果有提示，请登录你的"
"微软账户。"

#: ../pro/windows/2fa-microsoft.rst:22
msgid "Click on “Set up two-step verification”."
msgstr "点击 \"设置两步验证\"。"

#: ../pro/windows/2fa-microsoft.rst:29
msgid "Click on “Next”."
msgstr "点击 \"下一步\"。"

#: ../pro/windows/2fa-microsoft.rst:36
msgid "Now it is important to click on “set up a different Authenticator app”."
msgstr "现在必须点击 \"设置不同的认证器应用程序\"。"

#: ../pro/windows/2fa-microsoft.rst:43
msgid "Click on “I can’t scan the bar code”."
msgstr "点击 \"我无法扫描条形码\"。"

#: ../pro/windows/2fa-microsoft.rst:50
msgid "Insert and save secret code into the Nitrokey App."
msgstr "在Nitrokey应用程序中插入并保存秘密代码。"

#: ../pro/windows/2fa-microsoft.rst:67
msgid "Enter code generated by Nitrokey App to confirm."
msgstr "输入由Nitrokey应用程序生成的代码进行确认。"

#: ../pro/windows/2fa-microsoft.rst:79
msgid "Click “Next” and then “Finish”."
msgstr "点击 \"下一步\"，然后点击 \"完成\"。"

#: ../pro/windows/2fa-microsoft.rst:91
msgid ""
"From now on, when signing in you need an OTP additionally to your password."
msgstr "从现在开始，当你登录时，除了你的密码外，还需要一个OTP。"

#: ../storage/windows/hidden-os-specific-partitioning.rst:1
msgid ""
"*If this is the first time you unlock the hidden volume, you may need to "
"create a partition on the hidden volume. In this case, Windows will prompt "
"you to do so. You can then format the hidden volume using FAT32, for "
"compatibility with most operating systems.*"
msgstr ""
"*如果这是您第一次解锁隐藏卷，您可能需要在隐藏卷上创建一个分区。在这种情况下，"
"Windows会提示您这样做。然后您可以使用FAT32格式化隐藏卷，以便与大多数操作系统"
"兼容。"

#: ../storage/windows/index.rst:2
msgid "Nitrokey Storage, Windows"
msgstr "Nitrokey Storage, Windows"

#: ../storage/windows/index.rst:19
msgid ""
"Download and start the `Nitrokey App <https://www.nitrokey.com/download>`_. "
"Perhaps you want to store it on the unencrypted partition of your Nitrokey "
"Storage. There won’t open a window, but an icon appears in the system tray "
"(see screenshot below). Please right-click on this icon to use all the "
"options of the App."
msgstr ""
"下载并启动`Nitrokey应用程序<https://www.nitrokey.com/download>`_。也许你想把"
"它储存在你的Nitrokey存储的未加密分区。那里不会打开一个窗口，但在系统托盘上会"
"出现一个图标（见下面的截图）。请右击这个图标，以使用该应用程序的所有选项。"

#: ../storage/windows/index.rst:42
msgid ""
"`Instructions <openpgp.html>`_ for using the OpenPGP standard with the "
"Nitrokey"
msgstr "`说明 <openpgp.html>`_使用Nitrokey的OpenPGP标准。"

#: ../storage/windows/index.rst:44
msgid "`Instructions <smime.html>`_ for using S/MIME with the Nitrokey"
msgstr "`说明 <smime.html>`_用Nitrokey使用S/MIME。"

#: ../pro/windows/openpgp-csp.rst:2
msgid "Windows Logon and S/MIME Email Encryption with Active Directory"
msgstr "使用活动目录的Windows登录和S/MIME电子邮件加密"

#: ../pro/windows/openpgp-csp.rst:8
msgid ""
"Please note that this driver is still in development/testing. Please tell us "
"your experiences! See our `contact page <https://www.nitrokey.com/contact>`_."
msgstr ""
"请注意，这个驱动程序仍在开发/测试中。请告诉我们你的经验!请参阅我们的`联系页面"
"<https://www.nitrokey.com/contact>`_。"

#: ../pro/windows/openpgp-csp.rst:13
msgid ""
"This guide assumes that an Active Directory server with role ‘Active "
"Directory Certificate Services’ is installed and running on a server. These "
"instructions are based on Nitrokey Storage 2 and Nitrokey Pro 2 only."
msgstr ""
"本指南假定在一台服务器上安装并运行了具有 \"活动目录证书服务 \"角色的活动目录"
"服务器。这些说明仅基于Nitrokey Storage 2和Nitrokey Pro 2。"

#: ../pro/windows/openpgp-csp.rst:16
msgid "Installing OpenPGP-CSP"
msgstr "安装OpenPGP-CSP"

#: ../pro/windows/openpgp-csp.rst:18
msgid ""
"This step is needed for clients to use the OpenPGP-CSP driver. Download and "
"install the `latest version <https://github.com/vletoux/OpenPGP-CSP/releases/"
"tag/1.3>`_ of the installer file ‘SetupOpenPGPCsp’ for your system "
"architecture, for ‘SetupOpenPGPCsp_x64.msi’ for 64-bit systems."
msgstr ""
"客户端使用OpenPGP-CSP驱动时需要这个步骤。下载并安装`最新版本<https://github."
"com/vletoux/OpenPGP-CSP/releases/tag/1.3>`_的安装文件'SetupOpenPGPCsp'，适用"
"于您的系统架构，对于64位系统的'SetupOpenPGPCsp_x64.msi'。"

#: ../pro/windows/openpgp-csp.rst:20
msgid ""
"You may want to install the driver on the server as well for being able to "
"enforce the use of this driver in the template (see below)."
msgstr ""
"你可能想在服务器上也安装该驱动，以便能够在模板中强制使用该驱动（见下文）。"

#: ../pro/windows/openpgp-csp.rst:23
msgid "Creating Certificate Template on Server Side"
msgstr "在服务器端创建证书模板"

#: ../pro/windows/openpgp-csp.rst:25
msgid ""
"On Active Directory Server open certsrv.msc to manage your certificate "
"templates. Right click on ‘Certificate Templates’ and choose ‘Manage’"
msgstr ""
"在活动目录服务器上打开certsrv.msc来管理你的证书模板。在 \"证书模板 \"上点击右"
"键，选择 \"管理\"。"

#: ../pro/windows/openpgp-csp.rst:32
msgid ""
"Now right click on ‘Smartcard Logon’ template and click ‘Duplicate’, to "
"create a new template on basis of this standard template. Rename template to "
"‘OpenPGP Card Logon and Email’ or alike."
msgstr ""
"现在，右击 \"智能卡登录 \"模板，点击 \"复制\"，在这个标准模板的基础上创建一个"
"新模板。将模板重命名为 \"OpenPGP卡登录和电子邮件 \"或类似的内容。"

#: ../pro/windows/openpgp-csp.rst:39
msgid ""
"Under ‘Request Handling’, you can choose the OpenPGP-CSP as the one and only "
"Cryptography Service Provider (click the Button labeled ‘CSPs…’). For this "
"to work, you need to install the driver on the server as well and you have "
"to insert a Nitrokey beforehand. This is optional. You can let the user "
"choose, which CSP to use."
msgstr ""
"在 \"请求处理 \"下，你可以选择OpenPGP-CSP作为唯一的加密服务提供商（点击标有 "
"\"CSPs... \"的按钮）。要做到这一点，你需要在服务器上安装驱动程序，而且你必须"
"事先插入一个Nitrokey。这是可选的。你可以让用户选择使用哪个CSP。"

#: ../pro/windows/openpgp-csp.rst:51
msgid ""
"For enabling S/MIME email encryption go to ‘Subject name’. Tick the checkbox "
"‘E-Mail name’ (note: You must save the mail addresses of your users in the "
"corresponding Active Directory field!)."
msgstr ""
"对于启用S/MIME电子邮件加密，请进入'主题名称'。勾选'E-Mail name'（注意：你必须"
"在相应的活动目录字段中保存用户的邮件地址！）。"

#: ../pro/windows/openpgp-csp.rst:58
msgid ""
"Then go to ‘Extensions’, there you edit the applications guideline and add "
"‘Secure Email’."
msgstr "然后进入 \"扩展\"，在那里编辑应用指南并添加 \"安全电子邮件\"。"

#: ../pro/windows/openpgp-csp.rst:71
msgid "Request Certificate on Client (Domain Member)"
msgstr "在客户（域成员）上申请证书"

#: ../pro/windows/openpgp-csp.rst:73
msgid ""
"To request a certificate for a domain member, you have to open certmgr.msc. "
"Right click on folder ‘Personal->Certificates’ and click ’All Tasks->Request "
"New Certificate and choose the template you created on the AD."
msgstr ""
"要为一个域成员申请证书，你必须打开certmgr.msc。在 \"个人->证书 \"文件夹上点击"
"右键，并点击 \"所有任务->请求新证书\"，选择你在AD上创建的模板。"

#: ../pro/windows/openpgp-csp.rst:81
msgid ""
"If you did not enforce the usage of OpenPGP-CSP you have to choose it here "
"now."
msgstr "如果你没有强制使用OpenPGP-CSP，你现在必须在这里选择它。"

#: ../pro/windows/openpgp-csp.rst:93
msgid "Next you choose the Authentication slot for the certificate."
msgstr "接下来你选择证书的认证槽。"

#: ../pro/windows/openpgp-csp.rst:95
msgid ""
"You are now ready to logon on the computer with the Nitrokey instead of your "
"password and you can use `S/MIME email encryption/signing <smime.html>`_ "
"with the Nitrokey. The driver has to be installed on every computer you want "
"to use the certificate on."
msgstr ""
"你现在可以用Nitrokey代替你的密码登录电脑了，你可以用Nitrokey使用`S/MIME电子邮"
"件加密/签名<smime.html>`_。驱动程序必须安装在你想使用证书的每台电脑上。"

#: ../_templates/_footer.html:9 ../_templates/page.html:103
msgid "Next"
msgstr "下一页"

#: ../_templates/_footer.html:12 ../_templates/page.html:115
msgid "Previous"
msgstr "上一篇"

#: ../_templates/_footer.html:23
#, python-format
msgid "&copy; <a href=\"%(path)s\">Copyright</a> %(copyright)s."
msgstr "&copy; <a href=\"%(path)s\">版权</a> %(copyright)s。"

#: ../_templates/_footer.html:25
#, python-format
msgid "&copy; Copyright <a href=\"%(copyrightlink)s\">%(copyright)s</a>."
msgstr "&copy; Copyright <a href=\"%(copyrightlink)s\">%(copyright)s</a>."

#: ../_templates/_footer.html:30
#, python-format
msgid ""
"\n"
"        <span class=\"build\">\n"
"          Build\n"
"          <a href=\"%(build_url)s\">%(build_id)s</a>.\n"
"        </span>\n"
"      "
msgstr ""
"\n"
"        <span class=\"build\">\n"
"          建立\n"
"          <a href=\"%(build_url)s\">%(build_id)s</a>.\n"
"        </span>\n"
"      "

#: ../_templates/_footer.html:37
#, python-format
msgid ""
"\n"
"        <span class=\"commit\">\n"
"          Revision <code>%(commit)s</code>.\n"
"        </span>\n"
"      "
msgstr ""
"\n"
"        <span class=\"commit\">\n"
"          修订 <code>%(commit)s</code>。\n"
"        </span>\n"
"      "

#: ../_templates/_footer.html:43
#, python-format
msgid "Last updated on %(last_updated)s."
msgstr "最后更新于%(last_updated)s。"

#: ../_templates/_footer.html:53 ../_templates/page.html:155
msgid "Edit on GitHub"
msgstr "在GitHub上编辑"

#: ../_templates/_footer.html:55 ../_templates/page.html:157
msgid "Edit this Page"
msgstr "编辑本页面"

#: ../_templates/_footer.html:56 ../_templates/page.html:158
msgid "Request docs change"
msgstr "要求修改文件"

#: ../_templates/_footer.html:59 ../_templates/_footer.html:61
#: ../_templates/page.html:161 ../_templates/page.html:163
msgid "View page source"
msgstr "查看页面来源"

#: ../_templates/_layout.html:37
#, python-format
msgid "Search within %(docstitle)s"
msgstr "在%(docstitle)s内搜索"

#: ../_templates/_layout.html:64
msgid "About these documents"
msgstr "关于这些文件"

#: ../_templates/_layout.html:67
msgid "Index"
msgstr "索引"

#: ../_templates/_layout.html:70
msgid "Search"
msgstr "搜索"

#: ../_templates/_layout.html:73
msgid "Copyright"
msgstr "版权声明"

#: ../_templates/page.html:68
msgid "Back to top"
msgstr "回到顶部"

#: ../_templates/page.html:118
msgid "Home"
msgstr "首页"

#: ../_templates/page.html:131
#, python-format
msgid "<a href=\"%(path)s\">Copyright</a> &#169; %(copyright)s"
msgstr "<a href=\"%(path)s\">版权</a> &#169; %(copyright)s"

#: ../_templates/page.html:135
#, python-format
msgid "Copyright &#169; %(copyright)s"
msgstr "版权 &#169; %(copyright)s"

#: ../_templates/page.html:143
#, python-format
msgid "Last updated on %(last_updated)s"
msgstr "最后更新于%(last_updated)s。"

#: ../_templates/page.html:215
msgid "Contents"
msgstr "内容"

#: ../shared-faqs/generic.rst:2
msgid "Generic Nitrokeys FAQ"
msgstr "通用硝化甘油的常见问题"

#: ../shared-faqs/generic.rst:5 ../fido2/faq.rst:5
msgid "Windows, Linux, and Mac OS X. Also some support (FIDO2) for Android."
msgstr "Windows、Linux和Mac OS X。还有一些对安卓的支持（FIDO2）。"

#: ../shared-faqs/generic.rst:14 ../shared-faqs/generic.rst:23
msgid "**Q:** What are the default passwords?"
msgstr "**问：**默认密码是什么？"

#: ../shared-faqs/generic.rst:10
msgid "**Firmware Password** (Nitrokey Storage only): \"12345678\""
msgstr "**固件密码**（仅限Nitrokey存储）：\"12345678\"。"

#: ../shared-faqs/generic.rst:11
msgid "**SO-PIN** (Nitrokey HSM only): \"3537363231383830\""
msgstr "**SO-PIN**（仅限Nitrokey HSM）：\"3537363231383830\"。"

#: ../shared-faqs/generic.rst:17
msgid ""
"It depends. No one can copy the keys which are stored on the Nitrokey. But "
"depending on the key creation process you can still store a backup of the "
"keys elsewhere."
msgstr ""
"这取决于。没有人可以复制存储在Nitrokey上的钥匙。但根据钥匙的创建过程，你仍然"
"可以在其他地方存储钥匙的备份。"

#: ../shared-faqs/generic.rst:21
msgid ""
"If you want to have a backup of your keys, you need to think about it when "
"creating the keys. More information and options for the key creation can be "
"found in our :doc:`documentation <../pro/linux/openpgp>`."
msgstr ""
"如果你想对你的钥匙进行备份，你需要在创建钥匙时考虑到这一点。更多关于密钥创建"
"的信息和选项可以在我们的 :doc:`documentation <../pro/linux/openpgp>`中找到。"

#: ../shared-faqs/generic.rst:29
msgid ""
"Nitrokey Pro, Nitrokey Start, Nitrokey HSM and Nitrokey U2F don't contain "
"storage capability for ordinary data (it can only store cryptographic keys "
"and certificates)."
msgstr ""
"Nitrokey Pro、Nitrokey Start、Nitrokey HSM和Nitrokey U2F不包含普通数据的存储"
"能力（它只能存储加密密钥和证书）。"

#: ../shared-faqs/generic.rst:42
msgid ""
"Nitrokey Pro's and Storage's PINs can be up to 20 digits long and can "
"consist of numbers, characters and special characters. Note: When using "
"GnuPG or OpenSC, 32 character long PINs can be used but aren't supported by "
"Nitrokey App."
msgstr ""
"Nitrokey Pro和Storage的PIN码可长达20位，可由数字、字符和特殊字符组成。注意："
"当使用GnuPG或OpenSC时，可以使用32个字符的PIN码，但不被Nitrokey App支持。"

#: ../shared-faqs/generic.rst:82
msgid "**Q:** What is user/admin/firmware PIN/password for?"
msgstr "**问：**用户/管理员/固件PIN/密码是什么？"

#: ../shared-faqs/generic.rst:48
msgid ""
"**User PIN:** The user PIN is at least 6-digits long and is used to get "
"access to the contect of the Nitrokey. This is the PIN you will use a lot in "
"every day use e.g. for decrypting messages, for unlocking your encrypted "
"storage (NK Storage only) etc."
msgstr ""
"**用户PIN码：**用户PIN码至少有6位数字，用于进入Nitrokey的保护范围。这是你在日"
"常使用中经常用到的密码，例如解密信息，解锁你的加密存储空间（仅限NK存储）等。"

#: ../shared-faqs/generic.rst:58
msgid ""
"**Admin PIN:** The admin PIN is at least 8-digits long and is used to change "
"contents/settings of the Nitrokey. That is to say after initializing the "
"Nitrokey you probably won't need this PIN too often (e.g. if you want to add "
"another password to the password safe of the Nitrokey Pro or Nitrokey "
"Storage)."
msgstr ""
"**管理密码：**管理密码至少有8位数，用于改变硝基钥匙的内容/设置。也就是说，在"
"初始化Nitrokey后，你可能不会经常需要这个PIN码（例如，如果你想在Nitrokey Pro或"
"Nitrokey Storage的密码箱中添加另一个密码）。"

#: ../shared-faqs/generic.rst:69
msgid ""
"**Firmware password:** The firmware password should meet general password "
"recommandations (e.g. use alphabetic characters, digits and special "
"characters or use a usfficiently long password). The firmware password is "
"needed to update the firmware of the Nitrokey Storage. See further "
"instructions for update process here."
msgstr ""
"**固件密码：**固件密码应符合一般的密码建议（例如，使用字母、数字和特殊字符或"
"使用足够长的密码）。更新Nitrokey存储器的固件时需要固件密码。请参阅更新过程的"
"进一步说明。"

#: ../shared-faqs/generic.rst:79
msgid ""
"**SO PIN:** The SO PIN is used in the Nitrokey HSM only and is something "
"like a \"master\" PIN with special properties. Please read this instructions "
"carefully to understand the SO PIN of the Nitrokey HSM."
msgstr ""
"**SO PIN:** SO PIN仅用于Nitrokey HSM，它类似于具有特殊属性的\"主\" PIN。请仔"
"细阅读本说明以了解Nitrokey HSM的SO PIN。"

#: ../shared-faqs/generic.rst:85
msgid ""
"The Nitrokey Pro, Nitrokey Start and Nitrokey Storage can store three RSA "
"key pairs. All keys use the same identity but are used for different "
"purposes: authentication, encryption and signing."
msgstr ""
"Nitrokey Pro、Nitrokey Start和Nitrokey Storage可以存储三个RSA密钥对。所有的钥"
"匙都使用相同的身份，但用于不同的目的：认证、加密和签名。"

#: ../shared-faqs/generic.rst:90 ../hsm/faq.rst:41
msgid "Nitrokey HSM can store 20 RSA-2048 and 31 ECC-256 key pairs."
msgstr "Nitrokey HSM可以存储20个RSA-2048和31个ECC-256的密钥对。"

#: ../shared-faqs/generic.rst:92
msgid ""
"Nitrokey U2F stores a single ECC key pair but can be used with an unlimited "
"amount of user accounts."
msgstr "Nitrokey U2F存储一个ECC密钥对，但可用于无限量的用户账户。"

#: ../shared-faqs/generic.rst:133 ../shared-faqs/generic.rst:142
msgid "See the relevant product faq for details: (@todo add links)"
msgstr "详见相关产品的FAQ。(@todo添加链接)"

#: ../shared-faqs/generic.rst:139
msgid ""
"**Q:** Do Nitrokeys contain a secure chip or just a normal microcontroller?"
msgstr "**问：**硝基钥匙是否包含安全芯片或只是一个普通的微控制器？"

#: ../shared-faqs/generic.rst:137
msgid ""
"Nitrokey Pro, Nitrokey HSM and Nitrokey Storage contain a tamper resistant "
"smart card. To some extent this also applies to Nitrokey U2F but it's of "
"lower quality. Nitrokey Start is implemented in the microprocessor."
msgstr ""
"Nitrokey Pro、Nitrokey HSM和Nitrokey Storage包含一个防篡改智能卡。在某种程度"
"上，这也适用于Nitrokey U2F，但它的质量较低。Nitrokey Start是在微处理器中实现"
"的。"

#: ../shared-faqs/generic.rst:142 ../pro/faq.rst:61 ../hsm/faq.rst:60
msgid "**Q:** How good is the Random Number Generator (RNG)?"
msgstr "**问：**随机数字发生器（RNG）的性能如何？"

#: ../shared-faqs/generic.rst:169
msgid "**Q:** Is Nitrokey Common Criteria or FIPS certified?"
msgstr "**问：**Nitrokey是否经过通用标准或FIPS认证？"

#: ../shared-faqs/generic.rst:145
msgid ""
"**Nitrokey Storage 1+2:** `Cure53`_ has performed an `independent security "
"audit`_ of the hardware, firmware, and Nitrokey App."
msgstr ""
"**Nitrokey存储1+2：** `Cure53`_已经对硬件、固件和Nitrokey应用程序进行了`独立"
"的安全审计`_。"

#: ../shared-faqs/generic.rst:148 ../pro/faq.rst:50
msgid ""
"The security controler's hardware is Common Criteria certified (`Report`_; "
"See `here`_, click \"ICs, Smart Cards and Smart Card-Related Devices and "
"Systems\" and search for \"NXP Smart Card Controller P5CD081V1A and its "
"major configurations P5CC081V1A, P5CN081V1A, P5CD041V1A, P5CD021V1A and "
"P5CD016V1A each with IC dedicated Software\")."
msgstr ""
"该安全控制器'的硬件通过了Common Criteria认证（`报告`_；见`这里`_，点击\"IC，"
"智能卡和智能卡相关的设备和系统\"。并搜索\"恩智浦智能卡控制器P5CD081V1A及其主"
"要配置P5CC081V1A、P5CN081V1A、P5CD041V1A、P5CD021V1A和P5CD016V1A各自的IC专用"
"软件\"）。"

#: ../shared-faqs/generic.rst:154
msgid ""
"**Nitrokey Pro 1+2:** The security controler's hardware is Common Criteria "
"certified (`Report`_; See `here`_, click \"ICs, Smart Cards and Smart Card-"
"Related Devices and Systems\" and search for \"NXP Smart Card Controller "
"P5CD081V1A and its major configurations P5CC081V1A, P5CN081V1A, P5CD041V1A, "
"P5CD021V1A and P5CD016V1A each with IC dedicated Software\")."
msgstr ""
"**Nitrokey Pro 1+2。**安全控制器'的硬件通过了Common Criteria认证（`报告`_；见"
"`这里`_，点击\"IC，智能卡和智能卡相关的设备和系统\"。并搜索\"恩智浦智能卡控制"
"器P5CD081V1A及其主要配置P5CC081V1A、P5CN081V1A、P5CD041V1A、P5CD021V1A和"
"P5CD016V1A各自的IC专用软件\"）。"

#: ../shared-faqs/generic.rst:160
msgid ""
"**Nitrokey HSM:** The security controler's hardware and operating system are "
"Common Criteria certified (`HSM Report`_; See `here`_, click \"ICs, Smart "
"Cards and Smart Card-Related Devices and Systems\" and search for \"NXP "
"J3A080 v2.4.1 Secure Smart Card Controller (JCOP v2.4.1)\")."
msgstr ""
"**Nitrokey HSM：**安全控制器'的硬件和操作系统通过了通用标准认证（`HSM报告`_；"
"见`这里`_，点击\"IC，智能卡和智能卡相关设备和系统\"并搜索\"恩智浦J3A080 "
"v2.4.1安全智能卡控制器（JCOP v2.4.1）\"）。"

#: ../shared-faqs/generic.rst:165
msgid ""
"**Nitrokey HSM2:** The security controler's hardware and operating system "
"are Common Criteria certified (`Security Target`_; `HSM2 Report`_; See "
"`here`_, click \"ICs, Smart Cards and Smart Card-Related Devices and "
"Systems\" and search for \"NXP JCOP 3 P60\")."
msgstr ""
"**Nitrokey HSM2。**安全控制器'的硬件和操作系统通过了Common Criteria认证（`安"
"全目标`_；`HSM2报告`_；见`这里`_，点击\"IC，智能卡和智能卡相关设备和系统\"；"
"并搜索\"；NXP JCOP 3 P60\"；）。"

#: ../shared-faqs/index.rst:2
msgid "Frequently Asked Questions"
msgstr "常见问题"

#: ../shared-faqs/shop.rst:2
msgid "Shop and Delivery FAQ"
msgstr "购物和送货常见问题"

#: ../shared-faqs/shop.rst:4
msgid "**Q:** How long does the shipping take?"
msgstr "**问：**运输需要多长时间？"

#: ../shared-faqs/shop.rst:6
msgid "**Letter and Registered Mail**:"
msgstr "** 信件和挂号信**。"

#: ../shared-faqs/shop.rst:8
msgid "Germany: 2-5 business days"
msgstr "德国：2-5个工作日"

#: ../shared-faqs/shop.rst:9
msgid "EU: 5-10 business days"
msgstr "欧盟：5-10个工作日"

#: ../shared-faqs/shop.rst:10
msgid "World wide: 2-3 weeks"
msgstr "世界范围内：2-3周"

#: ../shared-faqs/shop.rst:12
msgid "**Parcel**:"
msgstr "**包裹**。"

#: ../shared-faqs/shop.rst:14
msgid "Germany: 1-3 business days"
msgstr "德国：1-3个工作日"

#: ../shared-faqs/shop.rst:15
msgid "EU: 2-5 business days"
msgstr "欧盟：2-5个工作日"

#: ../shared-faqs/shop.rst:16
msgid "World wide: 5-10 business days"
msgstr "世界范围内。5-10个工作日"

#: ../shared-faqs/shop.rst:18
msgid "**Q:** Pricing and VAT"
msgstr "**问：**定价和增值税"

#: ../shared-faqs/shop.rst:20
msgid ""
"The Nitrokey GmbH has a heterogeneous customer base, private and enterprise "
"customers, from Germany as well as inside and outside of the EU. With the "
"pricing we want to ensure that all customers pay a uniform rate. For "
"example, a large international corporation should pay just as much as a "
"German private customer. Accordingly, the gross price (incl. VAT) for German "
"private customers equals the net price (excluding VAT) for EU enterprise "
"customers and all customers outside of the EU. This approach has been "
"audited and is legally correct."
msgstr ""
"Nitrokey GmbH拥有一个异质性的客户群，包括私人和企业客户，来自德国以及欧盟内部"
"和外部。在定价方面，我们希望确保所有客户支付统一的费用。例如，一个大型的国际"
"公司应该和一个德国私人客户支付同样的费用。因此，德国私人客户的总价格（包括增"
"值税）等于欧盟企业客户和欧盟以外所有客户的净价格（不包括增值税）。这种方法已"
"经过审计，在法律上是正确的。"

#: ../shared-faqs/shop.rst:22
msgid "**Q:** How is the Bitcoin exchange rate calculated?"
msgstr "**问：**比特币汇率是如何计算的？"

#: ../shared-faqs/shop.rst:24
#, python-format
msgid ""
"At the time of ordering, our system takes the exchange rate from blockchain."
"info and adds 10% on top of it. The 10% are for our handling fees "
"(exchanging Bitcoins back to Euro) and for the risk implicated by floating "
"exchange rate."
msgstr ""
"在订购时，我们的系统从blockchain.info获取汇率，并在此基础上增加10% o。这10% a"
"是我们的手续费（将比特币兑换成欧元）和浮动汇率所带来的风险。"

#: ../shared-faqs/shop.rst:26
msgid "**Q:** How to return goods?"
msgstr "**问：**如何退货？"

#: ../shared-faqs/shop.rst:30
msgid "To return a goods (e.g. Nitrokey):"
msgstr "退回货物（如Nitrokey）。"

#: ../shared-faqs/shop.rst:32
msgid ""
"In case of a hardware defect, you can contact us and we will send you a "
"shipping label. Pack the device in an air cushion envelope (not in an "
"ordinary envelope!). Include the delivery slip or printout of the invoice "
"with the shipment. Add a note of the reason for the return, e.g. "
"\"Withdrawal of the purchase\" or \"Exchange due to defect\". It is "
"sufficient to note the reason in handwriting on the enclosed invoice or "
"delivery note. Address the mailing to our address."
msgstr ""
"如果是硬件缺陷，你可以联系我们，我们会给你发一个运输标签。用气垫信封包装设备"
"（不要用普通信封！）。随货附上送货单或发票的打印件。添加退货原因的说明，例"
"如：\"撤回购买\"或\"因缺陷而换货\"。只要在所附的发票或送货单上手写说明原因即"
"可。请将邮件寄到我们的地址。"

#: ../shared-faqs/shop.rst:38
msgid "**Q:** Is there a Right of Withdrawal?"
msgstr "**问：**是否有撤诉权？"

#: ../shared-faqs/shop.rst:40
msgid ""
"There is a Right for most customers. Further details can be found here "
"(https://www.nitrokey.com/right-withdrawal-consumers)"
msgstr ""
"对大多数客户来说，都有一个权利。进一步的细节可以在这里找到（https://www."
"nitrokey.com/right-withdrawal-consumers）。"

#: ../shared-faqs/shop.rst:43
msgid "**Q:** Is there a warranty?"
msgstr "**问：**是否有保证？"

#: ../nitrophone/apps.rst:2
msgid "NitroPhone Apps"
msgstr "NitroPhone应用程序"

#: ../nitrophone/apps.rst:5
msgid "App Store"
msgstr "应用商店"

#: ../nitrophone/apps.rst:7
msgid ""
"For very high security requirements, you should use as few apps as possible "
"to provide a small attack surface. If instead you want to use the NitroPhone "
"as an everyday smartphone with more apps we recommend:"
msgstr ""
"对于非常高的安全要求，你应该尽可能少地使用应用程序，以提供一个小的攻击面。如"
"果你想把NitroPhone作为日常智能手机使用，我们建议使用更多的应用程序。"

#: ../nitrophone/apps.rst:11
msgid ""
"Install the `F-Droid <https://f-droid.org/F-Droid.apk>`_ App Store. This has "
"exclusively open source apps that do without drastic tracking and without "
"advertising. Here you will find thousands of apps from a wide variety of "
"fields. If you are looking for an app, check F-Droid first."
msgstr ""
"安装`F-Droid <https://f-droid.org/F-Droid.apk>`_应用程序商店。这里有专门的开"
"放源码应用程序，没有剧烈的跟踪，也没有广告。在这里，你会发现来自各种领域的成"
"千上万的应用程序。如果你正在寻找一个应用程序，请先查看F-Droid。"

#: ../nitrophone/apps.rst:16
msgid ""
"If the apps in F-Droid are not enough for you, open F-Droid and install "
"Aurora Store. In Aurora Store, you can install all apps from Google Play "
"Store."
msgstr ""
"如果F-Droid中的应用程序对你来说还不够，请打开F-Droid并安装Aurora商店。在"
"Aurora商店中，你可以安装Google Play商店的所有应用程序。"

#: ../nitrophone/apps.rst:19
msgid ""
"Many apps work without Google Play Services. However, if you want to use "
"apps that require Google Play Services, you can install `Google Play "
"Services in a sandbox <https://grapheneos.org/usage#sandboxed-play-"
"services>`_ as follows. In the future, an installer will be provided to "
"simplify the installation process."
msgstr ""
"许多应用程序可以在没有Google Play服务的情况下运行。但是，如果你想使用需要"
"Google Play服务的应用程序，你可以在沙盒中安装`Google Play服务<https://"
"grapheneos.org/usage#sandboxed-play-services>`_，如下。在未来，将提供一个安装"
"程序来简化安装过程。"

#: ../nitrophone/apps.rst:24
msgid ""
"Install `com.google.android.gsf <https://apps.grapheneos.org/packages/com."
"google.android.gsf/>`_."
msgstr ""
"安装 `com.google.android.gsf <https://apps.grapheneos.org/packages/com."
"google.android.gsf/>`_。"

#: ../nitrophone/apps.rst:25
msgid ""
"Install `com.google.android.gms <https://apps.grapheneos.org/packages/com."
"google.android.gms/>`_."
msgstr ""
"安装 `com.google.android.gms <https://apps.grapheneos.org/packages/com."
"google.android.gms/>`_。"

#: ../nitrophone/apps.rst:26
msgid ""
"Download all 5 files from `com.android.vending <https://apps.grapheneos.org/"
"packages/com.android.vending/>`_."
msgstr ""
"从`com.android.vending <https://apps.grapheneos.org/packages/com.android."
"vending/>`_下载所有5个文件。"

#: ../nitrophone/apps.rst:27
msgid ""
"Open F-Droid and install Split APKs Installer (SAI). (Also available from "
"the Aurora Store)"
msgstr "打开F-Droid并安装Split APKs Installer（SAI）。(也可从极光商店获得)"

#: ../nitrophone/apps.rst:28
msgid ""
"Open Split APKs Installer and install all five files you downloaded in step "
"3. **Note:** The correct base file has probably been renamed to ``base (2)."
"apk``."
msgstr ""
"打开Split APKs安装程序，安装你在步骤3中下载的所有五个文件。**注意：**正确的基"
"础文件可能已经重命名为``base (2).apk``。"

#: ../nitrophone/apps.rst:30
msgid ""
"From the home screen, select: *Settings -> Apps -> Google Play services and "
"disable battery optimization*"
msgstr ""
"从主屏幕上，选择。*设置 -> 应用程序 -> Google Play服务并禁用电池优化*。"

#: ../nitrophone/apps.rst:31
msgid ""
"Open the Google Play Store once and press \"Sign in\" to start the "
"initialization. You don't have to finish the sign in and a real login is not "
"necessary. This is solely to initialize the software."
msgstr ""
"打开Google Play商店一次，按\"登录\"开始初始化。你不需要完成登录，也不需要真正"
"登录。这仅仅是为了初始化软件。"

#: ../nitrophone/apps.rst:36
msgid ""
"To prevent some apps from accessing Google Play Services, install Google "
"Play Services in a separate profile. To do this, create a new dedicated user "
"profile and install the Google Play Services there. Using a work profile "
"together with *Shelter* is also possible, but without as much isolation."
msgstr ""
"要防止一些应用程序访问Google Play服务，请在一个单独的配置文件中安装Google "
"Play服务。要做到这一点，创建一个新的专用用户配置文件，并在那里安装Google Play"
"服务。将工作配置文件与*Shelter*一起使用也是可能的，但没有那么多隔离。"

#: ../nitrophone/apps.rst:44
msgid ""
"The Google Play Store cannot install and update apps due to the sandbox. "
"Instead, always use F-Droid (for open source apps) or Aurora Store (for apps "
"from Google Play Store) to install apps."
msgstr ""
"由于沙盒的原因，Google Play商店不能安装和更新应用程序。相反，总是使用F-Droid"
"（用于开源应用程序）或Aurora Store（用于来自Google Play Store的应用程序）来安"
"装应用程序。"

#: ../nitrophone/apps.rst:49
msgid "Compatible Apps"
msgstr "兼容的应用程序"

#: ../nitrophone/apps.rst:51
#, python-format
msgid ""
"Earlier there was a list, but as the Play Service implementation progresses, "
"most of the apps should work, although there are still some not working, a "
"list will be available `here <https://github.com/Peter-Easton/GrapheneOS-"
"Knowledge/tree/master/App%20Incompatibility%20List>`_."
msgstr ""
"早些时候有一个列表，但随着Play服务实施的进展，大多数应用程序应该可以工作，尽"
"管仍有一些不工作，列表将在`这里<https://github.com/Peter-Easton/GrapheneOS-"
"Knowledge/tree/master/App%20Incompatibility%20List>%20List>`_。"

#: ../nitrophone/apps.rst:56
msgid "Recommended Apps"
msgstr "推荐的应用程序"

#: ../nitrophone/apps.rst:58
msgid ""
"Browser: The pre-installed browser Vanadium is hardened and therefore "
"recommended for high security. For better ad blocking, `Bromite <https://"
"github.com/bromite/bromite/releases/latest>`_ browser is recommended instead."
msgstr ""
"浏览器。预装的浏览器Vanadium是经过加固的，因此建议使用高安全性的浏览器。为了"
"更好地阻止广告，建议使用`Bromite <https://github.com/bromite/bromite/"
"releases/latest>`_浏览器。"

#: ../nitrophone/apps.rst:59
msgid "Email: K9-mail and OpenKeyChain (for OpenPGP encryption) or FairEmail."
msgstr "电子邮件。K9-mail和OpenKeyChain（用于OpenPGP加密）或FairEmail。"

#: ../nitrophone/apps.rst:60
msgid ""
"VPN: Orbot uses the free TOR network. Mullvad VPN and IVPN are paid VPN "
"services."
msgstr "VPN：Orbot使用免费的TOR网络。Mullvad VPN和IVPN是付费VPN服务。"

#: ../nitrophone/apps.rst:61
msgid ""
"Backup: The integrated backup (Seedvault) and Nextcloud. Choose Settings -> "
"System -> Backup."
msgstr "备份。集成备份（Seedvault）和Nextcloud。选择设置->；系统->；备份。"

#: ../nitrophone/apps.rst:64
msgid "Messenger:"
msgstr "信使。"

#: ../nitrophone/apps.rst:63
msgid ""
"`Signal <https://signal.org/android/apk/>`_ is secure and now widely used. "
"It can also be downloaded without an app store."
msgstr ""
"`Signal <https://signal.org/android/apk/>`_很安全，现在被广泛使用。它也可以在"
"没有应用商店的情况下下载。"

#: ../nitrophone/apps.rst:64
msgid ""
"`Element <https://element.io/>`_ does not require a central infrastructure "
"and allows the use of own servers. An own account can be registered for free "
"at `NitroChat <https://nitro.chat>`_ for example."
msgstr ""
"`Element <https://element.io/>`_不需要一个中央基础设施，允许使用自己的服务"
"器。例如，可以在`NitroChat <https://nitro.chat>`_免费注册一个自己的账户。"

#: ../nitrophone/apps.rst:65
msgid ""
"`Briar <https://briarproject.org/>`_ is a peer-to-peer messenger without any "
"server at all, which can be used without internet with contacts nearby."
msgstr ""
"`Briar <https://briarproject.org/>`_是一个完全没有服务器的点对点信使，它可以"
"在没有互联网的情况下与附近的联系人一起使用。"

#: ../nitrophone/apps.rst:66
msgid ""
"Contacts and calendar synchronization: DAVx5 supports CalDAV, CardDAV and "
"WebCAL."
msgstr "联系人和日历同步。DAVx5支持CalDAV、CardDAV和WebCAL。"

#: ../nitrophone/apps.rst:67
msgid ""
"One-time password generator (2FA, OTP): `Aegis Authenticator <https://github."
"com/beemdevelopment/Aegis>`_."
msgstr ""
"一次性密码发生器（2FA，OTP）。`Aegis Authenticator <https://github.com/"
"beemdevelopment/Aegis>`_。"

#: ../nitrophone/apps.rst:68
msgid ""
"Regarding camera app, see `here <https://grapheneos.org/usage#camera>`_."
msgstr "关于相机应用程序，见`这里<https://grapheneos.org/usage#camera>`_。"

#: ../nitrophone/apps.rst:71
msgid "Permissions of Individual Apps"
msgstr "单个应用程序的权限"

#: ../nitrophone/apps.rst:73
msgid ""
"To check or change the permissions on network access and sensors for a "
"specific app:"
msgstr "要检查或改变一个特定应用程序的网络访问和传感器的权限。"

#: ../nitrophone/apps.rst:75
msgid "*Long press on the respective app icon -> app info -> permissions*"
msgstr "*长按相应的应用图标->应用信息->权限*。"

#: ../nitrophone/background-images.rst:2
msgid "Background Images"
msgstr "背景图片"

#: ../nitrophone/background-images.rst:4
msgid "You can use these nice background images:"
msgstr "你可以使用这些漂亮的背景图片。"

#: ../nitrophone/faq.rst:2
msgid "NitroPhone FAQ"
msgstr "NitroPhone常见问题"

#: ../nitrophone/faq.rst:8
msgid "**Q:** Does the Nitrophone work with my carrier network?"
msgstr "**问：**Nitrophone可以在我的运营商网络中使用吗？"

#: ../nitrophone/faq.rst:5
msgid ""
"Google claims `all major carriers`_ should work with the Pixel phones. "
"Nevertheless there might be exceptions, obviously we cannot check `all` "
"carriers around the world. Best practice, is to check if you find some tests/"
"experience stories about the Pixel 4a together with your planned carrier "
"network."
msgstr ""
"谷歌声称`所有主要运营商`_都应该与Pixel手机合作。然而，可能会有例外，显然，我"
"们无法检查世界各地的`所有`运营商。最好的做法是，检查你是否找到一些关于Pixel "
"4a和你计划的运营商网络的测试/经验故事。"

#: ../nitrophone/faq.rst:14
msgid "**Q:** What is and how to activate *PIN Layout Scrambling*"
msgstr "**问：**什么是以及如何激活*PIN布局加扰*？"

#: ../nitrophone/faq.rst:11
msgid ""
"To make it difficult for strangers to read the PIN when typing it in, you "
"can display the PIN layout in a random order. Additionally, we recommend a "
"`privacy screen <https://shop.nitrokey.com/shop/product/privacyscreen-for-"
"nitrophone-1-194>`_. To enable, select: *Settings -> Security -> PIN "
"scrambling -> Scramble PIN*"
msgstr ""
"为了让陌生人在输入PIN时难以读懂，你可以以随机顺序显示PIN的布局。此外，我们推"
"荐使用`隐私屏幕<https://shop.nitrokey.com/shop/product/privacyscreen-for-"
"nitrophone-1-194>`_。要启用，请选择。*设置 -> 安全 -> 扰乱密码 -> 扰乱密码*。"

#: ../nitrophone/faq.rst:22
msgid "**Q:** What is a *Kill Switch* and how to activate it?"
msgstr "**问：**什么是*杀戮开关，如何启动它？"

#: ../nitrophone/faq.rst:17
msgid ""
"Kill Switches, which erase all the phone's data when triggered, are very "
"risky in practice as they could be triggered unintentionally. Therefore, the "
"NitroPhone instead has the feature to automatically shut down and restart "
"when inactive for a set period of time. This puts the phone in a secure "
"state where all data is encrypted, no data is in RAM, and the phone can only "
"be unlocked with the legitimate PIN or password. To enable, select: "
"*Settings -> Security -> Auto reboot -> select the idle time duration after "
"which the phone should reboot*"
msgstr ""
"杀死开关在被触发后会清除手机的所有数据，在实践中是非常危险的，因为它们可能被"
"无意中触发。因此，NitroPhone具有自动关机的功能，并在设定的时间内不活动时重新"
"启动。这使手机处于安全状态，所有数据都被加密，RAM中没有数据，手机只能用合法的"
"PIN码或密码解锁。要启用，请选择。*设置 -> 安全性 -> 自动重启 -> 选择手机应重"
"启的闲置时间*。"

#: ../nitrophone/faq.rst:30
msgid ""
"**Q:** Why do I get \"Warning: Your device is loading a different operating "
"system\"?"
msgstr "**问：**为什么我得到\"警告。你的设备正在加载一个不同的操作系统\"？"

#: ../nitrophone/faq.rst:29
msgid ""
"Shortly after the phone is turned on, the warning \"Your device is loading a "
"different operating system\" is displayed. This warning indicates that no "
"ordinary Google Android is running and can be ignored."
msgstr ""
"手机开机后不久，就会显示警告\"你的设备正在加载一个不同的操作系统\"。这个警告"
"表明没有运行普通的谷歌安卓系统，可以忽略不计。"

#: ../nitrophone/faq.rst:33
msgid "**Q:** How can I check, if my NitroPhone has been hacked/compromised?"
msgstr "**问：**如何检查我的NitroPhone是否已被黑客攻击/入侵？"

#: ../nitrophone/faq.rst:33
msgid ""
"If you want to check the integrity of the operating system, you can use "
"`remote verification <https://attestation.app/about>`_."
msgstr ""
"如果你想检查操作系统的完整性，你可以使用`远程验证<https://attestation.app/"
"about>`_。"

#: ../nitrophone/faq.rst:36
msgid "**Q:** Where can I get further information about GrapheneOS?"
msgstr "**问：**我在哪里可以得到有关GrapheneOS的进一步信息？"

#: ../nitrophone/faq.rst:36
msgid ""
"`Here <https://grapheneos.org/faq>`_ you can find further information on "
"GrapheneOS."
msgstr ""
"`在这里 <https://grapheneos.org/faq>`_你可以找到关于GrapheneOS的进一步信息。"

#: ../nitrophone/faq.rst:39
msgid "**Q:** Why is OEM unlocking enabled by default?"
msgstr "**问：**为什么默认启用OEM解锁功能？"

#: ../nitrophone/faq.rst:39
msgid ""
"The only real purpose of the OEM Unlocking setting is `anti-theft protection "
"<https://grapheneos.org/faq#anti-theft>`_ which is not implemented by "
"GrapheneOS. OEM unlocking controls whether the device can be unlocked via "
"boot loader. In the later case all user data is wiped. If OEM Unlocking is "
"disabled, someone can still boot up in recovery mode, enter the menu, wipe "
"data, then boot the OS and enable OEM unlocking. Therefore it doesn't really "
"increase the security but `disabling it <index.html>`_ reduces the potential "
"physical attack surface."
msgstr ""
"OEM解锁设置的唯一真正目的是`反盗窃保护<https://grapheneos.org/faq#anti-"
"theft>`_，GrapheneOS没有实现。OEM解锁控制设备是否可以通过启动加载器解锁。在后"
"一种情况下，所有的用户数据都被抹去。如果OEM解锁被禁用，有人仍然可以在恢复模式"
"下启动，进入菜单，擦除数据，然后启动操作系统并启用OEM解锁。因此，它并没有真正"
"提高安全性，但`禁用它<index.html>`_减少潜在的物理攻击面。"

#: ../nitrophone/index.rst:2
msgid "NitroPhone"
msgstr "NitroPhone"

#: ../nitrophone/index.rst:9
msgid ""
"By default you have a secure smartphone, already pre-installed with all the "
"most necessary apps."
msgstr "默认情况下，你有一个安全的智能手机，已经预装了所有最必要的应用程序。"

#: ../nitrophone/index.rst:11
msgid ""
"Set up a six-digit PIN to protect the phone. In cooperation with the "
"security chip, this will ensure high security while maintaining good "
"usability."
msgstr ""
"设置一个六位数的密码来保护手机。在与安全芯片的合作中，这将确保高度的安全性，"
"同时保持良好的可用性。"

#: ../nitrophone/index.rst:13
msgid ""
"For extra hardening (optional): Go to Settings -> System -> Developer "
"Options and disable the \"OEM unlocking\" setting. Afterwards disable the "
"\"Developer Options\"."
msgstr ""
"对于额外的加固（可选）。进入设置-> 系统-> 开发者选项，禁用\"OEM解锁\" 设置。"
"之后，禁用\"开发者选项\"。"

#: ../nitrophone/index.rst:15
msgid ""
"Please familiarize yourself with `using your GrapheneOS <https://grapheneos."
"org/usage>`_."
msgstr "请熟悉`使用你的GrapheneOS <https://grapheneos.org/usage>`_。"

#: ../nitrophone/index.rst:17
msgid "For more details, see the following pages:"
msgstr "更多细节，请见以下几页。"

#: ../pro/factory-reset.rst:8
msgid "There are two types of factory resets for Nitrokey Pro devices:"
msgstr "Nitrokey Pro设备的出厂重置有两种类型。"

#: ../pro/factory-reset.rst:14
msgid ""
"Also, it is possible to generate a new AES key that is used to encrypt the "
"Password Safe without performing a factory reset."
msgstr ""
"此外，还可以生成一个新的AES密钥，用于加密密码保险箱，而无需执行出厂重置。"

#: ../pro/faq.rst:2
msgid "Nitrokey Pro 2 FAQ"
msgstr "Nitrokey Pro 2常见问题"

#: ../pro/faq.rst:19
msgid ""
"**Q:** Why does my Nitrokey Pro hang when switching between nitrokey-app and "
"GnuPG?"
msgstr "**问：**为什么我的Nitrokey Pro在nitrokey-app和GnuPG之间切换时挂起？"

#: ../pro/faq.rst:36
msgid ""
"Encryption of 50kiB of data: * 256 bit AES, 2048 bytes per command -> 880 "
"bytes per second * 128 bit AES, 2048 bytes per command -> 893 bytes per "
"second * 256 bit AES, 240 bytes per command -> 910 bytes per second * 128 "
"bit AES, 240 bytes per command -> 930 bytes per second"
msgstr ""
"对50kiB的数据进行加密。* 256位AES，每个命令2048字节 -> 880字节/秒 * 128位"
"AES，每个命令2048字节 -> 893字节/秒 * 256位AES，每个命令240字节 -> 910字节/"
"秒 * 128位AES，每个命令240字节 -> 930字节/秒"

#: ../pro/faq.rst:47
msgid ""
"**Q:** Does the Nitrokey Pro contain a secure chip or just a normal "
"microcontroller?"
msgstr "**问：**Nitrokey Pro是否包含安全芯片或只是一个普通的微控制器？"

#: ../pro/faq.rst:47
msgid "Nitrokey Pro contains a tamper resistant smart card."
msgstr "Nitrokey Pro包含一个防篡改的智能卡。"

#: ../pro/faq.rst:54 ../hsm/faq.rst:82
msgid "**Q:** Is the Nitrokey Pro Common Criteria or FIPS certified?"
msgstr "**问：** Nitrokey Pro是否经过通用标准或FIPS认证？"

#: ../pro/faq.rst:57
msgid ""
"Nitrokey Pro and Nitrokey Storage use a True Random Number Generator (TRNG) "
"for generating keys on the device. The entropy generated by the TRNG is used "
"for the entire key length. Therefore the TRNG is compliant to BSI TR-03116."
msgstr ""
"Nitrokey Pro和Nitrokey Storage使用真随机数发生器（TRNG）来生成设备上的密钥。"
"TRNG产生的熵被用于整个密钥长度。因此，TRNG符合BSI TR-03116的规定。"

#: ../pro/faq.rst:61
msgid "The TRNG provides about 40 kbit/s."
msgstr "TRNG提供约40 kbit/s。"

#: ../pro/faq.rst:64
msgid ""
"The Nitrokey Pro doesn't contain storage capability for ordinary data (it "
"can only store cryptographic keys and certificates)."
msgstr "Nitrokey Pro不包含普通数据的存储能力（它只能存储加密密钥和证书）。"

#: ../pro/index.rst:2
msgid "Nitrokey Pro 2"
msgstr "Nitrokey Pro 2"

#: ../pro/linux/product_platform_heading.rst:3
msgid "(Nitrokey Pro 2 - Linux)"
msgstr "(Nitrokey Pro 2 - Linux)"

#: ../hsm/certificate-authority.rst:2
msgid "Creating a Certificate Authority"
msgstr "创建一个证书颁发机构"

#: ../hsm/certificate-authority.rst:8
msgid ""
"This article shows you how to setup your own private certificate authority "
"backed by a Nitrokey HSM. This certificate authority has no automation and "
"does not really scale. Other open source projects can be referenced for "
"automation and scalability."
msgstr ""
"本文向你展示了如何设置由Nitrokey HSM支持的自己的私人证书授权。这个证书授权机"
"构没有自动化，也没有真正的扩展。在自动化和可扩展性方面可以参考其他开源项目。"

#: ../hsm/certificate-authority.rst:11
msgid "Choose Cryptographic Algorithms"
msgstr "选择密码学算法"

#: ../hsm/certificate-authority.rst:13
msgid ""
"I’m going to assume that you’re as paranoid as I am, so I will be using the "
"following command for generating private keys:"
msgstr "我将假设你和我一样偏执，所以我将使用以下命令来生成私钥。"

#: ../hsm/certificate-authority.rst:19
msgid ""
"But, if you’re less paranoid that I am, you can safely choose the following "
"options:"
msgstr "但是，如果你不像我这么偏执，你可以安全地选择以下选项。"

#: ../hsm/certificate-authority.rst:26
msgid ""
"Likewise, I will be using the sha512 algorithm throughout this article, but "
"sha256 can safely be used."
msgstr "同样，我将在本文中使用sha512算法，但也可以安全地使用sha256算法。"

#: ../hsm/certificate-authority.rst:29
msgid "Preparing to Start"
msgstr "准备开始"

#: ../hsm/certificate-authority.rst:31
msgid "To start with, you need to pick a directory to store your CA."
msgstr "首先，你需要选择一个目录来存储你的CA。"

#: ../hsm/certificate-authority.rst:42
msgid "Install the necessary tools:"
msgstr "安装必要的工具。"

#: ../hsm/certificate-authority.rst:52
msgid ""
"For Windows download the official `OpenSC releases <https://github.com/"
"OpenSC/OpenSC/releases>`_ and make sure you install `p11tool as described "
"<https://github.com/thales-e-security/p11tool>`_. Using the PowerShell most "
"commands should be identical as long as both tools and their binaries are "
"within your ``PATH``."
msgstr ""
"对于Windows，下载官方的`OpenSC发布的<https://github.com/OpenSC/OpenSC/"
"releases>`_，并确保你安装`p11tool，如描述的<https://github.com/thales-e-"
"security/p11tool>`_。只要两个工具及其二进制文件都在你的``PATH``内，使用"
"PowerShell的大多数命令应该是相同的。"

#: ../hsm/certificate-authority.rst:58
msgid "Creating the Root Certificate Authority"
msgstr "创建根证书颁发机构"

#: ../hsm/certificate-authority.rst:60
msgid ""
"We start by generating the private key for the certificate authority "
"directly on the Nitrokey HSM. This allows us to use the private key in the "
"future, but not access it."
msgstr ""
"我们首先在Nitrokey HSM上直接为证书机构生成私钥。这允许我们在将来使用私钥，但"
"不能访问它。"

#: ../hsm/certificate-authority.rst:83
msgid ""
"Note the ID number (e0161cc8b6f5d66ac6835ecdecb623fc0506a675), we’ll need it "
"later."
msgstr ""
"注意ID号（e0161cc8b6f5d66ac6835ecdecb623fc0506a675），我们以后会需要它。"

#: ../hsm/certificate-authority.rst:85 ../hsm/certificate-authority.rst:240
msgid ""
"If you need the ID in the future, you can list the keys on the Nitrokey HSM:"
msgstr "如果你将来需要这个ID，你可以在Nitrokey HSM上列出这些钥匙。"

#: ../hsm/certificate-authority.rst:91 ../hsm/certificate-authority.rst:246
msgid ""
"We need to create a config file to generate a self-signed public certificate."
msgstr "我们需要创建一个配置文件来生成一个自签名的公共证书。"

#: ../hsm/certificate-authority.rst:97 ../hsm/certificate-authority.rst:252
msgid ""
"Fill out the request information in <angle brackets> with information for "
"your CA."
msgstr "在<角括号>中填写请求信息，并附上你的CA的信息。"

#: ../hsm/certificate-authority.rst:157
msgid ""
"Generate the self-signed public certificate from the private key. Use the "
"private key id value from earlier."
msgstr "从私钥生成自签名的公共证书。使用先前的私钥ID值。"

#: ../hsm/certificate-authority.rst:165
msgid ""
"Verify that the root certificate was generated correctly. Verify that "
"Signature-Algorithm matches above and below. Verify that Issuer and Subject "
"match, all root certificates are self signed. Verify that Key Usage matches "
"what was in the v3_ca information in our config file."
msgstr ""
"验证根证书是否正确生成。验证签名-算法是否与上面和下面相匹配。验证签发人和主题"
"是否匹配，所有根证书都是自签的。验证密钥使用与我们配置文件中v3_ca信息中的内容"
"相匹配。"

#: ../hsm/certificate-authority.rst:213
msgid "Creating the Intermediate Certificate Authority"
msgstr "创建中间证书颁发机构"

#: ../hsm/certificate-authority.rst:215
msgid ""
"We continue by generating the private key for the intermediate certificate "
"authority directly on the Nitrokey HSM. This allows us to use the private "
"key in the future, but not access it."
msgstr ""
"我们继续在Nitrokey HSM上直接生成中间证书颁发机构的私钥。这使我们能够在未来使"
"用私钥，但不能访问它。"

#: ../hsm/certificate-authority.rst:238
msgid ""
"Note the ID number (bcb48fe9b566ae61891aabbfde6a23d4ff3ab639), we’ll need it "
"later."
msgstr ""
"注意ID号（bcb48fe9b566ae61891aabbfde6a23d4ff3ab639），我们以后会需要它。"

#: ../hsm/certificate-authority.rst:279
msgid ""
"Generate the certificate signing request for the intermediate CA from the "
"intermediate CA’s private key. Use the private key ID value from earlier."
msgstr "从中间CA的私钥中生成中间CA的证书签署请求。使用先前的私钥ID值。"

#: ../hsm/certificate-authority.rst:287
msgid ""
"Verify that the CSR was created correctly. Verify that your Subject is "
"correct. Verify that your Public Key and Signature Algorithm are correct."
msgstr ""
"验证CSR的创建是否正确。验证你的主题是否正确。验证你的公钥和签名算法是否正确。"

#: ../hsm/certificate-authority.rst:320 ../hsm/certificate-authority.rst:525
msgid ""
"We need to find out the fully qualified PKCS#11 URI for your private key:"
msgstr "我们需要找出你的私钥的完全合格的PKCS#11 URI。"

#: ../hsm/certificate-authority.rst:358 ../hsm/certificate-authority.rst:563
msgid "In this instance, the fully qualified PKCS#11 URI is:"
msgstr "在这个例子中，完全合格的PKCS#11 URI是。"

#: ../hsm/certificate-authority.rst:364
msgid ""
"Now, we need to create a config file to use the private key of the root "
"certificate to sign the csr of the intermediate certificate."
msgstr "现在，我们需要创建一个配置文件，使用根证书的私钥来签署中间证书的CSR。"

#: ../hsm/certificate-authority.rst:416
msgid "Then sign the intermediate certificate with the root certificate."
msgstr "然后用根证书签署中级证书。"

#: ../hsm/certificate-authority.rst:456
msgid ""
"Verify that the root certificate was generated correctly. Verify that the "
"Issuer and Subject are different, and correct. Verify that the Key Usage "
"matches the config file. Verify that the signature algorithm are correct "
"above and below."
msgstr ""
"验证根证书的生成是否正确。验证签发人和主题是否不同，并且正确。验证密钥的使用"
"与配置文件相匹配。验证签名算法上下都正确。"

#: ../hsm/certificate-authority.rst:503
msgid ""
"Verify that the intermediate certificate verifies against the root "
"certificate."
msgstr "验证中间证书是否能与根证书进行验证。"

#: ../hsm/certificate-authority.rst:510
msgid "Create a certificate chain file:"
msgstr "创建一个证书链文件。"

#: ../hsm/certificate-authority.rst:516
msgid "You now have a certificate authority backed by an HSM."
msgstr "你现在有一个由HSM支持的证书授权。"

#: ../hsm/certificate-authority.rst:519
msgid "Sign a Server Certificate"
msgstr "签署服务器证书"

#: ../hsm/certificate-authority.rst:521
msgid ""
"Now that you have a certificate authority, you’d probably like to know how "
"to use it."
msgstr "现在你有了一个证书授权，你可能想知道如何使用它。"

#: ../hsm/certificate-authority.rst:523
msgid ""
"Create a CSR in the normal method for your application. Proper creation of "
"your certificate, including SAN, for your particular application is outside "
"the scope of this document."
msgstr ""
"以正常的方法为你的应用创建CSR。为你的特定应用正确创建你的证书，包括SAN，不在"
"本文件的范围之内。"

#: ../hsm/certificate-authority.rst:569
msgid ""
"Create a config file to use the private key of the intermediate certificate "
"to sign the CSRs of your servers."
msgstr "创建一个配置文件，使用中间证书的私钥来签署你服务器的CSR。"

#: ../hsm/certificate-authority.rst:624
msgid "Then run openssl to sign the server’s CSR."
msgstr "然后运行openssl来签署服务器的CSR。"

#: ../hsm/certificate-authority.rst:673 ../pro/windows/openvpn-viscosity.rst:96
msgid "References"
msgstr "参考文献"

#: ../hsm/certificate-authority.rst:675
msgid "I used the following resources to help in compiling this document."
msgstr "我使用了以下资源来帮助编纂本文件。"

#: ../hsm/certificate-authority.rst:677
msgid ""
"`How to initialize your Nitrokey HSM <https://github.com/OpenSC/OpenSC/wiki/"
"SmartCardHSM#initialize-the-device>`_"
msgstr ""
"`如何初始化你的Nitrokey HSM <https://github.com/OpenSC/OpenSC/wiki/"
"SmartCardHSM#initialize-the-device>`_"

#: ../hsm/certificate-authority.rst:678
msgid ""
"`How to create a root and intermediate CA <https://jamielinux.com/docs/"
"openssl-certificate-authority/create-the-root-pair.html>`_"
msgstr ""
"`如何创建根和中级CA <https://jamielinux.com/docs/openssl-certificate-"
"authority/create-the-root-pair.html>`_"

#: ../hsm/certificate-authority.rst:679
msgid ""
"`How to ensure the serial numbers of your intermediate CA and server certs "
"are up to spec <https://www.phildev.net/ssl/creating_ca.html>`_"
msgstr ""
"`如何确保你的中间CA和服务器证书的序列号符合规范 <https://www.phildev.net/ssl/"
"creating_ca.html>`_"

#: ../hsm/certificate-authority.rst:680
msgid ""
"`How to generate ECC private keys <https://dev.to/benjaminblack/obtaining-an-"
"elliptic-curve-dsa-certificate-with-lets-encrypt-51bc>`_"
msgstr ""
"`如何生成ECC私钥 <https://dev.to/benjaminblack/obtaining-an-elliptic-curve-"
"dsa-certificate-with-lets-encrypt-51bc>`_"

#: ../hsm/certificate-authority.rst:681
msgid ""
"`How to find the PCKS11 URI from your HSM <https://www.infradead.org/"
"openconnect/pkcs11.html>`_"
msgstr ""
"`如何从你的HSM找到PCKS11 URI <https://www.infradead.org/openconnect/pkcs11."
"html>`_"

#: ../hsm/certificate-authority.rst:682
msgid ""
"`Troubleshooting (forum) <https://support.nitrokey.com/t/pki-ca-nitrokey-hsm-"
"does-not-support-signing/2598/14>`_"
msgstr ""
"`故障排除（论坛） <https://support.nitrokey.com/t/pki-ca-nitrokey-hsm-does-"
"not-support-signing/2598/14>`_"

#: ../hsm/certificate-authority.rst:685
msgid ""
"This document was originally `written by lyntux <https://gist.github.com/"
"lyntux/f02c6c3414ce48bc8ea8ab6dcdba1623>`_"
msgstr ""
"本文件最初`由lyntux撰写<https://gist.github.com/lyntux/"
"f02c6c3414ce48bc8ea8ab6dcdba1623>`_。"

#: ../pro/linux/index.rst:2
msgid "Nitrokey Pro, Linux"
msgstr "Nitrokey Pro, Linux"

#: ../pro/linux/index.rst:23 ../pro/mac/index.rst:16
msgid ""
"Download and start the `Nitrokey App <https://www.nitrokey.com/download>`_. "
"Follow the `instructions <change-pins.html>`_ to change the default User PIN "
"(default: 123456) and Admin PIN (default: 12345678) to your own choices."
msgstr ""
"下载并启动`Nitrokey应用程序 <https://www.nitrokey.com/download>`_。按照`的指"
"示<change-pins.html>`_，将默认的用户密码（默认：123456）和管理密码（默认："
"12345678）改为你自己的选择。"

#: ../pro/linux/index.rst:40
msgid ""
"Note: For many use cases described, it is necessary to have either OpenPGP "
"or S/MIME keys installed on the device (see below)."
msgstr ""
"注意：对于所述的许多用例，有必要在设备上安装OpenPGP或S/MIME密钥（见下文）。"

#: ../pro/mac/product_platform_heading.rst:3
msgid "(Nitrokey Pro 2 - macOS)"
msgstr "(Nitrokey Pro 2 - macOS)"

#: ../pro/mac/index.rst:2
msgid "Nitrokey Pro, Mac"
msgstr "Nitrokey Pro, Mac"

#: ../pro/mac/index.rst:13
msgid ""
"Once you plug in the Nitrokey, your computer will start the Keyboard Setup "
"Assistant. **Don’t run through this assistant but exit it right away.**"
msgstr ""
"一旦你插上Nitrokey，你的电脑就会启动键盘设置助手。**不要跑完这个助手，要马上"
"退出。"

#: ../pro/windows/product_platform_heading.rst:3
msgid "(Nitrokey Pro 2 - Windows)"
msgstr "(Nitrokey Pro 2 - Windows)"

#: ../pro/windows/index.rst:2
msgid "Nitrokey Pro, Windows"
msgstr "Nitrokey Pro, Windows"

#: ../pro/windows/index.rst:16
msgid ""
"Connect your Nitrokey to your computer and confirm all dialogs so that the "
"USB smart card device driver gets installed almost automatically. Windows "
"may fail to install an additional device driver for the smart card. Its safe "
"to ignore this warning."
msgstr ""
"将你的Nitrokey连接到电脑上，并确认所有的对话框，这样USB智能卡设备驱动程序就几"
"乎自动安装了。Windows可能无法为智能卡安装一个额外的设备驱动程序。忽略这个警告"
"是安全的。"

#: ../pro/windows/index.rst:22
msgid ""
"Go to “Menu” -> “Configure” to change the User PIN (default: 123456) and "
"Admin PIN (default: 12345678) to your own choices."
msgstr ""
"进入 \"菜单\"-> \"配置\"，将用户密码（默认：123456）和管理员密码（默认："
"12345678）改为自己的选择。"

#: ../pro/windows/index.rst:30
msgid ""
"Your Nitrokey is now ready to use. `Checkout <https://www.nitrokey.com/en/"
"applications>`_ the various use cases and supported applications."
msgstr ""
"你的Nitrokey现在已经可以使用了。`查看<https://www.nitrokey.com/en/"
"applications>`_的各种使用情况和支持的应用程序。"

#: ../pro/windows/openvpn-viscosity.rst:6
msgid "Viscosity Client Configuration with OpenVPN"
msgstr "使用OpenVPN的Viscosity客户端配置"

#: ../pro/windows/openvpn-viscosity.rst:12
msgid ""
"This guide will show to configure `Viscosity client <https://www.sparklabs."
"com/viscosity/>`_ to connect to an OpenVPN instance, using a `Nitrokey Pro 2 "
"<https://shop.nitrokey.com/shop/product/nk-pro-2-nitrokey-pro-2-3>`_ (or "
"`Nitrokey Storage 2 <https://shop.nitrokey.com/shop/product/nitrokey-"
"storage-2-56>`_), and `PKCS#11 authentication <https://openvpn.net/community-"
"resources/how-to/#what-is-pkcs11>`_."
msgstr ""
"本指南将展示如何配置`Viscosity客户端<https://www.sparklabs.com/viscosity/>`_"
"以连接到OpenVPN实例。使用`Nitrokey Pro 2 <https://shop.nitrokey.com/shop/"
"product/nk-pro-2-nitrokey-pro-2-3>`_（或`Nitrokey Storage 2 <https://shop."
"nitrokey.com/shop/product/nitrokey-storage-2-56>`_）。和`PKCS#11认证<https://"
"openvpn.net/community-resources/how-to/#what-is-pkcs11>`_。"

#: ../pro/windows/openvpn-viscosity.rst:19
msgid ""
"For this guide, you will need an OpenVPN remote server installed and "
"configured for clients. For the purpose of this document, we have used "
"OpenVPN 2.49 installed on a Debian 10 server."
msgstr ""
"在本指南中，你将需要一个为客户安装和配置的OpenVPN远程服务器。在本文件中，我们"
"使用了安装在Debian 10服务器上的OpenVPN 2.49。"

#: ../pro/windows/openvpn-viscosity.rst:21
msgid ""
"To read about how to configure OpenVPN to authenticate with Nitrokey Pro, "
"you might consult the following `documentation <openvpn-easyrsa.html>`_, as "
"we will just cover the way to configure the Viscosity client in this guide."
msgstr ""
"要阅读关于如何配置OpenVPN来验证Nitrokey Pro，你可以参考以下`文档<openvpn-"
"easyrsa.html>`_，因为我们在本指南中只涉及配置Visuality客户端的方法。"

#: ../pro/windows/openvpn-viscosity.rst:23
msgid "You will also need the following:"
msgstr "你还将需要以下东西。"

#: ../pro/windows/openvpn-viscosity.rst:25
msgid "A Nitrokey Pro 2 or Nitrokey Storage 2"
msgstr "一个Nitrokey Pro 2或Nitrokey Storage 2"

#: ../pro/windows/openvpn-viscosity.rst:27
msgid "Client’s private key ``client.key`` loaded on the Nitrokey"
msgstr "客户的私钥 ``client.key``加载在Nitrokey上。"

#: ../pro/windows/openvpn-viscosity.rst:29
msgid "Client’s certificate ``client.crt`` loaded on the Nitrokey"
msgstr "客户的证书 ``client.crt``加载到Nitrokey上。"

#: ../pro/windows/openvpn-viscosity.rst:31
msgid ""
"The Certificate Authority file, i.e. ``CA.crt`` file used for your OpenVPN "
"setup"
msgstr "证书授权文件，即``CA.crt``文件用于你的OpenVPN设置。"

#: ../pro/windows/openvpn-viscosity.rst:34
msgid "Optional: The shared secret key file, i.e. ``ta.key``"
msgstr "可选的。共享秘钥文件，即``ta.key``。"

#: ../pro/windows/openvpn-viscosity.rst:36
msgid ""
"For more information on ``PKCS#11`` key management with OpenVPN, please "
"consult OpenVPN’s `documentation. <https://openvpn.net/community-resources/"
"how-to/>`_"
msgstr ""
"关于``PKCS#11``用OpenVPN进行密钥管理的更多信息，请参考OpenVPN的`文档。"
"<https://openvpn.net/community-resources/how-to/>`_。"

#: ../pro/windows/openvpn-viscosity.rst:41
msgid ""
"Start Viscosity and create a new connection “openVPN” (you can name it as "
"you wish)"
msgstr "启动Viscosity并创建一个新的连接 \"openVPN\"（你可以随心所欲地命名它）"

#: ../pro/windows/openvpn-viscosity.rst:48
msgid "Right click on the connection and click edit"
msgstr "在连接上点击右键并点击编辑"

#: ../pro/windows/openvpn-viscosity.rst:54
msgid ""
"Add your server’s IP address and configure the port according to your "
"configuration."
msgstr "添加你的服务器的IP地址，并根据你的配置来配置端口。"

#: ../pro/windows/openvpn-viscosity.rst:57
msgid ""
"Under authentication, In ``Type`` scroll down to ``SSL/TLS Client (PKCS11)``"
msgstr "在认证下，在``Type`向下滚动到``SSL/TLS Client (PKCS11)``。"

#: ../pro/windows/openvpn-viscosity.rst:60
msgid "Select the CA file for your connection"
msgstr "为你的连接选择CA文件"

#: ../pro/windows/openvpn-viscosity.rst:62
msgid "Optional: Select the ``ta.key`` in the ``TLS-Auth`` section"
msgstr "可选的。选择``ta.key``在``TLS-Auth``部分。"

#: ../pro/windows/openvpn-viscosity.rst:68
msgid ""
"Click the Add button next to the Providers field and select the ``PKCS#11`` "
"module for your Nitrokey. Multiple providers can be specified, and for "
"instance we will use ``OpenSC``."
msgstr ""
"点击供应商字段旁边的添加按钮，选择``PKCS#11``模块作为你的Nitrokey。可以指定多"
"个供应商，例如，我们将使用``OpenSC``。"

#: ../pro/windows/openvpn-viscosity.rst:72
msgid ""
"On macOS, the most common location for modules to be found is in the /usr/"
"lib directory. Please refer to the documentation included with your driver "
"software for the location to use. OpenSC’s module can be found at ``/Library/"
"OpenSC/lib/opensc-pkcs11.so``"
msgstr ""
"在macOS上，找到模块的最常见位置是/usr/lib目录。关于使用的位置，请参考你的驱动"
"软件附带的文档。OpenSC的模块可以在``/Library/OpenSC/lib/opensc-pkcs11.so``找"
"到。"

#: ../pro/windows/openvpn-viscosity.rst:75
msgid ""
"On Windows, the most common location for libraries is either in ``C:"
"\\Program Files`` or ``C:\\Windows\\System32``. OpenSC libraries are "
"generally located at ``C:\\Program Files\\OpenSC Project\\OpenSC\\pkcs11``. "
"There may be more than one library available here, you can try each one or "
"simply add both."
msgstr ""
"在Windows上，库的最常见位置是在``C:\\Program Files`或者``C:"
"\\Windows\\System32```。OpenSC库通常位于``C:\\Program Files\\OpenSC "
"Project\\OpenSC\\pkcs11``。这里可能有不止一个库可用，你可以尝试每一个，或者干"
"脆把两个库都加进去。"

#: ../pro/windows/openvpn-viscosity.rst:77
msgid "Choose a retrieval method from the Retrieval drop down menu"
msgstr "从检索的下拉菜单中选择一种检索方法"

#: ../pro/windows/openvpn-viscosity.rst:82
msgid ""
"If only one Nitrokey will ever be used on this computer, select ``Use "
"certificate name below``. If the Nitrokey is currently connected to the "
"computer, click the ``Detect`` button for Viscosity to automatically fill in "
"the Name field. Otherwise this field can be completed manually."
msgstr ""
"如果这台电脑上只使用一个硝基钥匙，请选择``Use certificate name below``。如果"
"硝基钥匙目前已经连接到电脑上，点击``Detect``按钮，让粘度自动填入名称栏。否则"
"这个字段可以手动完成。"

#: ../pro/windows/openvpn-viscosity.rst:88
msgid ""
"If in doubt, or if more than one Nitrokey may be used (i.e. multiple users), "
"then select ``Prompt for certificate name``."
msgstr ""
"如果有疑问，或者如果可能使用一个以上的硝基钥匙（即多个用户），那么选择"
"``Prompt for certificate name``。"

#: ../pro/windows/openvpn-viscosity.rst:91
msgid ""
"If ``Prompt for certificate name`` was selected, Viscosity will "
"automatically detect the required key on the Nitrokey, using the specified "
"PKCS#11 module/s. Select from any of the found devices, or enter the name of "
"the ``serialized id`` to use manually. Again, the user should be prompted "
"for a password/PIN if required."
msgstr ""
"如果``Prompt for certificate name``被选中，Viscosity将自动检测Nitrokey上所需"
"的密钥，使用指定的PKCS#11模块/s。从发现的任何设备中选择，或者输入"
"``serialized id``的名称来手动使用。同样，如果需要，应该提示用户输入密码/PIN。"

#: ../pro/windows/openvpn-viscosity.rst:93
msgid "Click the Save button and connect from your the main interface"
msgstr "点击 \"保存 \"按钮，从主界面连接。"

#: ../pro/windows/openvpn-viscosity.rst:98
msgid ""
"`Using Tokens/Smartcards (PKCS#11) <https://www.sparklabs.com/support/kb/"
"article/using-tokens-smartcards-pkcs-11/>`_"
msgstr ""
"`使用令牌/智能卡（PKCS#11） <https://www.sparklabs.com/support/kb/article/"
"using-tokens-smartcards-pkcs-11/>`_"

#: ../pro/windows/openvpn-viscosity.rst:101
msgid "`OpenVPN HOWTO <https://openvpn.net/community-resources/how-to/>`_"
msgstr "`OpenVPN HOWTO <https://openvpn.net/community-resources/how-to/>`_"

#: ../pro/windows/openvpn-viscosity.rst:104
msgid "Notes"
msgstr "笔记"

#: ../pro/windows/openvpn-viscosity.rst:106
msgid ""
"Viscosity is not free, and thus you might run into issues in using the free "
"version."
msgstr "Viscosity不是免费的，因此你在使用免费版本时可能会遇到问题。"

#: ../pro/windows/openvpn-viscosity.rst:109
msgid ""
"We are considering the usage of `Pritunl <https://client.pritunl.com/>`_ as "
"a free and open alternative."
msgstr ""
"我们正在考虑使用`Pritunl <https://client.pritunl.com/>`_作为一个免费和开放的"
"选择。"

#: ../nitropad/content/shared-index-content1.rst:11
#: ../nitropad/content/shared-index-content1.rst:28
msgid ""
"With the NitroPad, malicious changes to the BIOS, operating system, and "
"software can be easily detected. For example, if you left your NitroPad in a "
"hotel room, you can use your Nitrokey to check if it has been tampered with "
"while you were away. If an attacker modifies the NitroPad’s firmware or "
"operating system, the Nitrokey will detect this (instructions below)."
msgstr ""
"有了NitroPad，对BIOS、操作系统和软件的恶意修改可以很容易被发现。例如，如果你"
"把NitroPad留在酒店房间里，你可以用Nitrokey来检查它在你离开时是否被篡改过。如"
"果攻击者修改了NitroPad的固件或操作系统，Nitrokey会检测到这一点（说明如下）。"

#: ../nitropad/content/shared-index-content1.rst:21
msgid ""
"If you have ordered the unit with the option “sealed screws and sealed bag”, "
"please `verify the sealing <sealed-hardware.html>`_ before unpacking. If you "
"do not know what this means, skip this section."
msgstr ""
"如果您在订购时选择了 \"密封螺丝和密封袋\"，请在开箱前`确认密封<sealed-"
"hardware.html>`_。如果你不知道这意味着什么，请跳过本节。"

#: ../nitropad/content/shared-index-content1.rst:64
msgid ""
"The NitroPad can also be started without the Nitrokey. If you don’t have the "
"Nitrokey with you, but are sure that the hardware has not been manipulated, "
"you can boot your system without checking."
msgstr ""
"在没有Nitrokey的情况下也可以启动NitroPad。如果你没有带Nitrokey，但确定硬件没"
"有被操作过，你可以不用检查就启动系统。"

#: ../nitropad/content/shared-index-content2.rst:12
msgid ""
"That’s why it’s important to restart your NitroPad under controlled "
"conditions after a system update. Only when the new status has been "
"confirmed can you leave the device unattended again. Otherwise, you will not "
"be able to distinguish a possible attack from a system update. Detailed "
"instructions for a system update can be `found here <system-update.html>`_."
msgstr ""
"这就是为什么在系统更新后要在可控条件下重启NitroPad的重要原因。只有当新的状态"
"被确认后，你才可以再次让设备无人看管。否则，您将无法区分可能的攻击和系统更"
"新。关于系统更新的详细说明可以在这里找到 ` <system-update.html>`_。"

#: ../nitropad/factory-reset.rst:13
msgid ""
"You have lost your Nitrokey (in which case you will first need a new one)"
msgstr "你丢失了你的Nitrokey（在这种情况下，你首先需要一个新的）。"

#: ../nitropad/factory-reset.rst:21 ../nitropad/factory-reset.rst:50
msgid ""
"All your data will be lost if you reset your device. Therefore please backup "
"your data before performing the reset."
msgstr ""
"如果你重置你的设备，你的所有数据都会丢失。因此，在执行重置之前，请备份您的数"
"据。"

#: ../nitropad/faq.rst:2
msgid "NitroPad FAQ"
msgstr "NitroPad常见问题"

#: ../nitropad/faq.rst:5 ../nitropc/faq.rst:5
msgid "**Q:** What is the default hard-disk encryption password?"
msgstr "**问：**默认的硬盘加密密码是什么？"

#: ../nitropad/faq.rst:5
msgid "The default Nitropad disk encryption password: \"PleaseChangeMe\""
msgstr "默认的Nitropad磁盘加密密码：\"PleaseChangeMe\"。"

#: ../nitropad/firmware-update.rst:22
msgid ""
"Download the `latest firmware <https://github.com/Nitrokey/heads/releases/"
"latest>`_ and store it on a USB drive. For the NitroPad T430 use ``nitropad-"
"t430-[version].npf`` and for the NitroPad X230 use ``nitropad-x230-[version]."
"npf``."
msgstr ""
"下载`最新的固件<https://github.com/Nitrokey/heads/releases/latest>`_并将其存"
"储在一个USB驱动器上。对于NitroPad T430，使用``nitropad-t430-[version].npf``，"
"对于NitroPad X230，使用``nitropad-x230-[version].npf`。"

#: ../nitropad/firmware-update.rst:25
msgid "For hash sum verification, store ``sha256sum`` file at the USB drive."
msgstr "对于哈希和验证，在USB驱动器上存储``sha256sum``文件。"

#: ../nitropad/firmware-update.rst:101
msgid "Select the desired .npf file."
msgstr "选择所需的.npf文件。"

#: ../nitropad/firmware-update.rst:122
msgid "You have successfully updated your firmware!"
msgstr "你已经成功地更新了你的固件!"

#: ../nitropad/firmware-update-1.4.rst:2
msgid "Firmware Update v1.4+"
msgstr "固件更新 v1.4+"

#: ../nitropad/firmware-update-1.4.rst:8
msgid ""
"Starting with v1.4 due to elementary changes inside Heads and the firmware "
"layout, the update requires some additional considerations. This applies for "
"both NitroPads X230 and T430."
msgstr ""
"从V1.4版本开始，由于Heads内部和固件布局的基本变化，更新需要一些额外的考虑。这"
"适用于NitroPads X230和T430。"

#: ../nitropad/firmware-update-1.4.rst:13
msgid "Should I update my NitroPad?"
msgstr "我应该更新我的NitroPad吗？"

#: ../nitropad/firmware-update-1.4.rst:15
msgid ""
"When updating your firmware to 1.4 (without using an external flasher "
"device) the graphical HEADS dialogues will be replaced with a less "
"convenient text-only version."
msgstr ""
"当更新您的固件到1.4时（不使用外部flasher设备），图形化的HEADS对话框将被一个不"
"太方便的纯文本版本所取代。"

#: ../nitropad/firmware-update-1.4.rst:19
msgid ""
"If you use Ubuntu, Debian, LinuxMint, or Qubes 4.0 updating the firmware "
"beyond v1.3.1 is (as of today) not needed. If you use Qubes 4.1 *without* "
"the integrated Ethernet port, you don't need to update the firmware either."
msgstr ""
"如果你使用Ubuntu、Debian、LinuxMint或Qubes 4.0，则不需要更新超过v1.3.1的固件"
"（从今天起）。如果你使用Qubes 4.1 *没有*集成以太网端口，你也不需要更新固件。"

#: ../nitropad/firmware-update-1.4.rst:23
msgid ""
"If you want to use Qubes 4.1 or newer *and* the integrated Ethernet port you "
"need to update the firmware to 1.4."
msgstr ""
"如果你想使用Qubes 4.1或更新的*和*集成的以太网端口，你需要将固件更新到1.4。"

#: ../nitropad/firmware-update-1.4.rst:27
msgid ""
"If the `.npf` file is not accepted by HEADS, likely you do not run the "
"latest HEADS version. So either 1st update to version 1.3.1 or `unzip` the `."
"npf` file and use the resulting `.rom` file instead."
msgstr ""
"如果\".npf \"文件不被HEADS接受，可能你没有运行最新的HEADS版本。因此，要么第1"
"次更新到1.3.1版本，要么`解压缩`.npf`文件并使用产生的`.rom`文件代替。"

#: ../nitropad/firmware-update-1.4.rst:33
msgid "How can I update my NitroPad?"
msgstr "我怎样才能更新我的NitroPad？"

#: ../nitropad/firmware-update-1.4.rst:35
msgid "Updating from ``v1.3.1`` onwards has two different ways:"
msgstr "从``v1.3.1``开始的更新有两种不同方式。"

#: ../nitropad/firmware-update-1.4.rst:37
msgid ""
"Legacy update using either ``nitropad-t430-v1.4.npf`` or ``nitropad-x230-"
"v1.4.npf`` from the Heads menu, see: :doc:`firmware-update`"
msgstr ""
"使用``nitropad-t430-v1.4.npf`或``nitropad-x230-v1.4.npf``从头菜单中进行传统更"
"新，见：:doc:`firmware-update`。"

#: ../nitropad/firmware-update-1.4.rst:39
msgid ""
"When using an external flasher device you can use the ``-maximized`` images. "
"This keeps graphical HEADS dialogues working. Read about the external "
"flashing below."
msgstr ""
"当使用外部闪光灯设备时，您可以使用``-maximized``图像。这可以保持图形化的HEADS"
"对话工作。阅读下面关于外部闪动的内容。"

#: ../nitropad/firmware-update-1.4.rst:43
msgid ""
"Never try updating your NitroPad using the `-maximized` image, if you do not "
"know exactly what you are doing! You will brick your NitroPad and it can "
"only be repaired using an external flasher!"
msgstr ""
"如果你不知道自己在做什么，千万不要尝试使用 \"最大化 \"的镜像来更新你的"
"NitroPad。你会使你的NitroPad变脆，而且只能用外部闪光灯来修复它。"

#: ../nitropad/firmware-update-1.4.rst:49
msgid "How can I update to *-maximized*?"
msgstr "我怎样才能更新到*-maximized*？"

#: ../nitropad/firmware-update-1.4.rst:52
msgid ""
"We highly recommend to NOT DO THIS ON YOUR OWN, as long as you are not "
"exactly know what you are doing!"
msgstr "我们强烈建议不要自己做这个，只要你不完全知道自己在做什么。"

#: ../nitropad/firmware-update-1.4.rst:55
msgid ""
"We have a service to do this upgrade on your NitroPad, please write an e-"
"mail to \"shop at nitrokey.com\" together with your sales order number "
"(SOxxxxxx)."
msgstr ""
"我们有为您的NitroPad进行升级的服务，请将您的销售订单号（SOxxxxxx）写到\"shop "
"at nitrokey.com\" 。"

#: ../nitropad/firmware-update-1.4.rst:58
msgid ""
"The following procedure describes roughly how to flash your NitroPad using "
"an external flasher - it is intentionally on a high level as we do not "
"recommend doing this process on your own. But for the sake of completeness "
"we document this here for the curios."
msgstr "但为了完整起见，我们在这里为好奇的人记录了这个过程。"

#: ../nitropad/firmware-update-1.4.rst:63
msgid ""
"Make sure you have a (``flashrom``) compatible flasher like ``ch341a_spi`` "
"with a SOIC-8 clamp."
msgstr ""
"确保你有一个（``flashrom```）兼容的闪光器，如``ch341a_spi```，带有SOIC-8夹"
"钳。"

#: ../nitropad/firmware-update-1.4.rst:65
msgid ""
"Open the device (`see coreboot docs <https://doc.coreboot.org/mainboard/"
"lenovo/Ivy_Bridge_series.html>`_) and make sure you can access both flash "
"chips."
msgstr ""
"打开设备（`见coreboot docs <https://doc.coreboot.org/mainboard/lenovo/"
"Ivy_Bridge_series.html>`_），确保你可以访问两个闪存芯片。"

#: ../nitropad/firmware-update-1.4.rst:68
msgid "Using ``flashrom`` read out the **bottom** flash (the 8MB image)"
msgstr "使用``flashrom``读出**底层的闪存（8MB的图像）。"

#: ../nitropad/firmware-update-1.4.rst:70
msgid ""
"Using ``ifdtool`` (`coreboot ifdtool docs <https://doc.coreboot.org/ifdtool/"
"index.html>`_) extract the ``GbE`` flashregion from the image and replace "
"the ``GbE``-region inside your ``-maximized`` image."
msgstr ""
"使用``ifdtool``（`coreboot ifdtool docs <https://doc.coreboot.org/ifdtool/"
"index.html>`_）提取<xid=\"103\"></x>`GbE``从图像中提取flashregion并替换"
"``GbE``-区域在你的``-maximized``图像内。"

#: ../nitropad/firmware-update-1.4.rst:73
msgid ""
"Split the modified firmware image using ``dd`` (as described in the coreboot "
"documentation) into ``-top`` and ``-bottom``"
msgstr ""
"使用``dd``（如coreboot文档中所述）将修改后的固件镜像分割成``-top``和``</"
"x>``。"

#: ../nitropad/firmware-update-1.4.rst:75
msgid ""
"Flash the images to the matching flash chips using your flasher and clamp"
msgstr "用你的闪光灯和夹子将图像闪到匹配的闪光芯片上。"

#: ../nitropad/firmware-update-1.4.rst:77
msgid ""
"Reboot into your system (you should see ``-maximized`` inside the Heads menu)"
msgstr "重新启动你的系统（你应该看到``-maximized``在Heads菜单内）。"

#: ../nitropad/firmware-update-1.4.rst:81
msgid "Background information"
msgstr "背景资料"

#: ../nitropad/firmware-update-1.4.rst:83
msgid ""
"The new firmware *class* of ``-maximized`` images change the firmware layout "
"in a way that it is incompatible with Heads' internal firmware upgrade "
"feature on the NitroPads."
msgstr ""
"``-maximized``图像的新固件*类改变了固件布局，与Heads'；NitroPads的内部固件升"
"级功能不兼容。"

#: ../nitropad/firmware-update-1.4.rst:87
msgid ""
"This change mainly originates from a reduces *Management Engine* size inside "
"the firmware image. Furthermore the ``-maximized`` images do contain all "
"flash regions inside the firmware, this also includes ``GbE``, which "
"contains the Ethernet MAC address."
msgstr ""
"这一变化主要源于固件图像中*管理引擎*大小的减少。此外，``-maximized``图像确实"
"包含了固件内的所有闪存区域，这也包括``GbE``，它包含以太网MAC地址。"

#: ../nitropad/firmware-update-1.4.rst:92
msgid ""
"The non ``-maximized`` images have no **functional** differences compared to "
"the ``-maximized`` images except of the reduced Heads GUI."
msgstr ""
"非``-maximized``图像与``-maximized``图像相比没有**功能上的差别，除了减少的头"
"部GUI。"

#: ../nitropad/index.rst:2
msgid "NitroPad"
msgstr "NitroPad"

#: ../nitropad/os-reinstallation.rst:15
msgid ""
"Download one of the operating system images: `Ubuntu Linux <https://www."
"nitrokey.com/files/ci/nitropad/ubuntu-oem/>`_, `Qubes OS <https://www."
"nitrokey.com/files/ci/nitropad/qubes-oem/>`_, `Debian <https://www.nitrokey."
"com/files/ci/nitropad/debian-oem/>`_, `Linux Mint <https://linuxmint.com/"
"download.php>`_"
msgstr ""
"下载其中一个操作系统图像。`Ubuntu Linux <https://www.nitrokey.com/files/ci/"
"nitropad/ubuntu-oem/>`_, `Qubes OS <https://www.nitrokey.com/files/ci/"
"nitropad/qubes-oem/>`_,`Debian <https://www.nitrokey.com/files/ci/nitropad/"
"debian-oem/>`_, `Linux Mint <https://linuxmint.com/download.php>`_."

#: ../nitropad/os-reinstallation.rst:19 ../nitropc/os-reinstallation.rst:19
msgid ""
"Optional: Download hash sum and `verify <https://proprivacy.com/guides/how-"
"why-and-when-you-should-hash-check#how-to-hash-check>`_ the downloaded "
"operating system image."
msgstr ""
"可选的。下载哈希值和`验证<https://proprivacy.com/guides/how-why-and-when-you-"
"should-hash-check#how-to-hash-check>`_下载的操作系统镜像。"

#: ../nitropad/os-reinstallation.rst:26 ../nitropc/os-reinstallation.rst:26
msgid ""
"Windows: `Rufus <https://rufus.ie/>`_, `balenaEtcher <https://www.balena.io/"
"etcher/>`_;"
msgstr ""
"窗口。`Rufus <https://rufus.ie/>`_, `balenaEtcher <https://www.balena.io/"
"etcher/>`_;"

#: ../nitropad/os-reinstallation.rst:28 ../nitropc/os-reinstallation.rst:28
msgid "Linux: ``dd``, `balenaEtcher <https://www.balena.io/etcher/>`_;"
msgstr "Linux。``dd``, `balenaEtcher <https://www.balena.io/etcher/>`_;"

#: ../nitropad/os-reinstallation.rst:29 ../nitropc/os-reinstallation.rst:29
msgid "macOS: ``dd``, `balenaEtcher <https://www.balena.io/etcher/>`_."
msgstr "macOS。``dd``, `balenaEtcher <https://www.balena.io/etcher/>`_."

#: ../nitropad/os-reinstallation.rst:37 ../nitropc/os-reinstallation.rst:37
msgid "`Sign the boot partition. <system-update.html>`_"
msgstr "`在启动分区上签名。<system-update.html>`_"

#: ../nitropad/qubes/product_platform_heading.rst:3
msgid "(NitroPad - Qubes OS)"
msgstr "(NitroPad - Qubes OS)"

#: ../nitropad/qubes/index.rst:2
msgid "NitroPad with Qubes OS"
msgstr "带有Qubes操作系统的NitroPad"

#: ../nitropad/qubes/index.rst:16 ../nitropad/ubuntu/index.rst:16
msgid ""
"Next, the system will prompt you to enter the passphrase to decrypt the hard "
"disk. The passphrase is initially “PleaseChangeMe”."
msgstr ""
"接下来，系统会提示你输入解密硬盘的口令。该口令最初为 \"PleaseChangeMe\"。"

#: ../nitropad/qubes/index.rst:26 ../nitropad/ubuntu/index.rst:26
msgid ""
"Open the pre-installed Nitrokey App and change the PINs of your Nitrokey as "
"`described here <change-pins.html>`_."
msgstr ""
"打开预装的Nitrokey应用程序，按照`这里描述的<change-pins.html>`_更改Nitrokey的"
"密码。"

#: ../nitropad/qubes/index.rst:29
msgid ""
"Change the passphrase for the hard disk encryption by running “sudo "
"cryptsetup luksChangeKey /dev/sda2” in a terminal. This passphrase is "
"different from your user acount's passphrase."
msgstr ""
"通过在终端运行 \"sudo cryptsetup luksChangeKey /dev/sda2 \"改变硬盘加密的口"
"令。这个口令与你的用户账户的口令不同。"

#: ../nitropad/qubes/network-settings.rst:2
msgid "Enable Network Settings, e.g. Wifi"
msgstr "启用网络设置，如：Wifi"

#: ../nitropad/qubes/network-settings.rst:4
msgid ""
"To be able to use Wifi, Bluetooth and other functionalities, \"Settings\" "
"must be activated in \"sys-net\"."
msgstr "为了能够使用Wifi、蓝牙和其他功能，必须在\"sys-net\"中激活\"设置\"。"

#: ../nitropad/qubes/network-settings.rst:7
msgid ""
"Click on the top left Qubes Icon and select Qubes:Settings under sys-net."
msgstr "点击左上方的Qubes图标，选择sys-net下的Qubes:设置。"

#: ../nitropad/qubes/network-settings.rst:12
msgid ""
"Go to Applications, select \"Settings\" and click \">\" to move it to the "
"right side."
msgstr "进入应用程序，选择\"设置\"，并点击\">\"，将其移至右侧。"

#: ../nitropad/qubes/network-settings.rst:13
msgid "Click \"Apply\" and after wards \"Ok\"."
msgstr "点击\"应用\"，然后点击\"好\"。"

#: ../nitropad/qubes/network-settings.rst:14
msgid "Now you should have \"Settings\" visible under sys-net."
msgstr "现在你应该在sys-net下看到\"设置\"。"

#: ../nitropad/qubes/network-settings.rst:18
msgid ""
"If it won't open Settings after clicking on it, please follow the "
"instructions below."
msgstr "如果点击后无法打开设置，请按照以下说明进行操作。"

#: ../nitropad/qubes/network-settings.rst:21
msgid "Fix sys-net Settings"
msgstr "修复系统网络设置"

#: ../nitropad/qubes/network-settings.rst:23
msgid "Go to the sys-net Terminal."
msgstr "转到sys-net终端。"

#: ../nitropad/qubes/network-settings.rst:24
msgid "Open the bashrc-file with ``sudo vim ~/.bashrc``."
msgstr "用``sudo vim ~/.bashrc``打开bashrc-文件。"

#: ../nitropad/qubes/network-settings.rst:29
msgid ""
"Press \"i\" to enable the editing and add ``export "
"XDG_CURRENT_DESKTOP=GNOME`` to the file."
msgstr "按\"i\"启用编辑，并将``export XDG_CURRENT_DESKTOP=GNOME``加入文件。"

#: ../nitropad/qubes/network-settings.rst:34
msgid "Save the changes with ``:wq``."
msgstr "用``:wq``保存更改。"

#: ../nitropad/qubes/network-settings.rst:35
msgid "Restart your NitroPad."
msgstr "重新启动你的NitroPad。"

#: ../nitropad/qubes/network-settings.rst:36
msgid "Now Settings should be visible."
msgstr "现在设置应该是可见的。"

#: ../nitropad/qubes/nitrokey-app.rst:2
msgid "Nitrokey App Installation"
msgstr "Nitrokey应用程序的安装"

#: ../nitropad/qubes/nitrokey-app.rst:5
msgid ""
"Set in the \"Qubes Settings\" of sys-usb \"Networking\" to default and "
"\"Apply\" the changes."
msgstr ""
"在sys-usb的\"Qubes Settings\"中设置\"Networking\"为默认值，然后\"Apply\"改"
"变。"

#: ../nitropad/qubes/nitrokey-app.rst:11
msgid ""
"Set in the \"Qubes Settings\" of fedora template \"Networking\" to default "
"and \"Apply\" the changes."
msgstr ""
"在Fedora模板的\"Qubes Settings\"中设置\"Networking\"为默认，并\"Apply\"修改。"

#: ../nitropad/qubes/nitrokey-app.rst:16
msgid ""
"Open the terminal of the fedora template and run ``sudo dnf install nitrokey-"
"app``."
msgstr "打开fedora模板的终端，运行``sudo dnf install nitrokey-app``。"

#: ../nitropad/qubes/nitrokey-app.rst:21
msgid "Shut down the template."
msgstr "关闭模板。"

#: ../nitropad/qubes/nitrokey-app.rst:23
msgid "Restart all qubes based on the template."
msgstr "在模板的基础上重新启动所有qubes。"

#: ../nitropad/qubes/nitrokey-app.rst:25
msgid "Go to \"Application\" of sys-usb and select the Nitrokey App."
msgstr "进入sys-usb的\"应用\"，选择Nitrokey应用。"

#: ../nitropad/qubes/nitrokey-app.rst:30
msgid ""
"Click the arrow pointing to the right side to move it to the shortcuts and "
"\"Apply\" the changes."
msgstr "点击指向右侧的箭头，将其移动到快捷方式上，并\"应用\"改变。"

#: ../nitropad/qubes/nitrokey-app.rst:35
msgid "Now you can access the Nitrokey App by clicking on sys-usb."
msgstr "现在你可以通过点击sys-usb进入Nitrokey应用程序。"

#: ../nitropad/sealed-hardware.rst:16
msgid "NitroPad X230:"
msgstr "NitroPad X230。"

#: ../nitropad/sealed-hardware.rst:21
msgid "NitroPad T430:"
msgstr "NitroPad T430。"

#: ../nitropad/system-update.rst:47 ../nitropad/system-update.rst:103
msgid ""
"Heads expects an English keyboard layout, on which e.g. “y” and “z” are "
"swapped in comparison to the German keyboard layout. If you agree with the "
"default selection (which is written in capital letter) you can also simply "
"confirm by pressing Enter."
msgstr ""
"Heads希望使用英语键盘布局，例如，与德语键盘布局相比，\"y \"和 \"z \"被调换"
"了。如果你同意默认选择（用大写字母书写），你也可以简单地按回车键确认。"

#: ../nitropad/system-update.rst:95
msgid "Now the Nitrokey has to be plugged in, if this is not yet the case."
msgstr "现在Nitrokey必须被插入，如果还没有的话。"

#: ../nitropad/system-update.rst:97
msgid "Confirm the question \"Saving a default will modify the disk\" with Y."
msgstr "确认问题\"保存默认值将修改磁盘\"为Y。"

#: ../nitropad/system-update.rst:98
msgid ""
"Confirm the question \"Do you wish to add a disk encryption to the TPM\" "
"with N."
msgstr "确认问题\"你是否希望在TPM上添加磁盘加密\"为N。"

#: ../nitropad/system-update.rst:99
msgid ""
"Confirm the question \"Please confirm that your GPG card is inserted\" with "
"Y."
msgstr "确认问题\"请确认您的GPG卡已插入\"与Y。"

#: ../nitropad/system-update.rst:100
msgid "Enter the User PIN of the Nitrokey whenever prompted (default: 123456)."
msgstr "只要有提示，就输入Nitrokey的用户密码（默认：123456）。"

#: ../nitropad/troubleshooting.rst:13 ../nitrokey3/troubleshooting.rst:12
msgid "Here you will find a collection of common issues."
msgstr "在这里，你会发现一个常见的问题集合。"

#: ../nitropad/troubleshooting.rst:19
msgid "Starting in recovery shell"
msgstr "在恢复壳中开始"

#: ../nitropad/troubleshooting.rst:21
msgid ""
"If your OS doesn’t boot as shown below, please execute the following steps:"
msgstr "如果你的操作系统不能如下图所示启动，请执行以下步骤。"

#: ../nitropad/troubleshooting.rst:34
msgid "Restart your Laptop and go to Options."
msgstr "重新启动你的笔记本电脑并进入选项。"

#: ../nitropad/troubleshooting.rst:39
msgid "Select “Update Checksums and sign all files on /boot”."
msgstr "选择 \"更新校验和并签署/boot上的所有文件\"。"

#: ../nitropad/troubleshooting.rst:44
msgid ""
"After that, please follow `these instructions <system-update.html>`_ from "
"step 3 onwards."
msgstr "之后，请按照`这些说明<system-update.html>`_从第3步开始。"

#: ../nitropad/troubleshooting.rst:47
msgid "NitroPad doesn’t start"
msgstr "NitroPad无法启动"

#: ../nitropad/troubleshooting.rst:49
msgid ""
"If the Laptop does not start and only flashes briefly when switched on, "
"please try the following steps:"
msgstr "如果笔记本电脑不能启动，开机时只短暂地闪烁，请尝试以下步骤。"

#: ../nitropad/troubleshooting.rst:52
msgid ""
"Try a hard reboot: Remove the power supply and battery and press and hold "
"the power button for 20 seconds. Then reconnect the power supply and battery "
"and start."
msgstr ""
"尝试硬重启。卸下电源和电池，按住电源按钮20秒。然后重新连接电源和电池并启动。"

#: ../nitropad/troubleshooting.rst:56
msgid ""
"If this did not work: Remove the battery or start only with the power supply "
"connected."
msgstr "如果这不起作用取出电池或仅在连接电源的情况下启动。"

#: ../nitropad/troubleshooting.rst:59
msgid "You could also try removing the RAMs and reinserting them."
msgstr "你也可以尝试拆下RAM，然后重新插入。"

#: ../nitropad/ubuntu/product_platform_heading.rst:3
msgid "(NitroPad - Ubuntu Linux)"
msgstr "(NitroPad - Ubuntu Linux)"

#: ../nitropad/ubuntu/index.rst:2
msgid "NitroPad with Ubuntu Linux"
msgstr "使用Ubuntu Linux的NitroPad"

#: ../nitropad/ubuntu/index.rst:29
msgid ""
"Change the passphrase for disk encryption as `described here <change-disk-"
"encryption-passphrase.html>`_. This passphrase is different from your user "
"acount's passphrase."
msgstr ""
"修改磁盘加密的口令，如`所描述的<change-disk-encryption-passphrase.html>`_。这"
"个口令与你的用户账户的口令不同。"

#: ../nitropc/debian/index.rst:2
msgid "NitroPC with Debian"
msgstr "使用Debian的NitroPC"

#: ../nitropc/debian/index.rst:16
msgid ""
"During boot, the system will prompt you to enter the passphrase to decrypt "
"the hard disk. Enter the default passphrase “PleaseChangeMe”."
msgstr ""
"在启动过程中，系统会提示你输入密码来解密硬盘。输入默认的口令 "
"\"PleaseChangeMe\"。"

#: ../nitropc/debian/index.rst:19
msgid ""
"The system has a user account setup already. Choose it and login with the "
"default passphrase \"PleaseChangeMe\". You may keep using the existing user "
"account or create you a new one, as you like."
msgstr ""
"该系统已经设置了一个用户账户。选择它并使用默认的口令\"PleaseChangeMe\"登录。"
"你可以继续使用现有的用户账户，或者根据你的意愿创建一个新的账户。"

#: ../nitropc/debian/index.rst:22 ../nitropc/qubes/index.rst:22
#: ../nitropc/ubuntu/index.rst:22
msgid ""
"Change the passphrase for disk encryption by opening a terminal and execute:"
msgstr "通过打开一个终端并执行，改变磁盘加密的口令。"

#: ../nitropc/debian/index.rst:30
msgid "Using WIFI (with RTL8821ce chipset)"
msgstr "使用WIFI（使用RTL8821ce芯片组）"

#: ../nitropc/os-reinstallation.rst:15
msgid ""
"Download one of the operating system images: `Ubuntu Linux <https://www."
"nitrokey.com/files/ci/nitropc/ubuntu-oem/>`_, `Qubes OS <https://www."
"nitrokey.com/files/ci/nitropc/qubes-oem/>`_, `Debian <https://www.nitrokey."
"com/files/ci/nitropc/debian-oem/>`_, `Linux Mint <https://linuxmint.com/"
"download.php>`_"
msgstr ""
"下载其中一个操作系统图像。`Ubuntu Linux <https://www.nitrokey.com/files/ci/"
"nitropc/ubuntu-oem/>`_, `Qubes OS <https://www.nitrokey.com/files/ci/nitropc/"
"qubes-oem/>`_,`Debian <https://www.nitrokey.com/files/ci/nitropc/debian-oem/"
">`_, `Linux Mint <https://linuxmint.com/download.php>`_."

#: ../nitropc/sealed-hardware.rst:8
msgid ""
"If you ordered your NitroPC with sealed screws and in a sealed bag, it "
"allows you to check if the NitroPC has been tampered with during shipping."
msgstr ""
"如果你订购的NitroPC带有密封的螺丝并装在一个密封的袋子里，它可以让你检查"
"NitroPC在运输过程中是否被篡改过。"

#: ../nitropc/sealed-hardware.rst:10
msgid ""
"The bag and all screws of the device have been sealed. For the bag and each "
"of these screws you have received a photo by e-mail."
msgstr ""
"袋子和设备的所有螺丝都已密封。对于袋子和每个螺丝，你已经通过电子邮件收到了一"
"张照片。"

#: ../nitropc/sealed-hardware.rst:12
msgid ""
"Check each screw individually to see if its individual appearance matches "
"the photo. It is best to use a magnifying glass or macro lens for this "
"purpose."
msgstr ""
"逐一检查每颗螺丝，看其各自的外观是否与照片相符。为此，最好使用放大镜或微距镜"
"头。"

#: ../nitropc/sealed-hardware.rst:23
msgid ""
"If the bag or the screws do not match the photos sent, an unauthorized "
"opening of your NitroPC cannot be excluded. In this case please contact us "
"to arrange further action."
msgstr ""
"如果袋子或螺丝与发送的照片不一致，不能排除你的NitroPC被擅自打开。在这种情况"
"下，请联系我们以安排进一步的行动。"

#: ../nitropc/faq.rst:2
msgid "NitroPC FAQ"
msgstr "NitroPC常见问题"

#: ../nitropc/faq.rst:5
msgid "The default NitroPC disk encryption password: \"PleaseChangeMe\""
msgstr "默认的NitroPC磁盘加密密码：\"PleaseChangeMe\"。"

#: ../nitropc/index.rst:2
msgid "NitroPC"
msgstr "NitroPC"

#: ../nitropc/index.rst:27
msgid "Booting from USB drive"
msgstr "从USB驱动器启动"

#: ../nitropc/index.rst:28
msgid ""
"Connect the USB drive to a black USB 2.0 socket (blue USB 3.0 don't work!), "
"start the PC and keep pressing DEL until you see the firmware menu. Choose "
"Boot Menu and select your USB drive."
msgstr ""
"将USB驱动器连接到一个黑色的USB2.0插座上（蓝色的USB3.0不起作用！），启动电脑并"
"一直按DEL键，直到你看到固件菜单。选择启动菜单并选择你的USB驱动器。"

#: ../nitropc/qubes/index.rst:2
msgid "NitroPC with Qubes OS"
msgstr "带有Qubes操作系统的NitroPC"

#: ../nitropc/qubes/index.rst:16 ../nitropc/ubuntu/index.rst:16
msgid ""
"During boot, the system will prompt you to enter the passphrase to decrypt "
"the hard disk. Enter the default passphrase “PleaseChangeMe”. The system "
"will then guide you through the process of creating a user account. After "
"that you should have successfully booted the system and could already use it "
"normally."
msgstr ""
"在启动过程中，系统会提示你输入密码来解密硬盘。输入默认的口令 "
"\"PleaseChangeMe\"。然后，系统将引导你完成创建用户账户的过程。之后，你应该已"
"经成功启动了系统，并且已经可以正常使用。"

#: ../nitropc/qubes/index.rst:30
msgid "Failed to start Load Kernel Modules"
msgstr "启动加载内核模块失败"

#: ../nitropc/qubes/index.rst:32
msgid ""
"During boot of the system the error \"Failed to start Load Kernel Modules\" "
"is displayed. `This is a known issue <https://github.com/QubesOS/qubes-"
"issues/issues/2638>`_ which is not critical and can be ignored."
msgstr ""
"在系统启动过程中，显示错误\"Failed to start Load Kernel Modules\"。`这是一个"
"已知的问题 <https://github.com/QubesOS/qubes-issues/issues/2638>`_这不是关键"
"问题，可以忽略不计。"

#: ../nitropc/ubuntu/index.rst:2
msgid "NitroPC with Ubuntu"
msgstr "带有Ubuntu的NitroPC"

#: ../nextbox/backup-restore.rst:2
msgid "Backup and Restore"
msgstr "备份和恢复"

#: ../nextbox/backup-restore.rst:7
msgid ""
"The NextBox can be backupped and restored from within the NextBox Nextcloud "
"App. In order to execute a backup or restore operation you need to have a "
"storage device attached to your NextBox."
msgstr ""
"NextBox可以在NextBox Nextcloud应用程序中进行备份和恢复。为了执行备份或恢复操"
"作，您需要在您的NextBox上连接一个存储设备。"

#: ../nextbox/backup-restore.rst:10
msgid ""
"To enable backup and restore onto a storage device please follow these steps:"
msgstr "要启用备份和恢复到存储设备上，请遵循以下步骤。"

#: ../nextbox/backup-restore.rst:12
msgid ""
"Make sure your storage device contains at least one partition formatted with "
"a supported file-system (currently *ext* and *xfs* are supported)."
msgstr ""
"确保你的存储设备至少包含一个用支持的文件系统格式化的分区（目前支持*ext*和"
"*xfs*）。"

#: ../nextbox/backup-restore.rst:15
msgid ""
"Attach the storage device to your NextBox to any of the USB ports and "
"*remember to use an external power supply* (:ref:`more information<usb-power-"
"supply>`)"
msgstr ""
"将存储设备连接到你的NextBox的任何一个USB端口，*记得使用外部电源*（:参考:`更多"
"信息<usb-power-supply>`）。"

#: ../nextbox/backup-restore.rst:18
msgid ""
"Once attached you will see the storage(s) inside \"Storage Management\" "
"below \"Available Storages\""
msgstr "一旦连接上，你会在 \"可用存储空间 \"下面的 \"存储管理 \"中看到存储。"

#: ../nextbox/backup-restore.rst:20
msgid ""
"Click on the plus-symbol on the right side to *mount* your storage and make "
"it available for backup and restore operations. The added storage is now "
"listed inside \"Mounted Storages\"."
msgstr ""
"点击右侧的加号符号，*挂载*你的存储，使其可用于备份和恢复操作。添加的存储空间"
"现在被列在 \"已安装的存储空间 \"中。"

#: ../nextbox/backup-restore.rst:25
msgid "Backup"
msgstr "备份"

#: ../nextbox/backup-restore.rst:27
msgid ""
"To backup your NextBox including all Nextcloud settings apps and data please "
"follow these steps:"
msgstr ""
"要备份您的NextBox，包括所有的Nextcloud设置应用程序和数据，请遵循以下步骤。"

#: ../nextbox/backup-restore.rst:29
msgid "Make sure you have a storage mounted as described above"
msgstr "确保你有一个如上所述的存储安装"

#: ../nextbox/backup-restore.rst:31
msgid ""
"Inside \"Backup / Restore\" below \"Full System Backup\" select the storage "
"device for backup from the drop-down menu named: \"Select Backup Device\""
msgstr ""
"在\"备份/恢复\"下面的\"全系统备份\"中，从名为\"选择备份设备\"的下拉菜单中选择"
"用于备份的存储设备。"

#: ../nextbox/backup-restore.rst:34
msgid ""
"Now you have the option to incrementally update an existing backup from the "
"drop-down menu named: \"Select Backup Location\" **or** create a entirely "
"new backup by entering a name into the \"Name of the new backup\" entry "
"field."
msgstr ""
"现在你可以选择从名为\"\"选择备份位置\"的下拉菜单中增量更新一个现有的备份，或"
"者***通过在\"新备份的名称\"条目栏中输入一个名称来创建一个全新的备份。"

#: ../nextbox/backup-restore.rst:38
msgid "Click \"Start Backup now\", the backup process will begin immediately."
msgstr "点击\"Start Backup now\"，备份过程将立即开始。"

#: ../nextbox/backup-restore.rst:40
msgid ""
"The resulting backup is not encrypted so take care who has access to the "
"used storage."
msgstr "由此产生的备份没有加密，所以要注意谁可以访问使用的存储空间。"

#: ../nextbox/backup-restore.rst:43
msgid "Restore"
msgstr "恢复"

#: ../nextbox/backup-restore.rst:46
msgid ""
"The restore operation replaces the Nextcloud internals entirely and "
"depending on the version combination this might lead to undefined behavior "
"of the Nextcloud frontend. If this happens, please be patient and reload the "
"page using ``F5`` or ``ctrl-r`` and check, if the restore operation was "
"successful."
msgstr ""
"恢复操作完全取代了Nextcloud的内部结构，根据版本组合，这可能导致Nextcloud前端"
"的未定义行为。如果发生这种情况，请耐心等待，并使用``F5``或``ctrl-r``重新加载"
"页面，检查恢复操作是否成功。"

#: ../nextbox/backup-restore.rst:51
msgid ""
"Make sure your have a storage mounted as described above and it contains a "
"backup to be restored"
msgstr "确保你有一个如上所述的储存器，并且它包含一个要恢复的备份"

#: ../nextbox/backup-restore.rst:53
msgid ""
"Inside \"Backup / Restore\" below \"Restore System from Backup\" use the "
"\"Select Backup to Restore\" drop-down menu to select a backup to be restored"
msgstr ""
"在\"备份/恢复\"下面的\"从备份恢复系统\"使用\"选择要恢复的备份\"下拉菜单，选择"
"要恢复的备份。"

#: ../nextbox/backup-restore.rst:56
msgid ""
"Click \"Start Restoring now\", the restore process will begin immediately."
msgstr "点击\"Start Restoring now\"，还原过程将立即开始。"

#: ../nextbox/backup-restore.rst:58
msgid ""
"Depending on the backupped Nextcloud version after the restore process you "
"will be asked to run the upgrade process for Nextcloud."
msgstr ""
"在恢复过程之后，您将被要求运行Nextcloud的升级过程，这取决于备份的Nextcloud版"
"本。"

#: ../nextbox/backup-restore.rst:63
msgid ""
"All configurations and settings of the NextBox and the Nextcloud instance "
"will be restored, thus there might be changes on how you access your "
"NextBox, if the restored Remote Access configuration is not identical to the "
"current one."
msgstr ""
"NextBox和Nextcloud实例的所有配置和设置将被恢复，因此，如果恢复的远程访问配置"
"与当前配置不完全相同，您访问NextBox的方式可能会发生变化。"

#: ../nextbox/clients/android.rst:2
msgid "Connect Your Android or iOS Smartphone"
msgstr "连接你的安卓或iOS智能手机"

#: ../nextbox/clients/android.rst:6
msgid "Connect the NextBox with your smartphone"
msgstr "将NextBox与您的智能手机连接起来"

#: ../nextbox/clients/android.rst:8
msgid "Download the Nextcloud app from the app store or play store."
msgstr "从应用商店或游戏商店下载Nextcloud应用程序。"

#: ../nextbox/clients/android.rst:14
msgid "Cick on \"Sign in\"."
msgstr "请点击\"登录\"。"

#: ../nextbox/clients/android.rst:20
msgid "Enter your domain."
msgstr "输入你的域名。"

#: ../nextbox/clients/android.rst:26
msgid "Enter your username and password and click \"Log in\"."
msgstr "输入你的用户名和密码，然后点击\"登录\"。"

#: ../nextbox/clients/android.rst:32
msgid "Now you have access to your NextBox with your smartphone!"
msgstr "现在你可以用你的智能手机访问你的NextBox了!"

#: ../nextbox/clients/index.rst:2
msgid "Connect Devices"
msgstr "连接设备"

#: ../nextbox/clients/index.rst:6
msgid "Choose your operating system or device:"
msgstr "选择你的操作系统或设备。"

#: ../nextbox/clients/linux.rst:2
msgid "Connect Your Linux Computer"
msgstr "连接你的Linux电脑"

#: ../nextbox/clients/linux.rst:7 ../nextbox/clients/macosx.rst:7
#: ../nextbox/clients/windows.rst:7
msgid "Connect using the Nextcloud App"
msgstr "使用Nextcloud应用程序进行连接"

#: ../nextbox/clients/linux.rst:9
msgid "Download the client application from: https://nextcloud.com/install/"
msgstr "从以下网站下载客户端应用程序：https://nextcloud.com/install/"

#: ../nextbox/clients/linux.rst:11
msgid ""
"Most distributions do provide the Nextcloud client via their package "
"managers. (e.g., Ubuntu, Arch Linux, Mint, ...)"
msgstr ""
"大多数发行版确实通过其软件包管理器提供了Nextcloud客户端。(例如，Ubuntu, Arch "
"Linux, Mint, ...)"

#: ../nextbox/clients/linux.rst:14
msgid ""
"After starting the ``nextcloud`` application, you will find it as a tray "
"icon."
msgstr "启动``nextcloud``应用程序之后，你会发现它是一个托盘图标。"

#: ../nextbox/clients/linux.rst:17
msgid ""
"Add an account using your public server url, username and password. Further "
"you can choose the target directory the files should be synced to."
msgstr ""
"使用你的公共服务器网址、用户名和密码添加一个账户。此外，你可以选择文件应该同"
"步到的目标目录。"

#: ../nextbox/clients/linux.rst:23 ../nextbox/clients/macosx.rst:48
#: ../nextbox/clients/windows.rst:48
msgid "Connect using WebDAV"
msgstr "使用WebDAV连接"

#: ../nextbox/clients/linux.rst:25
msgid ""
"Mounting Nextcloud using WebDAV can be done directly via most file managers, "
"by adding a \"remote server\"."
msgstr ""
"使用WebDAV安装Nextcloud可以直接通过大多数文件管理器，通过添加一个\"远程服务器"
"\"来完成。"

#: ../nextbox/clients/linux.rst:28
msgid ""
"Additionally you can mount your Nextcloud files using WebDAV via commandline "
"and `/etc/fstab` by installing the `davfs2` package."
msgstr ""
"此外，您可以通过命令行和`/etc/fstab`安装`davfs2`包，使用WebDAV挂载您的"
"Nextcloud文件。"

#: ../nextbox/clients/linux.rst:31
msgid "To mount use:"
msgstr "要安装使用。"

#: ../nextbox/clients/macosx.rst:2 ../nextbox/clients/windows.rst:2
msgid "Connect your Mac Commputer"
msgstr "连接你的Mac电脑"

#: ../nextbox/clients/macosx.rst:10 ../nextbox/clients/windows.rst:10
msgid ""
"Download the Nextcloud client application: https://nextcloud.com/install/"
msgstr "下载Nextcloud客户端应用程序：https://nextcloud.com/install/"

#: ../nextbox/clients/macosx.rst:17 ../nextbox/clients/windows.rst:17
msgid ""
"After installation, click \"Log in to your Nextcloud\". Afterwards please "
"provide your Nextcloud's domain."
msgstr ""
"安装完成后，请点击\"登录到您的Nextcloud\"。之后，请提供您的Nextcloud'的域名。"

#: ../nextbox/clients/macosx.rst:25 ../nextbox/clients/windows.rst:26
msgid "Provide your username and password and click \"Log in\"."
msgstr "提供您的用户名和密码，并点击\"登录\"。"

#: ../nextbox/clients/macosx.rst:32
msgid ""
"Inside the menu bar there will be a Nextcloud icon to open the Nextcloud "
"application settings."
msgstr "在菜单栏内，将有一个Nextcloud图标，以打开Nextcloud应用程序的设置。"

#: ../nextbox/clients/macosx.rst:40
msgid ""
"Inside *Finder* below \"favorites\" you will find a \"Nextcloud\" directory "
"with the user's files."
msgstr ""
"在*Finder*的\"favorites\"下面，你会发现一个\"Nextcloud\"目录，里面有用户的文"
"件'。"

#: ../nextbox/clients/macosx.rst:50
msgid "Inside *Finder*, open *Go* and choose *Connect to Server*"
msgstr "在*Finder*中，打开*Go*并选择*Connect to Server*。"

#: ../nextbox/clients/macosx.rst:56
msgid "Provide the WebDAV URL `https://yourdomain.xyz/remote.php/webdav`"
msgstr "提供WebDAV URL `https://yourdomain.xyz/remote.php/webdav`。"

#: ../nextbox/clients/macosx.rst:62
msgid ""
"In the next step, provide the username and password to login to your "
"Nextcloud instance."
msgstr "在下一步，提供用户名和密码以登录您的Nextcloud实例。"

#: ../nextbox/clients/macosx.rst:68
msgid "Once finished you can find your Nextcloud files in *Locations*."
msgstr "完成后，您可以在*Locations*中找到您的Nextcloud文件。"

#: ../nextbox/clients/windows.rst:33
msgid ""
"Inside the tray there will be a Nextcloud icon to open the Nextcloud "
"application settings."
msgstr "在托盘内，将有一个Nextcloud图标，以打开Nextcloud应用程序的设置。"

#: ../nextbox/clients/windows.rst:40
msgid ""
"Inside the file-explorer you can now find your Nextcloud instance files."
msgstr "在文件浏览器中，您现在可以找到您的Nextcloud实例文件。"

#: ../nextbox/clients/windows.rst:52
msgid ""
"There have been reports that the native WebDAV support in Windows is not "
"performing well. We recommend using the Nextcloud App (as described above) "
"for the best user experience. Additionally please read `Nextcloud's Windows "
"WebDAV Known Problems`_."
msgstr ""
"有报告称，Windows中的原生WebDAV支持表现不佳。我们建议使用Nextcloud应用程序"
"（如上所述）以获得最佳用户体验。此外，请阅读`Nextcloud'的Windows WebDAV已知问"
"题`_。"

#: ../nextbox/clients/windows.rst:56
msgid ""
"Add a WebDAV drive using the file explorer's \"Add a network location\" "
"icon. (You can also use \"Map network drive\" to bind your Nextcloud to a "
"drive, like *Z:*)."
msgstr ""
"使用文件资源管理器的\"添加网络位置\"图标添加一个WebDAV驱动器。(您也可以使用"
"\"映射网络驱动器\"将您的Nextcloud绑定到一个驱动器，如*Z:*）。"

#: ../nextbox/clients/windows.rst:63
msgid ""
"In the following dialog please enter the full WebDAV address of your "
"NextBox: ``https://my.domain.tld/remote.php/dav/files/USERNAME``. Replace "
"*my.domain.tld* with your NextBox's public domain and *USERNAME* with the "
"username you would like to connect."
msgstr ""
"在下面的对话框中，请输入你的NextBox的完整WebDAV地址。``https://my.domain.tld/"
"remote.php/dav/files/USERNAME``。将*my.domain.tld*替换为你的NextBox'的公共"
"域，*USERNAME*替换为你想连接的用户名。"

#: ../nextbox/clients/windows.rst:67
msgid ""
"In the following window insert your full Nextcloud credentials, means your "
"username and password you use to login into your Nextcloud."
msgstr ""
"在下面的窗口中插入您的完整Nextcloud凭证，即您用来登录Nextcloud的用户名和密"
"码。"

#: ../nextbox/clients/windows.rst:74
msgid ""
"Now your files from your Nextcloud instance are accessible via the file-"
"explorer."
msgstr "现在您的Nextcloud实例中的文件可以通过文件浏览器访问。"

#: ../nextbox/faq/generic.rst:2
msgid "Generic FAQ"
msgstr "一般性常见问题"

#: ../nextbox/faq/generic.rst:7
msgid "**Q:** How can I factory-reset my NextBox?"
msgstr "**问：**我如何在工厂重置我的NextBox？"

#: ../nextbox/faq/generic.rst:5
msgid ""
"Press the hardware button for 5 seconds, see :doc:`../technical/factory-"
"reset`. To press the button use a thin (~1mm) pin like a smartphone sim-card "
"tray removal device."
msgstr ""
"按下硬件按钮5秒钟，见:doc:`.../technical/factory-reset`。要按下按钮，请使用一"
"个薄的（约1毫米）针，就像智能手机的sim-card托盘移除装置。"

#: ../nextbox/faq/generic.rst:10
msgid "**Q:** What do the different LED colors mean?"
msgstr "**问：**不同的LED颜色是什么意思？"

#: ../nextbox/faq/generic.rst:10
msgid "The detailed document can be found here: :doc:`../technical/led-colors`"
msgstr "详细的文件可以在这里找到： :doc:`./technical/led-colors`."

#: ../nextbox/faq/generic.rst:15
msgid "**Q:** Can the inital setup be done using a monitor & keyboard?"
msgstr "**问：**最初的设置是否可以用显示器& 键盘来完成？"

#: ../nextbox/faq/generic.rst:13
msgid ""
"No, this is not possible as the regular login is disabled on delivery. "
"Please connect the the NextBox to a network and access the NextBox using "
"`nextbox.local`_ or the IP directly."
msgstr ""
"不，这是不可能的，因为常规的登录功能在交付时被禁用。请将NextBox连接到网络，使"
"用`nextbox.local`_或直接使用IP访问NextBox。"

#: ../nextbox/faq/generic.rst:19
msgid "**Q:** What is the typical power consumption?"
msgstr "**问：**典型的耗电量是多少？"

#: ../nextbox/faq/generic.rst:18
msgid ""
"The minimum of 0,6A (3W) is rarely reached, in idle mostly around 1A (5W) "
"and more than 2A (10W) under higher loads."
msgstr ""
"很少达到0.6A（3W）的最低值，在空闲状态下大多在1A（5W）左右，在较高的负载下超"
"过2A（10W）。"

#: ../nextbox/faq/generic.rst:26
msgid "**Q:** How secure is the NextBox?"
msgstr "**问：**NextBox的安全性如何？"

#: ../nextbox/faq/generic.rst:22
msgid ""
"Debian with frequent `unattended-upgrades` based security updates, a minimal "
"attack surface by ensuring that not a single unneccessary port is open are "
"the main contributors to system security. **Make sure your Nextcloud users "
"and passwords are on a high level, either with long-random passwords or a 2-"
"Factor-Authentification supported login method with e.g., a Nitrokey FIDO2.**"
msgstr ""
"频繁的 \"无人值守升级 \"的安全更新的Debian，通过确保不开放任何一个不必要的端"
"口来实现最小的攻击面，是系统安全的主要贡献者。**确保你的Nextcloud用户和密码是"
"高水平的，要么使用长的随机密码，要么使用Nitrokey FIDO2等支持双因素认证的登录"
"方式。"

#: ../nextbox/faq/generic.rst:34
msgid "**Q:** What do all the ssh-related \"warnings\" mean?"
msgstr "**问：**所有与ssh有关的\"警告\"是什么意思？"

#: ../nextbox/faq/generic.rst:31
msgid ""
"Once you set up your ssh-access, you make yourself technically responsible "
"for your NextBox. We do provide help as good as we can as goodwill, but "
"under the line we cannot provide generic Linux-administration support "
"outside of the intended NextBox use-cases."
msgstr ""
"一旦你设置了 ssh-access，你就对你的 NextBox 负有技术责任。我们会尽力提供帮"
"助，但在NextBox的使用范围之外，我们不能提供一般的Linux管理支持。"

#: ../nextbox/faq/generic.rst:40
msgid "**Q:** Can I mirror my NextBox onto another NextBox?"
msgstr "**问：**我可以将我的NextBox镜像到另一个NextBox吗？"

#: ../nextbox/faq/generic.rst:37
msgid ""
"This translates to a cluster setup, which is considered an (paid) enterprise "
"solution by Nextcloud. The details, especially data consistency and "
"collision handling, are far from trivial to realize. Nevertheless, we also "
"see demand for more sophisticated backup solutions and will address this "
"issue."
msgstr ""
"这转化为集群设置，被Nextcloud认为是一种（付费）企业解决方案。这些细节，特别是"
"数据的一致性和碰撞处理，远不是实现的小事。尽管如此，我们也看到了对更复杂的备"
"份解决方案的需求，并将解决这个问题。"

#: ../nextbox/faq/generic.rst:46 ../nextbox/faq/nextcloud.rst:8
msgid ""
"**Q:** What to do to run/install/fix Nextcloud App \"XYZ\"? Why does "
"Nextcloud feature XYZ not work?"
msgstr ""
"**问：**如何运行/安装/修复Nextcloud应用程序\"XYZ\"？为什么Nextcloud的XYZ功能"
"不能使用？"

#: ../nextbox/faq/generic.rst:43 ../nextbox/faq/nextcloud.rst:5
msgid ""
"Generally we cannot help in detail for these topics. Nextcloud internals and "
"apps are out-of-scope for the NextBox development as we use the stock Docker "
"images provided by Nextcloud. Ultimately, if some NextBox/OS configuration "
"is blocking an app to run properly we for sure will look into fixing it."
msgstr ""
"一般来说，我们无法对这些主题提供详细的帮助。Nextcloud内部和应用程序不属于"
"NextBox开发的范围，因为我们使用Nextcloud提供的库存Docker镜像。最终，如果"
"NextBox/操作系统的某些配置阻碍了应用程序的正常运行，我们肯定会研究如何解决这"
"个问题。"

#: ../nextbox/faq/generic.rst:50
msgid "**Q:** Can I connect/use the NextBox using WiFi?"
msgstr "**问：**我可以使用WiFi连接/使用NextBox吗？"

#: ../nextbox/faq/generic.rst:49
msgid ""
"No, currently this is not (easily) possible, only wired ethernet using RJ-45 "
"is available."
msgstr "不，目前这是不（容易）实现的，只有使用RJ-45的有线以太网是可用的。"

#: ../nextbox/faq/generic.rst:57
msgid ""
"**Q:** Is the WiFi on the Raspberry PI 4B physically available and working?"
msgstr "**问：**Raspberry PI 4B上的WiFi是否实际可用并能工作？"

#: ../nextbox/faq/generic.rst:53
msgid ""
"Yes, physically the WiFi is available and working, but not used/managed by "
"the NextBox App. If you know what you are doing you can configure and use "
"it, if works although being inside the NextBox casing."
msgstr ""
"是的，从物理上看，WiFi是可用的，可以工作，但不被NextBox应用程序使用/管理。如"
"果你知道你在做什么，你可以配置和使用它，如果它在NextBox的外壳内工作。"

#: ../nextbox/faq/hardware.rst:2
msgid "Hardware FAQ"
msgstr "硬件常见问题"

#: ../nextbox/faq/hardware.rst:13
msgid ""
"**Q:** Why must I not connect external hard-drives without an external power-"
"supply to my NextBox?"
msgstr "**问：**为什么我不能在没有外部电源的情况下连接外部硬盘到我的NextBox？"

#: ../nextbox/faq/hardware.rst:9
msgid ""
"The Raspberry Pi 4 Model B can only supply 1.2A of power through USB (see "
"`RPi Power Supply`_). The internal hard-drive is already connected and "
"powered via USB and pulls ~1.0A. Thus connecting another hard-drive without "
"an external power supply can lead to an unreliable power supply for the "
"internal hard-drive, thus potential data loss."
msgstr ""
"Raspberry Pi 4 Model B通过USB只能提供1.2A的电源（见`RPi Power Supply`_）。内"
"部硬盘已经连接并通过USB供电，拉动~1.0A。因此，在没有外部电源的情况下连接另一"
"个硬盘，会导致内部硬盘的供电不可靠，从而可能导致数据丢失。"

#: ../nextbox/faq/hardware.rst:21
msgid ""
"**Q:** Where can I find an external hard-drive with its own power supply?"
msgstr "**问：**哪里可以找到自带电源的外置硬盘？"

#: ../nextbox/faq/hardware.rst:16
#, python-format
msgid ""
"The smaller form factors (2.5'' and smaller) for external hard-drives mostly "
"come without an additional power supply. For these, *a USB Hub with an "
"additional power supply can be considered the \"external power-supply\"* for "
"the hard-drive. Although the latter is it not 100% sure for powered USB "
"hubs, thus we recommend external 3.5'' hard-drives, which are nearly always "
"externally powered."
msgstr ""
"小尺寸的外置硬盘（2.5''和更小）大多没有附加电源。对于这些，*带有额外电源的USB"
"集线器可以被认为是硬盘的\"外部电源\"*。虽然后者对于供电的USB集线器来说不是"
"100% s%的，因此我们推荐外置3.5''硬盘，它们几乎总是由外部供电。"

#: ../nextbox/faq/hardware.rst:27
msgid ""
"**Q:** Why does my USB device / hub not work, if connected to the NextBox?"
msgstr "**问：**为什么我的USB设备/集线器不能工作，如果连接到NextBox？"

#: ../nextbox/faq/hardware.rst:24
msgid ""
"There are some devices and especially USB3 hubs that are known to not work "
"properly with the Raspberry PI 4B, please see this `USB Documentation`_ from "
"Raspberry. On top of that also make sure the USB device is working in "
"general by connecting it to another computer (best case: Linux) and verify "
"that it works."
msgstr ""
"有一些设备，特别是USB3集线器，已知不能与Raspberry PI 4B正常工作，请参见"
"Raspberry的`USB文档`_。除此之外，还要确保USB设备在一般情况下可以正常工作，将"
"它连接到另一台电脑上（最好的情况是：Linux），并验证它是否工作。"

#: ../nextbox/faq/hardware.rst:31
msgid "**Q:** Why does my hard-drive not show up after plugging it in?"
msgstr "**问：**为什么我的硬盘插上电源后不显示？"

#: ../nextbox/faq/hardware.rst:30
msgid ""
"Please make sure that you are using one of the supported filesystems (e.g., "
"ext, xfs) and you have mounted your hard-drive within *Storage Management*."
msgstr ""
"请确保你使用的是支持的文件系统之一（例如ext、xfs），并且你已经在*存储管理*中"
"安装了你的硬盘。"

#: ../nextbox/faq/hardware.rst:37
msgid "**Q:** Can I generally extend the NextBox using a USB hard-drive?"
msgstr "**问：**我可以用USB硬盘扩展NextBox吗？"

#: ../nextbox/faq/hardware.rst:34
msgid ""
"Yes, this is possible, please make sure you are using a hard-drive, which "
"has an external power supply. Once connected you can mount the hard-drive "
"using the NextBox *Storage Management* and include it into Nextcloud file-"
"management using the `External storage support`_ app."
msgstr ""
"是的，这是有可能的，请确保你使用的是有外部电源的硬盘。连接后，您可以使用"
"NextBox的*存储管理*装载硬盘，并使用`外部存储支持`_应用程序将其纳入Nextcloud文"
"件管理。"

#: ../nextbox/faq/hardware.rst:42
msgid "**Q:** What functions does the additional \"shield\" provide?"
msgstr "**问：**额外的\"盾牌\"提供什么功能？"

#: ../nextbox/faq/hardware.rst:40
msgid ""
"As of now the shield does provide a :doc:`status LED <../technical/led-"
"colors>`, a hardware button to :doc:`factory reset <../technical/factory-"
"reset>` and an additional USB Type-C connector on the same side as the "
"Ethernet port for power supply exclusively."
msgstr ""
"截至目前，该盾牌确实提供了一个:doc:`状态LED <.../technical/led-colors>`，一个"
"硬件按钮来:doc:`出厂复位<.../technical/factory-reset>`，以及一个额外的USB "
"Type-C接口，位于以太网端口的同一侧，专门用于供电。"

#: ../nextbox/faq/hardware.rst:47
msgid "**Q:** Is the NextBox hardware extendable/replaceable?"
msgstr "**问：**NextBox的硬件是否可以扩展/更换？"

#: ../nextbox/faq/hardware.rst:45
msgid ""
"Yes, all NextBox components can be easily replaced. None of the components "
"are glued or somehow permanently assembled. Using a Phillips screwdriver you "
"can disassemble and re-assemble the NextBox easily. Keep in mind that you "
"are doing this at your own risk."
msgstr ""
"是的，所有NextBox的组件都可以很容易地更换。没有一个部件是用胶水或某种方式永久"
"装配的。使用十字螺丝刀，您可以轻松地拆卸和重新组装NextBox。请记住，你这样做的"
"风险是你自己的。"

#: ../nextbox/faq/hardware.rst:51
msgid "**Q:** What are the two USB Type-C ports used for?"
msgstr "**问：**两个USB Type-C端口的用途是什么？"

#: ../nextbox/faq/hardware.rst:50
msgid ""
"Both USB Type-C ports are exclusively for power supply and can not be used "
"for data transfer. Do not connect two power supplies, please just use one of "
"both to power your NextBox."
msgstr ""
"两个USB Type-C端口都是专门用于供电的，不能用于数据传输。不要连接两个电源，请"
"只使用其中一个为您的NextBox供电。"

#: ../nextbox/faq/hardware.rst:59
msgid "**Q:** Which fan should I install?"
msgstr "**问：**我应该安装哪个风扇？"

#: ../nextbox/faq/hardware.rst:54
msgid ""
"**There is absolutely no need for a fan, the NextBox is designed to work "
"without an active cooling**. Although if the NextBox is used for additional "
"tasks (it's still a Linux), we have prepared a fan mount for a 30mm x 12mm "
"fan at 5V connected to the shield. More details (connector, used pins) can "
"be taken from `NextBox' GitHub`_. Currently we *do not* recommend adding a "
"fan as the outputs are not controlled yet by the NextBox daemon, so this is "
"also something you would have to do by yourself."
msgstr ""
"**绝对不需要风扇，NextBox的设计是在没有主动冷却的情况下工作**。尽管如果"
"NextBox被用于额外的任务（它仍然是一个Linux），我们已经为一个30mm x 12mm的风扇"
"准备了一个连接到屏蔽罩的5V的风扇支架。更多的细节（连接器，使用的引脚）可以从"
"`NextBox' GitHub`_中获取。目前我们*不*推荐添加风扇，因为输出还没有被NextBox守"
"护程序控制，所以这也是你必须自己做的事情。"

#: ../nextbox/faq/hardware.rst:63
msgid "**Q:**: Can I upgrade the NextBox' RAM size?"
msgstr "**Q:**:我可以升级NextBox'的内存大小吗？"

#: ../nextbox/faq/hardware.rst:62
msgid ""
"No, the Raspberry PI 4B has the RAM component soldered onto the mainboard, "
"thus it cannot be replaced/extended."
msgstr "不，Raspberry PI 4B的RAM组件被焊接在主板上，因此不能被替换/扩展。"

#: ../nextbox/faq/index.rst:2
msgid "NextBox FAQ"
msgstr "NextBox常见问题"

#: ../nextbox/faq/nextcloud.rst:2
msgid "Nextcloud FAQ"
msgstr "壹云网常见问题"

#: ../nextbox/faq/nextcloud.rst:12
msgid ""
"**Q:** Why does Nitrokey currently not recommend to use OnlyOffice or "
"Collabora Office on the NextBox?"
msgstr ""
"**问：**为什么Nitrokey目前不建议在NextBox上使用OnlyOffice或Collabora Office？"

#: ../nextbox/faq/nextcloud.rst:11
msgid ""
"The state of these Nextcloud apps is not yet mature (for ARM platforms). "
"Although it is (partly) possible to install them we do not recommend doing "
"so currently."
msgstr ""
"这些Nextcloud应用程序的状态还不成熟（针对ARM平台）。虽然可以（部分）安装它"
"们，但我们目前不建议这样做。"

#: ../nextbox/faq/nextcloud.rst:16
msgid "**Q:** Why does updating Nextcloud from inside Nextcloud not work?"
msgstr "**问：**为什么从Nextcloud内部更新Nextcloud不起作用？"

#: ../nextbox/faq/nextcloud.rst:15
msgid ""
"The Nextcloud version is rolled out by us. Thus the option to update from "
"inside Nextcloud is not working."
msgstr ""
"Nextcloud的版本是由我们推出的。因此，从Nextcloud内部更新的选项不起作用。"

#: ../nextbox/faq/nextcloud.rst:20
msgid "**Q:** Can I add apps to the Nextcloud instance?"
msgstr "**问：**我可以向Nextcloud实例添加应用程序吗？"

#: ../nextbox/faq/nextcloud.rst:19
msgid ""
"Yes, the Nextcloud app store is available and any app available there can be "
"installed through the Nextcloud web frontend."
msgstr ""
"是的，Nextcloud应用程序商店是可用的，那里的任何应用程序都可以通过Nextcloud网"
"页前端安装。"

#: ../nextbox/faq/nextcloud.rst:24
msgid ""
"**Q:** My Nextcloud instance is stuck in \"Maintenance Mode\", how can I "
"switch it off?"
msgstr "**问：**我的Nextcloud实例被卡在\"维护模式\"，我怎样才能关闭它？"

#: ../nextbox/faq/nextcloud.rst:23
msgid ""
"To *force exit* the Nextcloud \"Maintenance Mode\", you can push the "
"hardware button **shortly, once**. The NextBox will then switch-off the "
"maintenance mode. Please avoid this, if possible."
msgstr ""
"要*强行退出*Nextcloud \"维护模式\"，您可以**短按一次硬件按钮。然后，NextBox将"
"关闭维护模式。如果可能的话，请避免这样做。"

#: ../nextbox/faq/nextcloud.rst:30
msgid ""
"**Q:** Why am I getting a permission warning for ``/var/www/html/custom_apps/"
"nextbox`` inside the Nextcloud settings overview?"
msgstr ""
"**问：**为什么我在Nextcloud设置概览内收到``/var/www/html/custom_apps/"
"nextbox``的许可警告？"

#: ../nextbox/faq/nextcloud.rst:27
msgid ""
"This is a \"feature\". The NextBox Nextcloud App is installed on the system "
"with the Debian nextbox package. To avoid an accidental deletion of the "
"NextBox Nextcloud App from within the Nextcloud app management, the stated "
"directory can not be written by Nextcloud, this is what Nextcloud is "
"complaining about here."
msgstr ""
"这是一个\"功能\"。NextBox Nextcloud应用程序是通过Debian nextbox软件包安装在系"
"统上的。为了避免NextBox Nextcloud应用在Nextcloud应用管理中被意外删除，所述目"
"录不能被Nextcloud写入，这就是Nextcloud在这里抱怨的原因。"

#: ../nextbox/faq/nextcloud.rst:34
msgid "**Q:** How can I run Nextcloud's `occ`?"
msgstr "**问：**我如何运行Nextcloud'的`occ`？"

#: ../nextbox/faq/nextcloud.rst:33
msgid ""
"As Nextcloud is running inside a Docker container, you need to be root and "
"execute the following: ``docker exec -it -u www-data nextbox-compose_app_1 /"
"var/www/html/occ``"
msgstr ""
"由于Nextcloud在Docker容器内运行，您需要以root身份执行以下内容。``docker exec "
"-it -u www-data nextbox-compose_app_1 /var/www/html/occ``。"

#: ../nextbox/faq/nextcloud.rst:39
msgid "**Q:** What to do about missing php-modules like `imagemagick`?"
msgstr "**问：**如何处理缺失的php模块，如`imagemagick`？"

#: ../nextbox/faq/nextcloud.rst:37
msgid ""
"Similar to Apache, PHP is also provided by the Nextcloud container, "
"therefore as we are using the stock Nextcloud container this will also only "
"be resolved once this is resolved by the Nextcloud Team."
msgstr ""
"与Apache类似，PHP也是由Nextcloud容器提供的，因此，由于我们使用的是库存的"
"Nextcloud容器，这也只有在Nextcloud团队解决了这个问题后才会得到解决。"

#: ../nextbox/faq/nextcloud.rst:49
msgid ""
"**Q:** Why is my Nextcloud not loading properly, instead I get a white page "
"and a `.htaccess` error?"
msgstr ""
"**问：**为什么我的Nextcloud不能正常加载，而是出现了白色页面和`.htaccess`错"
"误？"

#: ../nextbox/faq/nextcloud.rst:42
msgid ""
"This usually is an indication that the OS has unmounted/detached the "
"internal hard-drive due to an low-power-incident. Please make sure you read "
"and understood :ref:`USB power<faq-nextbox-hardware-usb-power-supply>`. In "
"most cases doing a power-cycle (unplug the USB-C connector, wait 5secs and "
"plug it in again) should resolve this. **Make sure no additional USB devices "
"are connected during this procedure.**"
msgstr ""
"这通常表明操作系统由于发生了低功率事故而取消了对内部硬盘的挂载/卸载。请确保你"
"阅读并理解 :ref:`USB电源<faq-nextbox-hardware-usb-power-supply>`。在大多数情"
"况下，做一个电源循环（拔掉USB-C连接器，等待5秒钟，然后再次插入）应该可以解决"
"这个问题。**确保在此过程中没有其他USB设备被连接。"

#: ../nextbox/faq/remote-access.rst:2
msgid "Remote Access FAQ"
msgstr "远程访问常见问题"

#: ../nextbox/faq/remote-access.rst:9
msgid "**Q:** What is the correct WebDAV URL?"
msgstr "**问：**正确的WebDAV URL是什么？"

#: ../nextbox/faq/remote-access.rst:5
msgid ""
"The full URL to use for WebDAV is: ``https://my.domain.tld/remote.php/webdav/"
"``, there have been reports that for native Windows WebDAV you might need: "
"``https://my.domain.tld/remote.php/dav/files/USERNAME`` with *USERNAME* "
"being the username you would like to use."
msgstr ""
"用于WebDAV的完整URL是。``https://my.domain.tld/remote.php/webdav/``，有报告"
"说，对于本地Windows WebDAV，你可能需要。``https://my.domain.tld/remote.php/"
"dav/files/USERNAME``，*USERNAME*是你想使用的用户名。"

#: ../nextbox/faq/remote-access.rst:16
msgid "**Q:** Can I access my Nextcloud instance using WebDAV?"
msgstr "**问：**我能否使用WebDAV访问我的Nextcloud实例？"

#: ../nextbox/faq/remote-access.rst:12
msgid ""
"Yes, please see `Nextcloud WebDAV documentation`_ for a complete overview. A "
"simple mount for unix-like systems might look like this: ``mount -t davfs "
"https://my.domain.tld/remote.php/webdav/ /mnt/target/path`` while making "
"sure that the ``davfs2`` package is installed. For Windows please "
"additionally read these :doc:`docs <../clients/windows>`."
msgstr ""
"是的，请参见`Nextcloud WebDAV 文档`_以获得完整的概述。类似unix的系统的简单挂"
"载可能看起来像这样。``mount -t davfs https://my.domain.tld/remote.php/"
"webdav/ /mnt/target/path``同时确保``davfs2``包已安装。对于Windows，请另外阅读"
"这些 :doc:`docs <../clients/windows>`。"

#: ../nextbox/faq/remote-access.rst:21
msgid ""
"**Q:**: Why does my Android smartphone's browser not open: ``http://nextbox."
"local``"
msgstr ""
"**Q:**:为什么我的安卓智能手机'的浏览器打不开。``http://nextbox.local``。"

#: ../nextbox/faq/remote-access.rst:19
msgid ""
"As of today the technology needed to use ``.local`` URLs is not supported by "
"various (stock) Android browser(s). The mechanism is based on ``mDNS``. One "
"possible workaround is to use a 3rd party app like BonjourBrowser to "
"discover all mDNS services in your network."
msgstr ""
"截至目前，使用``.local``URLs所需的技术不被各种（库存）Android浏览器支持。该机"
"制是基于``mDNS``。一个可能的解决方法是使用第三方应用程序，如BonjourBrowser来"
"发现你网络中的所有mDNS服务。"

#: ../nextbox/faq/remote-access.rst:28
msgid ""
"**Q:**: Why does accessing my NextBox using: ``http://nextbox.local`` not "
"work?"
msgstr ""
"**Q:**:为什么使用以下方式访问我的NextBox？``http://nextbox.local``不能工作？"

#: ../nextbox/faq/remote-access.rst:24
msgid ""
"There are several other reasons why the access using ``http://nextbox."
"local`` may not work, further known scenarios are:"
msgstr ""
"使用``http://nextbox.local``的访问可能不工作的原因还有几个，进一步的已知情况"
"是。"

#: ../nextbox/faq/remote-access.rst:27
msgid ""
"Using a Fritz!Box with the NextBox being connected via a LAN port and the "
"client/browser is connected to the network via WiFI (WLAN), the Fritz!Box "
"will block mDNS."
msgstr ""
"使用Fritz！Box，NextBox通过LAN端口连接，客户端/浏览器通过WiFI（WLAN）连接到网"
"络，Fritz！Box会阻止mDNS。"

#: ../nextbox/faq/remote-access.rst:38
msgid ""
"**Q:**: I followed all guides and still cannot acquire the TLS certificate, "
"what can I do?"
msgstr "**Q:**:我遵循了所有的指南，但仍然无法获得TLS证书，我可以做什么？"

#: ../nextbox/faq/remote-access.rst:31
msgid ""
"The reason a TLS certificate cannot be acquired is nearly always the fact "
"that your NextBox is not reachable from the internet. Make sure you have "
"followed the :doc:`../remote/walkthrough`. If you followed the step-by-step "
"instructions and it still does not work, very likely something is blocking "
"the connection, typical candidates are router web administration features "
"like: ``MyFritz!``, ``Fritz Web Services`` or similar services, which are "
"running on your router and thus blocking the traffic on port(s) 80 and/or "
"443. Switch them off and retry acquiring your TLS certificate."
msgstr ""
"无法获得TLS证书的原因几乎都是你的NextBox无法从互联网上到达。请确保你已经按照:"
"doc:`.../remote/walkthrough`的要求做了。如果你按照说明一步步操作，但仍然无法"
"工作，很可能是有什么东西阻挡了连接，典型的候选人是路由器的网络管理功能，如。"
"``MyFritz!``, ``Fritz Web Services``或类似服务，它们正在你的路由器上运行，从"
"而阻止了80或443端口的流量。关掉它们并重新尝试获取你的TLS证书。"

#: ../nextbox/faq/remote-access.rst:51
msgid "**Q:** Why is my reachability with IPv4 not working?"
msgstr "**问：**为什么我的IPv4的可达性不工作？"

#: ../nextbox/faq/remote-access.rst:41
msgid ""
"If you have properly set up :doc:`port forwarding <../remote/port-"
"forwarding>` and IPv4 connections (reachability test) are still not working "
"there are good chances that your Internet-Service-Provider (ISP) does not "
"provide a proper (public) IPv4 address to you. There are several (end-"
"customer) internet technologies, which do not allow incoming traffic for the "
"IPv4, which was assigned to you. An incomplete list is: *private IPv4 "
"address*, *DS-Lite connection* or *CarrierGrade-NAT (CG-NAT)*. All these "
"essentially share one IPv4 address accross multiple users, thus block "
"(incoming) traffic from the internet to you. Some ISPs allow upgrading to so-"
"called **full-stack connections**, which should enable full bi-directional "
"traffic for IPv4 and IPv6."
msgstr ""
"如果你已经正确设置了 :doc:`端口转发 <.../remote/port-forwarding>`，但IPv4连接"
"（可达性测试）仍然不工作，那么很有可能是你的互联网服务提供者（ISP）没有为你提"
"供一个合适的（公共）IPv4地址。有一些（终端客户）互联网技术，不允许分配给你的"
"IPv4的流量进入。一个不完整的列表是。*私人IPv4地址*，*DS-Lite连接*或"
"*CarrierGrade-NAT（CG-NAT）*。所有这些基本上都是在多个用户之间共享一个IPv4地"
"址，从而阻止了从互联网到你的（传入）流量。一些ISP允许升级到所谓的**全堆栈连接"
"**，这应该可以实现IPv4和IPv6的完全双向通信。"

#: ../nextbox/faq/remote-access.rst:62
msgid ""
"**Q:** Why do some devices fail to connect for my IPv6 configured NextBox?"
msgstr "**问：**为什么我配置了IPv6的NextBox，有些设备却无法连接？"

#: ../nextbox/faq/remote-access.rst:54
msgid ""
"Sadly, still not all ISPs and mobile-network providers (smartphones) do have "
"full IPv6 support activated. This means, if your NextBox is configured for "
"IPv6 only access, devices inside these networks will not be able to connect. "
"The **backwards-proxy does work as a workaround here**, as it provides an "
"IPv4 entrypoint to your NextBox independant of your other remote access "
"configuration."
msgstr ""
"遗憾的是，并不是所有的ISP和移动网络供应商（智能手机）都有完全的IPv6支持。这意"
"味着，如果你的NextBox被配置为只能访问IPv6，这些网络中的设备将无法连接。在这"
"里，**反向代理确实可以作为一种变通方法，因为它为你的NextBox提供了一个IPv4入"
"口，与你的其他远程访问配置无关。"

#: ../nextbox/faq/software.rst:2
msgid "Software FAQ"
msgstr "软件常见问题"

#: ../nextbox/faq/software.rst:7
msgid "**Q:** What kind of public key is expected for SSH access?"
msgstr "**问：**SSH访问需要什么样的公钥？"

#: ../nextbox/faq/software.rst:5
msgid ""
"An openssh style (public) key is expected. Depending on your operating "
"system there are different ways to determine your public key. One might be "
"``ssh-add -L``, another might be ``cat ~/.ssh/id_rsa.pub``. If you are using "
"Putty, please see the `Putty documentation`_."
msgstr ""
"希望有一个openssh风格的（公钥）。根据你的操作系统，有不同的方法来确定你的公"
"钥。一种可能是``ssh-add -L``，另一种可能是``cat ~/.ssh/id_rsa.pub``。如果你使"
"用Putty，请看`Putty文档`_。"

#: ../nextbox/faq/software.rst:12
msgid "**Q:** Can the operating system be extended or configured manually?"
msgstr "**问：**操作系统是否可以手动扩展或配置？"

#: ../nextbox/faq/software.rst:10
msgid ""
"Yes, you can set up ssh access through the NextBox Nextcloud app. Afterwards "
"you can access your NextBox using ssh and you can do with the system "
"whatever you want. Obviously we will only provide support for the NextBox "
"stock configuration."
msgstr ""
"是的，你可以通过NextBox Nextcloud应用程序设置ssh访问。之后，你可以使用ssh访问"
"你的NextBox，你可以对系统做任何你想做的事。显然，我们将只提供对NextBox股票配"
"置的支持。"

#: ../nextbox/faq/software.rst:15
msgid "**Q:** Where can I see a changelog for the NextBox versions?"
msgstr "**问：**我在哪里可以看到NextBox版本的更新日志？"

#: ../nextbox/faq/software.rst:15
msgid "Currently only here: `Launchpad NextBox`_"
msgstr "目前只在这里。`Launchpad NextBox`_"

#: ../nextbox/faq/software.rst:21
msgid "**Q:** How can I update the Operating System?"
msgstr "**问：**我怎样才能更新操作系统？"

#: ../nextbox/faq/software.rst:18
msgid ""
"There is no need to update the NextBox OS by hand. This is done using "
"``unattended-upgrades`` and on top the *nextbox-daemon* will check for "
"upgrades manually (as a redundant fallback solution) on every start. You are "
"free to update your OS by hand using ``apt``, if you know what you are doing."
msgstr ""
"没有必要手工更新NextBox操作系统。这是用``unattended-upgrades``完成的，在每次"
"启动时，*nextbox-daemon*会手动检查升级（作为一个冗余的后备解决方案）。你可以"
"自由地使用``apt``手动更新你的操作系统，如果你知道自己在做什么的话。"

#: ../nextbox/faq/software.rst:24
msgid "**Q:** Is the NextBox running a 32bit or 64bit operating system?"
msgstr "**问：**NextBox是运行32位还是64位操作系统？"

#: ../nextbox/faq/software.rst:24
msgid "The used OS is a 64bit system. The ``arch`` output: `aarch64`."
msgstr "使用的操作系统是64位系统。``arch``输出。`aarch64`."

#: ../nextbox/faq/software.rst:30
msgid ""
"**Q:** Which users and default passwords are created by default on the "
"NextBox's operating system?"
msgstr "**问：**哪些用户和默认密码是在NextBox'的操作系统中默认创建的？"

#: ../nextbox/faq/software.rst:27
msgid ""
"There is not one single default password set on any (system) user. The only "
"non-system user created is named ``nextuser``, without a default password. "
"The only way to access the NextBox is using ``ssh`` with a public key, which "
"can be set via the NextBox App."
msgstr ""
"在任何（系统）用户上都没有设置一个默认密码。唯一创建的非系统用户名为"
"``nextuser``，没有默认密码。访问NextBox的唯一方法是使用``ssh``与公钥，可以通"
"过NextBox应用程序设置。"

#: ../nextbox/gettingstarted.rst:7
msgid "Quickstart"
msgstr "快速入门"

#: ../nextbox/gettingstarted.rst:10
msgid "Connect NextBox to your Internet router via network cable."
msgstr "通过网线将NextBox连接到您的互联网路由器。"

#: ../nextbox/gettingstarted.rst:11
msgid ""
"Connect the power cable to the NextBox, you can use any of the two USB-C "
"ports."
msgstr "将电源线连接到NextBox，你可以使用两个USB-C端口中的任何一个。"

#: ../nextbox/gettingstarted.rst:12
msgid "Once powered the NextBox will start"
msgstr "一旦通电，NextBox将启动"

#: ../nextbox/gettingstarted.rst:13
msgid ""
"Wait approx. 5 minutes and open \"http://nextbox.local\" in your web browser "
"- this duration may vary. The NextBox is ready once the LED is constantly "
"green (see :doc:`LEDs <technical/led-colors>`)."
msgstr ""
"等待大约5分钟，在你的网络浏览器中打开\"http://nextbox.local\"，这个时间可能会"
"有所不同。当LED灯持续为绿色时，NextBox就准备好了（见:doc:`LEDs <technical/"
"led-colors>`）。"

#: ../nextbox/gettingstarted.rst:20
msgid ""
"External storage drives without an external power supply must NOT be "
"connected to the USB sockets. Otherwise, this can lead to data loss on the "
"internal hard disk. **Always use external storage drives with a seperate "
"power supply together with the NextBox.**"
msgstr ""
"没有外部电源的外部存储驱动器不得连接到USB插座上。否则，这可能导致内部硬盘的数"
"据丢失。**始终使用带有独立电源的外部存储驱动器与NextBox一起使用。"

#: ../nextbox/gettingstarted.rst:26
msgid "Create Admin Account"
msgstr "创建管理账户"

#: ../nextbox/gettingstarted.rst:28
msgid ""
"Enter your desired username and password. Remember to choose a strong "
"password for your admin account."
msgstr "输入你想要的用户名和密码。记住要为你的管理账户选择一个强密码。"

#: ../nextbox/gettingstarted.rst:38
msgid "Press \"Finish Setup\". This process may take a few minutes."
msgstr "按\"完成设置\"。这个过程可能需要几分钟时间。"

#: ../nextbox/gettingstarted.rst:44
msgid "Configure NextBox Related Features"
msgstr "配置NextBox的相关功能"

#: ../nextbox/gettingstarted.rst:46
msgid ""
"The NextBox comes with Nextcloud App to realize various configurations (e."
"g., :doc:`backup-restore` or :doc:`Remote Access<remote/index>`) and "
"operations for your NextBox."
msgstr ""
"NextBox配有Nextcloud App，以实现各种配置（例如:doc:`backup-restore`或:doc:"
"`Remote Access<remote/index>`）和对NextBox的操作。"

#: ../nextbox/gettingstarted.rst:49
msgid ""
"Your can find the NextBox-App in Nextcloud's top level navigation, as shown "
"in this figure:"
msgstr "您可以在Nextcloud'的顶级导航中找到NextBox-App，如图所示。"

#: ../nextbox/gettingstarted.rst:55
msgid "Ready To Go"
msgstr "准备出发"

#: ../nextbox/gettingstarted.rst:57
msgid ""
"This is all it takes to get started with your NextBox. From this point you "
"are free to choose how you would like to make the best use of your personal "
"Nextcloud-powered cloud. To get you started, here is a collection of ideas "
"to continue on:"
msgstr ""
"这就是开始使用您的NextBox的全部步骤。从这一点出发，您可以自由选择如何最好地利"
"用您的个人Nextcloud-powered云。为了让你开始，这里收集了一些想法来继续。"

#: ../nextbox/gettingstarted.rst:62
msgid ""
"**Set up remote access for your NextBox** to allow access to your private "
"cloud from the internet. Our :doc:`guide <remote/index>` covers various "
"approaches."
msgstr ""
"**为你的NextBox设置远程访问**，允许从互联网访问你的私有云。我们的 :doc:"
"`guide <remote/index>`涵盖各种方法。"

#: ../nextbox/gettingstarted.rst:66
msgid ""
"We prepared a *one-click* remote access method, allowing you to set up basic "
"remote access in seconds."
msgstr ""
"我们准备了一个*一键式的远程访问方法，允许你在几秒钟内设置基本的远程访问。"

#: ../nextbox/gettingstarted.rst:71
msgid ""
"**Connect your devices to your NextBox.** For smartphones the official "
"`Android App`_ and `iOS App`_ are both great additions for your personal "
"cloud. Apart from these there are also `Windows, macOS, Linux clients`_ "
"available, which integrate seamlessly into the OS of your choice. For "
"Android smartphones you might want to read our pictured :doc:`guide <clients/"
"android>`."
msgstr ""
"**将您的设备连接到您的NextBox。**对于智能手机，官方的`Android App`_和`iOS "
"App`_都是您个人云的重要补充。除了这些，还有`Windows、macOS、Linux客户端`_，它"
"们可以无缝地集成到你选择的操作系统中。对于安卓智能手机，你可能想阅读我们的图"
"片 :doc:`guide <client/android>`。"

#: ../nextbox/gettingstarted.rst:77
msgid ""
"**Browse the vast amount of apps** for your Nextcloud at the `official "
"store`_ for Nextcloud apps. Alternatively, just browse, find and install "
"directly from within your NextBox via the built-in app manager and browser."
msgstr ""
"**在`Nextcloud应用程序的官方商店`_为您的Nextcloud浏览大量的应用程序**。或者，"
"通过内置的应用程序管理器和浏览器，直接在您的NextBox内浏览、查找和安装。"

#: ../nextbox/gettingstarted.rst:81
msgid ""
"**Extend your Dashboard** using the various `Dashboard Integrations`_ to "
"create your personal information hub."
msgstr ""
"**使用各种`Dashboard Integrations`_扩展你的Dashboard，以创建你的个人信息枢"
"纽。"

#: ../nextbox/gettingstarted.rst:84
msgid ""
"**Share photos, documents, any files, bookmarks and much more with your "
"family and friends**, or become part of a `Federation`_ and share, "
"communicate and collaborate with other Nextcloud users."
msgstr ""
"**与您的家人和朋友分享照片、文档、任何文件、书签和更多内容**，或成为`联盟的一"
"部分`_，与其他Nextcloud用户分享、交流和协作。"

#: ../nextbox/gettingstarted.rst:88
msgid ""
"**Your communications under your control** - use Nextcloud's powerful "
"`groupware apps`_ like *Mail*, *Contacts*, *Calendar* or even *Deck* to have "
"all your personal data under your control or to organize and work together "
"with others."
msgstr ""
"**你的通信在你的控制之下** - 使用Nextcloud'强大的`群件应用程序`_，如*邮件*、*"
"联系人*、*日历*或甚至*Deck*，使你的所有个人数据在你的控制之下，或与其他人组织"
"和合作。"

#: ../nextbox/gettingstarted.rst:93
msgid ""
"More interested in :doc:`technical details <technical/index>`? Or in Open-"
"Source in general? Then head over to the NextBox `repositories`_ at GitHub, "
"leave a star, contribute or discuss latest ideas and plans with us."
msgstr ""
"对:doc:`技术细节<technical/index>`更感兴趣？或者对一般的开放源代码感兴趣？那"
"就去GitHub上的NextBox `存储库`_，留下一颗星，做出贡献或与我们讨论最新的想法和"
"计划。"

#: ../nextbox/hardware-overview.rst:2
msgid "Hardware Overview"
msgstr "硬件概述"

#: ../nextbox/hardware-overview.rst:7
msgid "Summary"
msgstr "摘要"

#: ../nextbox/hardware-overview.rst:9
msgid "A NextBox consists of the following hardware components:"
msgstr "一个NextBox由以下硬件组件组成。"

#: ../nextbox/hardware-overview.rst:11
msgid "Raspberry PI 4 Type B"
msgstr "树莓PI 4 B型"

#: ../nextbox/hardware-overview.rst:12
msgid "Nitrokey NextBox (aluminum) case"
msgstr "Nitrokey NextBox（铝）机箱"

#: ../nextbox/hardware-overview.rst:13
msgid "Internal hard-drive (SSD or HDD)"
msgstr "内部硬盘（SSD或HDD）"

#: ../nextbox/hardware-overview.rst:14
msgid "NextBox Reset Shield"
msgstr "NextBox 重置盾牌"

#: ../nextbox/hardware-overview.rst:15
msgid "Various smaller parts (internal wiring, connectors)"
msgstr "各种较小的部件（内部布线、连接器）。"

#: ../nextbox/hardware-overview.rst:17
msgid ""
"The casing is made out of aluminum and a passive thermal design. There are "
"no glued components and the case can easily be opened using a Phillips "
"screwdriver.  Please keep in mind that opening the case will void your "
"warranty and it is generally not recommended to open the case for the non-"
"professional user, especially as this might damage the thermal conductivity "
"and therefore the heat dissipating capabilities of the NextBox might suffer."
msgstr ""
"外壳由铝制成，采用被动散热设计。没有胶粘的部件，使用十字螺丝刀就可以轻松打开"
"机箱。  请记住，打开机箱将使您的保修失效，一般不建议非专业用户打开机箱，特别"
"是这样做可能会破坏导热性，因此NextBox的散热能力可能会受到影响。"

#: ../nextbox/hardware-overview.rst:25
msgid "Connectors and Interfaces"
msgstr "连接器和接口"

#: ../nextbox/hardware-overview.rst:27
msgid ""
"In general the NextBox exposes all ports, which are available on the "
"Raspberry PI 4 and one additional USB Type C port for a better accessible "
"power supply connector. In the following a short description of the "
"different connectors and interfaces is given."
msgstr ""
"总的来说，NextBox提供了树莓派4上的所有端口，以及一个额外的USB Type C端口，以"
"便更好地使用电源接口。以下是对不同连接器和接口的简短描述。"

#: ../nextbox/hardware-overview.rst:31
msgid ":doc:`Status LED<technical/led-colors>`"
msgstr ":doc:`状态LED<技术/led-colors>`。"

#: ../nextbox/hardware-overview.rst:32
msgid "Hardware button for :doc:`Factory-Reset<technical/factory-reset>`"
msgstr "硬件按钮为 :doc:`Factory-Reset<technical/factory-reset>`。"

#: ../nextbox/hardware-overview.rst:38
msgid ""
"**USB Type-C / Power Supply** connector is designated as a replacement for "
"the stock connector on the front side and is exclusively for supplying power "
"to the NextBox and cannot transfer data."
msgstr ""
"**USB Type-C / Power Supply**连接器被指定为替代正面的原厂连接器，专门为"
"NextBox供电，不能传输数据。"

#: ../nextbox/hardware-overview.rst:43
msgid ""
"The right side of the NextBox is designed so that all mandatory interfaces "
"can be accessed from this side."
msgstr "NextBox右侧的设计使所有必须的接口都可以从这一侧进入。"

#: ../nextbox/hardware-overview.rst:50
msgid ""
"The **RJ45 - 1GbE Ethernet** connector connects your NextBox with your home "
"network and shall stay connected at all times."
msgstr ""
"RJ45 - 1GbE以太网**连接器将您的NextBox与您的家庭网络连接起来，应随时保持连"
"接。"

#: ../nextbox/hardware-overview.rst:52
msgid ""
"**Free USB 3 - Type A Slot**, please see :ref:`Hardware FAQ<usb-power-"
"supply>`"
msgstr ""
"**免费的USB 3 - A型插槽**，请参见 :ref:`硬件常见问题<usb-power-supply>`。"

#: ../nextbox/hardware-overview.rst:53
msgid ""
"**Reserved USB 3 - Type A Slot**, used for the internal hard-disk. *Never "
"remove this connector!*"
msgstr "**保留的USB 3 - A型插槽**，用于内部硬盘。千万不要拆除这个连接器！**。"

#: ../nextbox/hardware-overview.rst:54
msgid ""
"**2x Free USB 2 - Type A Slots**, please see :ref:`Hardware FAQ<usb-power-"
"supply>`"
msgstr ""
"**2个免费的USB 2 - A型插槽**，请参见:参考:`硬件FAQ<usb-power-supply>`。"

#: ../nextbox/hardware-overview.rst:56
msgid ""
"Using a hard-drive with an external power supply you can use any of the "
"available USB slots. Keep in mind that the data transfer bandwidth for the "
"USB 2 slots is less compared to the USB 3 slot."
msgstr ""
"使用带有外部电源的硬盘，你可以使用任何一个可用的USB插槽。请记住，与USB 3插槽"
"相比，USB 2插槽的数据传输带宽较小。"

#: ../nextbox/hardware-overview.rst:60
msgid "**USB Type-C / Power Supply** (stock) connector, can be used as **[3]**"
msgstr "**USB Type-C/电源**（库存）连接器，可作为**[3]**使用。"

#: ../nextbox/hardware-overview.rst:61
msgid "**Micro HDMI 1 slot**, usable but not needed."
msgstr "**微型HDMI 1插槽**，可使用但不需要。"

#: ../nextbox/hardware-overview.rst:62
msgid "**Micro HDMI 2 slot**, usable but not needed."
msgstr "**微型HDMI 2插槽**，可使用但不需要。"

#: ../nextbox/hardware-overview.rst:63
msgid "**Headphone Jack**, usable but not needed."
msgstr "**耳机插孔**，可使用但不需要。"

#: ../nextbox/hardware-overview.rst:69
msgid ""
"The front interfaces are all optional and not necessary for NextBox usage in "
"general. While the **USB Type-C/Power Supply** may be used, the alternative "
"on the right side of the NextBox can be used to have all wiring convenient "
"on one side."
msgstr ""
"前面的接口都是可选的，对于NextBox的一般使用来说不是必须的。虽然可以使用**USB "
"Type-C/电源**，但可以使用NextBox右侧的替代方案，使所有的接线都方便在一侧。"

#: ../nextbox/index.rst:2
msgid "NextBox"
msgstr "NextBox"

#: ../nextbox/remote/dns-rebind.rst:2
msgid "DNS Rebind Protection"
msgstr "DNS重新绑定保护"

#: ../nextbox/remote/dns-rebind.rst:5 ../nextbox/remote/ipv6-settings.rst:5
#: ../nextbox/remote/port-forwarding.rst:5
msgid "Issue"
msgstr "问题"

#: ../nextbox/remote/dns-rebind.rst:7
msgid ""
"You have your dynamic DNS correctly set up, but IPv6 resolving does not work "
"for your domain."
msgstr "你已经正确地设置了动态DNS，但IPv6解析对你的域名不起作用。"

#: ../nextbox/remote/dns-rebind.rst:11 ../nextbox/remote/ipv6-settings.rst:16
#: ../nextbox/remote/port-forwarding.rst:13
msgid "Details"
msgstr "详细内容"

#: ../nextbox/remote/dns-rebind.rst:13
msgid ""
"In general DNS Rebinding protection is a safety mechanism to avoid attacks "
"based on `DNS-Rebinding`_. Home routers include a protection mechanism for "
"this attack by never returning a local IP (v4 & v6) address."
msgstr ""
"一般来说，DNS重新绑定保护是一种安全机制，以避免基于`DNS重新绑定`_的攻击。家庭"
"路由器包括一个保护机制，通过永不返回本地IP（v4 & v6）地址来防止这种攻击。"

#: ../nextbox/remote/dns-rebind.rst:17
msgid ""
"In the context of the NextBox this means that, if you are using IPv6, the "
"IPv6 address of your NextBox is considered local by your router and thus "
"wiull not be returned during DNS resolving of your designated domain."
msgstr ""
"在NextBox的情况下，这意味着，如果你使用IPv6，你的NextBox的IPv6地址被你的路由"
"器认为是本地的，因此在DNS解析你的指定域时不会被返回。"

#: ../nextbox/remote/dns-rebind.rst:21
msgid ""
"For IPv4 this is also applies, but not a problem. In the IPv4 world "
"(dynamic) DNS resolves to the router (WAN-IP) itself and the router will "
"forward the traffic to your NextBox. In contrast IPv6 will not resolve to "
"your router but to the IPv6 address of your NextBox directly and the router "
"just has to open its firewall for the traffic to pass."
msgstr ""
"对于IPv4，这也适用，但不是一个问题。在IPv4世界（动态）DNS解析到路由器（WAN-"
"IP）本身，路由器将转发流量到你的NextBox。相反，IPv6不会解析到你的路由器，而是"
"直接解析到你的NextBox的IPv6地址，路由器只需打开其防火墙，流量就能通过。"

#: ../nextbox/remote/dns-rebind.rst:29 ../nextbox/remote/ipv6-settings.rst:25
#: ../nextbox/remote/port-forwarding.rst:26
msgid "Solution"
msgstr "解决方案"

#: ../nextbox/remote/dns-rebind.rst:31
msgid ""
"Most routers, which implement this DNS-Rebind protection also allow you to "
"whitelist certain domains from this protection. **Generally, to solve this "
"issue you have to insert your (full) domain to the DNS-Rebind Exceptions (or "
"whitelist) of your router.**"
msgstr ""
"大多数实施这种DNS-Rebind保护的路由器也允许你将某些域名列入白名单，使其不受这"
"种保护。**一般来说，要解决这个问题，你必须在路由器的DNS-Rebind Exceptions（或"
"白名单）中插入你的（完整）域。"

#: ../nextbox/remote/dns-rebind.rst:35
msgid ""
"For instance, the setting inside a *Fritz!Box* is to be found in: \"Home "
"Network -> Network -> Network Settings -> More Settings -> DNS Rebind "
"Protection\". You need to ensure that you have the \"extended/expert view\" "
"activated."
msgstr ""
"例如，在*Fritz！Box*内的设置是在：\"家庭网络->网络->网络设置->更多设置->DNS重"
"新绑定保护\"。你需要确保你已经激活了\"扩展/专家视图\"。"

#: ../nextbox/remote/dynamic-dns.rst:2
msgid "Dynamic DNS Setup"
msgstr "动态DNS设置"

#: ../nextbox/remote/dynamic-dns.rst:6
msgid ""
"**There are two ways to configure a dynamic DNS provider to be used and "
"updated by your NextBox instance.**"
msgstr "**有两种方法可以配置动态DNS提供者，以便由你的NextBox实例使用和更新**。"

#: ../nextbox/remote/dynamic-dns.rst:9 ../nextbox/remote/static.rst:7
msgid ""
"In contrast to the :doc:`backwards proxy <proxy>` remote access method, this "
"approach will ensure full end-to-end encryption using your very own TLS "
"certificate acquired from `Let's Encrypt`_."
msgstr ""
"与 :doc:`backwards proxy <proxy>`远程访问方法相比，这种方法将确保使用你自己的"
"TLS证书从`Let's Encrypt`_获得的完全端到端加密。"

#: ../nextbox/remote/dynamic-dns.rst:15
msgid "Guided Dynamic DNS"
msgstr "引导的动态DNS"

#: ../nextbox/remote/dynamic-dns.rst:17
msgid ""
"The guided setup will register an account at `desec.io`_ for you. Please "
"follow these steps to configure your NextBox using the Guided Dynamic DNS "
"method:"
msgstr ""
"指导性设置将为您在`desec.io`_注册一个账户。请按照以下步骤，使用引导式动态DNS"
"方法配置您的NextBox。"

#: ../nextbox/remote/dynamic-dns.rst:20
msgid ""
"In step one you need to provide an e-mail address and the domain you would "
"like to register.  Please make sure that you have access to this e-mail "
"account and the domain ends with **.dedyn.io**. *You can continue to the "
"next step by registering at `desec.io`_ or without (e.g., if you have "
"already registered this domain before)*"
msgstr ""
"在第一步，你需要提供一个电子邮件地址和你想注册的域名。  请确保你可以访问这个"
"电子邮件账户，并且域名以**.dedyn.io**结尾。*你可以通过在 \"desec.io \"注册或"
"不注册（例如，如果你以前已经注册过这个域名）继续进行下一步的工作 *"

#: ../nextbox/remote/dynamic-dns.rst:26
msgid ""
"After the registration at `desec.io`_ you will receive a verification e-"
"mail, which will guide you through the registration process at `desec.io`_. "
"Once completed you will be presented with a secret token, which is needed in "
"step two."
msgstr ""
"在`desec.io`_注册后，你会收到一封验证邮件，它将指导你完成`desec.io`_的注册过"
"程。一旦完成，你将得到一个秘密令牌，这在第二步中是需要的。"

#: ../nextbox/remote/dynamic-dns.rst:31
msgid ""
"If you do not receive a verification e-mail try `reset password`_ (using the "
"same e-mail address) at `desec.io`_ to set a password, which will allow you "
"to login into your account."
msgstr ""
"如果你没有收到验证邮件，请在`reset password`_（使用相同的电子邮件地址）"
"`desec.io`_设置一个密码，这将使你能够登录到你的帐户。"

#: ../nextbox/remote/dynamic-dns.rst:35
msgid ""
"In step two the just acquired secret token shall be inserted into the input "
"field to complete your guided dynamic dns configuration."
msgstr ""
"在第二步中，应将刚刚获得的秘密令牌插入输入栏，以完成你的指导性动态域名配置。"

#: ../nextbox/remote/dynamic-dns.rst:38
msgid ""
"Your token will only be presented once to you (after the verification "
"process).  If you need a new token, you need to create a new one inside the "
"`token management`_ inside your `desec.io`_ account settings."
msgstr ""
"你的令牌只会呈现给你一次（在验证过程之后）。  如果你需要一个新的令牌，你需要"
"在你的`token management`_里面的`desec.io`_账户设置中创建一个新的令牌。"

#: ../nextbox/remote/dynamic-dns.rst:42
msgid ""
"Once the 2nd step is completed you can *Continue to TLS activation* - see "
"below..."
msgstr "一旦第二步完成，你就可以*继续进行TLS激活* - 见下文..."

#: ../nextbox/remote/dynamic-dns.rst:45
msgid "Custom Dynamic DNS"
msgstr "自定义动态DNS"

#: ../nextbox/remote/dynamic-dns.rst:47
msgid ""
"To update your dynamic DNS provider with your currently used IP(s), NextBox "
"is using `ddclient`_, which can be directly configured here or via the "
"*Guided DNS* method described before."
msgstr ""
"为了用你目前使用的IP更新你的动态DNS提供商，NextBox使用`ddclient`_，它可以直接"
"在这里配置或通过前面描述的*指导DNS*方法。"

#: ../nextbox/remote/dynamic-dns.rst:51
msgid ""
"In this configuration you need the provide the *domain* this configuration "
"is enabling and the contents of the `ddclient.conf` used by `ddclient`_. "
"Various examples can be found at the `official documentation`_, the one used "
"for the guided DNS configuration uses the following template:"
msgstr ""
"在这个配置中，你需要提供这个配置所启用的*域名以及`ddclient`_使用的`ddclient."
"conf`的内容。各种例子可以在`官方文档`_中找到，用于指导DNS配置的例子使用了以下"
"模板。"

#: ../nextbox/remote/dynamic-dns.rst:67
msgid ""
"Once you actiavted this configuration, you can *Continue to TLS activation* "
"- see below"
msgstr "一旦你完成了这个配置，你就可以*继续进行TLS激活*--见下文。"

#: ../nextbox/remote/dynamic-dns.rst:73
msgid "Enable TLS"
msgstr "启用TLS"

#: ../nextbox/remote/dynamic-dns.rst:74
msgid ""
"On this page first wait for the status-bars to settle and mainly ensure that "
"*reachability* of your NextBox is tested successfully. If this is the case, "
"just click **Enable TLS** to acquire your TLS certificate."
msgstr ""
"在这个页面上，首先等待状态栏的稳定，主要是确保你的NextBox的*可及性测试成功。"
"如果是这样，只需点击**启用TLS**来获取你的TLS证书。"

#: ../nextbox/remote/dynamic-dns.rst:78
msgid ""
"If the reachibility test fails, make sure your :doc:`port forwarding <port-"
"forwarding>` is configured properly."
msgstr ""
"如果可达性测试失败，请确保你的 :doc:`port forwarding <port-forwarding>`配置正"
"确。"

#: ../nextbox/remote/index.rst:2
msgid "Managing Remote Access"
msgstr "管理远程访问"

#: ../nextbox/remote/index.rst:4
msgid ""
"Your NextBox comes with different options on how to enable access to your "
"NextBox from any remote location as long as you have an internet connection "
"available."
msgstr ""
"您的NextBox有不同的选项，只要您有互联网连接，就可以从任何远程地点访问您的"
"NextBox。"

#: ../nextbox/remote/index.rst:8
msgid "If you struggle with the overall topic, please read:"
msgstr "如果你对整个主题感到挣扎，请阅读。"

#: ../nextbox/remote/index.rst:16
msgid ""
"Even though the *Backwards Proxy* remote access method is a quick way to "
"realize remote access, we **strongly recommend** to use a :doc:`dynamic DNS "
"setup<dynamic-dns>` or :doc:`static DNS setup<static>` to maintain the best "
"security level for your NextBox. *In most usage scenarios the latter will "
"also provide a better data bandwidth and user experience*"
msgstr ""
"尽管*反向代理*远程访问方法是实现远程访问的快速方法，但我们**强烈建议**使用:"
"doc:`动态DNS设置<动态-dns>`或:doc:`静态DNS设置<静态>`来保持你的NextBox的最佳"
"安全水平。*在大多数使用情况下，后者也将提供更好的数据带宽和用户体验*。"

#: ../nextbox/remote/index.rst:23
msgid ""
"Before you set up a remote access method you might want to read the :doc:"
"`comparison<method-comparison>` in order to understand the trade-offs and "
"capabilities of the different approaches:"
msgstr ""
"在你设置远程访问方法之前，你可能想阅读 :doc:`comparison<method-comparison>`，"
"以了解不同方法的权衡和能力。"

#: ../nextbox/remote/index.rst:34
msgid ""
"There are different ways to make your NextBox available for remote access."
msgstr "有不同的方法使你的NextBox可用于远程访问。"

#: ../nextbox/remote/index.rst:44
msgid ""
"The following topics might be of interest for you, depending on your "
"internet service provider and the type of your internet connection:"
msgstr ""
"以下主题可能是你感兴趣的，这取决于你的互联网服务提供商和你的互联网连接类型。"

#: ../nextbox/remote/ipv6-settings.rst:2
msgid "IPv6-related Settings"
msgstr "与IPv6相关的设置"

#: ../nextbox/remote/ipv6-settings.rst:7
msgid ""
"You have properly set up one of the DNS configurations, :doc:`port-"
"forwarding` and :doc:`dns-rebind` and still your NextBox is not available / "
"reachable."
msgstr ""
"你已经正确地设置了一个DNS配置， :doc:`port-forwarding`和:doc:`dns-rebind`，但"
"你的NextBox仍然不可用/无法到达。"

#: ../nextbox/remote/ipv6-settings.rst:11
msgid ""
"This is in particular important for Fritz!Box owners and/or DS-Lite internet "
"connections."
msgstr "这对Fritz!Box的所有者和/或DS-Lite的互联网连接尤其重要。"

#: ../nextbox/remote/ipv6-settings.rst:18
msgid ""
"First test your (sub-)domain using a 3rd party service like `IPv6 Test`_ to "
"test your NextBox' IPv6 reachability. If this fails this is another "
"indicator that your IPv6 settings are not correct."
msgstr ""
"首先，使用第三方服务如`IPv6 Test`_来测试你的NextBox'IPv6可达性。如果失败了，"
"这是另一个指标，说明你的IPv6设置是不正确的。"

#: ../nextbox/remote/ipv6-settings.rst:27
msgid ""
"Some routers might have a bad default configuration for IPv6. Therefore "
"please ensure that your router is configured to pass IPv6 addresses to your "
"network clients (called ``IA_NA``), if this not done, no IPv6 connection can "
"be established to your NextBox from the outside, thus your NextBox is not "
"reachable."
msgstr ""
"一些路由器可能对IPv6的默认配置不好。因此，请确保你的路由器配置为将IPv6地址传"
"递给你的网络客户（称为``IA_NA``），如果没有这样做，就不能从外部建立IPv6连接到"
"你的NextBox，因此你的NextBox是无法到达。"

#: ../nextbox/remote/ipv6-settings.rst:32
msgid ""
"On a recent *Fritz!Box* you will find this configuration inside: \"Home "
"Network -> \"Network\" -> \"Network Settings\" -> \"IPv6 Configuration\" "
"Inside this view inside the section: \"DHCPv6 Server in the Home Network\" "
"activate: \"Enable DHCPv6 server in the FRITZ!Box for the home network:\" "
"and below this the last radio button has to be active: \"Assign DNS server, "
"prefix (IA_PD) and IPv6 address (IA_NA)\" instead of the default, which is "
"the 1st radio button."
msgstr ""
"在最近的*Fritz!Box*上你会发现这个配置：\"家庭网络 -> \"网络\" -> \"网络设置"
"\" -> \"IPv6配置\" 在这个视图里面的部分：\"家庭网络的DHCPv6服务器\" 激活："
"\"在FRITZ!Box的家庭网络中启用DHCPv6服务器：\" 而在这下面的最后一个单选按钮必"
"须激活：\"指定DNS服务器、前缀（IA_PD）和IPv6地址（IA_NA）\" 而不是默认的，即"
"第一个单选按钮。"

#: ../nextbox/remote/method-comparison.rst:2
msgid "Comparing Methods For (Remote) Access"
msgstr "比较（远程）访问的方法"

#: ../nextbox/remote/method-comparison.rst:7
msgid "DNS-based"
msgstr "基于DNS的"

#: ../nextbox/remote/method-comparison.rst:9
msgid ""
"This is clearly the best and most secure approach and we recommend using a "
"DNS-based remote-access method including your own TLS certificate for the "
"best security"
msgstr ""
"这显然是最好和最安全的方法，我们建议使用基于DNS的远程访问方法，包括你自己的"
"TLS证书，以获得最佳的安全性。"

#: ../nextbox/remote/method-comparison.rst:13
msgid "This denotes the :doc:`dynamic-dns` and the :doc:`static` approach."
msgstr "这表示:doc:`dynamic-dns`和:doc:`static`方法。"

#: ../nextbox/remote/method-comparison.rst:15
msgid ""
"Clearly the *best* method, but also the one requiring some configuration "
"work on your internet router."
msgstr "显然，这是*好的方法，但也需要对你的互联网路由器进行一些配置工作。"

#: ../nextbox/remote/method-comparison.rst:17
msgid ""
"You get your *own* (sub)domain and a TLS certificate, thus all your traffic "
"will always be end-to-end encrypted and you maintain the highest level of "
"security for your traffic."
msgstr ""
"你得到了你的**（子）域名和TLS证书，因此你的所有流量将始终是端到端加密的，你的"
"流量保持最高的安全水平。"

#: ../nextbox/remote/method-comparison.rst:19
msgid ""
"Opening the right ports on your internet router is necessary, see :doc:"
"`here<port-forwarding>`"
msgstr ""
"在你的互联网路由器上打开正确的端口是必要的，见 :doc:`here<port-forwarding>`。"

#: ../nextbox/remote/method-comparison.rst:20
#: ../nextbox/remote/method-comparison.rst:36
msgid "Data path: [NextBox] ⟷   [Router] ⟷  [Client]"
msgstr "数据路径。[NextBox] ⟷ [Router] ⟷ [Client]."

#: ../nextbox/remote/method-comparison.rst:21
msgid "**Pro:** best performance, highest security, full end-to-end encryption"
msgstr "**优点：**性能最佳，安全性最高，完全端到端加密"

#: ../nextbox/remote/method-comparison.rst:22
msgid ""
"**Contra:** needs (dynamic) DNS, needs configuration on your internet router"
msgstr "**Contra：**需要（动态）DNS，需要在你的互联网路由器上进行配置。"

#: ../nextbox/remote/method-comparison.rst:27
msgid "Non-encrypted"
msgstr "非加密的"

#: ../nextbox/remote/method-comparison.rst:29
msgid ""
"We strongly recommend to not use the non-encrypted setup, if you plan to "
"make your NextBox available outside of your local area network."
msgstr ""
"我们强烈建议不要使用非加密的设置，如果你打算让你的NextBox在你的局域网之外可"
"用。"

#: ../nextbox/remote/method-comparison.rst:32
msgid ""
"simple (``http``) using either ``nextbox.local`` or your local IP (e.g.: "
"``192.168.178.123``)"
msgstr ""
"简单（``http``）使用``nextbox.local``或你的本地IP（例如："
"``192.168.178.123`）。"

#: ../nextbox/remote/method-comparison.rst:33
msgid ""
"Generally a bad idea, this will not encrypt the transported data in any way "
"and is only useful in a setup where you do not want remote access to your "
"NextBox (having non-encrypted traffic inside your LAN might be no problem, "
"as long as you know what you are doing)"
msgstr ""
"一般来说，这是一个坏主意，这不会以任何方式对传输的数据进行加密，只有在你不希"
"望远程访问你的NextBox的情况下才有用（在你的局域网内有非加密的流量可能没有问"
"题，只要你知道你在做什么。）"

#: ../nextbox/remote/method-comparison.rst:37
msgid "**Pro:** fast, no configuration"
msgstr "**优点：**快速，无需配置"

#: ../nextbox/remote/method-comparison.rst:38
msgid ""
"**Contra:** no transport security, no remote access (or only unencrypted)"
msgstr "**Contra:**没有运输安全，没有远程访问（或只有未加密的）。"

#: ../nextbox/remote/method-comparison.rst:41
msgid ""
"Further, once you set up TLS and thus a DNS-based method, the unencrypted "
"connection for your NextBox will be disabled, this is not the case for the "
"Reverse Proxy as a problem with the proxy would then lock you out of your "
"NextBox."
msgstr ""
"此外，一旦你设置了TLS和基于DNS的方法，你的NextBox的未加密连接将被禁用，反向代"
"理则不是这样，因为代理的问题将锁定你的NextBox。"

#: ../nextbox/remote/method-comparison.rst:48
msgid "Nitrokey's Reverse Proxy"
msgstr "Nitrokey的反向代理"

#: ../nextbox/remote/method-comparison.rst:50
msgid "This refers to the :doc:`proxy` method."
msgstr "这指的是:doc:`proxy`方法。"

#: ../nextbox/remote/method-comparison.rst:53
msgid ""
"Provides transport encryption between your clients and your NextBox.  But "
"with the drawback that it is not End-To-End encrypted, means the traffic "
"will be decrypted at the Nitrokey Proxy Server and passed onward with "
"another encryption. Thus a compromised proxy server might allow access to "
"your traffic to the potential attacker."
msgstr ""
"在你的客户和你的NextBox之间提供传输加密。  但缺点是它不是端对端加密的，这意味"
"着流量将在Nitrokey代理服务器上被解密，并以另一种加密方式传递下去。因此，一个"
"被破坏的代理服务器可能允许潜在的攻击者访问你的流量。"

#: ../nextbox/remote/method-comparison.rst:58
msgid ""
"The proxy server is a bottleneck and all traffic has to go through the proxy "
"server, even if you are in a local network together with the NextBox the "
"traffic has to go through the proxy server."
msgstr ""
"代理服务器是一个瓶颈，所有的流量都必须通过代理服务器，即使你和NextBox一起在本"
"地网络中，流量也必须通过代理服务器。"

#: ../nextbox/remote/method-comparison.rst:61
msgid ""
"Data path (local client): [NextBox] ⟷  [Router]⟷  [Proxy Server] ⟷   "
"[Router] ⟷   [Client]"
msgstr ""
"数据路径（本地客户端）。[NextBox] ⟷ [Router]⟷ [Proxy Server] ⟷ [Router] ⟷ "
"[Client]."

#: ../nextbox/remote/method-comparison.rst:62
msgid ""
"Data path (remote client): [NextBox] ⟷  [Router]⟷  [Proxy Server] ⟷   "
"[Client]"
msgstr ""
"数据路径（远程客户端）。[NextBox] ⟷ [Router]⟷ [Proxy Server] ⟷ [Client]（客"
"户）。"

#: ../nextbox/remote/method-comparison.rst:63
msgid "**Pro:** easy to setup, good transport security"
msgstr "**优点：**容易设置，运输安全性好"

#: ../nextbox/remote/method-comparison.rst:64
msgid ""
"**Contra:** not strictly end-to-end encrypted, potentially slow (all traffic "
"through the proxy)"
msgstr "**Contra:**不是严格的端对端加密，可能很慢（所有流量都通过代理）。"

#: ../nextbox/remote/method-comparison.rst:67
msgid ""
"Non end-to-end encrypted does still mean all your traffic is indeed "
"encrypted, but within the proxy server, in order to be forwarded the traffic "
"will be decrypted once and encrypted again before being passed to the client "
"or NextBox"
msgstr ""
"非端到端加密仍然意味着您的所有流量确实是加密的，但在代理服务器内，为了转发，"
"流量将被解密一次，并在传递给客户端或NextBox之前再次加密。"

#: ../nextbox/remote/port-forwarding.rst:2
msgid "Port Forwarding & Firewall Configuration"
msgstr "端口转发& 防火墙配置"

#: ../nextbox/remote/port-forwarding.rst:7
msgid ""
"You have your dynamic DNS correctly set up, but your NextBox is not "
"reachable using the domain."
msgstr "你已经正确设置了动态DNS，但你的NextBox无法使用域名到达。"

#: ../nextbox/remote/port-forwarding.rst:9
msgid ""
"Before looking into this topic, make sure your domain correctly resolves to "
"your IP."
msgstr "在研究这个问题之前，请确保你的域名正确地解析到你的IP。"

#: ../nextbox/remote/port-forwarding.rst:15
msgid ""
"For both IPv4 and IPv6 you need to properly configure your internet router "
"to allow access to your NextBox. While most internet routers will refer to "
"this configuration as *port forwarding*, in fact IPv4 based (dynamic) DNS "
"will resolve to your router's IP. But IPv6 in contrast will resolve to a "
"(globally) unique IP, which refers to your NextBox."
msgstr ""
"对于IPv4和IPv6，你需要正确配置你的互联网路由器，允许访问你的NextBox。虽然大多"
"数互联网路由器将这种配置称为*端口转发*，但实际上基于IPv4的（动态）DNS将解析到"
"你的路由器的IP。但相反，IPv6将解析到一个（全球）唯一的IP，也就是你的NextBox。"

#: ../nextbox/remote/port-forwarding.rst:20
msgid ""
"Therefore in technical terms IPv4 needs port forwarding to be enabled and "
"for IPv6 you need to open the firewall to allow access to your NextBox. But "
"in reality most routers do not differentiate between those and just name it "
"*port sharing* for either IPv4 or IPv6."
msgstr ""
"因此，从技术上讲，IPv4需要启用端口转发，而对于IPv6，你需要打开防火墙，允许访"
"问你的NextBox。但实际上，大多数路由器并不区分这些，只是将其命名为IPv4或IPv6的"
"*端口共享*。"

#: ../nextbox/remote/port-forwarding.rst:28
msgid ""
"**The port-forwarding and/or firewall rules have to be configured to allow "
"traffic on ports 80 (HTTP-Server) and 443 (HTTPS-Server).**"
msgstr ""
"**必须配置端口转发和/或防火墙规则，以允许端口80（HTTP-服务器）和443（HTTPS-服"
"务器）的流量**。"

#: ../nextbox/remote/port-forwarding.rst:31
msgid ""
"On a recent *Fritz!Box* you will find this configuration inside: \"Internet -"
"> Permit Access -> Port Sharing\""
msgstr ""
"在最近的*Fritz！Box*上，你会发现里面有这样的配置：\"Internet -> Permit "
"Access -> Port Sharing\"。"

#: ../nextbox/remote/proxy.rst:2
msgid "Backwards Proxy Remote Access"
msgstr "反向代理远程访问"

#: ../nextbox/remote/proxy.rst:4
msgid ""
"**This is the fastest and easiest way to make your NextBox available for "
"remote access.**"
msgstr "**这是使您的NextBox可用于远程访问的最快和最简单的方法**。"

#: ../nextbox/remote/proxy.rst:7
msgid ""
"The only information to provide is the (sub)domain your NextBox should be "
"available at.  There is also no need for a port forwarding configuration or "
"any other setting to be done at your internet router. Although this method "
"is recommended, please be aware that this method also comes with some "
"drawbacks:"
msgstr ""
"唯一需要提供的信息是你的NextBox的（子）域名。  也不需要在你的互联网路由器上进"
"行端口转发配置或任何其他设置。虽然这种方法被推荐，但请注意，这种方法也有一些"
"缺点。"

#: ../nextbox/remote/proxy.rst:12
msgid ""
"All traffic is passed through our (backwards) proxy server, thus is not end-"
"to-end encrypted.  *In particular, if this server is compromised, your "
"traffic might be readable.*"
msgstr ""
"所有的流量都是通过我们的（反向）代理服务器，因此不是端到端加密的。  *特别是，"
"如果这个服务器被破坏，你的流量可能会被读取。"

#: ../nextbox/remote/proxy.rst:16
#, python-format
msgid ""
"The same reason also introduces a bandwith bottleneck, if you are connecting "
"to your NextBox from within your local area network (LAN). As all traffic "
"has to be send to our proxy server and from there to your NextBox, the "
"available bandwidth is limited to roughly 50% of your upload or download "
"bandwidth (whichever is smaller)."
msgstr ""
"如果您从您的局域网（LAN）连接到您的NextBox，同样的原因也引入了一个带宽瓶颈。"
"由于所有的流量必须发送到我们的代理服务器，再从那里发送到您的NextBox，可用的带"
"宽被限制在大约50% of您的上传或下载带宽（以小者为准）。"

#: ../nextbox/remote/proxy.rst:23
msgid ""
"In order to not be affected by these drawbacks you can set up a :doc:"
"`dynamic DNS provider <dynamic-dns>` or a :doc:`static domain <static>`."
msgstr ""
"为了不受这些缺点的影响，你可以设置一个 :doc:`动态DNS提供商 <dynamic-dns>`或者"
"一个 :doc:`静态域名 <static>`。"

#: ../nextbox/remote/proxy.rst:27
msgid "IPv6 to IPv4 Translation"
msgstr "IPv6到IPv4的转换"

#: ../nextbox/remote/proxy.rst:29
msgid ""
"If your NextBox is only available through IPv6 (e.g., DS-Lite internet "
"connection) the backwards proxy might be the only way to access your NextBox "
"using a non-IPv6 enabled device. As of today e.g., various mobile network "
"providers do not support IPv6 yet."
msgstr ""
"如果你的NextBox只能通过IPv6（如DS-Lite互联网连接），反向代理可能是使用非IPv6"
"设备访问NextBox的唯一方法。到今天为止，例如各种移动网络供应商还不支持IPv6。"

#: ../nextbox/remote/static.rst:2
msgid "Static DNS Configuration"
msgstr "静态DNS配置"

#: ../nextbox/remote/static.rst:4
msgid ""
"This configuration shall be used, if you configured DNS and thus a domain "
"for your NextBox in e.g., your internet router."
msgstr "如果您在互联网路由器上为NextBox配置了DNS和域名，就应使用此配置。"

#: ../nextbox/remote/static.rst:11
msgid ""
"In order to use the configured domain with your NextBox and its Nextcloud "
"instance you must provide the full domain here to trust this domain inside "
"your Nextcloud instance."
msgstr ""
"为了在您的NextBox及其Nextcloud实例中使用配置的域，您必须在这里提供完整的域，"
"以便在您的Nextcloud实例中信任这个域。"

#: ../nextbox/remote/static.rst:15
msgid ""
"For instance inside a \"Fritz!Box\" this can be done by navigating to: "
"\"Internet -> Permit Access -> DynDNS\" and configuring a dynamic DNS "
"provider of your choice."
msgstr ""
"例如，在\"Fritz!Box\"内，可以通过导航到：\"Internet -> Permit Access -> "
"DynDNS\"并配置一个你选择的动态DNS提供商来完成。"

#: ../nextbox/remote/walkthrough.rst:2
msgid "Remote Access Walkthrough"
msgstr "远程访问演练"

#: ../nextbox/remote/walkthrough.rst:6
msgid ""
"This documentation aims to give you a thorough introduction into the Remote "
"Access topic, including a decision helper **why to choose a particular "
"method**. If you are familiar with this topic you might want to jump "
"directly to :doc:`method-comparison`."
msgstr ""
"本文档旨在向你全面介绍远程访问主题，包括一个决策助手**为什么要选择一个特定的"
"方法**。如果你熟悉这个主题，你可能想直接跳到 :doc:`method-comparison`。"

#: ../nextbox/remote/walkthrough.rst:12
msgid "What? Why?"
msgstr "什么？为什么？"

#: ../nextbox/remote/walkthrough.rst:14
msgid ""
"You want to access your NextBox from everywhere, this means you want to "
"access your NextBox from the internet through your internet router."
msgstr ""
"您想从任何地方访问您的NextBox，这意味着您想通过互联网路由器从互联网访问您的"
"NextBox。"

#: ../nextbox/remote/walkthrough.rst:17
msgid ""
"On top of that you want to make sure that your data (traffic) is not "
"readable by anyone else despite you. Nowadays this is accomplished by using "
"`HTTPS`_, which is driven by `TLS`_."
msgstr ""
"除此之外，你要确保你的数据（流量）不能被其他人读取，尽管你是这样。现在，这可"
"以通过使用`HTTPS`_来实现，它由`TLS`_驱动。"

#: ../nextbox/remote/walkthrough.rst:24
msgid ""
"Right next to the URL (*nitrokey.com*) you see this small padlock, which "
"translates to: This website provides an encrypted connection and all your "
"traffic is not readable by anyone between your browser (client) and the "
"Nitrokey server."
msgstr ""
"就在URL（*nitrokey.com*）的旁边，你会看到这个小挂锁，它的意思是：。这个网站提"
"供了一个加密的连接，在你的浏览器（客户端）和Nitrokey服务器之间，你的所有流量"
"都不会被任何人读取。"

#: ../nextbox/remote/walkthrough.rst:28
msgid ""
"Once your NextBox is set up properly and you see the dashboard the first "
"time your URL bar in your browser might look like this:"
msgstr ""
"一旦你的NextBox设置正确，你第一次看到仪表板，你的浏览器中的URL栏可能看起来像"
"这样。"

#: ../nextbox/remote/walkthrough.rst:34
msgid ""
"In this case the local IP has been used (``192.168.10.50``), this is "
"specific to your local network and equal to ``nextbox.local``. The *not "
"secure* and the warning sign transports the information that your connection "
"is **not encrypted**, thus using *http* instead of *https*. For more you can "
"read: `HTTP vs. HTTPS`_."
msgstr ""
"在这种情况下，使用了本地IP（``192.168.10.50```），这是特定于你的本地网络，等"
"于``nextbox.local``。不安全*和警告标志传递的信息是，你的连接是**不加密的，因"
"此使用*http*而不是*https*。更多内容你可以阅读。`HTTP vs. HTTPS`_。"

#: ../nextbox/remote/walkthrough.rst:39
msgid ""
"Obviously, access to the NextBox should be secure, thus encrypted using "
"*https*. This guide covers the different approaches to reach this goal, "
"depending on your specific needs."
msgstr ""
"显然，对NextBox的访问应该是安全的，因此使用*https*进行加密。本指南涵盖了达到"
"这一目标的不同方法，这取决于你的具体需求。"

#: ../nextbox/remote/walkthrough.rst:44
msgid "Use The Nitrokey Backwards Proxy"
msgstr "使用Nitrokey的反向代理"

#: ../nextbox/remote/walkthrough.rst:46
msgid ""
"This method is by far the easiest to set up and use to get an encrypted to "
"your NextBox from everywhere, the only think to do is to go to *Remote "
"Access* and *Backwards Proxy* inside the NextBox-App, insert a sub-domain "
"you want to use and click *Enable Quickstart Remote Access*. From now on you "
"can access your NextBox using a URL like this:"
msgstr ""
"这种方法是目前最容易设置和使用的，可以从任何地方加密到你的NextBox，唯一要做的"
"是在NextBox-App中的*远程访问*和*反向代理*，插入一个你想使用的子域，然后点击*"
"启用快速启动远程访问*。从现在开始，你可以使用这样的URL访问你的NextBox。"

#: ../nextbox/remote/walkthrough.rst:55
msgid ""
"The padlock is there---your data (if you are using your ``[subdomain]."
"nextbox.link`` URL) is now encrypted!"
msgstr ""
"挂锁在那里--你的数据（如果你使用你的``[subdomain].nextbox.link``网址）现在已"
"经被加密了"

#: ../nextbox/remote/walkthrough.rst:58
msgid ""
"So far so good, but wait, this works, but has two major drawbacks: "
"Performance and a chained end-to-end encryption."
msgstr ""
"到目前为止还不错，但等等，这很有效，但有两个主要缺点。性能和连锁的端到端加"
"密。"

#: ../nextbox/remote/walkthrough.rst:62
msgid "Performance"
msgstr "业绩"

#: ../nextbox/remote/walkthrough.rst:64
msgid ""
"The backwards proxy works like this: Your NextBox connects to the Nitrokey "
"Proxy server and opens up a (backwards) channel. So even though your NextBox "
"is maybe standing right next to your computer, the traffic goes all the way "
"from your computer, into the internet, to the Nitrokey server and all the "
"way back to your NextBox."
msgstr ""
"逆向代理的工作方式是这样的。你的NextBox连接到Nitrokey代理服务器并打开一个（反"
"向）通道。因此，尽管你的NextBox可能就站在你的电脑旁边，但流量从你的电脑一直到"
"互联网，再到Nitrokey服务器，然后一直回到你的NextBox。"

#: ../nextbox/remote/walkthrough.rst:70
msgid ""
"Simplified, one could say all the traffic has to travel a long way towards "
"the NextBox instead of talking directly to the NextBox. This essentially is "
"a drawback of all proxies. The effect for you as a user is that data "
"transfers will be slower, than a direct connection."
msgstr ""
"简而言之，可以说所有的流量都要长途跋涉到NextBox，而不是直接与NextBox对话。这"
"基本上是所有代理的一个缺点。作为用户，你的影响是，数据传输将比直接连接慢。"

#: ../nextbox/remote/walkthrough.rst:76
msgid "Chained End-to-End Encryption"
msgstr "链式端到端加密"

#: ../nextbox/remote/walkthrough.rst:78
msgid ""
"Another drawback is that your traffic is not fully end-to-end encrypted. To "
"be clear: Your data is still encrypted, but only on the path from your "
"client (browser) to the Nitrokey server, there the data will be decrypted "
"and encrypted again to be sent to the NextBox."
msgstr ""
"另一个缺点是，你的流量不是完全端对端加密的。明确地说：你的数据仍然是加密的，"
"但只是在从你的客户端（浏览器）到Nitrokey服务器的路径上，数据将在那里被解密并"
"再次加密，然后被发送到NextBox。"

#: ../nextbox/remote/walkthrough.rst:83
msgid ""
"Essentially this means you have to trust Nitrokey, because technically "
"whoever is controlling this server might read the traffic that goes through "
"it using this proxy.  Nitrokey would never do such a thing, but there is a "
"certain remaining risk that someone could compromise this server and read "
"your traffic."
msgstr ""
"从本质上讲，这意味着你必须信任Nitrokey，因为从技术上讲，控制这个服务器的人可"
"能会读取通过这个代理服务器的流量。  Nitrokey不会做这样的事情，但仍有一定的风"
"险，即有人可能破坏这个服务器并读取你的流量。"

#: ../nextbox/remote/walkthrough.rst:88
msgid ""
"Obviously this can be done in a better way, but still this might be enough "
"depending on your personal usage scenario."
msgstr ""
"显然，这可以用更好的方式完成，但根据你的个人使用情况，这可能已经足够了。"

#: ../nextbox/remote/walkthrough.rst:92
msgid "Acquire Your Own Certificate"
msgstr "获得你自己的证书"

#: ../nextbox/remote/walkthrough.rst:94
msgid ""
"This is clearly the best and most secure method to remote access your "
"NextBox as it will give your the best performance and true end-to-end "
"encryption, but it comes with some additional configuration needs. We start "
"first with a very quick introduction what encryption with an own certificate "
"means and what is needed."
msgstr ""
"这显然是远程访问NextBox的最佳和最安全的方法，因为它将为您提供最好的性能和真正"
"的端到端加密，但它也有一些额外的配置需求。我们首先快速介绍一下使用自有证书加"
"密的含义和需要。"

#: ../nextbox/remote/walkthrough.rst:101
msgid "The Certificate Authority"
msgstr "证书颁发机构"

#: ../nextbox/remote/walkthrough.rst:103
msgid ""
"A `CA`_, as the name suggests, is *someone* who is able to provide you with "
"a digital certificate, which will allow you to use `TLS`_, thus encrypt the "
"your traffic, enabling you to use *https*."
msgstr ""
"`CA`_，顾名思义，是*个能够为你提供数字证书的人，这将使你能够使用`TLS`_，从而"
"加密你的流量，使你能够使用*https*。"

#: ../nextbox/remote/walkthrough.rst:107
msgid ""
"By definition, a `CA`_ is only allowed to issue a certificate, if they can "
"verify that your are the **owner of a public internet (sub)domain**. This "
"ownership is a very important property as this, despite the encryption, "
"additionally allows the client (browser) to verify that the traffic that is "
"sent by a certain website is really originating from this (sub)domain and no "
"man-in-the-middle has injected some data, which could compromise your client."
msgstr ""
"根据定义，`CA`_只被允许签发证书，如果他们能够验证你是一个公共互联网（子）域的"
"**所有者。这个所有权是一个非常重要的属性，因为尽管有加密，还可以让客户（浏览"
"器）验证某个网站发送的流量确实来自这个（子）域，没有中间人注入一些数据，从而"
"损害你的客户。"

#: ../nextbox/remote/walkthrough.rst:115
msgid ""
"This being said, obviously it is not possible to acquire an certificate for "
"*nextbox.local* or even a local IP, as these are neither public nor unique."
msgstr ""
"既然如此，显然不可能获得*nextbox.local*或甚至是本地IP的证书，因为这些都不是公"
"开的，也不是唯一的。"

#: ../nextbox/remote/walkthrough.rst:119
msgid "Acquire a public (sub)domain for your NextBox"
msgstr "为你的NextBox获得一个公共（子）域名"

#: ../nextbox/remote/walkthrough.rst:121
msgid ""
"The NextBox comes with a feature (:doc:`dynamic-dns`), which allows you to "
"easily register a public sub-domain for your NextBox using a so-called "
"*dynamic DNS provider*, here namely `deSEC`_. This particular service is "
"totally free and a non-profit organization."
msgstr ""
"NextBox有一个功能（:doc:`dynamic-dns`），它允许你使用所谓的*动态DNS提供商*，"
"即`deSEC`_为你的NextBox轻松注册一个公共子域。这个特殊的服务是完全免费的，是一"
"个非营利组织。"

#: ../nextbox/remote/walkthrough.rst:126
msgid ""
"This is a very important step prior to acquiring a certificate, as this sub-"
"domain registered through `deSEC`_ will be public and unique, whose as we "
"learned are needed to acquire a certificate."
msgstr ""
"这是获取证书之前非常重要的一步，因为通过`deSEC`_注册的这个子域将是公开的和唯"
"一的，正如我们所了解的那样，获取证书需要这些子域。"

#: ../nextbox/remote/walkthrough.rst:131
msgid "Step-by-Step DNS & TLS"
msgstr "一步一步的DNS & TLS"

#: ../nextbox/remote/walkthrough.rst:133
msgid ""
"This may sound complex, but the NextBox comes with all you need to get "
"through this process:"
msgstr "这听起来可能很复杂，但NextBox配备了你完成这一过程所需的一切。"

#: ../nextbox/remote/walkthrough.rst:136 ../nextbox/remote/walkthrough.rst:160
msgid "Navigate to the Nextcloud NextBox-App"
msgstr "导航至Nextcloud NextBox-App"

#: ../nextbox/remote/walkthrough.rst:137
msgid "Click on \"Guided Dynamic DNS\""
msgstr "点击\"引导的动态DNS\"。"

#: ../nextbox/remote/walkthrough.rst:138
msgid ""
"Insert a valid e-mail address you have access to into the first input field"
msgstr "在第一个输入字段中插入一个你可以访问的有效电子邮件地址"

#: ../nextbox/remote/walkthrough.rst:139
msgid ""
"Insert the full sub-domain your NextBox shall be available through. As "
"`deSEC`_ is used here, your sub-domain always has to end with *dedyn.io*, so "
"something like: ``mynextbox.dedyn.io``"
msgstr ""
"插入你的NextBox可以使用的完整子域。由于这里使用了`deSEC`_，你的子域名必须以"
"*dedyn.io*结尾，所以类似的东西。``mynextbox.dedyn.io``。"

#: ../nextbox/remote/walkthrough.rst:142
msgid ""
"Click \"Register at deSEC\" and the NextBox will try to register your domain "
"and e-mail at `deSEC`_. This may fail, if the sub-domain you chose is "
"already taken, please choose another one in this case."
msgstr ""
"点击\"在deSEC注册\"，NextBox将尝试在`deSEC`_注册你的域名和电子邮件。这可能会"
"失败，如果你选择的子域名已经被占用，在这种情况下请选择另一个。"

#: ../nextbox/remote/walkthrough.rst:145
msgid ""
"You will receive an e-mail in which you should verify that this is your e-"
"mail by clicking on the provided link"
msgstr ""
"你将收到一封电子邮件，你应该通过点击所提供的链接来确认这是你的电子邮件。"

#: ../nextbox/remote/walkthrough.rst:147
msgid ""
"In step two, you will have to input a *token*, which you received after you "
"clicked the verification link and completed the captcha."
msgstr ""
"在第二步，你将不得不输入一个*token*，这是你点击验证链接并完成验证码后收到的。"

#: ../nextbox/remote/walkthrough.rst:150
msgid ""
"Now you are the owner of your very own sub-domain. You can try and visit "
"this subdomain now, but you will see that it will only (best case) end up on "
"your internet router. This is because your router is your door to the "
"internet and it has to be made aware that you want specific traffic to be "
"forwarded to your NextBox. Please set up :doc:`port-forwarding` on your "
"internet router now, once this is done, visiting your registered sub-domain "
"in the browser will show you your NextBox' Nextcloud instance."
msgstr ""
"现在你是你自己的子域的所有者。你现在可以尝试访问这个子域，但你会发现，它只会"
"（最好的情况）在你的互联网路由器上结束。这是因为你的路由器是你通往互联网的大"
"门，它必须知道你想把特定的流量转发到你的NextBox。请在您的互联网路由器上设置 :"
"doc:`port-forwarding`，一旦完成，在浏览器中访问您的注册子域，将显示您的"
"NextBox' Nextcloud实例。"

#: ../nextbox/remote/walkthrough.rst:158
msgid "Great from here there is just one step remaining:"
msgstr "很好，从这里开始，只剩下一个步骤。"

#: ../nextbox/remote/walkthrough.rst:161
msgid "Click on \"HTTPS / TLS\""
msgstr "点击\"HTTPS / TLS\"。"

#: ../nextbox/remote/walkthrough.rst:162
msgid "Click the button \"Enable TLS\""
msgstr "点击按钮\"启用TLS\"。"

#: ../nextbox/remote/walkthrough.rst:163
msgid "Please wait some moments to acquire your certificate"
msgstr "请稍等片刻以获得您的证书"

#: ../nextbox/remote/walkthrough.rst:165
msgid ""
"Shortly after you will be automatically redirected to your now encrypted "
"NextBox sub-domain, which might look similar to this:"
msgstr ""
"不久之后，你会自动转到你现在加密的NextBox子域，它可能看起来类似于这样。"

#: ../nextbox/remote/walkthrough.rst:171
msgid ""
"There we are, your very own sub-domain, certificate and fully end-to-end "
"encrypted Nextcloud."
msgstr "这就是我们，您自己的子域、证书和完全端到端加密的Nextcloud。"

#: ../nextbox/remote/walkthrough.rst:174
msgid ""
"If you encounter problems, please read the other articles inside the :doc:"
"`Remote Access Section<index>`."
msgstr "如果你遇到问题，请阅读 :doc:`远程访问部分<index>`里面的其他文章。"

#: ../nextbox/technical/factory-reset.rst:7
msgid ""
"Factory Resetting your NextBox will inevitably **delete all your files** on "
"the NextBox and any configuration settings."
msgstr ""
"出厂重置您的NextBox将不可避免地**删除您在NextBox上的所有文件**和任何配置设"
"置。"

#: ../nextbox/technical/factory-reset.rst:10
msgid ""
"**To factory reset your NextBox simply press the hardware button for 5 "
"seconds.**"
msgstr "**要重置您的NextBox，只需按下硬件按钮5秒钟即可**。"

#: ../nextbox/technical/factory-reset.rst:12
msgid ""
"The NextBox LED will change to *blue* once you press the button, after the 5 "
"seconds have passed the color will change to blinking red (see :doc:`LED "
"documentation <led-colors>`). Once the LED has finally reached *green* again "
"your NextBox is ready for the initial setup as described in :doc:`Getting "
"Started <../gettingstarted>`"
msgstr ""
"一旦你按下按钮，NextBox的LED会变成*蓝色，5秒过后，颜色会变成闪烁的红色（见:"
"doc:`LED文档<led-colors>`）。一旦LED最终再次达到*绿色，你的NextBox就可以进行"
"初始设置了，如 :doc:`Getting Started <.../gettingstarted>`所述。"

#: ../nextbox/technical/factory-reset.rst:22
msgid ""
"The hardware button is a pinhole-style button similar to other embedded "
"devices. In order to press it, it is recommended to use a thin (~1mm) needle-"
"like pin. E.g., the pin to remove a sim-card from a smartphone is working "
"great. **Further take care to not press the button too hard, be careful, "
"there should be a recognizable haptic feedback (button click) with minimal "
"applied force.**"
msgstr ""
"硬件按钮是一个类似于其他嵌入式设备的针孔式按钮。为了按下它，建议使用一根细的"
"（约1毫米）针状的针。例如，从智能手机上取下SIM卡的针，效果很好。**进一步注意"
"不要太用力按压按钮，要小心，在最小的作用力下应该有一个可识别的触觉反馈（按钮"
"点击）**。"

#: ../nextbox/technical/index.rst:2
msgid "Technical Documentation"
msgstr "技术文件"

#: ../nextbox/technical/led-colors.rst:2
msgid "LED Colors and Patterns"
msgstr "LED颜色和图案"

#: ../nextbox/technical/led-colors.rst:5
msgid "Color"
msgstr "颜色"

#: ../nextbox/technical/led-colors.rst:5
msgid "Pattern"
msgstr "样式"

#: ../nextbox/technical/led-colors.rst:5
msgid "Description"
msgstr "描述"

#: ../nextbox/technical/led-colors.rst:7
msgid "Dimmed-out-Blue"
msgstr "调光-蓝色"

#: ../nextbox/technical/led-colors.rst:7 ../nextbox/technical/led-colors.rst:8
#: ../nextbox/technical/led-colors.rst:10
#: ../nextbox/technical/led-colors.rst:11
#: ../nextbox/technical/led-colors.rst:14
msgid "None"
msgstr "无"

#: ../nextbox/technical/led-colors.rst:7
msgid "NextBox is booting"
msgstr "NextBox正在启动"

#: ../nextbox/technical/led-colors.rst:8 ../nextbox/technical/led-colors.rst:9
msgid "Green"
msgstr "绿色"

#: ../nextbox/technical/led-colors.rst:8
msgid "NextBox Daemon active and in regular operating mode"
msgstr "NextBox守护神处于激活状态，并处于正常运行模式下"

#: ../nextbox/technical/led-colors.rst:9
msgid "Fast-Blink"
msgstr "快闪"

#: ../nextbox/technical/led-colors.rst:9
msgid "Nextcloud is starting up (docker starting)"
msgstr "Nextcloud正在启动（docker启动）。"

#: ../nextbox/technical/led-colors.rst:10
msgid "Blue"
msgstr "蓝色"

#: ../nextbox/technical/led-colors.rst:10
msgid "(Reset) button is currently being pressed"
msgstr "(复位)按钮目前正被按下"

#: ../nextbox/technical/led-colors.rst:11
#: ../nextbox/technical/led-colors.rst:12
msgid "Yellow"
msgstr "黄色"

#: ../nextbox/technical/led-colors.rst:11
msgid "Initializing NextBox Daemon"
msgstr "初始化NextBox守护进程"

#: ../nextbox/technical/led-colors.rst:12
#: ../nextbox/technical/led-colors.rst:13
msgid "Blink"
msgstr "眨眼"

#: ../nextbox/technical/led-colors.rst:12
msgid "NextBox Daemon update check/apply"
msgstr "NextBox Daemon更新检查/应用"

#: ../nextbox/technical/led-colors.rst:13
msgid "Red"
msgstr "红色"

#: ../nextbox/technical/led-colors.rst:13
msgid "Factory-Reset is ongoing"
msgstr "工厂重建正在进行中"

#: ../nextbox/technical/led-colors.rst:14
msgid "Purple"
msgstr "紫色"

#: ../nextbox/technical/led-colors.rst:14
msgid "Nextcloud Maintenance mode active"
msgstr "Nextcloud维护模式激活"

#: ../nextbox/technical/led-colors.rst:17
msgid "**Fast-Blink** means 0,5secs on and 0,5secs off"
msgstr "**快闪**意味着0.5秒开，0.5秒关。"

#: ../nextbox/technical/led-colors.rst:18
msgid "**Blink** means 2secs on and 2secs off"
msgstr "**眨眼**表示开2秒，关2秒"

#: ../nextbox/technical/led-colors.rst:20
msgid ""
"If the LED is *purple*, the Nextcloud instance is in maintenance mode, you "
"can force exit the maintenance mode by pushing the hardware button "
"**shortly, once**. The NextBox will then switch-off the maintenance mode."
msgstr ""
"如果LED灯是*紫色的，Nextcloud实例处于维护模式，您可以通过短按硬件按钮**一次强"
"制退出维护模式。然后，NextBox将关闭维护模式。"

#: ../nextbox/technical/led-colors.rst:25
msgid ""
"As of today if the maintenance mode is switched using the button press, the "
"\"mail\" app will in addition be disabled as the version 1.11.0 together "
"with Nextcloud version 21.0.0.x will never exit the maintenance mode."
msgstr ""
"从今天起，如果使用按钮切换维护模式，那么\"邮件\"应用程序也将被禁用，因为"
"1.11.0版本和Nextcloud 21.0.0.x版本将永远不会退出维护模式。"

#: ../nextbox/technical/replace-drive.rst:2
msgid "Replace Internal Hard-Drive"
msgstr "更换内部硬盘驱动器"

#: ../nextbox/technical/replace-drive.rst:7
msgid ""
"Please do this only, if you know what you are doing. By modifying the "
"NextBox you void your warranty for at least the hardware of the NextBox. "
"These steps are generally not covered by the support, you are modifying your "
"NextBox at your own risk!"
msgstr ""
"请只在你知道你在做什么的情况下这样做。修改NextBox，你至少会使你的NextBox的硬"
"件保修失效。这些步骤一般不包括在支持范围内，您修改NextBox的风险由您自己承担!"

#: ../nextbox/technical/replace-drive.rst:14
msgid "Linux(-like) operating system"
msgstr "Linux(-like)操作系统"

#: ../nextbox/technical/replace-drive.rst:15
msgid "2.5'' hard-drive with a max height of 15mm, most are 7mm"
msgstr "2.5''硬盘，最大高度为15毫米，大多数为7毫米"

#: ../nextbox/technical/replace-drive.rst:16
msgid "A user which can acquire root-rights using ``sudo``"
msgstr "一个可以使用``获得根权限的用户sudo``。"

#: ../nextbox/technical/replace-drive.rst:17
msgid ""
"The following commands must be available: ``sudo``, ``parted``, ``mkfs."
"ext4``, ``bash``"
msgstr "必须有以下命令。``sudo`, ``parted`, ``mkfs.ext4`, ``bash```。"

#: ../nextbox/technical/replace-drive.rst:18
msgid ""
"At least a basic understanding about mounting / unmounting and shell-scripts "
"(execution)"
msgstr "至少对安装/卸载和shell-scripts（执行）有基本了解"

#: ../nextbox/technical/replace-drive.rst:19
msgid "Phillips Screwdriver"
msgstr "十字螺丝刀"

#: ../nextbox/technical/replace-drive.rst:20
msgid "Set up the ssh-access on your NextBox"
msgstr "在你的NextBox上设置ssh-access。"

#: ../nextbox/technical/replace-drive.rst:23
msgid ""
"The script which is used will acquire root rights to wipe the hard-drive you "
"pass to the script. **Be extremely careful to pass the correct device to the "
"script, if you pass your system partition, this script will destroy your "
"runnning OS!** Any data on the passed hard-drive will inevitably be deleted!"
msgstr ""
"使用的脚本将获得root权限来擦除你传递给脚本的硬盘驱动器。**要非常小心地把正确"
"的设备传给脚本，如果你传给你的系统分区，这个脚本就会破坏你正在运行的操作系"
"统！**传来的硬盘上的任何数据将不可避免地被删除"

#: ../nextbox/technical/replace-drive.rst:30
msgid ""
"Read the following steps completely and thoroughly **before executing "
"them**, if you do not understand what a certain step means this might be an "
"indication that you should not do this by yourself."
msgstr ""
"在执行下列步骤之前，**要完全彻底地阅读这些步骤，如果你不明白某个步骤的含义，"
"这可能表明你不应该自己做这个。"

#: ../nextbox/technical/replace-drive.rst:35
msgid "Prepare New Hard-Disk"
msgstr "准备好新的硬盘"

#: ../nextbox/technical/replace-drive.rst:37
msgid ""
"Get your ``nextbox.conf`` file from your original hard-disk using ssh, it is "
"located on your NextBox inside the ``/srv/nextbox`` directory"
msgstr ""
"使用ssh从你的原始硬盘获取你的``nextbox.conf``文件，它位于你NextBox的``/srv/"
"nextbox``目录中。"

#: ../nextbox/technical/replace-drive.rst:39
msgid "Save your ``nextbox.conf`` on your computer"
msgstr "将你的``nextbox.conf``保存在你的电脑上。"

#: ../nextbox/technical/replace-drive.rst:40
msgid ""
"Get the following script: https://raw.githubusercontent.com/Nitrokey/nextbox/"
"master/simple_prepare_harddrive.sh"
msgstr ""
"获得以下脚本：https://raw.githubusercontent.com/Nitrokey/nextbox/master/"
"simple_prepare_harddrive.sh"

#: ../nextbox/technical/replace-drive.rst:41
msgid "Make the script executable: ``chmod +x simple_prepare_harddrive.sh``"
msgstr "使该脚本可执行。``chmod +x simple_prepare_harddrive.sh``。"

#: ../nextbox/technical/replace-drive.rst:42
msgid "Connect your new hard-disk to your computer"
msgstr "将你的新硬盘连接到你的电脑上"

#: ../nextbox/technical/replace-drive.rst:43
msgid ""
"Determine your hard-disk's device name (e.g., ``/dev/sdb``) and make sure "
"none of its partitions are mounted"
msgstr ""
"确定你的硬盘设备名称（例如，``/dev/sdb``），并确保它的所有分区都没有被安装。"

#: ../nextbox/technical/replace-drive.rst:47
msgid ""
"**Again: think at least twice about the following step. Make sure you are "
"referring to the correct hard-drive device (and NOT a partition, means** ``/"
"dev/sdb1`` **is wrong).** The script will decline to do the operation on ``/"
"dev/sda`` as there are good chances this might be your system hard-disk, if "
"you really need this you can comment out lines 23-26 inside the script."
msgstr ""
"**再次：对下面的步骤至少要考虑两次。确保你指的是正确的硬盘设备（而不是一个分"
"区，意味着** ``/dev/sdb1` **是错误的）。** 脚本将拒绝对``/dev/sda``进行操作，"
"因为这很有可能是你的系统硬盘，如果你真的需要，你可以注释掉脚本中第23-26行。"

#: ../nextbox/technical/replace-drive.rst:52
msgid ""
"Run the script using the device name you have determined. Once prompted for "
"your sudo-password please provide it to allow r/w access to the hard-drive:"
msgstr ""
"使用你确定的设备名称运行该脚本。一旦提示你输入sudo密码，请提供该密码，以允许"
"对硬盘的R/W访问。"

#: ../nextbox/technical/replace-drive.rst:62
msgid "Watch the script's output for any errors, there should be none"
msgstr "注意脚本的输出是否有错误，应该没有。"

#: ../nextbox/technical/replace-drive.rst:63
msgid ""
"At the end of the script you will be asked to mount the created partition "
"and copy over the ``nextbox.conf`` (to ``/nextbox``) you copied in step 1. "
"and 2., unmount the partition and you have successfully prepared your new "
"hard-drive."
msgstr ""
"在脚本的最后，你将被要求挂载创建的分区，并复制你在步骤1和2中复制的``nextbox."
"conf``（到``/nextbox``），卸载分区，你已经成功准备好你的新硬盘。"

#: ../nextbox/technical/replace-drive.rst:70
msgid "Replacement Guide"
msgstr "替换指南"

#: ../nextbox/technical/replace-drive.rst:72
msgid ""
"Inside the NextBox Nextcloud App go to \"System Settings\" and switch it off "
"your NextBox using the \"Poweroff\" button"
msgstr ""
"在NextBox Nextcloud应用程序中，进入 \"系统设置\"，使用 \"关机 \"按钮关闭"
"NextBox。"

#: ../nextbox/technical/replace-drive.rst:74
msgid ""
"Once the Status LED is shortly off (not entirely, thus very dark) and the "
"Ethernet port LEDs are off you can unplug all cables from your NextBox"
msgstr ""
"一旦状态LED灯很快熄灭（不是完全熄灭，因此非常暗），以太网端口的LED灯也熄灭"
"了，您就可以从NextBox上拔掉所有电缆了"

#: ../nextbox/technical/replace-drive.rst:76
msgid "Unscrew all 8 Phillips screws"
msgstr "拧下所有8个十字螺丝"

#: ../nextbox/technical/replace-drive.rst:77
msgid "Carefully remove the top-cover (as vertical as possible) first"
msgstr "首先小心翼翼地取下顶盖（尽可能垂直）。"

#: ../nextbox/technical/replace-drive.rst:78
msgid ""
"Again carefully, vertically remove the bottom cover, now you see the so-"
"called bridge"
msgstr "再次小心翼翼地垂直取下底盖，现在你可以看到所谓的桥架了。"

#: ../nextbox/technical/replace-drive.rst:79
msgid ""
"Unfold the USB-to-SATA cable and put the NextBox bridge upside down onto a "
"electronics friendly surface like a desk as shown in the following image"
msgstr ""
"展开USB-to-SATA数据线，将NextBox桥接器倒置在电子元件友好的表面上，比如桌子，"
"如下图所示"

#: ../nextbox/technical/replace-drive.rst:86
msgid ""
"Unscrew the Phillips screws holding the hard-disk in position (the amount of "
"screws may differ, depending on your hard-disk type) shown in the following "
"image:"
msgstr ""
"拧开固定硬盘位置的十字螺丝（螺丝的数量可能不同，取决于你的硬盘类型），如下图"
"所示。"

#: ../nextbox/technical/replace-drive.rst:93
msgid ""
"Once the screws are removed, push the hard-disk carefully towards the "
"direction shown in the image above. Do not push it towards the other "
"direction, you might damage the USB cable."
msgstr ""
"一旦螺丝被卸下，小心地把硬盘推向上图所示的方向。不要把它推向其他方向，你可能"
"会损坏USB电缆。"

#: ../nextbox/technical/replace-drive.rst:95
msgid "Remove the USB-to-SATA cable from the hard-drive"
msgstr "从硬盘上拆下USB-to-SATA数据线"

#: ../nextbox/technical/replace-drive.rst:98
msgid ""
"Avoid disconnecting the male-female USB connector to not change the position "
"and bending of the cable. If you have to: be careful to keep the force as "
"small as possible onto the 90° part of the USB extension cable."
msgstr ""
"避免断开男-女USB连接器的连接，以免改变电缆的位置和弯曲。如果你不得不这样做："
"要注意保持对USB延长线的90°部分的力尽可能小。"

#: ../nextbox/technical/replace-drive.rst:102
msgid "Connect your previously prepared new hard-drive"
msgstr "连接你之前准备好的新硬盘"

#: ../nextbox/technical/replace-drive.rst:103
msgid ""
"Carefully slide your new hard-drive into the bridge and fix it into the "
"right position using the previously removed screws"
msgstr "小心翼翼地将新硬盘滑入桥架，并使用先前卸下的螺钉将其固定在正确的位置。"

#: ../nextbox/technical/replace-drive.rst:105
msgid ""
"Fold the USB-to-SATA cable (in circles) into the open space behind the hard-"
"disk."
msgstr "将USB-to-SATA电缆（呈圆形）折叠到硬盘后面的空隙中。"

#: ../nextbox/technical/replace-drive.rst:106
msgid ""
"Finally assemble your NextBox again in reverse order using steps 5. to 3."
msgstr "最后用步骤5至3，以相反的顺序再次组装您的NextBox。"

#: ../nextbox/technical/replace-drive.rst:108
msgid ""
"On first boot after the assembly, give the NextBox enough time to boot and "
"get all necessary packages from the internet. **Make sure you have ethernet "
"connected**. You should expect a changing status LED (yellow shall be first) "
"quite fast (less than 2 minutes). If the status LED does not change at all, "
"it is likely that there is something wrong with your hard-drive wiring or "
"contents."
msgstr ""
"在组装后第一次启动时，给NextBox足够的时间来启动并从互联网上获得所有必要的软件"
"包。**确保你有以太网连接**。你应该期待LED状态灯的变化（黄色应该是第一个），速"
"度很快（不到2分钟）。如果LED状态灯完全没有变化，很可能是你的硬盘线路或内容有"
"问题。"

#: ../nitrokey3/faq.rst:2
msgid "Nitrokey 3 FAQ"
msgstr "硝基钥匙3常见问题"

#: ../nitrokey3/faq.rst:5
msgid "Windows, Linux, and Mac OS X. Also some support for Android and iOS."
msgstr "Windows、Linux和Mac OS X。还有一些对安卓和iOS的支持。"

#: ../nitrokey3/faq.rst:13
msgid "**Q:** How can I check if my Nitrokey 3 is working?"
msgstr "**问：**如何检查我的Nitrokey 3是否在工作？"

#: ../nitrokey3/faq.rst:11
msgid ""
"On `WebAuthn.io`_ you can check various high-level functionalities, while "
"`webautn.bin.coffee`_ provides good developer level details (technical) "
"details."
msgstr ""
"在`WebAuthn.io`_上，你可以检查各种高级功能，而`webautn.bin.coffee`_则提供了良"
"好的开发者级别的细节（技术）细节。"

#: ../nitrokey3/faq.rst:16
msgid "**Q:** Where is the right spot for NFC on my smartphone?"
msgstr "**问：**我的智能手机上NFC的正确位置在哪里？"

#: ../nitrokey3/faq.rst:16
msgid "Use `nfc.fail`_ to find the right spot!"
msgstr "使用`nfc.fail`_来找到正确的位置!"

#: ../nitrokey3/faq.rst:24
msgid "**Q:** What happens if I lose my device?"
msgstr "**问：**如果我丢失了我的设备会怎样？"

#: ../nitrokey3/faq.rst:19
msgid ""
"When securing accounts using FIDO (two-factor authentication and "
"passwordless login), you should configure another factor in your account as "
"a backup. Depending on the service this backup factor can be a phone number, "
"an app or even a second Nitrokey FIDO2. If you lose a device, you can still "
"log in with the second Nitrokey (or with another second factor)."
msgstr ""
"在使用FIDO（双因素认证和无密码登录）保护账户安全时，你应该在账户中配置另一个"
"因素作为备份。根据不同的服务，这个备份因素可以是一个电话号码、一个应用程序，"
"甚至是第二个Nitrokey FIDO2。如果你丢失了一个设备，你仍然可以用第二个硝基钥匙"
"（或另一个第二因素）登录。"

#: ../nitrokey3/faq.rst:27
msgid ""
"The Nitrokey 3 doesn't contain storage capability for ordinary data (it can "
"only store cryptographic keys and certificates)."
msgstr "Nitrokey 3不包含普通数据的存储能力（它只能存储加密密钥和证书）。"

#: ../nitrokey3/faq.rst:32
msgid "**Q:** When will the OpenPGPCard firmware be available?"
msgstr "**问：** OpenPGPCard的固件什么时候能用？"

#: ../nitrokey3/faq.rst:31
msgid ""
"This is very hard to predict at this point. We are aiming for mid of 2022, "
"but this is a very rough estimation with lots of uncertainties."
msgstr ""
"在这一点上，这是很难预测的。我们的目标是2022年中期，但这是一个非常粗略的估"
"计，有很多不确定因素。"

#: ../nitrokey3/faq.rst:37
msgid ""
"**Q:** Why does the Nitrokey 3 not show up in gnupg/Nitrokey App/nitropy ?"
msgstr "**问：**为什么Nitrokey 3在gnupg/Nitrokey App/nitropy中没有显示？"

#: ../nitrokey3/faq.rst:35
msgid ""
"Currently the Nitrokey 3 does only show up and can be managed in "
"``nitropy``, Nitrokey App and GnuPG will likely be only available once the "
"OpenPGPCard firmware update is available."
msgstr ""
"目前，Nitrokey 3确实只在``nitropy``中显示并可以管理，Nitrokey App和GnuPG可能"
"只有在OpenPGPCard固件更新后才能使用。"

#: ../nitrokey3/faq.rst:42
msgid "**Q:** How can I set the PIN for my Nitrokey 3 ?"
msgstr "**问：**如何为我的Nitrokey 3设置密码？"

#: ../nitrokey3/faq.rst:40
msgid ""
"You can configure and do basic settings for your Nitrokey 3 using "
"Chrome(ium) just visit: `chrome://settings/securityKeys`_ (clicking the link "
"will not work for security reasons, please copy&paste it)"
msgstr ""
"你可以使用Chrome(ium)浏览器为你的Nitrokey 3进行配置和基本设置，只需访问。"
"`chrome://settings/securityKeys`_（由于安全原因，点击该链接将不起作用，请复制"
"&粘贴）。"

#: ../nitrokey3/faq.rst:47
msgid "**Q:** Is the Nitrokey 3 Common Criteria or FIPS certified?"
msgstr "**问：** Nitrokey 3是否经过通用标准或FIPS认证？"

#: ../nitrokey3/faq.rst:45
msgid ""
"The secure element is Common Criteria EAL 6+ security certification up to OS "
"level (See `here`_, click “ICs, Smart Cards and Smart Card-Related Devices "
"and Systems” and search for: \"NXP JCOP 4 SE050M”)."
msgstr ""
"安全要素是Common Criteria EAL 6+安全认证，直至操作系统级别（见`这里`_，点击 "
"\"IC、智能卡和智能卡相关设备和系统\"，搜索：\"NXP JCOP 4 SE050M\"）。"

#: ../nitrokey3/firmware-update.rst:8
msgid "This guide describes how to update the firmware on the Nitrokey 3."
msgstr "本指南介绍了如何更新Nitrokey 3的固件。"

#: ../nitrokey3/firmware-update.rst:11
msgid ""
"**Currently updating the firmware will delete all user data!** Make sure you "
"have proper backup login methods enabled and/or ensure that the Nitrokey 3 "
"is not the only way to authenticate/2FA for your applications/services."
msgstr ""
"**目前更新固件将删除所有用户数据！**确保你启用了适当的备份登录方法和/或确保"
"Nitrokey 3不是你的应用程序/服务的唯一认证/2FA方式。"

#: ../nitrokey3/firmware-update.rst:17
msgid ""
"For Windows the firmware update is still **experimental**, because it takes "
"a very long time > 12mins. We recommend to wait for the next release(s) "
"until this issue is fixed."
msgstr ""
"对于Windows来说，固件更新仍然是**实验性的，因为它需要很长的时间> 12分钟。我们"
"建议等待下一个版本，直到这个问题得到解决。"

#: ../nitrokey3/firmware-update.rst:22
msgid "How to update"
msgstr "如何更新"

#: ../nitrokey3/firmware-update.rst:24
msgid ""
"Never disconnect the Nitrokey 3 or abort the process while updating, this "
"will likely render your device useless!"
msgstr ""
"在更新过程中，千万不要断开Nitrokey 3的连接或中止进程，这很可能会使你的设备失"
"去作用。"

#: ../nitrokey3/firmware-update.rst:27
msgid ""
"Make sure you have the latest `pynitrokey` version installed, please check "
"the `installation instructions`_ for your OS"
msgstr ""
"确保你已经安装了最新的`pynitrokey`版本，请查看你的操作系统的`安装说明`_。"

#: ../nitrokey3/firmware-update.rst:28
msgid ""
"Run ``nitropy nk3 update`` (for Windows use of the ``--experimental`` switch "
"is required)"
msgstr ""
"运行``nitropy nk3 update``（对于Windows，需要使用``--experimental``开关）。"

#: ../nitrokey3/firmware-update.rst:29
msgid "Touch device to activate bootloader (once instructed by ``nitropy``)"
msgstr "触摸设备以激活引导程序（一旦得到``nitropy``的指示）。"

#: ../nitrokey3/firmware-update.rst:30
msgid "*macOS only:* Run update command again (once instructed by ``nitropy``)"
msgstr "*仅适用于macOS：*再次运行更新命令（一旦被``nitropy``指示）。"

#: ../nitrokey3/firmware-update.rst:31
msgid "Wait 3-10mins on macOS/Linux, 12-25mins on Windows"
msgstr "在MacOS/Linux上等待3-10分钟，在Windows上等待12-25分钟。"

#: ../nitrokey3/firmware-update.rst:32
msgid "The update is finished"
msgstr "更新已经完成"

#: ../nitrokey3/firmware-update.rst:33
msgid ""
"*Optional*: run ``nitropy nk3 test`` to check if device is working properly "
"after flashing"
msgstr "*可选*：运行``nitropy nk3 test``以检查设备在闪烁后是否工作正常。"

#: ../nitrokey3/firmware-update.rst:35
msgid ""
"In case of any errors please take the logs from ``/tmp`` directory (``/tmp/"
"nitropy.log.*``)."
msgstr ""
"如果出现任何错误，请从``/tmp``目录中获取日志（``/tmp/nitropy.log.*``）。"

#: ../nitrokey3/index.rst:2
msgid "Nitrokey 3"
msgstr "Nitrokey 3"

#: ../nitrokey3/index.rst:7
msgid ""
"As of this writing the Nitrokey 3 is roughly identical with the Nitrokey "
"FIDO2, from functionality point of view. The Nitrokey 3A and 3C additionally "
"support NFC, while the Nitrokey 3 Mini does not support NFC."
msgstr ""
"从功能上看，Nitrokey 3与Nitrokey FIDO2大致相同。Nitrokey 3A和3C额外支持NFC，"
"而Nitrokey 3 Mini不支持NFC。"

#: ../nitrokey3/index.rst:10
msgid ""
"Future firmware updates will enable additional functionality and will be "
"documented here accordingly."
msgstr "未来的固件更新将实现更多的功能，并将在这里进行相应的记录。"

#: ../nitrokey3/linux/product_platform_heading.rst:3
msgid "(Nitrokey 3 - Linux)"
msgstr "(Nitrokey 3 - Linux)"

#: ../nitrokey3/linux/firmware-update.rst:4
msgid "Troubleshooting:"
msgstr "故障排除。"

#: ../nitrokey3/linux/firmware-update.rst:14
msgid "**Issue:** I get ``permission denied for /dev/hidrawX`` during update."
msgstr "**问题：**我在更新时得到``permission denied for /dev/hidrawX``。"

#: ../nitrokey3/linux/firmware-update.rst:7
msgid ""
"This likely means your user has not the needed permissions to read-write the "
"device. Please make sure you have set up the correct `udev-rules`_. Download "
"this `udev-rules`_ set and place it in your udev rules directory (e.g., ``/"
"etc/udev/rules.d``). Then remove your Nitrokey 3 from the USB slot and run: "
"``udevadm control --reload-rules && udevadm trigger`` or reboot your "
"machine. Afterwards the update should work without the permission issue."
msgstr ""
"这可能意味着你的用户没有必要的权限来读写设备。请确认你已经设置了正确的`udev-"
"rules`_。下载这个`udev-rules`_集，并把它放在你的udev规则目录中（例如，``/etc/"
"udev/rules.d``）。然后从USB插槽中取出你的Nitrokey 3并运行。``udevadm control "
"--reload-rules && udevadm trigger``或者重新启动你的机器。之后，更新应该可以工"
"作，没有权限问题。"

#: ../nitrokey3/linux/index.rst:2
msgid "Nitrokey 3 with Linux"
msgstr "使用Linux的Nitrokey 3"

#: ../nitrokey3/shared/main.rst:10
msgid ""
"The Nitrokey 3 supports two-factor authentication (2FA) and passwordless "
"authentication:"
msgstr "Nitrokey 3支持双因素认证（2FA）和无密码认证。"

#: ../nitrokey3/shared/main.rst:13
msgid ""
"With **passwordless authentication**, entering a password is replaced by "
"logging in with the Nitrokey 3 and a PIN."
msgstr "有了**无密码认证**，输入密码被用Nitrokey 3和密码登录所取代。"

#: ../nitrokey3/shared/main.rst:16
msgid ""
"With **two-factor authentication** (2FA), the Nitrokey 3 is checked in "
"addition to the password."
msgstr "通过**双因素认证**（2FA），除了密码外，还要检查硝基钥匙3。"

#: ../nitrokey3/shared/main.rst:19
msgid "The Nitrokey 3 can be used with any current browser."
msgstr "Nitrokey 3可以与当前任何浏览器一起使用。"

#: ../nitrokey3/shared/main.rst:23
msgid "The Nitrokey App can not be used for the Nitrokey 3."
msgstr "Nitrokey应用程序不能用于Nitrokey 3。"

#: ../nitrokey3/shared/main.rst:26 ../fido2/shared/index-content1.rst:31
msgid "Passwordless authentication"
msgstr "无密码认证"

#: ../nitrokey3/shared/main.rst:28 ../fido2/shared/index-content1.rst:33
msgid ""
"Open a web page that supports FIDO2 (currently only `Microsoft <https://www."
"microsoft.com>`_)."
msgstr ""
"打开一个支持FIDO2的网页（目前只有`Microsoft <https://www.microsoft.com>`_）。"

#: ../nitrokey3/shared/main.rst:30 ../fido2/shared/index-content1.rst:35
msgid ""
"Log in to the website and go to “Set up security key” in the security "
"settings of your account."
msgstr "登录网站，在你账户的安全设置中进入 \"设置安全密钥\"。"

#: ../nitrokey3/shared/main.rst:32
msgid "Now you need to set a PIN for your Nitrokey 3."
msgstr "现在你需要为你的Nitrokey 3设置一个密码。"

#: ../nitrokey3/shared/main.rst:33
msgid "Touch the button of your Nitrokey 3 when prompted."
msgstr "根据提示，触摸你的Nitrokey 3的按钮。"

#: ../nitrokey3/shared/main.rst:34
msgid ""
"Once you have successfully configured the device, you will need to activate "
"your Nitrokey 3 this way each time you log in, after entering your PIN."
msgstr ""
"一旦你成功地配置了设备，你就需要在每次登录时，在输入密码后以这种方式激活你的"
"Nitrokey 3。"

#: ../nitrokey3/shared/main.rst:47
msgid ""
"Register your Nitrokey 3 in the account settings by touching the button to "
"activate the Nitrokey 3. After you have successfully configured the device, "
"you must activate the Nitrokey 3 this way each time you log in."
msgstr ""
"在账户设置中注册你的Nitrokey 3，触摸按钮激活Nitrokey 3。在你成功配置设备后，"
"你必须在每次登录时以这种方式激活Nitrokey 3。"

#: ../nitrokey3/shared/main.rst:52 ../fido2/shared/index-content1.rst:57
msgid ""
"Checkout the `various use cases and supported applications <https://www."
"nitrokey.com/documentation/applications#p:nitrokey-fido-u2f>`_."
msgstr ""
"查看`各种使用案例和支持的应用程序<https://www.nitrokey.com/documentation/"
"applications#p:nitrokey-fido-u2f>`_。"

#: ../nitrokey3/shared/nitropy.rst:2
msgid "Using the Nitrokey 3 with nitropy"
msgstr "使用Nitrokey 3与nitropy的关系"

#: ../nitrokey3/shared/nitropy.rst:6
msgid "``nitropy`` can be used to list and manage Nitrokey 3 devices."
msgstr "``nitropy``可用于列出和管理Nitrokey 3设备。"

#: ../nitrokey3/shared/nitropy.rst:11
msgid ""
"Please see the `pynitrokey readme <https://github.com/Nitrokey/"
"pynitrokey#installation>`_ for installation instructions."
msgstr ""
"请参阅`pynitrokey readme <https://github.com/Nitrokey/"
"pynitrokey#installation>`_了解安装说明。"

#: ../nitrokey3/shared/nitropy.rst:14
msgid "Listing Nitrokey 3 devices"
msgstr "列出硝基钥匙的3种设备"

#: ../nitrokey3/shared/nitropy.rst:16
msgid ""
"Use ``nitropy list`` or ``nitropy nk3 list`` to list all connected devices:"
msgstr "使用``nitropy list`或``nitropy nk3 list``来列出所有连接的设备。"

#: ../nitrokey3/shared/nitropy.rst:33
msgid "Querying device information"
msgstr "查询设备信息"

#: ../nitrokey3/shared/nitropy.rst:35
msgid ""
"The following commands are currently available for querying device "
"information:"
msgstr "目前有以下命令可用于查询设备信息。"

#: ../nitrokey3/shared/nitropy.rst:37
msgid "``nitropy nk3 version``: queries the firmware version of the device"
msgstr "``nitropy nk3 version``：查询设备的固件版本。"

#: ../nitrokey3/shared/nitropy.rst:46
msgid "Working with multiple devices"
msgstr "使用多种设备工作"

#: ../nitrokey3/shared/nitropy.rst:48
msgid ""
"If multiple Nitrokey 3 devices are connected, you can use the ``--path`` "
"option to select one of them.  To determine the path of a device, use the "
"``nitropy list`` or ``nitropy nk3 list`` command."
msgstr ""
"如果连接了多个Nitrokey 3设备，你可以使用``--path``选项来选择其中一个。  要确"
"定一个设备的路径，使用``nitropy list`或``nitropy nk3 list``命令。"

#: ../nitrokey3/shared/nitropy.rst:73
msgid ""
"To diagnose issues with your Nitrokey 3 device, you can use the ``nitropy "
"nk3 test`` command.  It performs a number of tests to determine the state of "
"your device."
msgstr ""
"要诊断你的Nitrokey 3设备的问题，你可以使用``nitropy nk3 test``命令。  它执行"
"了一些测试，以确定你的设备的状态。"

#: ../nitrokey3/shared/nitropy.rst:75
msgid "If the tests are successful, a summary of the steps is printed:"
msgstr "如果测试成功，会打印出步骤的摘要。"

#: ../nitrokey3/shared/nitropy.rst:97
msgid ""
"If a test fails, the error message contains the path of a log file with "
"detailed information.  Please include this log file in support requests."
msgstr ""
"如果测试失败，错误信息中包含有详细信息的日志文件的路径。  请在支持请求中包括"
"这个日志文件。"

#: ../nitrokey3/shared/nitropy.rst:99
msgid ""
"If you have set a FIDO2 pin for your device, you have to use the ``--pin`` "
"option:"
msgstr "如果你为你的设备设置了一个FIDO2引脚，你必须使用``--pin``选项。"

#: ../fido2/shared/index-content2.rst:2 ../fido2/windows/reset.rst:2
msgid "Nitrokey Reset"
msgstr "硝基键复位"

#: ../fido2/shared/index-content2.rst:8 ../fido2/windows/reset.rst:8
msgid ""
"Factory Reset operation regenerates the secret material stored on the "
"Nitrokey FIDO U2F / Nitrokey FIDO2, which makes it a completely new key "
"logic-side. New owner cannot use it to login to account of the previous one. "
"In case of the FIDO2 Resident Keys the material is erased."
msgstr ""
"出厂重置操作会重新生成存储在Nitrokey FIDO U2F/Nitrokey FIDO2上的秘密材料，这"
"使得它成为一个全新的钥匙逻辑侧。新的主人不能用它来登录前一个主人的账户。如果"
"是FIDO2常驻钥匙，其材料会被删除。"

#: ../fido2/shared/index-content2.rst:10 ../fido2/windows/reset.rst:10
#: ../fido2/shared/index-content1.rst:71
msgid ""
"To avoid accidental and malicious reset of the Nitrokey, the required touch "
"confirmation time for the FIDO2 reset operation is longer and with a "
"distinct LED behavior (red LED light) than normal operations. To reset the "
"Nitrokey FIDO2, confirm by touching the touch button for at least 5 seconds "
"until the green or blue LED lights up."
msgstr ""
"为避免意外和恶意重置Nitrokey，FIDO2重置操作所需的触摸确认时间比正常操作要长，"
"并且有明显的LED行为（红色LED灯）。要重置Nitrokey FIDO2，请通过触摸按钮确认至"
"少5秒钟，直到绿色或蓝色LED灯亮起。"

#: ../fido2/shared/index-content2.rst:16 ../fido2/windows/reset.rst:55
msgid "Nitrokey FIDO2 could be reset by:"
msgstr "Nitrokey FIDO2可以通过以下方式重置。"

#: ../fido2/shared/index-content2.rst:18 ../fido2/windows/reset.rst:57
msgid ""
"pynitrokey tool: ``nitropy fido2 reset`` (requires Administrator rights to "
"execute)"
msgstr "pynitrokey工具。``nitropy fido2 reset``（需要管理员权限才能执行）。"

#: ../fido2/shared/index-content2.rst:19 ../fido2/windows/reset.rst:58
msgid ""
"Google Chrome (not available on Windows): `Manage security keys` - direct "
"link (Chrome only): `chrome://settings/securityKeys`"
msgstr ""
"谷歌浏览器（在Windows上不可用）：\"管理安全密钥\"--直接链接（仅Chrome）："
"\"chrome://settings/securityKeys\"。"

#: ../nitrokey3/troubleshooting.rst:17
msgid "Nitrokey is not detected on Linux"
msgstr "在Linux上检测不到Nitrokey"

#: ../nitrokey3/troubleshooting.rst:19 ../fido2/linux/index.rst:9
msgid "If the Nitrokey is not detected, proceed the following:"
msgstr "如果没有检测到硝基钥匙，请进行以下操作。"

#: ../nitrokey3/troubleshooting.rst:21
msgid ""
"Copy this file `41-nitrokey.rules <https://www.nitrokey.com/sites/default/"
"files/41-nitrokey.rules>`_ to ``/etc/udev/rules.d/``."
msgstr ""
"把这个文件`41-nitrokey.rules <https://www.nitrokey.com/sites/default/"
"files/41-nitrokey.rules>`_复制到``/etc/udev/rules.d/``。"

#: ../nitrokey3/troubleshooting.rst:24 ../fido2/linux/index.rst:17
msgid "Restart udev via ``sudo service udev restart``."
msgstr "通过``sudo service udev restart``重新启动udev。"

#: ../nitrokey3/troubleshooting.rst:29
msgid "Google and Microsoft Services"
msgstr "谷歌和微软服务"

#: ../nitrokey3/troubleshooting.rst:31
msgid ""
"Currently there seems to be a bug we hope to fix soon which affects the "
"Nitrokey 3 working with some Google and Microsoft Services per FIDO2."
msgstr ""
"目前，似乎有一个错误，我们希望能尽快修复，它影响了Nitrokey 3与一些谷歌和微软"
"服务的FIDO2的工作。"

#: ../nitrokey3/troubleshooting.rst:34
msgid "Timeout Bug"
msgstr "超时错误"

#: ../nitrokey3/troubleshooting.rst:36
msgid ""
"There is a bug  with the Key being recognized by the System but a Timeout "
"occurs before the connection succeed."
msgstr "有一个错误，系统可以识别钥匙，但在连接成功之前会出现超时。"

#: ../nitrokey3/troubleshooting.rst:39
msgid "NFC is Not Working"
msgstr "NFC不工作"

#: ../nitrokey3/troubleshooting.rst:40
msgid ""
"Please make sure FIDO2 is working correctly. Otherwise NFC won't work either."
msgstr "请确保FIDO2工作正常。否则NFC也不会工作。"

#: ../nitrokey3/troubleshooting.rst:42
msgid ""
"Also check if you are using the right spot on your smartphone. Find the "
"right spot using: `nfc.fail`_"
msgstr ""
"还要检查你是否在你的智能手机上使用正确的位置。找到正确的位置，使用。`nfc."
"fail`_"

#: ../nitrokey3/troubleshooting.rst:45
msgid ""
"The backside of the Nitrokey has to be held against the smartphone. For the "
"USB-A Version it might be helpful to lift the side with the USB-Connector "
"slightly to reduce the distance of the end part of the stick."
msgstr ""
"Nitrokey的背面必须紧贴智能手机。对于USB-A版本，稍微抬起带有USB连接器的一侧可"
"能会有帮助，以减少棒的末端部分的距离。"

#: ../nitrokey3/troubleshooting.rst:47
msgid ""
"Try to find the right spot without a phone cover first. Retry afterwards "
"with the cover"
msgstr "先试着在没有手机套的情况下找到合适的位置。之后带着盖子再试一次"

#: ../nitrokey3/troubleshooting.rst:51
msgid ""
"The search of the optimal spot sometimes took up to 20-30 sec. In our "
"experience holding the Nitrokey in an horizontal orientation yields better "
"results.If you still encounter issues please write a mail at our support. "
"For optimal help please include the shipping/order number and your "
"smartphone model."
msgstr ""
"寻找最佳位置有时需要20-30秒。根据我们的经验，将Nitrokey水平放置会产生更好的效"
"果。如果你仍然遇到问题，请给我们的支持部门写信。如果您仍然遇到问题，请给我们"
"的支持部门写信，为了获得最佳帮助，请注明发货/订单号和您的智能手机型号。"

#: ../nitrokey3/troubleshooting.rst:58
msgid "update.nitrokey.com does not work:"
msgstr "update.nitrokey.com不起作用。"

#: ../nitrokey3/troubleshooting.rst:60
msgid ""
"Currently there are no updates available. The first firmware updates will "
"address bug fixes."
msgstr "目前还没有更新。第一批固件更新将解决错误修复问题。"

#: ../nitrokey3/mac/product_platform_heading.rst:3
msgid "(Nitrokey 3 - macOS)"
msgstr "(Nitrokey 3 - macOS)"

#: ../nitrokey3/mac/index.rst:2
msgid "Nitrokey 3 with macOS"
msgstr "带有MacOS的Nitrokey 3"

#: ../nitrokey3/windows/product_platform_heading.rst:3
msgid "(Nitrokey 3 - Windows)"
msgstr "(Nitrokey 3 - Windows)"

#: ../nitrokey3/windows/index.rst:2
msgid "Nitrokey 3 with Windows"
msgstr "使用Windows的Nitrokey 3"

#: ../fido2/windows/passwordless-microsoft.rst:2
msgid "Passwordless Authentication with Microsoft"
msgstr "使用微软的无密码认证"

#: ../fido2/windows/passwordless-microsoft.rst:8
msgid ""
"The Nitrokey FIDO2 supports password-less authentication, where entering a "
"password is replaced by logging in with the Nitrokey FIDO2 and a PIN."
msgstr ""
"Nitrokey FIDO2支持无密码认证，即用Nitrokey FIDO2和PIN码登录来代替输入密码。"

#: ../fido2/windows/passwordless-microsoft.rst:11
msgid "Sample login to Microsoft with the Nitrokey FIDO2"
msgstr "使用Nitrokey FIDO2登录微软的样本"

#: ../fido2/windows/passwordless-microsoft.rst:13
msgid "Click on “Sign in with security key”."
msgstr "点击 \"用安全密钥登录\"。"

#: ../fido2/windows/passwordless-microsoft.rst:20
msgid "Enter your PIN for the Nitrokey FIDO2."
msgstr "输入Nitrokey FIDO2的密码。"

#: ../fido2/windows/passwordless-microsoft.rst:27
msgid "Touch your Nitrokey FIDO2 at the indicated spot."
msgstr "在指定地点触摸你的Nitrokey FIDO2。"

#: ../fido2/windows/passwordless-microsoft.rst:34
msgid "Now you are logged in!"
msgstr "现在你已经登录了!"

#: ../fido2/windows/passwordless-microsoft.rst:37
msgid "Setting up Passwordless Authentication"
msgstr "设置无密码认证"

#: ../fido2/windows/passwordless-microsoft.rst:39
msgid ""
"Here we offer you a guide on how to set up passwordless authentication for "
"your Microsoft account with the Nitrokey FIDO2."
msgstr ""
"在此，我们为您提供一份指南，介绍如何用Nitrokey FIDO2为您的微软账户设置无密码"
"认证。"

#: ../fido2/windows/passwordless-microsoft.rst:41
msgid ""
"You need Windows 10 (update October 2018 or later) and the Microsoft Edge or "
"Google Chrome browser."
msgstr ""
"你需要Windows 10（2018年10月或之后的更新）和Microsoft Edge或Google Chrome浏览"
"器。"

#: ../fido2/windows/passwordless-microsoft.rst:44
msgid "Log in to your Microsoft account and go to your “Account” page."
msgstr "登录你的微软账户，进入你的 \"账户 \"页面。"

#: ../fido2/windows/passwordless-microsoft.rst:46
msgid "Select “Security”."
msgstr "选择 \"安全\"。"

#: ../fido2/windows/passwordless-microsoft.rst:53
msgid "Select “More security options”"
msgstr "选择 \"更多安全选项\""

#: ../fido2/windows/passwordless-microsoft.rst:60
msgid "Select “Set up a security key”."
msgstr "选择 \"设置一个安全密钥\"。"

#: ../fido2/windows/passwordless-microsoft.rst:67
msgid "Confirm with “Next” under “USB device”."
msgstr "在 \"USB设备 \"下用 \"下一步 \"确认。"

#: ../fido2/windows/passwordless-microsoft.rst:74
msgid ""
"Enter a PIN that you want to use for your Nitrokey FIDO2 and then select "
"“Next”."
msgstr "输入你想用于Nitrokey FIDO2的密码，然后选择 \"下一步\"。"

#: ../fido2/windows/passwordless-microsoft.rst:82
msgid "Now tap on the marked position of the Nitrokey FIDO2."
msgstr "现在点击Nitrokey FIDO2的标记位置。"

#: ../fido2/windows/passwordless-microsoft.rst:89
msgid "Confirm with “Allow”."
msgstr "用 \"允许 \"确认。"

#: ../fido2/windows/passwordless-microsoft.rst:96
msgid "Name your Nitrokey FIDO2 and then select “Next”."
msgstr "为你的Nitrokey命名为FIDO2，然后选择 \"下一步\"。"

#: ../fido2/windows/passwordless-microsoft.rst:103
msgid ""
"Now you have successfully set up password-free authentication for your "
"Microsoft account! Confirm with “Got it”."
msgstr "现在你已经成功地为你的微软账户设置了免密码认证!用 \"知道了 \"来确认。"

#: ../fido2/windows/reset.rst:17
msgid "Windows 10"
msgstr "Windows 10"

#: ../fido2/windows/reset.rst:19
msgid ""
"Make sure you use Windows 10 at least version 2004. Please follow Windows’ "
"reset wizard."
msgstr "请确保你使用的是Windows 10，至少是2004版。请遵循Windows的重置向导。"

#: ../fido2/windows/reset.rst:22
msgid ""
"If the total taken time for execution will be more than 10 seconds, the "
"Windows OS’ user interface will report failure. Reset operation is executed "
"on the Nitrokey even after the latter is reported failing, as long as the "
"user’s touch will be registered before the Nitrokey’s internal operation "
"timeout (touch confirmation is shown with the blue color)."
msgstr ""
"如果执行的总时间超过10秒，Windows操作系统的用户界面将报告失败。即使在报告失败"
"后，只要用户的触摸在硝基钥匙的内部操作超时前被登记，重置操作也会在硝基钥匙上"
"执行（触摸确认显示为蓝色）。"

#: ../fido2/windows/reset.rst:30
msgid "Older Versions of Windows 10"
msgstr "旧版本的Windows 10"

#: ../fido2/windows/reset.rst:32
msgid ""
"In Windows 10 version 1909 or older the Nitrokey has to be reinserted right "
"before the reset operation is executed. The reset operation has to be "
"confirmed by touching the touch button twice."
msgstr ""
"在Windows 10 1909或更早的版本中，必须在执行重置操作之前重新插入硝基钥匙。重置"
"操作必须通过两次触摸按钮来确认。"

#: ../fido2/windows/reset.rst:36
msgid "Detailed scenario:"
msgstr "详细方案。"

#: ../fido2/windows/reset.rst:38
msgid "Reinsert the Nitrokey right before executing reset operation"
msgstr "在执行复位操作之前，请重新插入硝基钥匙。"

#: ../fido2/windows/reset.rst:39
msgid "Start the reset operation in the user interface"
msgstr "在用户界面上启动复位操作"

#: ../fido2/windows/reset.rst:40
msgid ""
"When the LED blinks white, touch the touch button for 1 second until it "
"turns green."
msgstr "当LED灯闪烁白色时，触摸触摸按钮1秒，直到它变成绿色。"

#: ../fido2/windows/reset.rst:41
msgid "Release the touch"
msgstr "释放触摸"

#: ../fido2/windows/reset.rst:42
msgid ""
"When the LED blinks red, touch the touch button for 5 seconds until it turns "
"blue."
msgstr "当LED灯闪烁红色时，触摸触摸按钮5秒钟，直到它变成蓝色。"

#: ../fido2/windows/reset.rst:45
msgid "Windows 10 on a Virtual Machine"
msgstr "虚拟机上的Windows 10"

#: ../fido2/windows/reset.rst:47
msgid ""
"Please keep in mind Nitrokey has internal timeout for accepting the FIDO "
"reset operation of 10 seconds since powering up. If the Nitrokey will "
"connect to a virtual machine later than that, it will return error and the "
"operation will be aborted."
msgstr ""
"请记住，Nitrokey在接受FIDO重置操作时有内部超时，即开机后10秒。如果Nitrokey连"
"接到虚拟机的时间超过这个时间，它将会返回错误，并且操作会被中止。"

#: ../fido2/windows/reset.rst:53
msgid "Other Ways To Reset"
msgstr "重置的其他方法"

#: ../hsm/apache2-tls.rst:2
msgid "TLS Setup with Apache2"
msgstr "用Apache2设置TLS"

#: ../hsm/apache2-tls.rst:10
msgid ""
"The very same concept as descriped here can be used for many applications "
"using openssl as crypto-backend. The concept mostly boils down to: replace "
"(secret) key-file with PKCS#11 URL referencing a key on a security token "
"(Nitrokey)"
msgstr ""
"这里描述的相同概念可以用于许多使用openssl作为加密后端的应用。这个概念主要归结"
"为：用PKCS#11 URL替代（秘密）密钥文件，引用安全令牌（Nitrokey）上的一个密钥。"

#: ../hsm/apache2-tls.rst:19
msgid ""
"ensure that the `apache2` version is at least 2.4.42 for proper ``mod_ssl`` "
"support"
msgstr "确保`apache2`的版本至少是2.4.42，以获得正确的``mod_ssl``支持。"

#: ../hsm/apache2-tls.rst:21
msgid "activate ``mod_ssl`` using ``a2enmod ssl``, if not already done"
msgstr "激活``mod_ssl``使用``a2enmod ssl``，如果尚未完成。"

#: ../hsm/apache2-tls.rst:23
msgid ""
"additionally ``openssl`` is needed and ``libengine-pkcs11-openssl`` see :doc:"
"`PKCS#11 URL<pkcs11-url>`"
msgstr ""
"另外还需要``openssl``和``libengine-pkcs11-openssl``见：doc:`PKCS#11 "
"URL<pkcs11-url>`"

#: ../hsm/apache2-tls.rst:29
msgid "Configure Apache2 to Use a Security Key"
msgstr "配置Apache2以使用安全密钥"

#: ../hsm/apache2-tls.rst:31
msgid ""
"Basically the only thing to do is replace ``SSLCertificateFile`` with the "
"proper PKCS#11 URL and delete any other references to keys or certificates. "
"E.g., ``SSLCertificateKeyFile`` is not needed anymore."
msgstr ""
"基本上唯一要做的是用适当的PKCS#11 URL替换``SSLCertificateFile`，并删除任何其"
"他对钥匙或证书的引用。例如，``SSLCertificateKeyFile``就不再需要了。"

#: ../hsm/apache2-tls.rst:35
msgid "An example directive might look like this:"
msgstr "一个指令的例子可能是这样的。"

#: ../hsm/apache2-tls.rst:41
msgid ""
"The proper PKCS#11 URL can be extracted as documented in :doc:`PKCS#11 URL "
"Generation<pkcs11-url>`"
msgstr ""
"适当的PKCS#11 URL可以按照:doc:`PKCS#11 URL生成<pkcs11-url>`中的记载提取。"

#: ../hsm/apache2-tls.rst:43
msgid "Be sure to place the directive inside a `VirtualHost` configuration."
msgstr "请确保将该指令放在 \"虚拟主机 \"的配置中。"

#: ../hsm/apache2-tls.rst:46
msgid "Provide PIN During Apache2 Startup"
msgstr "在Apache2启动时提供PIN码"

#: ../hsm/apache2-tls.rst:48
msgid ""
"Using the previously described method Apache2 will ask on every startup for "
"the User-PIN, thus basically declining batch startup. Apache2 provides "
"another directive to provide the PIN during startup."
msgstr ""
"使用前面描述的方法，Apache2会在每次启动时询问用户PIN，因此基本上拒绝了批量启"
"动。Apache2提供了另一个指令，在启动时提供PIN。"

#: ../hsm/apache2-tls.rst:56
msgid ""
"Apache2 expects an executable after ``|``, which will be executed during "
"startup and it's output (trailing newline is expected) will be used as PIN. "
"Obviously arbitrary complex PIN retrieval methods can be implemented using "
"this approach. Although here a trivial example has been chosen to just "
"``echo`` the PIN during startup."
msgstr ""
"Apache2期望在``|``之后有一个可执行文件，该文件将在启动时被执行，它的输出（尾"
"部换行被期望）将被用作PIN。显然，任意复杂的PIN检索方法都可以用这种方法来实"
"现。虽然这里选择了一个微不足道的例子，只是在启动过程中``echo``的PIN。"

#: ../hsm/apache2-tls.rst:61
msgid ""
"Further ``SSLPassPhraseDialog`` is a global directive, thus has to be placed "
"in the global configuration scope in Apache2."
msgstr ""
"此外``SSLPassPhraseDialog``是一个全局指令，因此必须放在Apache2的全局配置范围"
"中。"

#: ../hsm/apache2-tls.rst:66
msgid ""
"This shown example is not a secure mechanism to pass your PIN, as it will be "
"written in plain-text inside your configuration"
msgstr "这个例子并不是传递PIN码的安全机制，因为它将以明文形式写入你的配置中。"

#: ../hsm/apache2-tls.rst:69
msgid ""
"See the `Apache2 mod_ssl documentation`_ for more details on this feature."
msgstr "关于这个功能的更多细节，请看`Apache2 mod_ssl 文档`_。"

#: ../hsm/apache2-tls.rst:72
msgid "Complete Apache2 Config Example"
msgstr "完整的Apache2配置实例"

#: ../hsm/apache2-tls.rst:73
msgid ""
"A complete Apache2 (``VirtualHost``) config snippet might look like this:"
msgstr "一个完整的Apache2（``VirtualHost``）配置片段可能看起来像这样。"

#: ../hsm/faq.rst:2
msgid "Nitrokey HSM FAQ"
msgstr "硝基钥匙HSM常见问题"

#: ../hsm/faq.rst:14
msgid ""
"Nitrokey PINs can be up to 16 digits long and can consist of numbers, "
"characters and special characters. Note: When using GnuPG or OpenSC, 32 "
"character long PINs can be used but aren't supported by Nitrokey App."
msgstr ""
"Nitrokey的PIN码最多可以有16位，可以由数字、字符和特殊字符组成。注意：当使用"
"GnuPG或OpenSC时，可以使用32个字符的PIN码，但不被Nitrokey应用程序支持。"

#: ../hsm/faq.rst:20
msgid ""
"The PIN is at least 6-digits long and is used to get access to the contect "
"of the Nitrokey. This is the PIN you will use a lot in every day use"
msgstr ""
"PIN码至少有6位数，用于进入Nitrokey的保护范围。这是你在日常使用中会经常用到的"
"密码。"

#: ../hsm/faq.rst:24
msgid ""
"The PIN can have up to 16 digits and other characters (e.g. alphabetic and "
"special characters). But as the PIN is blocked as soon three wrong PIN "
"attempts were done, it is sufficiently secure to only have a 6 digits PIN."
msgstr ""
"密码最多可以有16位数字和其他字符（如字母和特殊字符）。但是，只要有三次错误的"
"PIN尝试，PIN就会被阻止，所以只有6位数的PIN就足够安全了。"

#: ../hsm/faq.rst:34
msgid "**Q:** What is the SO PIN for?"
msgstr "**问：**SO PIN是什么意思？"

#: ../hsm/faq.rst:30
msgid ""
"The SO PIN is used in the Nitrokey HSM only and is something like a "
"\"master\" PIN with special properties. Please read this instructions "
"carefully to understand the SO PIN of the Nitrokey HSM."
msgstr ""
"SO PIN仅在Nitrokey HSM中使用，它类似于具有特殊属性的主密码。请仔细阅读本说明"
"以了解Nitrokey HSM的SO PIN。"

#: ../hsm/faq.rst:34
msgid "The SO PIN has to be exactly 16 digits long."
msgstr "SO PIN的长度必须正好是16位数。"

#: ../hsm/faq.rst:38
msgid "**Q:** How many data objects (DF, EF) can be stored?"
msgstr "**问：**可以存储多少个数据对象（DF、EF）？"

#: ../hsm/faq.rst:37
msgid ""
"76 KB EEPROM total, max. 150 x ECC-521 keys, max. 300 x ECC/AES-256 keys, "
"max. 19 x RSA-4096 keys, max. 38 x RSA-2048 keys"
msgstr ""
"总共76 KB EEPROM，最大。150个ECC-521密钥，最大。300 x ECC/AES-256 密钥，最大"
"19 x RSA-4096 密钥，最大。38个RSA-2048密钥"

#: ../hsm/faq.rst:44
msgid "Key generation on-card: RSA 2048: 2 per minute"
msgstr "卡片上的密钥生成。RSA 2048：每分钟2个"

#: ../hsm/faq.rst:45
msgid "Key generation on-card: ECC 256: 10 per minute."
msgstr "卡片上的密钥生成。ECC 256：每分钟10个。"

#: ../hsm/faq.rst:46
msgid "Signature creation with off-card hash: RSA 2048; 100 per minute"
msgstr "用卡外哈希创建签名。RSA 2048；每分钟100个"

#: ../hsm/faq.rst:47
msgid "Signature creation with off-card hash: ECDSA 256: 360 per minute"
msgstr "用卡外哈希创建签名。ECDSA 256：每分钟360个"

#: ../hsm/faq.rst:48
msgid ""
"Signature creation with on-card SHA-256 and 1 kb data: RSA 2048; 68 per "
"minute"
msgstr "用卡上的SHA-256和1kb数据创建签名。RSA 2048；每分钟68个"

#: ../hsm/faq.rst:49
msgid ""
"Signature creation with on-card SHA-256 and 1 kb data: ECDSA 256: 125 per "
"minute"
msgstr "用卡上的SHA-256和1kb数据创建签名。ECDSA 256：每分钟125个"

#: ../hsm/faq.rst:53
msgid "**Q:** How can I distinguish a Nitrokey HSM1 from an Nitrokey HSM2?"
msgstr "**问：**我如何区分Nitrokey HSM1和Nitrokey HSM2？"

#: ../hsm/faq.rst:52
msgid ""
"Use ``opensc-tool --list-algorithms`` and compare with the table below. "
"Please also see `this thread`_ for the factsheets and more details."
msgstr ""
"使用``opensc-tool --list-algorithms``并与下表进行比较。也请看`这个主题`_，以"
"了解情况表和更多细节。"

#: ../hsm/faq.rst:59
msgid ""
"Nitrokey HSM uses the TRNG of JCOP 2.4.1r3 which has a quality of DRNG.2 "
"(according to AIS 31 of the BSI)."
msgstr ""
"Nitrokey HSM使用JCOP 2.4.1r3的TRNG，其质量为DRNG.2（根据BSI的AIS 31）。"

#: ../hsm/faq.rst:76
msgid "**Q:** Which API can I use?"
msgstr "**问：**我可以使用哪个API？"

#: ../hsm/faq.rst:63
msgid ""
"OpenSC: Comprehensive instructions exist for OpenSC framework. There is "
"nitrotool as a more comfortable frontend to OpenSC."
msgstr ""
"OpenSC：OpenSC框架有全面的说明。还有nitrotool作为OpenSC的一个更舒适的前端。"

#: ../hsm/faq.rst:66
msgid ""
"Embedded Systems: For systems with minimal memory footprint a read/only "
"PKCS#11 module is provided by the sc-hsm-embedded project.  This PKCS#11 "
"module is useful for deployments where key generation at the user's "
"workplace is not required. The PKCS#11 module also supports major electronic "
"signature cards available in the German market."
msgstr ""
"嵌入式系统。对于内存占用最小的系统，sc-hsm-embedded项目提供了一个只读不写的"
"PKCS#11模块。  这个PKCS#11模块对于不需要在用户工作场所生成密钥的部署非常有"
"用。PKCS#11模块还支持德国市场上的主要电子签名卡。"

#: ../hsm/faq.rst:72
msgid ""
"OpenSCDP: The SmartCard-HSM is fully integrated with OpenSCDP, the open "
"smart card development platform. See the public support scripts for details. "
"To import existing keys you can use its SCSH or NitroKeyWrapper."
msgstr ""
"OpenSCDP。SmartCard-HSM与开放式智能卡开发平台OpenSCDP完全集成。详情见公共支持"
"脚本。要导入现有的密钥，你可以使用其SCSH或NitroKeyWrapper。"

#: ../hsm/faq.rst:79
msgid ""
"The security controler's hardware and operating system are Common Criteria "
"certified (`Security Target`_; `HSM2 Report`_; See `here`_, click \"ICs, "
"Smart Cards and Smart Card-Related Devices and Systems\" and search for "
"\"NXP JCOP 3 P60\")."
msgstr ""
"该安全控制器的硬件和操作系统通过了Common Criteria认证（`安全目标`；`HSM2报告"
"`；见`这里`，点击\"IC、智能卡和智能卡相关设备和系统`；并搜索\"NXP JCOP 3 "
"P60\" ）。"

#: ../hsm/import-keys-certs.rst:2
msgid "Importing Keys and Certificates"
msgstr "导入钥匙和证书"

#: ../hsm/import-keys-certs.rst:8
msgid ""
"Generally the concept to import key-pairs and/or certificates is the "
"following:"
msgstr "一般来说，导入密钥对和/或证书的概念如下。"

#: ../hsm/import-keys-certs.rst:11
msgid "Create a DKEK (Device Key Encryption Key) share"
msgstr "创建一个DKEK（设备密钥加密密钥）共享"

#: ../hsm/import-keys-certs.rst:12
msgid "Initialize device and enable DKEK as \"Device Encryption Scheme\""
msgstr "初始化设备并启用DKEK作为\"设备加密方案\"。"

#: ../hsm/import-keys-certs.rst:13
msgid "Import DKEK share into device"
msgstr "将DKEK共享导入设备中"

#: ../hsm/import-keys-certs.rst:14
msgid "Import PKCS#12 container(s) into DKEK"
msgstr "向DKEK导入PKCS#12容器"

#: ../hsm/import-keys-certs.rst:16
msgid ""
"This documentation covers only one specific use-case and should serve as an "
"example for the overall workflow. For further information please read `this "
"thread`_ and `this blog post`_."
msgstr ""
"本文档只涵盖了一个特定的用例，并应作为整个工作流程的一个例子。更多信息请阅读`"
"这个主题`_和`这个博文`_。"

#: ../hsm/import-keys-certs.rst:22
msgid ""
"This procedure will reset your Nitrokey HSM 2 device and all data on it will "
"be deleted!"
msgstr "这个过程将重置你的Nitrokey HSM 2设备，上面的所有数据都将被删除!"

#: ../hsm/import-keys-certs.rst:28
msgid ""
"make sure all the keys you would like to import are available as PKCS#12 "
"containers (`.p12`) and you know the password, if needed"
msgstr ""
"确保你想导入的所有钥匙都是以PKCS#12容器（`.p12'）的形式存在的，如果需要，你知"
"道密码。"

#: ../hsm/import-keys-certs.rst:31
msgid ""
"be sure that nothing on the used Nitrokey HSM 2 is needed, it will be "
"deleted during this procedure"
msgstr ""
"确保使用过的Nitrokey HSM 2上没有任何东西是需要的，它将在这个过程中被删除。"

#: ../hsm/import-keys-certs.rst:34
msgid ""
"download the latest `Smart Card Shell`_ and unpack it into your work-"
"directory"
msgstr "下载最新的`Smart Card Shell`_，并将其解压到你的工作目录中。"

#: ../hsm/import-keys-certs.rst:37
msgid "Importing via the SCSH3 GUI"
msgstr "通过SCSH3 GUI导入"

#: ../hsm/import-keys-certs.rst:39
msgid ""
"Inside the unpacked directory you will find ``scsh3gui``, which can be "
"started using ``bash scsh3gui`` (for windows double-click on: ``scsh3gui."
"cmd``)."
msgstr ""
"在解压后的目录中，你会发现``scsh3gui``，可以用``bash scsh3gui``启动（对于"
"Windows，双击。``scsh3gui.cmd``）。"

#: ../hsm/import-keys-certs.rst:42
msgid ""
"Once the SCSH3 Tool is open, you should see your Nitrokey HSM 2 inside the "
"tree view. Please follow these steps to import:"
msgstr ""
"一旦SCSH3工具被打开，你应该在树状视图中看到你的Nitrokey HSM 2。请按照以下步骤"
"进行导入。"

#: ../hsm/import-keys-certs.rst:45
msgid "Start key-manager (File -> Keymanager)"
msgstr "启动钥匙管理器 (File -> Keymanager)"

#: ../hsm/import-keys-certs.rst:47
msgid "Right-click \"Smartcard-HSM\" -> create DKEK share"
msgstr "右键单击\"智能卡-HSM\"-> 创建DKEK共享"

#: ../hsm/import-keys-certs.rst:49
msgid "Choose file location"
msgstr "选择文件位置"

#: ../hsm/import-keys-certs.rst:51
msgid "Choose DKEK share password"
msgstr "选择DKEK共享密码"

#: ../hsm/import-keys-certs.rst:53
msgid "Right-click \"Smartcard-HSM\" -> Initialize device"
msgstr "右键点击\"智能卡-HSM\"->初始化设备"

#: ../hsm/import-keys-certs.rst:55
msgid "Enter SO-PIN"
msgstr "输入SO-PIN"

#: ../hsm/import-keys-certs.rst:57
msgid "(optional) Enter label and enter URL/Host"
msgstr "(可选)输入标签并输入URL/主机"

#: ../hsm/import-keys-certs.rst:59
msgid "Select authentication method: \"User PIN\""
msgstr "选择认证方式：\"用户密码\"。"

#: ../hsm/import-keys-certs.rst:61
msgid ""
"Allow RESET RETRY COUNTER: \"Resetting and unblocking PIN with SO-PIN not "
"allowed\""
msgstr "允许RESET RETRY COUNTER：\"不允许用SO-PIN重置和解除封锁PIN\"。"

#: ../hsm/import-keys-certs.rst:63
msgid "Enter and confirm User PIN"
msgstr "输入并确认用户密码"

#: ../hsm/import-keys-certs.rst:65
msgid "\"Select Device Key Encryption scheme\" -> \"DKEK shares\""
msgstr "\"选择设备密钥加密方案\"->\"DKEK份额\"。"

#: ../hsm/import-keys-certs.rst:67
msgid "Enter number of DKEK shares: 1"
msgstr "输入DKEK股票的数量。1"

#: ../hsm/import-keys-certs.rst:69
msgid "Right-click DKEK set-up in progress -> \"Import DKEK share\""
msgstr "右键单击正在进行的DKEK设置->\"导入DKEK共享\"。"

#: ../hsm/import-keys-certs.rst:71
msgid "Choose DKEK share file location"
msgstr "选择DKEK共享文件的位置"

#: ../hsm/import-keys-certs.rst:73
msgid "Password for DKEK share"
msgstr "DKEK共享的密码"

#: ../hsm/import-keys-certs.rst:75
msgid "Right-click \"SmartCard-HSM\" -> \"Import from PKCS#12\""
msgstr "右键点击\"SmartCard-HSM\" -> \"从PKCS#12导入\"。"

#: ../hsm/import-keys-certs.rst:77
msgid "Enter number of shares -> 1"
msgstr "输入股票数量 -> 1"

#: ../hsm/import-keys-certs.rst:79
msgid "Enter file location of DKEK share"
msgstr "输入DKEK共享的文件位置"

#: ../hsm/import-keys-certs.rst:81
msgid "Enter Password for DKEK share"
msgstr "输入DKEK共享的密码"

#: ../hsm/import-keys-certs.rst:83
msgid "Select PKCS#12 container for import (Enter password, if set)"
msgstr "选择用于导入的PKCS#12容器（输入密码，如果设置了密码）。"

#: ../hsm/import-keys-certs.rst:85
msgid "Select Key"
msgstr "选择键"

#: ../hsm/import-keys-certs.rst:87
msgid ""
"Select Name to be used (This is the Label used for the key on the device)"
msgstr "选择要使用的名称（这是在设备上用于钥匙的标签）。"

#: ../hsm/import-keys-certs.rst:89
msgid "Import more keys, if needed"
msgstr "如果需要，导入更多的钥匙"

#: ../hsm/import-keys-certs.rst:91
msgid ""
"Once this is done, you can check that the keys have been successfully "
"imported using:"
msgstr "一旦完成，你就可以通过以下方式检查钥匙是否已经成功导入。"

#: ../hsm/import-keys-certs.rst:98
msgid ""
"In the resulting output you will find the imported keys labeled by the name "
"you chose previously."
msgstr "在结果输出中，你会发现导入的钥匙被你之前选择的名称所标记。"

#: ../hsm/index.rst:2
msgid "Nitrokey HSM 2"
msgstr "Nitrokey HSM 2"

#: ../hsm/linux/product_platform_heading.rst:3
msgid "(Nitrokey HSM 2 - Linux)"
msgstr "(Nitrokey HSM 2 - Linux)"

#: ../hsm/linux/index.rst:2
msgid "Nitrokey HSM with GNU/Linux"
msgstr "使用GNU/Linux的Nitrokey HSM"

#: ../hsm/linux/index.rst:13
msgid ""
"Install `OpenSC <https://github.com/OpenSC/OpenSC/wiki>`_. You need at least "
"version 0.19. You can find recent builds for debian-based systems like "
"Ubuntu `here <https://github.com/Nitrokey/opensc-build>`_ if your system "
"does not have the newest version of OpenSC. Alternatively, install `this "
"<https://www.cardcontact.de/download/sc-hsm-starterkit.zip>`_ driver "
"(`source <https://github.com/CardContact/sc-hsm-embedded>`_)."
msgstr ""
"安装`OpenSC <https://github.com/OpenSC/OpenSC/wiki>`_。你至少需要0.19版本。你"
"可以在`这里找到基于debian的系统的最新构建<https://github.com/Nitrokey/opensc-"
"build>`_，如果你的系统没有最新版本的OpenSC。或者，安装`这个<https://www."
"cardcontact.de/download/sc-hsm-starterkit.zip>`_驱动程序（`source <https://"
"github.com/CardContact/sc-hsm-embedded>`_）。"

#: ../hsm/linux/index.rst:20 ../hsm/mac/index.rst:17
#: ../hsm/windows/index.rst:17
msgid ""
"Define SO-PIN and PIN of your own choices. See `these instructions <https://"
"github.com/OpenSC/OpenSC/wiki/SmartCardHSM#initialize-the-device>`_. "
"Afterwards you can begin to `generate new keys <https://github.com/OpenSC/"
"OpenSC/wiki/SmartCardHSM#generate-key-pair>`_."
msgstr ""
"定义你自己选择的SO-PIN和PIN。见`这些说明<https://github.com/OpenSC/OpenSC/"
"wiki/SmartCardHSM#initialize-the-device>`_。之后你可以开始`生成新的钥匙"
"<https://github.com/OpenSC/OpenSC/wiki/SmartCardHSM#generate-key-pair>`_。"

#: ../hsm/pkcs11-url.rst:2
msgid "PKCS#11 URL Generation"
msgstr "PKCS#11 URL的生成"

#: ../hsm/pkcs11-url.rst:9
msgid ""
"Various applications use openssl to handle e.g., TLS certificates. This "
"concept mostly allows simply replacing a file-path (for the secret) with a "
"so-called **PKCS#11 URL** to use a secret from a e.g., Nitrokey."
msgstr ""
"各种应用程序使用openssl来处理例如TLS证书。这个概念主要允许简单地用所谓的"
"**PKCS#11 URL**替换文件路径（用于秘密），以使用来自例如Nitrokey的秘密。"

#: ../hsm/pkcs11-url.rst:16
msgid "ensure ``openssl`` is installed"
msgstr "确保``openssl``被安装。"

#: ../hsm/pkcs11-url.rst:18
msgid ""
"ensure ``openssl`` can use the PKCS#11 engine by installing ``libengine-"
"pkcs11-openssl``"
msgstr ""
"确保``openssl``通过安装``libengine-pkcs11-openssl``可以使用 PKCS#11 引擎。"

#: ../hsm/pkcs11-url.rst:27
msgid "install ``opensc`` and ``gnutls-bin`` for necessary tools"
msgstr "安装``opensc`和``gnutls-bin``以获得必要的工具"

#: ../hsm/pkcs11-url.rst:29
msgid ""
"verify that your needed keys and/or certificates are available on your "
"Nitrokey using ``pkcs15-tool -D``"
msgstr "使用``pkcs15-tool -D``验证您需要的密钥和/或证书在您的Nitrokey上可用。"

#: ../hsm/pkcs11-url.rst:31
msgid ""
"if you want to use ECC keys/mechanisms through ``libengine-pkcs11-openssl``, "
"you'll have to ensure its version is at least 0.4.10"
msgstr ""
"如果你想通过``libengine-pkcs11-openssl``使用ECC密钥/机制，你必须确保其版本至"
"少为0.4.10"

#: ../hsm/pkcs11-url.rst:35
msgid "List and Generate PKCS#11 URLs"
msgstr "列表和生成PKCS#11 URLs"

#: ../hsm/pkcs11-url.rst:37
msgid ""
"Use the following command to get a list of available tokens (Nitrokeys):"
msgstr "使用下面的命令来获得可用令牌的列表（Nitrokeys）。"

#: ../hsm/pkcs11-url.rst:44
msgid ""
"Choose the token (Nitrokey) URL you want to generate URL tokens for and use "
"it like this:"
msgstr "选择你想生成URL令牌（Nitrokey）的URL，并像这样使用它。"

#: ../hsm/pkcs11-url.rst:53
msgid ""
"If you inspect the tail of the URL you'll recognize: ``label``, ``id`` and "
"more, these can be partly removed as long as the necessary objects can be "
"uniquely identified using the resulting URL, see :doc:`TLS Apache2 "
"Configuration<apache2-tls>` for an example using ``id`` only."
msgstr ""
"如果你检查URL的尾部，你会发现。``label``, ``id``等等，这些可以被部分删除，只"
"要必要的对象可以通过生成的URL唯一识别，见:doc:`TLS Apache2 "
"Configuration<apache2-tls>` 对于一个只使用``id`` 的例子。"

#: ../hsm/mac/product_platform_heading.rst:3
msgid "(Nitrokey HSM 2 - macOS)"
msgstr "(Nitrokey HSM 2 - macOS)"

#: ../hsm/mac/index.rst:2
msgid "Nitrokey HSM with macOS"
msgstr "带有MacOS的Nitrokey HSM"

#: ../hsm/mac/index.rst:13 ../hsm/windows/index.rst:13
msgid ""
"Install `OpenSC <https://github.com/OpenSC/OpenSC/wiki>`_. Alternatively, "
"install `this <https://www.cardcontact.de/download/sc-hsm-starterkit.zip>`_ "
"driver (`source <https://github.com/CardContact/sc-hsm-embedded>`_)."
msgstr ""
"安装`OpenSC <https://github.com/OpenSC/OpenSC/wiki>`_。或者，安装`这个"
"<https://www.cardcontact.de/download/sc-hsm-starterkit.zip>`_驱动程序"
"（`source <https://github.com/CardContact/sc-hsm-embedded>`_）。"

#: ../hsm/windows/product_platform_heading.rst:3
msgid "(Nitrokey HSM 2 - Windows)"
msgstr "(Nitrokey HSM 2 - Windows)"

#: ../hsm/windows/index.rst:2
msgid "Nitrokey HSM with Windows"
msgstr "使用Windows的Nitrokey HSM"

#: ../nethsm/api.rst:2
msgid "Accessing a NetHSM using the REST API"
msgstr "使用REST API访问NetHSM"

#: ../nethsm/api.rst:6
msgid ""
"This tutorial demonstrates how to access the NetHMS via REST API. The "
"interface is `documented here <https://nethsmdemo.nitrokey.com/api_docs/"
"index.html#docs/summary/summary>`_ and it's specification is available as "
"`RAML <https://nethsmdemo.nitrokey.com/api_docs/nethsm-api.raml>`_ and as "
"`OpenAPI (Swagger) <https://nethsmdemo.nitrokey.com/api_docs/"
"gen_nethsm_api_oas20.json>`_."
msgstr ""
"本教程演示了如何通过REST API访问NetHMS。该接口`记录在此<https://nethsmdemo."
"nitrokey.com/api_docs/index.html#docs/summary/summary>`_，并且它'的规范可作为"
"`RAML <https://nethsmdemo.nitrokey.com/api_docs/nethsm-api.raml>`_和`OpenAPI"
"（Swagger） <https://nethsmdemo.nitrokey.com/api_docs/gen_nethsm_api_oas20."
"json>`_。"

#: ../nethsm/_tutorial.rst:2
msgid ""
"Before we start, we store the host name of the NetHSM instance in the "
"``NETHSM_HOST`` environment variable.  You can use the public NetHSM demo "
"instance ``nethsmdemo.nitrokey.com`` or run a local demo instance using the "
"NetHSM docker image, see the `Development and Testing </index."
"html#development-and-testing>`_ section of the NetHSM documentation."
msgstr ""
"在开始之前，我们在``NETHSM_HOST``环境变量中存储NetHSM实例的主机名称。  你可以"
"使用公共的NetHSM演示实例``nethsmdemo.nitrokey.com``或者使用NetHSM docker镜像"
"运行一个本地演示实例，见NetHSM文档的`开发和测试</index.html#development-and-"
"testing>`_部分。"

#: ../nethsm/api.rst:17
msgid ""
"If you use a NetHSM demo instance with a self-signed certificate, for "
"example using the Docker image, you will have to use the ``--insecure``/``-"
"k`` option for ``curl`` to skip the certificate check."
msgstr ""
"如果你使用带有自签名证书的NetHSM演示实例，例如使用Docker镜像。你必须使用``--"
"insecure`/``-k``的选项来跳过证书检查。"

#: ../nethsm/_tutorial.rst:2
msgid "First, let’s see what we have here:"
msgstr "首先，让我们看看我们这里有什么。"

#: ../nethsm/api.rst:40
msgid ""
"The ``-i``/``--include`` option causes ``curl`` to print the HTTP status "
"code and the response headers.  The ``-w '\\n'``/``--write-out '\\n'`` "
"option adds a newline after the response body."
msgstr ""
"``-i``/``--include``选项导致``curl``打印 HTTP 状态代码和响应头文件。  ``-w "
"'\\n'``/``--write-out '\\n'``选项在响应体后增加一个换行。"

#: ../nethsm/_tutorial.rst:2
msgid "See what the device’s status is:"
msgstr "看看设备的状态是什么。"

#: ../nethsm/_tutorial.rst:5
msgid ""
"A new NetHSM needs to be provisioned first with passphrases and the current "
"time. The *Admin Passphrase* is the *Administrator*’s passphrase, which is "
"the super user of the NetHSM. The *Unlock Passphrase* is used to encrypt "
"NetHSM’s confidential data store."
msgstr ""
"一个新的NetHSM需要首先配置口令和当前时间。管理员口令*是*管理员*的口令，是"
"NetHSM的超级用户。解锁口令*用于加密NetHSM的机密数据存储。"

#: ../nethsm/_tutorial.rst:12
msgid ""
"The NetHSM demo instance at ``nethsmdemo.nitrokey.com`` is already "
"provisioned."
msgstr "位于``nethsmdemo.nitrokey.com``的NetHSM演示实例已经被配置。"

#: ../nethsm/_tutorial.rst:2
msgid "NetHSM can be used in *Attended Boot* mode and *Unattended Boot* mode."
msgstr "NetHSM可以在*Attended Boot*模式和*Unattended Boot*模式下使用。"

#: ../nethsm/_tutorial.rst:4
msgid ""
"In *Attended Boot* mode the *Unlock Passphrase* needs to be entered during "
"each start which is used to encrypt the data store. For security reasons "
"this mode is recommended."
msgstr ""
"在*Attended Boot*模式下，每次启动时都需要输入*Unlock Passphrase*，用于加密数"
"据存储。出于安全考虑，建议使用这种模式。"

#: ../nethsm/_tutorial.rst:7
msgid ""
"In *Unattended Boot* mode no Unlock Passphrase is required, therefore the "
"NetHSM can start unattended and the data store is stored unencrypted. Use "
"this mode if your availability requirements can’t be fulfilled with "
"*Attended Boot* mode."
msgstr ""
"在*无人值守启动*模式下，不需要解锁密码，因此NetHSM可以在无人值守的情况下启"
"动，而且数据存储是不加密的。如果你的可用性要求无法通过*无人值守启动*模式得到"
"满足，请使用这种模式。"

#: ../nethsm/_tutorial.rst:12
msgid "Retrieve the current mode:"
msgstr "检索当前模式。"

#: ../nethsm/_tutorial.rst:2
msgid "Switch to *Unattended Boot* mode:"
msgstr "切换到*无人值守的启动*模式。"

#: ../nethsm/_tutorial.rst:2
msgid "Or switch back to *Attended Boot* mode:"
msgstr "或者切换回*Attended Boot*模式。"

#: ../nethsm/_tutorial.rst:3
msgid "User Management"
msgstr "用户管理"

#: ../nethsm/_tutorial.rst:3
msgid "Roles"
msgstr "角色"

#: ../nethsm/_tutorial.rst:5
msgid ""
"Separation of duties can be implemented by using the available Roles. Each "
"user account configured on the NetHSM has one of the following Roles "
"assigned to it. Following is a high-level description of the operations "
"allowed by individual Roles, for endpoint-specific details please refer to "
"the REST API documentation."
msgstr ""
"职责分工可以通过使用可用的角色来实现。在NetHSM上配置的每个用户账户都有一个分"
"配给它的下列角色。以下是各个角色所允许的操作的高级描述，关于终端的具体细节，"
"请参考REST API文档。"

#: ../nethsm/_tutorial.rst:11
msgid ""
"*R-Administrator*: A user account with this Role has access to all "
"operations provided by the REST API, with the exception of key usage "
"operations, i.e. message signing and decryption."
msgstr ""
"*R-Administrator*。拥有此角色的用户账户可以访问REST API提供的所有操作，但密钥"
"使用操作除外，即消息签署和解密。"

#: ../nethsm/_tutorial.rst:14
msgid ""
"*R-Operator*: A user account with this Role has access to all key usage "
"operations, a read-only subset of key management operations and user "
"management operations allowing changes to their own account only."
msgstr ""
"*R-Operator*:拥有此角色的用户账户可以访问所有的钥匙使用操作，只读的钥匙管理操"
"作子集和用户管理操作，只允许对他们自己的账户进行更改。"

#: ../nethsm/_tutorial.rst:18
msgid ""
"*R-Metrics*: A user account with this Role has access to read-only metrics "
"operations only."
msgstr "*R-Metrics*。拥有此角色的用户账户只能访问只读的度量衡操作。"

#: ../nethsm/_tutorial.rst:20
msgid ""
"*R-Backup*: A user account with this Role has access to the operations "
"required to initiate a system backup only."
msgstr "*R-Backup*:拥有此角色的用户账户只能访问启动系统备份所需的操作。"

#: ../nethsm/_tutorial.rst:23
msgid ""
"Note: In a future release another Role will be implemented which is allowed "
"to /keys/ POST, /keys/generate POST, /keys/{KeyID} PUT & DELETE, /keys/"
"{KeyID}/cert PUT & DELETE in addition to what R-Operator is allowed to do."
msgstr ""
"注意：在未来的版本中，将实现另一个角色，允许/keys/ POST, /keys/generate "
"POST, /keys/{KeyID} PUT & DELETE, /keys/{KeyID}/cert PUT & DELETE。PUT & "
"DELETE, /keys/{KeyID}/cert PUT & DELETE 除了R-Operator允许做的以外。"

#: ../nethsm/_tutorial.rst:3
msgid "Create a User"
msgstr "创建一个用户"

#: ../nethsm/_tutorial.rst:5
msgid ""
"Now create a new user with the operator role that can be used to sign and "
"decrypt data.  Note that the NetHSM assigns a random user ID if we don’t "
"specify it."
msgstr ""
"现在创建一个具有操作员角色的新用户，可以用来签署和解密数据。  注意，如果我们"
"不指定，NetHSM会随机分配一个用户ID。"

#: ../nethsm/_tutorial.rst:3
msgid "Key Management"
msgstr "关键管理"

#: ../nethsm/_tutorial.rst:5
msgid ""
"The NetHSM supports RSA, ED25519 and ECDSA keys.  When creating a key, you "
"have to select both the key algorithm and the key mechanisms to use.  RSA "
"keys can be used for decryption (with the modes raw, PKCS #1 and OAEP with "
"MD5, SHA1, SHA224, SHA256, SHA384 or SHA512) and for signatures (with the "
"modes PKCS #1 and PSS with MD5, SHA1, SHA224, SHA256, SHA384 or SHA512).  "
"The other algorithms only support the signature mechanism."
msgstr ""
"NetHSM支持RSA、ED25519和ECDSA密钥。  当创建一个密钥时，你必须选择密钥算法和使"
"用的密钥机制。  RSA密钥可用于解密（模式为原始、PKCS #1和OAEP，采用MD5、SHA1、"
"SHA224、SHA256、SHA384或SHA512）和签名（模式为PKCS #1和PSS，采用MD5、SHA1、"
"SHA224、SHA256、SHA384或SHA512）。  其他算法只支持签名机制。"

#: ../nethsm/_tutorial.rst:12
msgid ""
"For a complete list of available key algorithms and key mechanisms, see the "
"API documentation for the KeyAlgorithm_ and KeyMechanism_ types."
msgstr ""
"关于可用的密钥算法和密钥机制的完整列表，请参见KeyAlgorithm_和KeyMechanism_类"
"型的API文档。"

#: ../nethsm/_tutorial.rst:3
msgid "Generate Keys"
msgstr "生成钥匙"

#: ../nethsm/_tutorial.rst:5
msgid ""
"In this guide, we want to use an RSA key to decrypt data using PKCS #1 and "
"to sign data with PSS using SHA256.  So let’s generate a new key on the "
"NetHSM. Make sure to use the ``RSA`` algorithm and to select the "
"``RSA_Signature_PSS_SHA256`` and ``RSA_Decryption_PKCS1`` key mechanisms.  "
"If you don’t specify a key ID, the NetHSM will generate a random ID for the "
"new key."
msgstr ""
"在本指南中，我们想用RSA密钥用PKCS #1解密数据，用PSS用SHA256签署数据。  因此，"
"让我们在NetHSM上生成一个新的密钥。确保使用``RSA``算法，并选择"
"``RSA_Signature_PSS_SHA256`和``RSA_Decryption_PKCS1`</x>`密钥机制。  如果你没"
"有指定一个密钥ID，NetHSM将为新的密钥生成一个随机的ID。"

#: ../nethsm/_tutorial.rst:3
msgid "Import Keys"
msgstr "进口钥匙"

#: ../nethsm/_tutorial.rst:5
msgid ""
"Instead of generating a key on the NetHSM, you can also import existing "
"private keys into the NetHSM:"
msgstr "你也可以将现有的私钥导入NetHSM，而不是在NetHSM上生成一个密钥。"

#: ../nethsm/_tutorial.rst:3
msgid "List Keys"
msgstr "列表键"

#: ../nethsm/_tutorial.rst:5
msgid ""
"To make sure that the key has been created and has the correct algorithm and "
"mechanism settings, we can query all keys on the NetHSM:"
msgstr ""
"为了确保钥匙已经被创建，并且具有正确的算法和机制设置，我们可以查询NetHSM上的"
"所有钥匙。"

#: ../nethsm/_tutorial.rst:5
msgid "Show Key Details"
msgstr "显示关键细节"

#: ../nethsm/_tutorial.rst:7
msgid "We can also query the public key of the generated key pair:"
msgstr "我们还可以查询生成的密钥对的公钥。"

#: ../nethsm/_tutorial.rst:2
msgid ""
"To be able to use the key with ``openssl``, we export it as a PEM file and "
"store it as ``public.pem``:"
msgstr ""
"为了能够用``openssl``使用密钥，我们将其导出为PEM文件，并存储为``public."
"pem``。"

#: ../nethsm/_tutorial.rst:2
msgid ""
"We can inspect the key with ``openssl`` and use it for encryption or "
"signature verification (as described in the next section):"
msgstr ""
"我们可以用``openssl``检查密钥，并将其用于加密或签名验证（如下节所述）。"

#: ../nethsm/_tutorial.rst:3
msgid "Key Certificates"
msgstr "关键证书"

#: ../nethsm/_tutorial.rst:5
msgid ""
"It is possible to set and query certificates for the keys stored on a NetHSM "
"instance:"
msgstr "可以为存储在NetHSM实例上的密钥设置和查询证书。"

#: ../nethsm/_tutorial.rst:3
msgid "Key Certificate Signing Requests"
msgstr "密钥证书签名请求"

#: ../nethsm/_tutorial.rst:5
msgid ""
"The NetHSM supports generating Certificate Signing Requests (CSR) for the "
"stored keys:"
msgstr "NetHSM支持为存储的密钥生成证书签名请求（CSR）。"

#: ../nethsm/_tutorial.rst:3
msgid "Key Operations"
msgstr "关键业务"

#: ../nethsm/_tutorial.rst:3
msgid "Decryption"
msgstr "解密"

#: ../nethsm/_tutorial.rst:5
msgid ""
"We can encrypt data for the key stored on the NetHSM using ``openssl``. "
"(``public.pem`` is the public key file that we created in the `Show Key "
"Details`_ section.)"
msgstr ""
"我们可以使用``openssl``对存储在NetHSM上的密钥进行数据加密。(``public.pem``是"
"我们在`显示密钥细节`_部分创建的公钥文件。)"

#: ../nethsm/_tutorial.rst:15
msgid "Now we can use the NetHSM to decrypt the data:"
msgstr "现在我们可以使用NetHSM来解密数据。"

#: ../nethsm/_tutorial.rst:3 ../nethsm/pkcs11.rst:34
msgid "Signing"
msgstr "签署"

#: ../nethsm/_tutorial.rst:5
msgid ""
"Similarily, we can sign data using the key on the NetHSM.  For RSA and "
"ECDSA, we have to calculate a digest first:"
msgstr ""
"同样地，我们可以使用NetHSM上的密钥来签署数据。  对于RSA和ECDSA，我们必须先计"
"算出一个摘要。"

#: ../nethsm/_tutorial.rst:13
msgid "Then we can create a signature from this digest using the NetHSM:"
msgstr "然后我们可以使用NetHSM从这个摘要中创建一个签名。"

#: ../nethsm/_tutorial.rst:2
msgid "And then use ``openssl`` to verify the signature:"
msgstr "然后用``openssl``来验证签名。"

#: ../nethsm/_tutorial.rst:3
msgid "Backups"
msgstr "备份"

#: ../nethsm/_tutorial.rst:5
msgid ""
"It is possible to crate a backup of the NetHSM that captures both the "
"configuration and the stored keys.  In order to create a backup, you first "
"have to set a backup passphrase that is used to encrypt the backup file:"
msgstr ""
"有可能建立一个NetHSM的备份，同时捕获配置和存储的密钥。  为了创建一个备份，你"
"首先要设置一个备份口令，用来加密备份文件。"

#: ../nethsm/_tutorial.rst:2
msgid "Now you have to create a user with the *R-Backup* role:"
msgstr "现在你必须创建一个具有*R-Backup*角色的用户。"

#: ../nethsm/_tutorial.rst:2
msgid "Then can you generate the backup and write it to a file:"
msgstr "然后你是否可以生成备份并将其写入文件。"

#: ../nethsm/_tutorial.rst:2
msgid "This backup file can be restored on an unprovisioned NetHSM instance:"
msgstr "这个备份文件可以在一个未配置的NetHSM实例上恢复。"

#: ../nethsm/_tutorial.rst:3
msgid "Updates"
msgstr "更新"

#: ../nethsm/_tutorial.rst:5
msgid ""
"Updates for the NetHSM can be installed in a two-step process.  First you "
"have to upload the update image to the NetHSM.  The image is then checked "
"and validated.  If the validation is successful, the release notes for the "
"update are returned by the NetHSM:"
msgstr ""
"NetHSM的更新可以通过两步来安装。  首先，你必须将更新图像上传到NetHSM。  然后"
"对镜像进行检查和验证。  如果验证成功，NetHSM会返回更新的发行说明。"

#: ../nethsm/_tutorial.rst:2
msgid ""
"If you want to continue with the installation, you can now commit the update:"
msgstr "如果你想继续安装，你现在可以提交更新。"

#: ../nethsm/_tutorial.rst:2
msgid "Alternatively, you can cancel the update:"
msgstr "或者，你也可以取消更新。"

#: ../nethsm/cli.rst:2
msgid "Accessing a NetHSM with the nitropy command line tool"
msgstr "用nitropy命令行工具访问NetHSM"

#: ../nethsm/cli.rst:6
msgid ""
"This tutorial demonstrates how to access the NetHMS via `nitropy <https://"
"github.com/Nitrokey/pynitrokey>`_ command line tool, which you need to "
"download and install."
msgstr ""
"本教程演示了如何通过`nitropy <https://github.com/Nitrokey/pynitrokey>`_命令行"
"工具访问NetHMS，你需要下载和安装该工具。"

#: ../nethsm/cli.rst:14
msgid ""
"If you use a NetHSM demo instance with a self-signed certificate, for "
"example using the Docker image, you will have to use the ``--no-verify-tls`` "
"option for ``nitropy`` to skip the certificate check."
msgstr ""
"如果你使用带有自签名证书的NetHSM演示实例，例如使用Docker镜像，你将不得不使用"
"``--no-verify-tls``选项来跳过证书检查。"

#: ../nethsm/index.rst:2
msgid "NetHSM"
msgstr "NetHSM"

#: ../nethsm/index.rst:9
msgid ""
"Connect the NetHSM's ETH3 port with the network. Don't use the ETH0 port "
"because it allows wider system access."
msgstr ""
"将NetHSM的ETH3端口与网络连接。不要使用ETH0端口，因为它允许更广泛的系统访问。"

#: ../nethsm/index.rst:14
msgid ""
"The NetHSM appliance is available at address 192.168.1.1. Access and "
"initialize the NetHSM using `nitropy command line tool <cli.html>`_. "
"Alternatively, the `REST API <api.html>`_ and `PKCS#11 driver <pkcs11."
"html>`_ can be used."
msgstr ""
"NetHSM设备的地址是192.168.1.1。使用`nitropy命令行工具<cli.html>`_访问并初始化"
"NetHSM。另外，也可以使用`REST API <api.html>`_和`PKCS#11驱动 <pkcs11."
"html>`_。"

#: ../nethsm/index.rst:17
msgid "Development and Testing"
msgstr "开发和测试"

#: ../nethsm/index.rst:19
msgid ""
"A public NetHSM demo instance is available at `nethsmdemo.nitrokey.com "
"<https://nethsmdemo.nitrokey.com>`_."
msgstr ""
"在`nethsmdemo.nitrokey.com<https://nethsmdemo.nitrokey.com>`_上有一个公共的"
"NetHSM演示实例。"

#: ../nethsm/index.rst:21
msgid ""
"Alternatively you can run the `NetHSM Docker container <https://hub.docker."
"com/r/nitrokey/nethsm>`_ locally. The NetHSM container requires nested "
"virtualization for strong separation with other containers. Thus, to start a "
"NetHSM container you need a Linux host with /dev/kvm available. Execute this "
"command:"
msgstr ""
"另外，你可以在本地运行`NetHSM Docker容器<https://hub.docker.com/r/nitrokey/"
"nethsm>`_。NetHSM容器需要嵌套的虚拟化，以便与其他容器进行强分离。因此，要启动"
"一个NetHSM容器，你需要一个有/dev/kvm的Linux主机。执行这个命令。"

#: ../nethsm/index.rst:31
msgid "Integration to Custom Application"
msgstr "集成到自定义应用程序"

#: ../nethsm/index.rst:33
msgid ""
"To integrate the NetHSM into own custom applications client libraries are "
"available for almost all programming languages, including JavaScript, C++ "
"and Python for example. Therefore we recommend using `OpenAPI Generator "
"<https://github.com/OpenAPITools/openapi-generator>`_."
msgstr ""
"为了将NetHSM集成到自己的自定义应用程序中，几乎所有的编程语言都可以使用客户端"
"库，例如包括JavaScript、C++和Python。因此我们推荐使用`OpenAPI Generator "
"<https://github.com/OpenAPITools/openapi-generator>`_。"

#: ../nethsm/index.rst:35
msgid "To list all the available languages, you enter"
msgstr "要列出所有可用的语言，你可以输入"

#: ../nethsm/index.rst:41
msgid ""
"Then you can generate the NetHSM client for your programming language like "
"this:"
msgstr "然后你可以像这样为你的编程语言生成NetHSM客户端。"

#: ../nethsm/index.rst:49
msgid ""
"The generated client code, in this example JavaScript, will be created in "
"the ``./out/`` directory. This folder also contains the necessary "
"documentation how to use it."
msgstr ""
"生成的客户端代码，在本例中为JavaScript，将在``./out/``目录下创建。这个文件夹"
"也包含了如何使用它的必要文档。"

#: ../nethsm/pkcs11.rst:2
msgid ""
"This driver is still an early Proof of Concept implementation that only "
"implements the functions that are necessary for operating TLS servers like "
"for example an HTTPS server."
msgstr ""
"这个驱动仍然是一个早期的概念验证实现，只实现了操作TLS服务器（例如HTTPS服务"
"器）所需的功能。"

#: ../nethsm/pkcs11.rst:6
msgid "Accessing a NetHSM using the PKCS#11 driver"
msgstr "使用PKCS#11驱动访问NetHSM"

#: ../nethsm/pkcs11.rst:10
msgid ""
"Download the `PKCS#11 driver <https://github.com/Nitrokey/nethsm-pkcs11>`_ "
"for NetHSM."
msgstr ""
"下载`PKCS#11驱动<https://github.com/Nitrokey/nethsm-pkcs11>`_用于NetHSM。"

#: ../nethsm/pkcs11.rst:11
msgid ""
"Modify the configuration file ``p11nethsm.conf`` according to your setup (e."
"g. address, operator name) and store it in ``$HOME/.nitrokey``, ``/etc/"
"nitrokey/``, or in the folder where your application is executed."
msgstr ""
"根据你的设置（例如，地址）修改配置文件``p11nethsm.conf``，并将其存储在"
"``$HOME/.nitrokey`中。地址、操作员名称），并将其存储在``$HOME/.nitrokey`，``/"
"etc/nitrokey/``，或在执行你的应用程序的文件夹中。"

#: ../nethsm/pkcs11.rst:16
msgid "Decrypting"
msgstr "解密"

#: ../nethsm/pkcs11.rst:18
msgid ""
"After creating a key (here: ID 42) with the according mechanism, you can use "
"it for decryption:"
msgstr "在用相应的机制创建一个密钥（这里：ID42）后，你可以用它来解密。"

#: ../nethsm/pkcs11.rst:36
msgid ""
"After creating a key (here: ID 23) with the according mechanism, you can use "
"it for decryption:"
msgstr "在用相应的机制创建一个密钥（这里：ID 23）后，你可以用它来解密。"

#: ../fido2/faq.rst:2
msgid "Nitrokey FIDO2 FAQ"
msgstr "Nitrokey FIDO2常见问题"

#: ../fido2/faq.rst:17
msgid "**Q:** What happens if I lose my FIDO device?"
msgstr "**问：**如果我丢失了我的FIDO设备会怎样？"

#: ../fido2/faq.rst:12
msgid ""
"When securing accounts using FIDO (two-factor authentication and "
"passwordless login), you should configure another factor in your account as "
"a backup. Depending on the service this backup factor can be a phone number, "
"an app or even a second Nitrokey FIDO2. If you lose a Nitrokey FIDO2, you "
"can still log in with the second Nitrokey FIDO2 (or with another second "
"factor)."
msgstr ""
"在使用FIDO（双因素认证和无密码登录）保护账户安全时，你应该在账户中配置另一个"
"因素作为备份。根据不同的服务，这个备份因素可以是一个电话号码、一个应用程序或"
"甚至第二个Nitrokey FIDO2。如果你丢失了一个Nitrokey FIDO2，你仍然可以用第二个"
"Nitrokey FIDO2（或另一个第二因素）来登录。"

#: ../fido2/faq.rst:20
msgid ""
"The Nitrokey FIDO2 doesn't contain storage capability for ordinary data (it "
"can only store cryptographic keys and certificates)."
msgstr "Nitrokey FIDO2不包含普通数据的存储能力（它只能存储加密密钥和证书）。"

#: ../fido2/index.rst:2
msgid "Nitrokey FIDO2"
msgstr "Nitrokey FIDO2"

#: ../fido2/linux/product_platform_heading.rst:3
msgid "(Nitrokey FIDO2 - Linux)"
msgstr "(Nitrokey FIDO2 - Linux)"

#: ../fido2/linux/index.rst:2
msgid "FIDO2 with Linux"
msgstr "使用Linux的FIDO2"

#: ../fido2/shared/index-content1.rst:10
msgid ""
"The Nitrokey FIDO2 supports two-factor authentication (2FA) and passwordless "
"authentication:"
msgstr "Nitrokey FIDO2支持双因素认证（2FA）和无密码认证。"

#: ../fido2/shared/index-content1.rst:13
msgid ""
"With **passwordless authentication**, entering a password is replaced by "
"logging in with the Nitrokey FIDO2 and a PIN."
msgstr "使用**无密码认证**，输入密码被用Nitrokey FIDO2和PIN码登录所取代。"

#: ../fido2/shared/index-content1.rst:16
msgid ""
"With **two-factor authentication** (2FA), the Nitrokey FIDO2 is checked in "
"addition to the password."
msgstr "使用**双因素认证**（2FA），除了密码外，还检查Nitrokey FIDO2。"

#: ../fido2/shared/index-content1.rst:19
msgid "The Nitrokey FIDO2 can be used with any current browser."
msgstr "Nitrokey FIDO2可与当前任何浏览器一起使用。"

#: ../fido2/shared/index-content1.rst:23
msgid "The Nitrokey App can not be used for the Nitrokey FIDO2."
msgstr "Nitrokey应用程序不能用于Nitrokey FIDO2。"

#: ../fido2/shared/index-content1.rst:27
msgid ""
"`Check online <https://update.nitrokey.com/>`_ if your Nitrokey FIDO2 has "
"the latest firmware installed."
msgstr ""
"`在线检查<https://update.nitrokey.com/>`_您的Nitrokey FIDO2是否安装了最新固"
"件。"

#: ../fido2/shared/index-content1.rst:37
msgid "Now you need to set a PIN for your Nitrokey FIDO2."
msgstr "现在你需要为你的Nitrokey FIDO2设置一个密码。"

#: ../fido2/shared/index-content1.rst:38
msgid "Touch the button of your Nitrokey FIDO2 when prompted."
msgstr "根据提示，触摸你的Nitrokey FIDO2的按钮。"

#: ../fido2/shared/index-content1.rst:39
msgid ""
"Once you have successfully configured the device, you will need to activate "
"your Nitrokey FIDO2 this way each time you log in, after entering your PIN."
msgstr ""
"一旦你成功配置了设备，你就需要在每次登录时，在输入密码后以这种方式激活你的"
"Nitrokey FIDO2。"

#: ../fido2/shared/index-content1.rst:52
msgid ""
"Register your Nitrokey FIDO2 in the account settings by touching the button "
"to activate the Nitrokey FIDO2. After you have successfully configured the "
"device, you must activate the Nitrokey FIDO2 this way each time you log in."
msgstr ""
"在账户设置中触摸激活Nitrokey FIDO2的按钮，注册您的Nitrokey FIDO2。在您成功配"
"置该设备后，您必须在每次登录时以这种方式激活Nitrokey FIDO2。"

#: ../fido2/shared/index-content1.rst:62
msgid "Touch Button and LED Behavior"
msgstr "触摸按钮和LED行为"

#: ../fido2/shared/index-content1.rst:64
msgid ""
"The first FIDO operation is automatically accepted within two seconds after "
"connecting Nitrokey FIDO2. In this case touching the touch button is not "
"required."
msgstr ""
"在连接Nitrokey FIDO2后的两秒内会自动接受第一次FIDO操作。在这种情况下，不需要"
"触碰触摸按钮。"

#: ../fido2/shared/index-content1.rst:68
msgid ""
"Multiple operations can be accepted by a single touch. For this, keep the "
"touch button touched for up to 10 seconds."
msgstr ""
"可以通过一次触摸接受多项操作。为此，请保持触摸按钮的触摸时间不超过10秒。"

#: ../fido2/shared/index-content1.rst:78
msgid "LED Color"
msgstr "LED颜色"

#: ../fido2/shared/index-content1.rst:78
msgid "Event"
msgstr "活动"

#: ../fido2/shared/index-content1.rst:78
msgid "Time Period"
msgstr "时间段"

#: ../fido2/shared/index-content1.rst:78
msgid "Comments"
msgstr "评论"

#: ../fido2/shared/index-content1.rst:80
msgid "Any (blinking)"
msgstr "任何（闪烁）。"

#: ../fido2/shared/index-content1.rst:80
msgid "Awaiting for touch"
msgstr "等待触摸"

#: ../fido2/shared/index-content1.rst:80 ../fido2/shared/index-content1.rst:84
msgid "Until touch is confirmed or timed out"
msgstr "直到触摸被确认或超时结束"

#: ../fido2/shared/index-content1.rst:84
msgid "Any (blinking faster)"
msgstr "任何（闪烁更快）。"

#: ../fido2/shared/index-content1.rst:84
msgid "Touch detected, counting seconds"
msgstr "触摸检测，计秒"

#: ../fido2/shared/index-content1.rst:88
msgid "White (blinks)"
msgstr "白色（闪烁）。"

#: ../fido2/shared/index-content1.rst:88
msgid "Touch request for FIDO registration or authentication operation"
msgstr "对FIDO注册或认证操作的触摸请求"

#: ../fido2/shared/index-content1.rst:88
msgid ""
"Requires 1 second touch to complete; timeout is usually about 30 seconds"
msgstr "需要1秒钟的触摸才能完成；超时时间通常为30秒左右"

#: ../fido2/shared/index-content1.rst:95
msgid "Yellow (blinks)"
msgstr "黄色（闪烁）。"

#: ../fido2/shared/index-content1.rst:95
msgid "Touch request for configuration operation"
msgstr "配置操作的触摸请求"

#: ../fido2/shared/index-content1.rst:95
msgid ""
"Requires 5 seconds touch to complete; e.g. used for activating firmware "
"update mode"
msgstr "需要5秒钟的触摸才能完成；例如，用于激活固件更新模式。"

#: ../fido2/shared/index-content1.rst:103
msgid "Red (blinks)"
msgstr "红色（闪烁）。"

#: ../fido2/shared/index-content1.rst:103
msgid "Touch request for reset operation"
msgstr "复位操作的触摸请求"

#: ../fido2/shared/index-content1.rst:103
msgid ""
"Available only during the very first 10 seconds after Nitrokey is powered"
msgstr "仅在Nitrokey通电后的前10秒内可用。"

#: ../fido2/shared/index-content1.rst:103
msgid ""
"Requires 5 seconds touch to complete; e.g. used for FIDO2 reset operation"
msgstr "需要5秒钟的触摸才能完成；例如用于FIDO2复位操作"

#: ../fido2/shared/index-content1.rst:110
msgid "Green (constant)"
msgstr "绿色（常数）"

#: ../fido2/shared/index-content1.rst:110
msgid ""
"Touch accepted, Nitrokey is active and accepting further FIDO2 operations"
msgstr "触摸接受，Nitrokey处于激活状态，接受进一步的FIDO2操作。"

#: ../fido2/shared/index-content1.rst:110
msgid "After touch was registered, 10 seconds timeout"
msgstr "触摸被登记后，10秒超时"

#: ../fido2/shared/index-content1.rst:110
msgid ""
"For the FIDO registration or authentication operations after a confirmation "
"Nitrokey enters into “activation” mode, auto-accepting any following "
"mentioned operations until touch button is released, but not longer than 10 "
"seconds"
msgstr ""
"对于FIDO注册或认证操作，在确认之后，Nitrokey进入 \"激活 \"模式，自动接受以下"
"提到的任何操作，直到释放触摸按钮，但不超过10秒。"

#: ../fido2/shared/index-content1.rst:130
msgid "Blue (constant)"
msgstr "蓝色（常数）"

#: ../fido2/shared/index-content1.rst:130
msgid "Touch consumed - accepted and used up by the operation"
msgstr "消耗的触摸--被操作所接受和用掉"

#: ../fido2/shared/index-content1.rst:130
msgid "Until touch is released"
msgstr "直到触摸被释放"

#: ../fido2/shared/index-content1.rst:130
msgid ""
"Touch consumption here means, that without releasing the touch button, and "
"touching again the Nitrokey will not confirm any new operations"
msgstr ""
"这里的触摸消耗是指，如果不放开触摸按钮，再次触摸时，硝基键将不会确认任何新的"
"操作。"

#: ../fido2/shared/index-content1.rst:142
msgid "White (single blink)"
msgstr "白色（单次闪烁）。"

#: ../fido2/shared/index-content1.rst:142
msgid "Nitrokey ready to work"
msgstr "硝基钥匙准备工作"

#: ../fido2/shared/index-content1.rst:142
msgid "0.5 seconds after powering up"
msgstr "开机后0.5秒"

#: ../fido2/shared/index-content1.rst:146
#: ../fido2/shared/index-content1.rst:150
msgid "(no LED signal)"
msgstr "(无LED信号)"

#: ../fido2/shared/index-content1.rst:146
msgid "Nitrokey is idle"
msgstr "硝基键是闲置的"

#: ../fido2/shared/index-content1.rst:150
msgid "Auto-accept single FIDO registration or authentication operation"
msgstr "自动接受单个FIDO注册或认证操作"

#: ../fido2/shared/index-content1.rst:150
msgid "Within first 2 seconds after powering up"
msgstr "开机后的前2秒内"

#: ../fido2/shared/index-content1.rst:150
msgid ""
"Nitrokey is automatically accepting any single FIDO registration or "
"authentication operation upon insertion event - the latter is treated as an "
"equivalent of the touch button registration signal (user presence); the conf "
"iguration/reset operations are not accepted"
msgstr ""
"Nitrokey在插入事件中自动接受任何单一的FIDO注册或认证操作--后者被视为等同于触"
"摸按钮的注册信号（用户在场）；不接受配置/重置操作。"

#: ../fido2/shared/index-content1.rst:171
msgid "All colors"
msgstr "所有颜色"

#: ../fido2/shared/index-content1.rst:171
msgid "Nitrokey is in Firmware Update mode"
msgstr "Nitrokey处于固件更新模式"

#: ../fido2/shared/index-content1.rst:171
msgid ""
"Active until firmware update operation is successful, or until reinsertion"
msgstr "激活，直到固件更新操作成功，或直到重新插入。"

#: ../fido2/shared/index-content1.rst:171
msgid ""
"If the firmware update fails, the Nitrokey will stay in the this mode until "
"the firmware is written correctly"
msgstr "如果固件更新失败，Nitrokey将一直处于这种模式，直到固件被正确写入。"

#: ../fido2/linux/index.rst:11
msgid ""
"Copy this file `41-nitrokey.rules <https://www.nitrokey.com/sites/default/"
"files/41-nitrokey.rules>`_ to ``/etc/udev/rules.d/``. In very rare cases, "
"the system will need the `older version <https://raw.githubusercontent.com/"
"Nitrokey/libnitrokey/master/data/41-nitrokey_old.rules>`_ of this file."
msgstr ""
"把这个文件`41-nitrokey.rules <https://www.nitrokey.com/sites/default/"
"files/41-nitrokey.rules>`_复制到``/etc/udev/rules.d/``。在非常罕见的情况下，"
"系统将需要这个文件的`较旧版本<https://raw.githubusercontent.com/Nitrokey/"
"libnitrokey/master/data/41-nitrokey_old.rules>`_。"

#: ../fido2/mac/product_platform_heading.rst:3
msgid "(Nitrokey FIDO2 - macOS)"
msgstr "(Nitrokey FIDO2 - macOS)"

#: ../fido2/mac/index.rst:2
msgid "FIDO2 with macOS"
msgstr "使用MacOS的FIDO2"

#: ../fido2/windows/product_platform_heading.rst:3
msgid "(Nitrokey FIDO2 - Windows)"
msgstr "(Nitrokey FIDO2 - Windows)"

#: ../fido2/windows/index.rst:2
msgid "Nitrokey FIDO2 with Windows"
msgstr "使用Windows的Nitrokey FIDO2"

#~ msgid "# storage"
#~ msgstr "# 储存"

#~ msgid "Configure Hidden Volumes:"
#~ msgstr "配置隐藏卷。"

#~ msgid ""
#~ "Unlock encrypted volume from the Nitrokey App menu. Select \"setup hidden "
#~ "volume\". Now you need to enter a new password twice to protect your "
#~ "hidden volume. The password strength is indicated below."
#~ msgstr ""
#~ "从Nitrokey应用程序菜单中解锁加密的卷。选择\"设置隐藏音量\"。现在你需要输入"
#~ "两次新密码来保护你的隐藏卷。密码的强度如下所示。"

#~ msgid ""
#~ "Note: PINs can only be tried three times only which is why they can be "
#~ "short. Passwords like used for hidden devices can potentially be attacked "
#~ "unlimited which is why they need to be sufficiently strong."
#~ msgstr ""
#~ "注意：密码只能被尝试三次，这就是为什么它们可以很短。像用于隐藏设备的密码有"
#~ "可能被无限攻击，这就是为什么它们需要足够强大。"

#~ msgid ""
#~ "Next you need to define the storage area being used. Hidden volumes are "
#~ "stored in the empty space of the encrypted volume. This is a critical "
#~ "choice because it could destroy data on the (not-hidden) encrypted volume "
#~ "and reveal the existience of the hidden volume."
#~ msgstr ""
#~ "接下来你需要定义被使用的存储区域。隐藏卷被存储在加密卷的空位上。这是一个关"
#~ "键的选择，因为它可能会破坏（非隐藏的）加密卷上的数据，并暴露出隐藏卷的存"
#~ "在。"

#~ msgid ""
#~ "You should use one FAT32 partition on your encrypted volume as journaling "
#~ "filesystems, especially NTFS, may destroy the encrypted data. Copy some "
#~ "files to the encrypted volume prior to creating the hidden volume. Once "
#~ "you configured a hidden volume you shouldn't add or change files on the "
#~ "encrypted volume anymore. Identify the storage space your files consume "
#~ "on the encrypted volume. For example: 10% The hiden volume should start "
#~ "after your files on the encrypted volume. For example: 10% files + 10% "
#~ "buffer = 20% The hidden volume should end in a distance before the end of "
#~ "the storage. For example: 90%"
#~ msgstr ""
#~ "你应该在加密卷上使用一个FAT32分区，因为日记文件系统，特别是NTFS，可能会破"
#~ "坏加密数据。在创建隐藏卷之前，将一些文件复制到加密卷上。一旦你配置了一个隐"
#~ "藏卷，你就不应该再在加密卷上添加或改变文件。确定您的文件在加密卷上所消耗的"
#~ "存储空间。例如：10% T隐藏卷应该在您的文件在加密卷上开始。例如：10% files "
#~ "+ 10% buffer = 20% T他的隐藏卷应该在存储结束前一段距离结束。例如：90%个%。"

#~ msgid ""
#~ "In case you use two or more hidden volumes, note that their storage area "
#~ "must not overlap. Otherwise they would override and destroy each other's "
#~ "data. Each hidden volume would require a different password."
#~ msgstr ""
#~ "如果您使用两个或更多的隐藏卷，请注意它们的存储区域不能重叠。否则它们会覆盖"
#~ "并破坏彼此的数据。每个隐藏卷都需要一个不同的密码。"

#~ msgid "Usage of Hidden Volumes:"
#~ msgstr "隐藏卷的使用。"

#~ msgid ""
#~ "Select \"unlock encrypted volume\" and enter your User PIN. Select "
#~ "\"unlock hidden volume\" and enter any of the hidden volume's passwords. "
#~ "If this is the first time you may need to create a partition on the "
#~ "hidden volume. Windows will open an appropriate window and ask you to do "
#~ "so. On Linux and Mac OS you may need to open a partition manager and "
#~ "create a partition manually. You can create as many partitions as you "
#~ "want. We recommend FAT(32) if you want to access the partition from "
#~ "various operating systems. Make sure to unmount/eject all partitions on "
#~ "the hidden volumes before locking or disconnecting the Nitrokey."
#~ msgstr ""
#~ "选择\"解锁加密卷\"并输入您的用户密码。选择\"解锁隐藏卷\"并输入隐藏卷的任何"
#~ "密码。如果这是第一次，您可能需要在隐藏卷上创建一个分区。Windows会打开一个"
#~ "适当的窗口并要求您这样做。在Linux和Mac OS上，您可能需要打开一个分区管理器"
#~ "并手动创建一个分区。你可以根据自己的需要创建任意多的分区。如果你想从不同的"
#~ "操作系统访问该分区，我们推荐使用FAT(32)。在锁定或断开Nitrokey之前，请确保"
#~ "卸载/弹出隐藏卷上的所有分区。"

#~ msgid "Also see older but comprehensive Nitrokey Storage manual."
#~ msgstr "也可参见较早但全面的Nitrokey存储手册。"

#~ msgid "A new text that should be translated be deepl."
#~ msgstr "一个新的文本，应该被翻译成deepl。"

#~ msgid ""
#~ "The Product Term Nitrokey 3 should not be translated to japanese Kanji."
#~ msgstr "产品术语Nitrokey 3不应该被翻译成日本汉字。"

#~ msgid ""
#~ "This line should be translated also into chinese and Nitrokey Start "
#~ "should not be translated."
#~ msgstr "这句话也应该被翻译成中文，而Nitrokey Start不应该被翻译。"

#~ msgid "Browser specific issues"
#~ msgstr "浏览器的具体问题"

#~ msgid ""
#~ "Currently not all Browsers work with the Nitrokey 3 FIDO2 capabilities. "
#~ "Different sources of the same browser configure it differently and thats "
#~ "why we decided to make a list of browser which work well in our "
#~ "experience:"
#~ msgstr ""
#~ "目前，并非所有的浏览器都能使用Nitrokey 3的FIDO2功能。同一浏览器的不同来源"
#~ "对它的配置是不同的，这就是为什么我们决定列出一个在我们的经验中运行良好的浏"
#~ "览器清单。"

#~ msgid "Operating System"
#~ msgstr "操作系统"

#~ msgid "Browser"
#~ msgstr "浏览器"

#~ msgid "Package Source"
#~ msgstr "包装来源"

#~ msgid "Note"
#~ msgstr "注意事项"

#~ msgid "Fedora 33"
#~ msgstr "Fedora 33"

#~ msgid "Chromium 94.0+"
#~ msgstr "铬94.0以上"

#~ msgid "Fedora Packages"
#~ msgstr "Fedora 软件包"

#~ msgid "Firefox 94.0+"
#~ msgstr "火狐94.0以上"

#~ msgid "Does not work sometimes"
#~ msgstr "有时不工作"

#~ msgid "Chromium 96+"
#~ msgstr "铬96+"

#~ msgid "Snap"
#~ msgstr "捕捉"

#~ msgid "Ubuntu 20.04"
#~ msgstr "Ubuntu 20.04"

#~ msgid "Firefox 94+"
#~ msgstr "火狐94+"

#~ msgid "Debian Packages"
#~ msgstr "蝶变软件包"

#~ msgid "Debian 11 & 10"
#~ msgstr "Debian 11 & 10"

#~ msgid "Firefox 78+ ESR"
#~ msgstr "火狐78+ ESR"

#~ msgid "Chromium 90+"
#~ msgstr "铬90+"

#~ msgid "Arch Linux"
#~ msgstr "拱形的Linux"

#~ msgid "Firefox 88+"
#~ msgstr "火狐88+"

#~ msgid "Arch Packages"
#~ msgstr "拱门包"

#~ msgid "Mac Os 12"
#~ msgstr "Mac Os 12"

#~ msgid "Firefox.com"
#~ msgstr "Firefox.com"

#~ msgid "We are currently testing more browsers to complete the table."
#~ msgstr "我们目前正在测试更多的浏览器以完成该表。"
