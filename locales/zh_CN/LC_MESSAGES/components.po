# SOME DESCRIPTIVE TITLE.
# Copyright (C) Nitrokey
# This file is distributed under the same license as the Nitrokey
# Documentation package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
msgid ""
msgstr ""
"Project-Id-Version: Nitrokey Documentation\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-09-27 12:37+0000\n"
"PO-Revision-Date: 2024-09-25 18:59+0000\n"
"Last-Translator: DeepL <noreply-mt-deepl@weblate.org>\n"
"Language: zh_CN\n"
"Language-Team: Chinese (Simplified Han script) <http://docstest-"
"weblate.nitrokey.com/projects/nitrokey-documentation/components/zh_Hans/>"
"\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../components/fido2/2fa-nextcloud.rst:2
msgid ""
"These are the basic steps for registering the Nitrokey FIDO2 as a second "
"factor or setting up passwordless login of a Nextcloud account."
msgstr "以上是将 Nitrokey FIDO2 注册为第二要素或设置 Nextcloud 账户无密码登录的基本步骤。"

#: ../components/fido2/faq.rst:2
msgid "Nitrokey FIDO2 FAQ"
msgstr "Nitrokey FIDO2 常见问题"

#: ../components/fido2/faq.rst:6 ../components/nitrokey3/faq.rst:5
#: ../components/shared-faqs/nitrokeys.rst.inc:2
msgid "**Q:** Which Operating Systems are supported?"
msgstr "**问：** 支持哪些操作系统？"

#: ../components/fido2/faq.rst:5
msgid "Windows, Linux, and Mac OS X. Also some support (FIDO2) for Android."
msgstr "Windows、Linux 和 Mac OS X。还支持部分安卓系统（FIDO2）。"

#: ../components/fido2/faq.rst:9 ../components/nitrokey3/faq.rst:8
#: ../components/shared-faqs/nitrokeys.rst.inc:7
msgid "**Q:** What can I use the Nitrokey for?"
msgstr "**问：** Nitrokey 可以用来做什么？"

#: ../components/fido2/faq.rst:9 ../components/shared-faqs/nitrokeys.rst.inc:5
msgid ""
"See the `overview <https://www.nitrokey.com/products/nitrokeys>`_ of "
"supported use cases."
msgstr "请参阅受支持用例的 \"概览 <https://www.nitrokey.com/products/nitrokeys>`_\"。"

#: ../components/fido2/faq.rst:17
msgid "**Q:** What happens if I lose my FIDO device?"
msgstr "**问：** 如果我丢失了 FIDO 设备，该怎么办？"

#: ../components/fido2/faq.rst:12
msgid ""
"When securing accounts using FIDO (two-factor authentication and "
"passwordless login), you should configure another factor in your account "
"as a backup. Depending on the service this backup factor can be a phone "
"number, an app or even a second Nitrokey FIDO2. If you lose a Nitrokey "
"FIDO2, you can still log in with the second Nitrokey FIDO2 (or with "
"another second factor)."
msgstr ""
"使用 "
"FIDO（双因素身份验证和无密码登录）保护账户安全时，应在账户中配置另一个因素作为备份。根据服务的不同，这个备份因素可以是一个电话号码、一个应用程序，甚至是第二个"
" Nitrokey FIDO2。如果您丢失了一个 Nitrokey FIDO2，您仍然可以用第二个 Nitrokey "
"FIDO2（或另一个因素）登录。"

#: ../components/fido2/faq.rst:21 ../components/nitrokey3/faq.rst:31
#: ../components/pro/faq.rst:69 ../components/start/faq.rst:38
#: ../components/storage/faq.rst:21
msgid "**Q:** How large is the storage capacity?"
msgstr "**问：** 存储容量有多大？"

#: ../components/fido2/faq.rst:20
msgid ""
"The Nitrokey FIDO2 doesn't contain storage capability for ordinary data "
"(it can only store cryptographic keys and certificates)."
msgstr "Nitrokey FIDO2 不具备存储普通数据的功能（只能存储加密密钥和证书）。"

#: ../components/fido2/faq.rst:25
msgid "**Q:** How to use Nitrokey FIDO2 with Azure Entra ID (Active Directory)?"
msgstr "**问：** 如何将 Nitrokey FIDO2 与 Azure Entra ID（活动目录）一起使用？"

#: ../components/fido2/faq.rst:24
msgid ""
"After `disabling Enforce Attestation`_ Nitrokey FIDO2 is supported by "
"Azure Entra ID out of the box."
msgstr "在 \"禁用强制认证 \"后，Azure Entra ID 即可支持 Nitrokey FIDO2。"

#: ../components/fido2/index.rst:8 ../components/hsm/index.rst:8
#: ../components/nitrokey3/index.rst:20 ../components/nitropad/index.rst:8
#: ../components/nitropc/index.rst:9 ../components/nitrophone/index.rst:19
#: ../components/pro/index.rst:9 ../components/start/index.rst:8
#: ../components/storage/index.rst:8
msgid "Frequently Asked Questions"
msgstr "常见问题"

#: ../components/fido2/index.rst:16 ../components/hsm/index.rst:16
#: ../components/nextbox/clients/index.rst:8
#: ../components/nitrokey3/index.rst:29 ../components/pro/index.rst:17
#: ../components/software/nitropy/all-platforms/installation.rst:117
#: ../components/software/nitropy/index.rst:6 ../components/start/index.rst:16
#: ../components/storage/index.rst:16 ../components/u2f/index.rst:8
msgid "Windows"
msgstr "视窗"

#: ../components/fido2/index.rst:16 ../components/hsm/index.rst:16
#: ../components/nitrokey3/index.rst:29 ../components/pro/index.rst:17
#: ../components/start/index.rst:16 ../components/storage/index.rst:16
#: ../components/u2f/index.rst:8
msgid "macOS"
msgstr "MacOS"

#: ../components/fido2/index.rst:16 ../components/hsm/index.rst:16
#: ../components/nextbox/clients/index.rst:8
#: ../components/nitrokey3/index.rst:29 ../components/pro/index.rst:17
#: ../components/software/nitropy/all-platforms/installation.rst:124
#: ../components/software/nitropy/index.rst:6 ../components/start/index.rst:16
#: ../components/storage/index.rst:16 ../components/u2f/index.rst:8
msgid "Linux"
msgstr "利纳克斯"

#: ../components/fido2/index.rst:2
msgid "Nitrokey FIDO2"
msgstr "Nitrokey FIDO2"

#: ../components/fido2/index.rst:6 ../components/hsm/index.rst:6
#: ../components/nitrokey3/index.rst:18 ../components/nitropad/index.rst:6
#: ../components/nitropc/index.rst:7 ../components/pro/index.rst:7
#: ../components/start/index.rst:6 ../components/storage/index.rst:6
msgid "First check the:"
msgstr "首先检查"

#: ../components/fido2/index.rst:14 ../components/hsm/index.rst:14
#: ../components/nitropad/index.rst:14 ../components/nitropc/index.rst:15
#: ../components/pro/index.rst:15 ../components/start/index.rst:14
#: ../components/storage/index.rst:14
msgid "or choose your operating system:"
msgstr "或选择操作系统："

#: ../components/fido2/linux/2fa-nextcloud.rst:2
#: ../components/fido2/mac/2fa-nextcloud.rst:2
#: ../components/fido2/windows/2fa-nextcloud.rst:2
#: ../components/u2f/linux/2fa-nextcloud.rst:2
#: ../components/u2f/mac/2fa-nextcloud.rst:2
#: ../components/u2f/windows/2fa-nextcloud.rst:2
msgid "Two-Factor Authentication And Passwordless Login For Nextcloud Accounts"
msgstr "Nextcloud 账户的双因素身份验证和无密码登录"

#: ../components/fido2/2fa-odoo.rst.inc:2 ../components/pro/2fa-odoo.rst.inc:2
msgid "Two-Factor Authentication For ERP Software Odoo"
msgstr "企业资源规划软件 Odoo 的双因素身份验证"

#: ../components/fido2/2fa-odoo.rst.inc:8 ../components/pro/2fa-odoo.rst.inc:8
msgid ""
"`Odoo <https://www.odoo.com/>`__ is a powerful ERP (Enterprise Resource "
"Planning) software for companies of all sizes. Odoo is available as open "
"source and contains modules for CRM, website, e-commerce, accounting, "
"financial accounting, production, warehouse management, project "
"management, document management, among others."
msgstr ""
"`Odoo <https://www.odoo.com/>`__ 是一款功能强大的企业资源规划（ERP）软件，适用于各种规模的公司。Odoo "
"是开源软件，包含客户关系管理、网站、电子商务、会计、财务会计、生产、仓库管理、项目管理、文档管理等模块。"

#: ../components/fido2/2fa-odoo.rst.inc:10
#: ../components/pro/2fa-odoo.rst.inc:10
msgid ""
"The secure access to such a central software is especially important and "
"can now be realized with the Nitrokey. For this purpose access is "
"protected by two-factor authentication (2FA) and critical users are given"
" a Nitrokey. From now on during login the Nitrokey will be checked in "
"addition to the user's password. Phishing attacks are thus foiled and "
"your critical company data is protected."
msgstr ""
"安全访问这样一个中央软件尤为重要，现在可以通过 Nitrokey 来实现。为此，访问受双因素身份验证（2FA）保护，关键用户将获得一个 "
"Nitrokey。从现在起，用户登录时除了要输入密码外，还要检查 Nitrokey。这样就能挫败网络钓鱼攻击，保护您的重要公司数据。"

#: ../components/fido2/2fa-odoo.rst.inc:12
#: ../components/pro/2fa-odoo.rst.inc:12
msgid ""
"The two-factor authentication can be carried out using one-time passwords"
" (TOTP, RFC 6238) and FIDO U2F, thus enabling Nitrokey Pro, Nitrokey "
"Storage and Nitrokey FIDO U2F to be used. It is also possible to "
"configure authentication centrally and to activate it only for selected "
"users."
msgstr ""
"双因素身份验证可以使用一次性密码（TOTP，RFC 6238）和 FIDO U2F 进行，因此可以使用 Nitrokey Pro、Nitrokey"
" Storage 和 Nitrokey FIDO U2F。还可以集中配置身份验证，并仅对选定用户激活。"

#: ../components/fido2/2fa-odoo.rst.inc:14
#: ../components/pro/2fa-odoo.rst.inc:14
msgid ""
"The FIDO solution was developed together with our partner `initOS "
"<https://www.initos.com/>`__, who are specialized in the development and "
"customization of Odoo. If you are interested, `contact us "
"<https://www.nitrokey.com/contact>`__."
msgstr ""
"FIDO解决方案是与我们的合作伙伴 \"initOS "
"<https://www.initos.com/>`__\"共同开发的，他们专门从事Odoo的开发和定制。如果您对此感兴趣，请与我们联系 "
"<https://www.nitrokey.com/contact>`__。"

#: ../components/fido2/2fa-odoo.rst.inc:21
msgid "Video: Two-Factor Authentication With The Nitrokey FIDO U2F in Odoo"
msgstr "视频：在 Odoo 中使用 Nitrokey FIDO U2F 进行双因素身份验证"

#: ../components/fido2/linux/desktop-login.rst:2
msgid "Desktop Login And Linux User Authentication"
msgstr "桌面登录和 Linux 用户身份验证"

#: ../components/fido2/linux/desktop-login.rst:7
#: ../components/start/setting-kdf-do.rst.inc:7
msgid "Introduction"
msgstr "导言"

#: ../components/fido2/linux/desktop-login.rst:9
#, fuzzy
msgid ""
"This guide will walk you through the configuration of Linux to use FIDO "
"Universal 2nd Factor, i.e. FIDO U2F with ``libpam-u2f`` and Nitrokey "
"FIDO2."
msgstr ""
"本指南将指导您配置 Linux 以使用 FIDO 通用第二因子，即使用 `libpam-u2f`` 和 Nitrokey FIDO2 的 FIDO"
" U2F。"

#: ../components/fido2/linux/desktop-login.rst:11
msgid ""
"If you want to login to you computer using `Nitrokey Pro 2, "
"<https://shop.nitrokey.com/shop/product/nk-pro-2-nitrokey-pro-2-3>`__ "
"`Nitrokey Storage 2 <https://shop.nitrokey.com/shop/product/nitrokey-"
"storage-2-56>`__ and `Nitrokey Start "
"<https://shop.nitrokey.com/shop/product/nk-sta-nitrokey-start-6>`__ you "
"can visit the instructions available `here <../../pro/linux/login-with-"
"pam.html>`_."
msgstr ""
"如果您想使用 `Nitrokey Pro 2、<https://shop.nitrokey.com/shop/product/nk-pro-2"
"-nitrokey-pro-2-3>`__ `Nitrokey Storage 2 "
"<https://shop.nitrokey.com/shop/product/nitrokey-storage-2-56>`__ 和 "
"`Nitrokey Start <https://shop.nitrokey.com/shop/product/nk-sta-nitrokey-"
"start-6>`__ 登录您的计算机，您可以访问 `此处 <.../../pro/linux/login-with-pam.html>`_ "
"的说明。"

#: ../components/fido2/linux/desktop-login.rst:16
#: ../components/nextbox/external-storage.rst:12
#: ../components/pro/linux/automatic-screen-lock.rst:11
#: ../components/pro/linux/disk-encryption-luks.rst:24
msgid "Requirements"
msgstr "要求"

#: ../components/fido2/linux/desktop-login.rst:18
msgid "Ubuntu 20.04 with Gnome Display Manager."
msgstr "带有 Gnome 显示管理器的 Ubuntu 20.04。"

#: ../components/fido2/linux/desktop-login.rst:20
msgid ""
"Nitrokey FIDO2 configured following `these instructions "
"<https://docs.nitrokey.com/fido2/linux>`__."
msgstr "Nitrokey FIDO2 按照 \"这些说明 <https://docs.nitrokey.com/fido2/linux>`__\"进行配置。"

#: ../components/fido2/linux/desktop-login.rst:24
#: ../components/pro/linux/disk-encryption-luks.rst:47
msgid "Instructions"
msgstr "说明"

#: ../components/fido2/linux/desktop-login.rst:27
msgid "GUI Method"
msgstr "图形用户界面方法"

#: ../components/fido2/linux/desktop-login.rst:29
msgid ""
"**In the lower left corner click on** ``Show Applications`` **and type "
"settings in the search bar as following:**"
msgstr "**在左下角点击**\"显示应用程序\"，然后在搜索栏中输入以下设置：**"

#: ../components/fido2/linux/desktop-login.rst
#: ../components/fido2/windows/passwordless-microsoft.rst
#: ../components/hsm/smime.rst.inc:-1 ../components/nextbox/gettingstarted.rst
#: ../components/nextbox/technical/factory-reset.rst:-1
#: ../components/nextbox/technical/soft-reset.rst:-1
#: ../components/nitropad/content/shared-index-content1.rst:-1
#: ../components/nitropad/default-boot.rst.inc:-1
#: ../components/nitropad/factory-reset.rst.inc:-1
#: ../components/nitropad/firmware-update.rst.inc:-1
#: ../components/nitropad/qubes/network-settings.rst
#: ../components/nitropad/qubes/nitrokey-app.rst
#: ../components/nitropad/system-update.rst.inc:-1
#: ../components/nitropad/troubleshooting.rst.inc
#: ../components/nitropad/ubuntu/change-disk-encryption-passphrase.rst
#: ../components/pro/2fa-nextcloud.rst.inc:-1
#: ../components/pro/change-pins.rst.inc:-1
#: ../components/pro/eidauthenticate.rst.inc:-1 ../components/pro/gpa.rst
#: ../components/pro/linux/disk-encryption-luks.rst:-1
#: ../components/pro/openpgp-keygen-gpa.rst.inc:-1
#: ../components/pro/openpgp-outlook.rst.inc:-1
#: ../components/pro/openpgp-thunderbird.rst.inc:-1
#: ../components/pro/otp.rst.inc:-1 ../components/pro/putty.rst.inc:-1
#: ../components/pro/smart-policy.rst.inc:-1
#: ../components/pro/smime-outlook.rst.inc:-1
#: ../components/pro/smime-thunderbird.rst.inc:-1
#: ../components/pro/smime.rst.inc:-1
#: ../components/pro/windows/2fa-microsoft.rst:-1
#: ../components/pro/windows/openpgp-csp.rst:-1
#: ../components/pro/windows/openvpn-viscosity.rst
#: ../components/storage/firmware-update-manually.rst:-1
#: ../components/storage/windows/index.rst
msgid "img1"
msgstr "img1"

#: ../components/fido2/linux/desktop-login.rst:34
msgid "**Scroll down in the right bar to** ``Users``"
msgstr "**在右栏向下滚动** \"用户"

#: ../components/fido2/linux/desktop-login.rst
#: ../components/fido2/windows/passwordless-microsoft.rst
#: ../components/nextbox/gettingstarted.rst
#: ../components/nitropad/content/shared-index-content1.rst:-1
#: ../components/nitropad/default-boot.rst.inc:-1
#: ../components/nitropad/factory-reset.rst.inc:-1
#: ../components/nitropad/firmware-update.rst.inc:-1
#: ../components/nitropad/qubes/network-settings.rst
#: ../components/nitropad/qubes/nitrokey-app.rst
#: ../components/nitropad/system-update.rst.inc:-1
#: ../components/nitropad/troubleshooting.rst.inc
#: ../components/nitropad/ubuntu/change-disk-encryption-passphrase.rst
#: ../components/pro/2fa-nextcloud.rst.inc:-1
#: ../components/pro/change-pins.rst.inc:-1
#: ../components/pro/eidauthenticate.rst.inc:-1 ../components/pro/gpa.rst
#: ../components/pro/linux/disk-encryption-luks.rst:-1
#: ../components/pro/openpgp-keygen-gpa.rst.inc:-1
#: ../components/pro/openpgp-outlook.rst.inc:-1
#: ../components/pro/openpgp-thunderbird.rst.inc:-1
#: ../components/pro/otp.rst.inc:-1 ../components/pro/putty.rst.inc:-1
#: ../components/pro/smart-policy.rst.inc:-1
#: ../components/pro/smime-outlook.rst.inc:-1
#: ../components/pro/smime-thunderbird.rst.inc:-1
#: ../components/pro/windows/2fa-microsoft.rst:-1
#: ../components/pro/windows/openpgp-csp.rst:-1
#: ../components/pro/windows/openvpn-viscosity.rst
#: ../components/storage/firmware-update-manually.rst:-1
msgid "img2"
msgstr "img2"

#: ../components/fido2/linux/desktop-login.rst:39
msgid ""
"**In the left corner click on** ``Unlock`` **and that would prompt for "
"your password**"
msgstr "**在左上角点击** ``Unlock`` **，系统会提示输入密码**。"

#: ../components/fido2/linux/desktop-login.rst
#: ../components/fido2/windows/passwordless-microsoft.rst
#: ../components/nitropad/default-boot.rst.inc:-1
#: ../components/nitropad/factory-reset.rst.inc:-1
#: ../components/nitropad/firmware-update.rst.inc:-1
#: ../components/nitropad/qubes/index.rst
#: ../components/nitropad/qubes/network-settings.rst
#: ../components/nitropad/qubes/nitrokey-app.rst
#: ../components/nitropad/system-update.rst.inc:-1
#: ../components/nitropad/ubuntu/change-disk-encryption-passphrase.rst
#: ../components/nitropad/ubuntu/index.rst
#: ../components/pro/2fa-nextcloud.rst.inc:-1
#: ../components/pro/change-pins.rst.inc:-1
#: ../components/pro/eidauthenticate.rst.inc:-1 ../components/pro/gpa.rst
#: ../components/pro/linux/disk-encryption-luks.rst:-1
#: ../components/pro/openpgp-keygen-gpa.rst.inc:-1
#: ../components/pro/openpgp-outlook.rst.inc:-1
#: ../components/pro/openpgp-thunderbird.rst.inc:-1
#: ../components/pro/otp.rst.inc:-1 ../components/pro/putty.rst.inc:-1
#: ../components/pro/smart-policy.rst.inc:-1
#: ../components/pro/smime-outlook.rst.inc:-1
#: ../components/pro/smime-thunderbird.rst.inc:-1
#: ../components/pro/windows/2fa-microsoft.rst:-1
#: ../components/pro/windows/openpgp-csp.rst:-1
#: ../components/pro/windows/openvpn-viscosity.rst
#: ../components/storage/firmware-update-manually.rst:-1
msgid "img3"
msgstr "img3"

#: ../components/fido2/linux/desktop-login.rst:45
msgid ""
"**Select** ``Administrator`` **and enter the user name and password of "
"your choice**"
msgstr "**选择** ``Administrator`` **并输入您选择的用户名和密码**"

#: ../components/fido2/linux/desktop-login.rst
#: ../components/fido2/windows/passwordless-microsoft.rst
#: ../components/nitropad/content/shared-index-content2.rst:-1
#: ../components/nitropad/default-boot.rst.inc:-1
#: ../components/nitropad/factory-reset.rst.inc:-1
#: ../components/nitropad/firmware-update.rst.inc:-1
#: ../components/nitropad/system-update.rst.inc:-1
#: ../components/nitropad/ubuntu/change-disk-encryption-passphrase.rst
#: ../components/pro/2fa-nextcloud.rst.inc:-1
#: ../components/pro/change-pins.rst.inc:-1
#: ../components/pro/eidauthenticate.rst.inc:-1 ../components/pro/gpa.rst
#: ../components/pro/openpgp-keygen-gpa.rst.inc:-1
#: ../components/pro/openpgp-outlook.rst.inc:-1
#: ../components/pro/openpgp-thunderbird.rst.inc:-1
#: ../components/pro/otp.rst.inc:-1 ../components/pro/putty.rst.inc:-1
#: ../components/pro/smart-policy.rst.inc:-1
#: ../components/pro/smime-thunderbird.rst.inc:-1
#: ../components/pro/windows/2fa-microsoft.rst:-1
#: ../components/pro/windows/openpgp-csp.rst:-1
#: ../components/pro/windows/openvpn-viscosity.rst
#: ../components/storage/firmware-update-manually.rst:-1
msgid "img4"
msgstr "img4"

#: ../components/fido2/linux/desktop-login.rst:51
msgid "**Once you finish Step 4 you should be done**"
msgstr "**完成第 4 步后即可**"

#: ../components/fido2/linux/desktop-login.rst
#: ../components/fido2/windows/passwordless-microsoft.rst
#: ../components/nitropad/default-boot.rst.inc:-1
#: ../components/nitropad/factory-reset.rst.inc:-1
#: ../components/nitropad/firmware-update.rst.inc:-1
#: ../components/nitropad/qubes/nitrokey-app.rst
#: ../components/nitropad/system-update.rst.inc:-1
#: ../components/pro/2fa-nextcloud.rst.inc:-1
#: ../components/pro/eidauthenticate.rst.inc:-1 ../components/pro/gpa.rst
#: ../components/pro/linux/disk-encryption-luks.rst:-1
#: ../components/pro/openpgp-keygen-gpa.rst.inc:-1
#: ../components/pro/openpgp-thunderbird.rst.inc:-1
#: ../components/pro/otp.rst.inc:-1 ../components/pro/putty.rst.inc:-1
#: ../components/pro/smart-policy.rst.inc:-1
#: ../components/pro/windows/2fa-microsoft.rst:-1
#: ../components/pro/windows/openpgp-csp.rst:-1
#: ../components/storage/firmware-update-manually.rst:-1
msgid "img5"
msgstr "img5"

#: ../components/fido2/linux/desktop-login.rst:57
msgid "CLI Method"
msgstr "CLI 方法"

#: ../components/fido2/linux/desktop-login.rst:59
msgid "**Create a backup user and give it root privileges**"
msgstr "**创建备份用户并赋予其 root 权限**"

#: ../components/fido2/linux/desktop-login.rst:61
msgid "You can do so by using these commands:"
msgstr "您可以使用这些命令来实现："

#: ../components/fido2/linux/desktop-login.rst:69
msgid ""
"In case you prefer to setup U2F for a single user, and are locked out of "
"your user session, you would still be able to login with the "
"``<backup_user>``, and proceed with the maintenance."
msgstr "如果您想为单个用户设置 U2F，但被锁定在用户会话之外，您仍然可以使用 ``<backup_user>`` 登录，并继续进行维护。"

#: ../components/fido2/linux/desktop-login.rst:75
msgid ""
"The following guide can potentially lock you out of your computer. You "
"should be aware of these risks, as it is recommended to first use the "
"instructions below on a secondary computer, or after a full backup."
msgstr "以下指南可能会将你锁定在电脑之外。你应该意识到这些风险，因为建议首先在第二台电脑上使用下面的说明，或在完整备份后使用。"

#: ../components/fido2/linux/desktop-login.rst:80
msgid ""
"You might lose access to your data after configuring `PAM modules "
"<https://www.man7.org/linux/man-pages/man8/pam.8.html>`__."
msgstr ""
"配置 `PAM 模块 <https://www.man7.org/linux/man-pages/man8/pam.8.html>`__ "
"后，您可能无法访问数据。"

#: ../components/fido2/linux/desktop-login.rst:84
msgid "**Set up the** ``rules`` **to recognize the Nitrokey FIDO2**"
msgstr "**设置**\"规则 \"**以识别 Nitrokey FIDO2**"

#: ../components/fido2/linux/desktop-login.rst:86
msgid "Under ``/etc/udev/rules.d`` download ``41-nitrokey.rules``"
msgstr "在 ``/etc/udev/rules.d`` 下下载 ``41-nitrokey.rules"

#: ../components/fido2/linux/desktop-login.rst:93
msgid "And restart ``udev`` service"
msgstr "然后重启 ``udev`` 服务"

#: ../components/fido2/linux/desktop-login.rst:99
msgid "**Install** ``libpam-u2f``"
msgstr "**安装** ``libpam-u2f``"

#: ../components/fido2/linux/desktop-login.rst:101
msgid ""
"On Ubuntu 20.04 it is possible to download directly ``libpam-u2f`` from "
"the official repos"
msgstr "在 Ubuntu 20.04 上，可以直接从官方软件仓库下载 ``libpam-u2f``."

#: ../components/fido2/linux/desktop-login.rst:109
msgid "Click for more options"
msgstr "点击查看更多选项"

#: ../components/fido2/linux/desktop-login.rst:111
msgid ""
"Alternatively you can build ``libpam-u2f`` from `Git "
"<https://github.com/phoeagon/pam-u2f>`__."
msgstr "或者，你也可以从 `Git <https://github.com/phoeagon/pam-u2f>`__ 中构建 ``libpam-u2f``。"

#: ../components/fido2/linux/desktop-login.rst:114
msgid ""
"To verify that the library is properly installed enter the following "
"command:"
msgstr "要验证程序库是否已正确安装，请输入以下命令："

#: ../components/fido2/linux/desktop-login.rst:121
msgid "The Output should be something like the following:"
msgstr "输出结果应如下所示："

#: ../components/fido2/linux/desktop-login.rst:128
msgid "**Prepare the Directory**"
msgstr "**准备目录**"

#: ../components/fido2/linux/desktop-login.rst:130
msgid "Create ``.config/Nitrokey/`` under your home directory"
msgstr "在主目录下创建``.config/Nitrokey/``。"

#: ../components/fido2/linux/desktop-login.rst:136
msgid "And plug your Nitrokey FIDO2."
msgstr "然后插入 Nitrokey FIDO2。"

#: ../components/fido2/linux/desktop-login.rst:138
msgid ""
"Once done with the preparation, we can start to configure the computer to"
" use the Nitrokey FIDO2 for 2nd factor authentication at login and "
"``sudo``."
msgstr "准备工作完成后，我们就可以开始配置计算机，以便在登录和 \"sudo \"时使用 Nitrokey FIDO2 进行第二要素身份验证。"

#: ../components/fido2/linux/desktop-login.rst:140
msgid "**Generate the U2F config file**"
msgstr "**生成 U2F 配置文件**"

#: ../components/fido2/linux/desktop-login.rst:142
msgid ""
"To generate the configuration file we will use the ``pamu2fcfg`` utility "
"that comes with the ``libpam-u2f``. For convenience, we will directly "
"write the output of the utility to the ``u2f_keys`` file under "
"``.config/Nitrokey``. First plug your Nitrokey FIDO2 (if you did not "
"already), and enter the following command:"
msgstr ""
"要生成配置文件，我们将使用 ``libpam-u2f`` 附带的 ``pamu2fcfg` "
"工具。为方便起见，我们将直接把实用程序的输出写入``.config/Nitrokey``下的``u2f_keys``文件。首先插入 "
"Nitrokey FIDO2（如果尚未插入），然后输入以下命令："

#: ../components/fido2/linux/desktop-login.rst:148
msgid ""
"Once you run the command above, you will need to touch the key while it "
"flashes. Once done, ``pamu2fcfg`` will append its output the ``u2f_keys``"
" in the following format:"
msgstr "运行上述命令后，您需要在按键闪烁时触摸按键。完成后，`pamu2fcfg`` 会将其输出以下列格式添加到`u2f_keys``中："

#: ../components/fido2/linux/desktop-login.rst:154
msgid ""
"Note, the output will be much longer, but sensitive parts have been "
"removed here. For better security, and once the config file generated, we"
" will move the ``.config/Nitrokey`` directory under the ``etc/`` "
"directory with this command:"
msgstr ""
"注意，输出结果会更长，但敏感部分已在此删除。为了提高安全性，配置文件生成后，我们将使用此命令把 ``.config/Nitrokey`` 目录移到"
" ``etc/`` 目录下："

#: ../components/fido2/linux/desktop-login.rst:163
msgid "The file under ``.config/Nitrokey`` must be named ``u2f_keys``"
msgstr ".config/Nitrokey \"下的文件必须命名为 \"u2f_keys"

#: ../components/fido2/linux/desktop-login.rst:165
msgid ""
"It is recommended to first test the instructions with a single user. For "
"this purpose the previous command takes the ``-u`` option, to specify a "
"user, like in the example below:"
msgstr "建议先用单个用户测试指令。为此，前面的命令会使用 ``-u` 选项指定一个用户，如下例所示："

#: ../components/fido2/linux/desktop-login.rst:174
msgid ""
"For individual user configuration you should point to the home directory "
"in the next step, or not include the ``authfile`` option in the PAM "
"configuration."
msgstr "对于单个用户配置，应在下一步中指向主目录，或在 PAM 配置中不包含 ``authfile`` 选项。"

#: ../components/fido2/linux/desktop-login.rst:178
msgid "**Backup**"
msgstr "**备份**"

#: ../components/fido2/linux/desktop-login.rst:180
msgid ""
"This step is optional, however it is advised to have a backup Nitrokey in"
" the case of loss, theft or destruction of your Nitrokey FIDO."
msgstr "这一步是可选的，但建议您准备一个备份 Nitrokey，以防 Nitrokey FIDO 丢失、被盗或损毁。"

#: ../components/fido2/linux/desktop-login.rst:182
msgid ""
"To set up a backup key, repeat the procedure above, and use ``pamu2fcfg "
"-n``. This will omit the ``<username>`` field, and the output can be "
"appended to the line with your ``<username>`` like this:"
msgstr ""
"要设置备份密钥，请重复上述步骤，并使用 ``pamu2fcfg -n``。这将省略 ``<username>`` "
"字段，输出结果可以像这样附加到包含 ``<username>`` 的行中："

#: ../components/fido2/linux/desktop-login.rst:188
msgid "**Modify the Pluggable Authentication Module** ``PAM``"
msgstr "**修改可插拔身份验证模块** ``PAM``"

#: ../components/fido2/linux/desktop-login.rst:190
msgid ""
"The final step is configure the PAM module files under ``/etc/pam.d/``. "
"In this guide we will modify the ``common-auth`` file as it handles the "
"authentication settings which are common to all services, but other "
"options are possible. You can modify the file with the following command:"
msgstr ""
"最后一步是配置 ``/etc/pam.d/`` 下的 PAM 模块文件。在本指南中，我们将修改 ``common-auth`` "
"文件，因为该文件处理所有服务通用的身份验证设置，但也可以使用其他选项。您可以使用以下命令修改该文件："

#: ../components/fido2/linux/desktop-login.rst:197
msgid "And add the following lines at the top of the file:"
msgstr "并在文件顶部添加以下几行："

#: ../components/fido2/linux/desktop-login.rst:206
msgid ""
"Since we are using Central Authentication Mapping, we need to tell "
"``pam_u2f`` the location of the file to use with the ``authfile`` option."
msgstr "由于我们使用的是中央身份验证映射，因此需要用 ``authfile`` 选项告诉 ``pam_u2f`` 要使用的文件的位置。"

#: ../components/fido2/linux/desktop-login.rst:210
msgid ""
"If you often forget to insert the key, ``prompt`` option make ``pam_u2f``"
" print ``Insert your U2F device, then press ENTER.`` and give you a "
"chance to insert the Nitrokey."
msgstr "如果你经常忘记插入密钥，``prompt``选项会让``pam_u2f``打印``插入你的U2F设备，然后按ENTER.``并给你一个机会插入Nitrokey。"

#: ../components/fido2/linux/desktop-login.rst:214
msgid ""
"If you would like to be prompted to touch the Nitrokey, ``cue`` option "
"will make ``pam_u2f`` print ``Please touch the device.`` message."
msgstr "如果你希望提示你触摸 Nitrokey，`cue`` 选项将使 `pam_u2f` 打印``请触摸设备.``信息。"

#: ../components/fido2/linux/desktop-login.rst:218
msgid ""
"`nouserok` will ensure that you can still login using the username and "
"password, you might want to remove this at some point once the setup is "
"working and you don't want regular username & password based logins."
msgstr "nouserok \"将确保您仍然可以使用用户名和密码登录，您可能希望在设置工作完成后的某个时候移除此选项，而不希望使用常规的用户名和密码登录。"

#: ../components/fido2/linux/desktop-login.rst:222
msgid "Once we modified the ``common-auth``, we can save and exit the file."
msgstr "修改``common-auth``后，我们就可以保存并退出文件了。"

#: ../components/fido2/linux/desktop-login.rst:224
msgid ""
"You can test the configuration by typing ``sudo ls`` in the terminal. You"
" should be prompted the message ``Please touch the device.`` and have a "
"similar output on the terminal:"
msgstr ""
"你可以在终端输入 ``sudo ls`` 来测试配置。你应该会看到提示信息 ``Please touch the "
"device.``，终端上也会有类似的输出："

#: ../components/fido2/linux/desktop-login.rst:231
msgid ""
"You can also test your configuration by logging out of the user session "
"and logging back. A similar screen should be displayed once you you "
"unplug/replug yout Nitrokey FIDO2 and type your password:"
msgstr "您还可以退出用户会话并重新登录来测试您的配置。拔下/重新拔下 Nitrokey FIDO2 插头并输入密码后，就会出现类似的屏幕："

#: ../components/fido2/linux/desktop-login.rst
#: ../components/fido2/windows/passwordless-microsoft.rst
#: ../components/nitropad/default-boot.rst.inc:-1
#: ../components/nitropad/factory-reset.rst.inc:-1
#: ../components/nitropad/firmware-update.rst.inc:-1
#: ../components/nitropad/qubes/nitrokey-app.rst
#: ../components/nitropad/system-update.rst.inc:-1
#: ../components/pro/2fa-nextcloud.rst.inc:-1
#: ../components/pro/eidauthenticate.rst.inc:-1 ../components/pro/gpa.rst
#: ../components/pro/linux/disk-encryption-luks.rst:-1
#: ../components/pro/openpgp-keygen-gpa.rst.inc:-1
#: ../components/pro/openpgp-thunderbird.rst.inc:-1
#: ../components/pro/otp.rst.inc:-1 ../components/pro/putty.rst.inc:-1
#: ../components/pro/smart-policy.rst.inc:-1
#: ../components/pro/windows/2fa-microsoft.rst:-1
#: ../components/pro/windows/openpgp-csp.rst:-1
msgid "img6"
msgstr "img6"

#: ../components/fido2/linux/desktop-login.rst:237
#: ../components/hsm/smime.rst.inc:32 ../components/hsm/smime.rst.inc:52
#: ../components/pro/linux/automatic-screen-lock.rst:81
#: ../components/pro/linux/disk-encryption-luks.rst:137
#: ../components/pro/linux/hard-disk-encryption.rst:114
#: ../components/pro/openpgp-outlook.rst.inc:24
#: ../components/pro/smime-outlook.rst.inc:34
#: ../components/pro/smime-thunderbird.rst.inc:43
#: ../components/pro/smime.rst.inc:32 ../components/pro/smime.rst.inc:52
#: ../components/pro/windows/openvpn-viscosity.rst:37
#: ../components/shared/openpgp.rst.inc:42
#: ../components/software/nk-app2/passwords.rst:16
#: ../components/start/multiple-identities.rst.inc:13
#: ../components/to-be-integrated.rst:210
msgid "Usage"
msgstr "使用方法"

#: ../components/fido2/linux/desktop-login.rst:239
msgid ""
"After the PAM module modification, you will be able to test your "
"configuration right away, but it is recommended to reboot your computer, "
"and unplug/replug the Nitrokey FIDO2."
msgstr "修改 PAM 模块后，您可以立即测试配置，但建议您重启计算机，并拔下/重新拔下 Nitrokey FIDO2 插头。"

#: ../components/fido2/linux/desktop-login.rst:241
msgid ""
"Once you have properly tested the instructions in this guide (and set up "
"a backup), it is recommended to use either the ``required`` or the "
"``requisite`` control flag instead of ``sufficient``."
msgstr ""
"一旦正确测试了本指南中的说明（并设置了备份），建议使用 ``required`` 或 ``requisite`` 控制标志，而不是 "
"``sufficient``。"

#: ../components/fido2/linux/desktop-login.rst:243
msgid ""
"The flags ``required`` and ``requisite`` provide a tighter access "
"control, and will make the Nitrokey FIDO2 necessary to login, and/or use "
"the configured service."
msgstr "必须 \"和 \"先决条件 \"标志提供更严格的访问控制，使 Nitrokey FIDO2 成为登录和/或使用配置服务的必要条件。"

#: ../components/fido2/linux/desktop-login.rst:245
msgid ""
"If you need more information about Control Flags in the ``PAM`` "
"configuration line, you may see the last section of this guide to "
"understand the difference, and the implications of using each of them."
msgstr "如果您需要更多关于 ``PAM`` 配置行中控制标志的信息，请参阅本指南的最后一节，以了解它们的区别以及使用每种标志的意义。"

#: ../components/fido2/linux/desktop-login.rst:249
msgid "PAM Modules"
msgstr "PAM 模块"

#: ../components/fido2/linux/desktop-login.rst:251
msgid ""
"There are several PAM modules files that can be modified according to "
"your needs:"
msgstr "有几个 PAM 模块文件可以根据需要进行修改："

#: ../components/fido2/linux/desktop-login.rst:253
msgid ""
"By modifying ``/etc/pam.d/common-auth`` file, you will be able to use you"
" Nitrokey FIDO for 2nd factor authentication for graphic login and "
"``sudo``. Note: ``common-auth`` should be modified by adding the "
"additional configuration line at the end of the file."
msgstr ""
"通过修改 ``/etc/pam.d/common-auth`` 文件，您就可以使用 Nitrokey FIDO 对图形登录和 ``sudo`` "
"进行第二要素身份验证。注意：修改 ``common-auth`` 时应在文件末尾添加附加配置行。"

#: ../components/fido2/linux/desktop-login.rst:258
msgid ""
"If you wish to use FIDO U2F authentication solely for Gnome’s graphic "
"login, you might prefer to modify the\\ ``/etc/pam.d/gdm-password``"
msgstr "如果您只想在 Gnome 的图形登录中使用 FIDO U2F 身份验证，您可能更愿意修改``/etc/pam.d/gdm-password``。"

#: ../components/fido2/linux/desktop-login.rst:261
msgid ""
"Alternatively you can just modify the ``/etc/pam.d/sudo`` file if you "
"wish to use FIDO U2F when using the ``sudo`` command."
msgstr "如果您希望在使用 ``sudo`` 命令时使用 FIDO U2F，也可以直接修改 ``/etc/pam.d/sudo`` 文件。"

#: ../components/fido2/linux/desktop-login.rst:265
msgid "Control Flags"
msgstr "控制标志"

#: ../components/fido2/linux/desktop-login.rst:267
msgid ""
"In step 7 we have used the ``sufficient`` control flag to determine the "
"behavior of the PAM module when the Nitrokey is plugged or not. However "
"it is possible to change this behavior by using the following control "
"flags:"
msgstr ""
"在步骤 7 中，我们使用了 \"sufficient\"（足够）控制标志来确定 PAM 模块在 Nitrokey "
"插入或未插入时的行为。不过，我们可以使用以下控制标志来改变这种行为："

#: ../components/fido2/linux/desktop-login.rst:269
msgid ""
"``required``: This is the most critical flag. The module result must be "
"successful for authentication to continue. This flag can lock you out of "
"your computer if you do not have access to the Nitrokey."
msgstr "`必要``：这是最关键的标志。模块结果必须成功，身份验证才能继续。如果您无法访问 Nitrokey，该标记可能会将您锁定在计算机之外。"

#: ../components/fido2/linux/desktop-login.rst:273
msgid ""
"``requisite``: Similar to ``required`` however, in the case where a "
"specific module returns a failure, control is directly returned to the "
"application, or to the superior PAM stack. This flag can also lock you "
"out of your computer if you do not have access to the Nitrokey."
msgstr ""
"必要条件\"：与 ``required`` 类似，但在特定模块返回失败的情况下，控制权会直接返回应用程序或上级 PAM 堆栈。如果你没有访问 "
"Nitrokey 的权限，该标记也会将你锁定在计算机之外。"

#: ../components/fido2/linux/desktop-login.rst:279
msgid ""
"``sufficient``: The module result is ignored if it fails. The "
"``sufficient`` flag considered to be safe for testing purposes."
msgstr "`sufficient``：如果失败，模块结果将被忽略。为测试目的，`sufficient``标志被认为是安全的。"

#: ../components/fido2/linux/desktop-login.rst:282
msgid ""
"``optional``: The success or failure of this module is only important if "
"it is the only module in the stack associated with this service+type. The"
" ``optional`` flag is considered to be safe to use for testing purposes."
msgstr "可选模块：只有当该模块是堆栈中与此服务+类型相关的唯一模块时，该模块的成败才重要。在测试中使用 ``optional`` 标志是安全的。"

#: ../components/fido2/linux/desktop-login.rst:289
msgid ""
"If ``required`` or ``requisite`` is set, the failure of U2F "
"authentication will cause a failure of the overall authentication. "
"Failure will occur when the configured Nitrokey FIDO is not plugged, lost"
" or destroyed."
msgstr ""
"如果设置了 ``required`` 或 ``requisite`` ，U2F 身份验证失败将导致整个身份验证失败。当配置的 Nitrokey "
"FIDO 没有插入、丢失或毁坏时，就会发生失败。"

#: ../components/fido2/linux/desktop-login.rst:294
msgid ""
"You will lose access to your computer if you mis-configured the PAM "
"module *and* used the ``required`` or ``requisite`` flags."
msgstr "如果您错误配置了 PAM 模块 ** 并使用了 ``required`` 或 ``requisite`` 标记，您将失去访问计算机的权限。"

#: ../components/fido2/linux/desktop-login.rst:297
msgid ""
"You will also lose the ability to use ``sudo`` if you set up Central "
"Authentication Mapping *and* used the ``required`` or ``requisite`` "
"flags."
msgstr "如果设置了 \"中央身份验证映射 \"**并使用了 \"必需 \"或 \"先决 \"标记，您还将失去使用 \"sudo \"的能力。"

#: ../components/fido2/shared/firmware-update.rst.inc:2
#: ../components/nitrokey3/firmware-update.rst.inc:2
#: ../components/nitropad/firmware-update.rst.inc:2
#: ../components/nitrowall/nw750/firmware-update.rst:2
#: ../components/pro/firmware-update.rst.inc:2
#: ../components/start/linux/firmware-update.rst:2
#: ../components/storage/linux/firmware-update.rst:2
#: ../components/storage/windows/firmware-update.rst:2
msgid "Firmware Update"
msgstr "固件更新"

#: ../components/fido2/shared/firmware-update.rst.inc:4
msgid "This guide describes how to update the firmware on the Nitrokey FIDO2."
msgstr "本指南介绍如何更新 Nitrokey FIDO2 的固件。"

#: ../components/fido2/shared/firmware-update.rst.inc:7
msgid ""
"User Data is retained during firmware update. Anyways, be sure to "
"**always** have another device (or login method) registered with your "
"service, if for some reason your data is not retained."
msgstr "固件更新时会保留用户数据。总之，如果由于某种原因无法保留数据，请务必****在服务中注册另一个设备（或登录方法）。"

#: ../components/fido2/shared/firmware-update.rst.inc:10
#: ../components/nitrokey3/firmware-update.rst.inc:20
#: ../components/nitrokey3/linux/firmware-update-qubes.rst:25
#: ../components/pro/firmware-update.rst.inc:15
msgid "How to Update"
msgstr "如何更新"

#: ../components/fido2/shared/firmware-update.rst.inc:13
msgid ""
"Never disconnect the Nitrokey FIDO2 or abort the process while updating, "
"this will likely render your device useless!"
msgstr "在更新过程中，切勿断开 Nitrokey FIDO2 连接或中止更新过程，否则可能会导致设备无法使用！"

#: ../components/fido2/shared/firmware-update.rst.inc:17
msgid "Webupdate"
msgstr "网络更新"

#: ../components/fido2/shared/firmware-update.rst.inc:19
msgid ""
"The easiest way to update a Nitrokey FIDO2 is to open "
"`update.nitrokey.com <https://update.nitrokey.com>`_ in your browser and "
"follow the instructions on the web page."
msgstr ""
"更新 Nitrokey FIDO2 的最简单方法是在浏览器中打开 `update.nitrokey.com "
"<https://update.nitrokey.com>`_，然后按照网页上的说明操作。"

#: ../components/fido2/shared/firmware-update.rst.inc:22
msgid "Using the command line"
msgstr "使用命令行"

#: ../components/fido2/shared/firmware-update.rst.inc:24
msgid ""
"If the webupdate doesn't work for you, you can also use our command line "
"tool."
msgstr "如果 webupdate 对您不起作用，您也可以使用我们的命令行工具。"

#: ../components/fido2/shared/firmware-update.rst.inc:26
#: ../components/nitrokey3/firmware-update.rst.inc:26
#: ../components/software/nitropy/all-platforms/test.rst:7
msgid ""
"Make sure you have the latest `pynitrokey` version installed, please "
"check the `installation instructions`_ for your OS."
msgstr "请确保您安装了最新的 `pynitrokey` 版本，请查看您操作系统的 `安装说明"

#: ../components/fido2/shared/firmware-update.rst.inc:27
msgid "Run ``nitropy fido2 update``."
msgstr "运行 \"nitropy fido2 update\"。"

#: ../components/fido2/shared/firmware-update.rst.inc:28
#: ../components/nitrokey3/firmware-update.rst.inc:28
msgid "Once instructed by ``nitropy`` touch the device to activate bootloader."
msgstr "根据 \"nitropy \"的指示，触摸设备以激活启动加载程序。"

#: ../components/fido2/shared/firmware-update.rst.inc:29
#: ../components/nitrokey3/firmware-update.rst.inc:29
msgid "*macOS only:* If instructed by ``nitropy`` run update command again."
msgstr "*仅适用于 macOS：* 如果收到 ``nitropy`` 的指示，请再次运行更新命令。"

#: ../components/fido2/shared/firmware-update.rst.inc:30
msgid ""
"Please wait until the process finished. (This may vary depending on your "
"operating system"
msgstr "请等待进程结束。(这可能因操作系统而异"

#: ../components/fido2/shared/firmware-update.rst.inc:32
#: ../components/nitrokey3/firmware-update.rst.inc:33
#: ../components/nitrokey3/linux/firmware-update-qubes.rst:38
#: ../components/software/nitropy/all-platforms/test.rst:29
msgid ""
"In case of any errors please take the logs from ``/tmp`` directory "
"(``/tmp/nitropy.log.*``)."
msgstr "如果出现任何错误，请从 ``/tmp`` 目录 (``/tmp/nitropy.log.*``) 中提取日志。"

#: ../components/fido2/linux/index.rst:2
msgid "FIDO2 With Linux"
msgstr "使用 Linux 的 FIDO2"

#: ../components/fido2/shared/index-content1.rst.inc:1
msgid ""
"The Nitrokey FIDO2 supports two-factor authentication (2FA) and "
"passwordless authentication:"
msgstr "Nitrokey FIDO2 支持双因素身份验证（2FA）和无密码身份验证："

#: ../components/fido2/shared/index-content1.rst.inc:4
msgid ""
"With **passwordless authentication**, entering a password is replaced by "
"logging in with the Nitrokey FIDO2 and a PIN."
msgstr "使用**无密码身份验证**，输入密码将被 Nitrokey FIDO2 和 PIN 码所取代。"

#: ../components/fido2/shared/index-content1.rst.inc:7
msgid ""
"With **two-factor authentication** (2FA), the Nitrokey FIDO2 is checked "
"in addition to the password."
msgstr "使用**双因素身份验证**（2FA）时，除密码外，还要检查 Nitrokey FIDO2。"

#: ../components/fido2/shared/index-content1.rst.inc:10
msgid "The Nitrokey FIDO2 can be used with any current browser."
msgstr "Nitrokey FIDO2 可与当前任何浏览器配合使用。"

#: ../components/fido2/shared/index-content1.rst.inc:14
msgid "The Nitrokey App can not be used for the Nitrokey FIDO2."
msgstr "Nitrokey App 不能用于 Nitrokey FIDO2。"

#: ../components/fido2/shared/index-content1.rst.inc:18
msgid ""
"`Check online <https://update.nitrokey.com/>`__ if your Nitrokey FIDO2 "
"has the latest firmware installed."
msgstr "在线检查 <https://update.nitrokey.com/>`__ 您的 Nitrokey FIDO2 是否安装了最新固件。"

#: ../components/fido2/shared/index-content1.rst.inc:22
#: ../components/nitrokey3/shared/main.rst:13
msgid "Passwordless Authentication"
msgstr "无密码身份验证"

#: ../components/fido2/shared/index-content1.rst.inc:24
msgid ""
"Open a web page that supports FIDO2 (for example `Google "
"<https://myaccount.google.com/>`__)."
msgstr "打开支持 FIDO2 的网页（例如 `Google <https://myaccount.google.com/>`__）。"

#: ../components/fido2/shared/index-content1.rst.inc:26
msgid ""
"Log in to the website and go to “Passkeys and security keys” in the "
"security settings of your account."
msgstr "登录网站，进入账户安全设置中的 \"密码和安全密钥\"。"

#: ../components/fido2/shared/index-content1.rst.inc:28
msgid "Click on Create passkey."
msgstr "点击创建密码。"

#: ../components/fido2/shared/index-content1.rst.inc:29
msgid "Click on Use a different device."
msgstr "单击使用不同设备。"

#: ../components/fido2/shared/index-content1.rst.inc:30
msgid "Follow the prompts to set a PIN for your Nitrokey FIDO2."
msgstr "按照提示为 Nitrokey FIDO2 设置 PIN 码。"

#: ../components/fido2/shared/index-content1.rst.inc:31
msgid "Touch the button of your Nitrokey FIDO2 when prompted."
msgstr "按提示轻触 Nitrokey FIDO2 按钮。"

#: ../components/fido2/shared/index-content1.rst.inc:32
msgid ""
"Once you have successfully configured the device, you will need to "
"activate your Nitrokey FIDO2 this way each time you log in, after "
"entering your PIN."
msgstr "成功配置设备后，每次登录都需要在输入密码后以这种方式激活 Nitrokey FIDO2。"

#: ../components/fido2/shared/index-content1.rst.inc:37
#: ../components/nitrokey3/shared/main.rst:25
#: ../components/u2f/shared/index-content1.rst:8
msgid "Two-Factor Authentication (2FA)"
msgstr "双因素验证 (2FA)"

#: ../components/fido2/shared/index-content1.rst.inc:39
#: ../components/nitrokey3/shared/main.rst:27
#: ../components/u2f/shared/index-content1.rst:10
msgid ""
"Open one of the `websites that support FIDO U2F "
"<https://www.dongleauth.com/>`__."
msgstr "打开 \"支持 FIDO U2F <https://www.dongleauth.com/>`__ 的网站 \"之一。"

#: ../components/fido2/shared/index-content1.rst.inc:41
msgid ""
"Log in to the website and enable two-factor authentication in your "
"account settings. (In most cases you will find a link to the "
"documentation of the supported web service at `dongleauth.com "
"<https://www.dongleauth.com/>`__)"
msgstr ""
"登录网站并在账户设置中启用双因素身份验证。(在大多数情况下，您可以在 `dongleauth.com "
"<https://www.dongleauth.com/>`__ 找到所支持网络服务的文档链接）。"

#: ../components/fido2/shared/index-content1.rst.inc:45
msgid ""
"Register your Nitrokey FIDO2 in the account settings by touching the "
"button to activate the Nitrokey FIDO2. After you have successfully "
"configured the device, you must activate the Nitrokey FIDO2 this way each"
" time you log in."
msgstr ""
"在账户设置中点击激活 Nitrokey FIDO2 的按钮，注册您的 Nitrokey FIDO2。成功配置设备后，每次登录时都必须这样激活 "
"Nitrokey FIDO2。"

#: ../components/fido2/shared/index-content1.rst.inc:50
#: ../components/nitrokey3/shared/main.rst:38
#: ../components/u2f/shared/index-content1.rst:21
msgid "You are now ready to go."
msgstr "现在您可以出发了。"

#: ../components/fido2/shared/index-content1.rst.inc:53
msgid "Touch Button And LED Behavior"
msgstr "触摸按钮和 LED 行为"

#: ../components/fido2/shared/index-content1.rst.inc:55
msgid ""
"The first FIDO operation is automatically accepted within two seconds "
"after connecting Nitrokey FIDO2. In this case touching the touch button "
"is not required."
msgstr "连接 Nitrokey FIDO2 后，第一次 FIDO 操作会在两秒内自动接受。在这种情况下，无需触摸触摸按钮。"

#: ../components/fido2/shared/index-content1.rst.inc:59
msgid ""
"Multiple operations can be accepted by a single touch. For this, keep the"
" touch button touched for up to 10 seconds."
msgstr "单次触摸可进行多项操作。为此，请保持触摸按钮长达 10 秒钟。"

#: ../components/fido2/shared/index-content1.rst.inc:62
#: ../components/fido2/shared/index-content2.rst.inc:8
msgid ""
"To avoid accidental and malicious reset of the Nitrokey, the required "
"touch confirmation time for the FIDO2 reset operation is longer and with "
"a distinct LED behavior (red LED light) than normal operations. To reset "
"the Nitrokey FIDO2, confirm by touching the touch button for at least 5 "
"seconds until the green or blue LED lights up."
msgstr ""
"为避免意外和恶意重置 Nitrokey，FIDO2 重置操作所需的触摸确认时间要比正常操作长，且 LED 指示灯（红色 LED "
"灯）要明显亮起。要重置 Nitrokey FIDO2，请触摸触摸按钮确认至少 5 秒钟，直到绿色或蓝色 LED 灯亮起。"

#: ../components/fido2/shared/index-content1.rst.inc:69
msgid "LED Color"
msgstr "LED 颜色"

#: ../components/fido2/shared/index-content1.rst.inc:69
msgid "Event"
msgstr "活动"

#: ../components/fido2/shared/index-content1.rst.inc:69
msgid "Time Period"
msgstr "时间段"

#: ../components/fido2/shared/index-content1.rst.inc:69
msgid "Comments"
msgstr "评论"

#: ../components/fido2/shared/index-content1.rst.inc:71
msgid "Any (blinking)"
msgstr "任意（闪烁）"

#: ../components/fido2/shared/index-content1.rst.inc:71
msgid "Awaiting for touch"
msgstr "等待触摸"

#: ../components/fido2/shared/index-content1.rst.inc:71
#: ../components/fido2/shared/index-content1.rst.inc:75
msgid "Until touch is confirmed or timed out"
msgstr "直到触摸确认或超时"

#: ../components/fido2/shared/index-content1.rst.inc:75
msgid "Any (blinking faster)"
msgstr "任何（闪烁速度更快）"

#: ../components/fido2/shared/index-content1.rst.inc:75
msgid "Touch detected, counting seconds"
msgstr "检测到触摸，开始计秒"

#: ../components/fido2/shared/index-content1.rst.inc:79
msgid "White (blinks)"
msgstr "白色（闪烁）"

#: ../components/fido2/shared/index-content1.rst.inc:79
msgid "Touch request for FIDO registration or authentication operation"
msgstr "FIDO 注册或身份验证操作的触摸请求"

#: ../components/fido2/shared/index-content1.rst.inc:79
msgid "Requires 1 second touch to complete; timeout is usually about 30 seconds"
msgstr "需要 1 秒钟触摸完成；超时通常为 30 秒左右"

#: ../components/fido2/shared/index-content1.rst.inc:86
msgid "Yellow (blinks)"
msgstr "黄色（闪烁）"

#: ../components/fido2/shared/index-content1.rst.inc:86
msgid "Touch request for configuration operation"
msgstr "配置操作的触摸请求"

#: ../components/fido2/shared/index-content1.rst.inc:86
msgid ""
"Requires 5 seconds touch to complete; e.g. used for activating firmware "
"update mode"
msgstr "需要触摸 5 秒钟才能完成；例如用于激活固件更新模式"

#: ../components/fido2/shared/index-content1.rst.inc:94
msgid "Red (blinks)"
msgstr "红色（闪烁）"

#: ../components/fido2/shared/index-content1.rst.inc:94
msgid "Touch request for reset operation"
msgstr "触摸复位操作请求"

#: ../components/fido2/shared/index-content1.rst.inc:94
msgid "Available only during the very first 10 seconds after Nitrokey is powered"
msgstr "仅在 Nitrokey 接通电源后的最初 10 秒内可用"

#: ../components/fido2/shared/index-content1.rst.inc:94
msgid "Requires 5 seconds touch to complete; e.g. used for FIDO2 reset operation"
msgstr "需要 5 秒钟触摸才能完成；例如用于 FIDO2 重置操作"

#: ../components/fido2/shared/index-content1.rst.inc:101
msgid "Green (constant)"
msgstr "绿色（恒定）"

#: ../components/fido2/shared/index-content1.rst.inc:101
msgid "Touch accepted, Nitrokey is active and accepting further FIDO2 operations"
msgstr "触摸接受，Nitrokey 已激活并接受进一步的 FIDO2 操作"

#: ../components/fido2/shared/index-content1.rst.inc:101
msgid "After touch was registered, 10 seconds timeout"
msgstr "登记触摸后，10 秒超时"

#: ../components/fido2/shared/index-content1.rst.inc:101
msgid ""
"For the FIDO registration or authentication operations after a "
"confirmation Nitrokey enters into “activation” mode, auto-accepting any "
"following mentioned operations until touch button is released, but not "
"longer than 10 seconds"
msgstr ""
"对于确认后的 FIDO 注册或身份验证操作，Nitrokey 会进入 \"激活 \"模式，自动接受下列任何操作，直到触摸按钮被释放，但不超过 10"
" 秒钟"

#: ../components/fido2/shared/index-content1.rst.inc:121
msgid "Blue (constant)"
msgstr "蓝色（恒定）"

#: ../components/fido2/shared/index-content1.rst.inc:121
msgid "Touch consumed - accepted and used up by the operation"
msgstr "触摸消耗 - 操作过程中接受和使用"

#: ../components/fido2/shared/index-content1.rst.inc:121
msgid "Until touch is released"
msgstr "直到触摸被释放"

#: ../components/fido2/shared/index-content1.rst.inc:121
msgid ""
"Touch consumption here means, that without releasing the touch button, "
"and touching again the Nitrokey will not confirm any new operations"
msgstr "这里的 \"触摸消耗 \"是指，如果不松开触摸按钮，再次触摸 Nitrokey 将不会确认任何新的操作。"

#: ../components/fido2/shared/index-content1.rst.inc:133
msgid "White (single blink)"
msgstr "白色（单闪）"

#: ../components/fido2/shared/index-content1.rst.inc:133
msgid "Nitrokey ready to work"
msgstr "硝化钥匙准备就绪"

#: ../components/fido2/shared/index-content1.rst.inc:133
msgid "0.5 seconds after powering up"
msgstr "开机后 0.5 秒"

#: ../components/fido2/shared/index-content1.rst.inc:137
#: ../components/fido2/shared/index-content1.rst.inc:141
msgid "(no LED signal)"
msgstr "(无 LED 信号）"

#: ../components/fido2/shared/index-content1.rst.inc:137
msgid "Nitrokey is idle"
msgstr "Nitrokey 闲置"

#: ../components/fido2/shared/index-content1.rst.inc:141
msgid "Auto-accept single FIDO registration or authentication operation"
msgstr "自动接受单个 FIDO 注册或身份验证操作"

#: ../components/fido2/shared/index-content1.rst.inc:141
msgid "Within first 2 seconds after powering up"
msgstr "开机后 2 秒内"

#: ../components/fido2/shared/index-content1.rst.inc:141
msgid ""
"Nitrokey is automatically accepting any single FIDO registration or "
"authentication operation upon insertion event - the latter is treated as "
"an equivalent of the touch button registration signal (user presence); "
"the conf iguration/reset operations are not accepted"
msgstr ""
"Nitrokey 在插入事件发生时自动接受任何单个 FIDO 注册或身份验证操作 - "
"后者被视为等同于触摸按钮注册信号（用户存在）；不接受配置/复位操作"

#: ../components/fido2/shared/index-content1.rst.inc:162
msgid "All colors"
msgstr "所有颜色"

#: ../components/fido2/shared/index-content1.rst.inc:162
msgid "Nitrokey is in Firmware Update mode"
msgstr "Nitrokey 处于固件更新模式"

#: ../components/fido2/shared/index-content1.rst.inc:162
msgid "Active until firmware update operation is successful, or until reinsertion"
msgstr "激活，直至固件更新操作成功或重新插入"

#: ../components/fido2/shared/index-content1.rst.inc:162
msgid ""
"If the firmware update fails, the Nitrokey will stay in the this mode "
"until the firmware is written correctly"
msgstr "如果固件更新失败，Nitrokey 将保持该模式，直到正确写入固件为止"

#: ../components/fido2/shared/index-content1.rst.inc:174
msgid ""
"Note: white LED blinking is used as well to signalize the selected device"
" (the so called WINK command)."
msgstr "注意：白色 LED 灯闪烁也用于发出所选设备的信号（即所谓的 WINK 命令）。"

#: ../components/fido2/linux/index.rst:16
#: ../components/nitrokey3/linux/fedora-gnupg-configuration.rst:30
#: ../components/nitrokey3/shared/nitropy.rst:71
#: ../components/nitrokey3/troubleshooting.rst.inc:2
#: ../components/nitropad/troubleshooting.rst.inc:2
#: ../components/pro/firmware-update.rst.inc:65
#: ../components/pro/login-with-pam.rst.inc:44
#: ../components/pro/openpgp-thunderbird.rst.inc:12
#: ../components/pro/ssh.rst:42
#: ../components/software/nitropy/all-platforms/installation.rst:85
#: ../components/start/linux/index.rst:60
#: ../components/to-be-integrated.rst:389
#: ../components/to-be-integrated.rst:756 ../components/u2f/linux/index.rst:16
msgid "Troubleshooting"
msgstr "故障排除"

#: ../components/fido2/linux/index.rst:18
msgid "If the Nitrokey is not detected, proceed the following:"
msgstr "如果检测不到 Nitrokey，请执行以下步骤："

#: ../components/fido2/linux/index.rst:20
msgid ""
"Copy this file `41-nitrokey.rules "
"<https://www.nitrokey.com/sites/default/files/41-nitrokey.rules>`__ to "
"``/etc/udev/rules.d/``. In very rare cases, the system will need the "
"`older version "
"<https://raw.githubusercontent.com/Nitrokey/libnitrokey/master/data/41-nitrokey_old.rules>`__"
" of this file."
msgstr ""
"将该文件 `41-nitrokey.rules "
"<https://www.nitrokey.com/sites/default/files/41-nitrokey.rules>`__ 复制到 "
"``/etc/udev/rules.d/``。在极少数情况下，系统需要该文件的 `older version "
"<https://raw.githubusercontent.com/Nitrokey/libnitrokey/master/data/41-nitrokey_old.rules>`__"
" 文件。"

#: ../components/fido2/linux/index.rst:26
#: ../components/nitrokey3/troubleshooting.rst.inc:15
msgid ""
"Restart udev via ``sudo service udev restart`` or ``udevadm control "
"--reload-rules && udevadm trigger`` if you are using Fedora."
msgstr ""
"使用 Fedora 时，通过 ``sudo service udev restart`` 或 ``udevadm control "
"--reload-rules && udevadm trigger`` 重启 udev。"

#: ../components/fido2/shared/index-content2.rst.inc:2
#: ../components/fido2/windows/reset.rst:2
msgid "Nitrokey Reset"
msgstr "硝基钥匙重置"

#: ../components/fido2/shared/index-content2.rst.inc:6
msgid ""
"Factory Reset operation regenerates the secret material stored on the "
"Nitrokey FIDO U2F / Nitrokey FIDO2, which makes it a completely new key "
"logic-side. New owner cannot use it to login to account of the previous "
"one. In case of the FIDO2 Resident Keys the material is erased."
msgstr ""
"出厂重置操作会重新生成存储在 Nitrokey FIDO U2F / Nitrokey FIDO2 "
"上的秘密材料，使其成为一个全新的密钥逻辑方。新主人不能用它登录前主人的账户。如果是 FIDO2 Resident 密钥，材料会被清除。"

#: ../components/fido2/shared/index-content2.rst.inc:14
msgid "Nitrokey FIDO2 could be reset by:"
msgstr "可以通过以下方式重置 Nitrokey FIDO2："

#: ../components/fido2/shared/index-content2.rst.inc:16
#: ../components/fido2/windows/reset.rst:40
msgid ""
"pynitrokey tool: ``nitropy fido2 reset`` (requires Administrator rights "
"to execute)"
msgstr "pynitrokey 工具：nitropy fido2 reset``（需要管理员权限才能执行）"

#: ../components/fido2/shared/index-content2.rst.inc:17
#: ../components/nitrokey3/shared/reset.rst.inc:14
msgid ""
"Google Chrome: `Manage security keys` via the direct link: "
"`chrome://settings/securityKeys`"
msgstr "Google Chrome 浏览器：通过直接链接 \"管理安全密钥\"：Chrome://settings/securityKeys"

#: ../components/fido2/mac/index.rst:2
msgid "FIDO2 With macOS"
msgstr "使用 macOS 的 FIDO2"

#: ../components/fido2/windows/index.rst:2
msgid "Nitrokey FIDO2 With Windows"
msgstr "Nitrokey FIDO2 与 Windows"

#: ../components/fido2/windows/passwordless-microsoft.rst:2
msgid "Passwordless Authentication With Microsoft"
msgstr "使用微软的无密码身份验证"

#: ../components/fido2/windows/passwordless-microsoft.rst:6
msgid ""
"The Nitrokey FIDO2 supports password-less authentication, where entering "
"a password is replaced by logging in with the Nitrokey FIDO2 and a PIN."
msgstr "Nitrokey FIDO2 支持无密码身份验证，使用 Nitrokey FIDO2 和 PIN 码登录即可代替输入密码。"

#: ../components/fido2/windows/passwordless-microsoft.rst:9
msgid "Sample Login to Microsoft With The Nitrokey FIDO2"
msgstr "使用 Nitrokey FIDO2 登录微软的示例"

#: ../components/fido2/windows/passwordless-microsoft.rst:11
msgid "Click on “Sign in with security key”."
msgstr "点击 \"使用安全密钥登录\"。"

#: ../components/fido2/windows/passwordless-microsoft.rst
msgid "img0"
msgstr "img0"

#: ../components/fido2/windows/passwordless-microsoft.rst:18
msgid "Enter your PIN for the Nitrokey FIDO2."
msgstr "输入 Nitrokey FIDO2 的密码。"

#: ../components/fido2/windows/passwordless-microsoft.rst:25
msgid "Touch your Nitrokey FIDO2 at the indicated spot."
msgstr "在指定位置触摸 Nitrokey FIDO2。"

#: ../components/fido2/windows/passwordless-microsoft.rst:32
msgid "Now you are logged in!"
msgstr "现在您已登录！"

#: ../components/fido2/windows/passwordless-microsoft.rst:35
msgid "Setting up Passwordless Authentication"
msgstr "设置无密码身份验证"

#: ../components/fido2/windows/passwordless-microsoft.rst:37
msgid ""
"Here we offer you a guide on how to set up passwordless authentication "
"for your Microsoft account with the Nitrokey FIDO2."
msgstr "在此，我们将向您介绍如何使用 Nitrokey FIDO2 为您的 Microsoft 账户设置无密码身份验证。"

#: ../components/fido2/windows/passwordless-microsoft.rst:39
msgid ""
"You need Windows 10 (update October 2018 or later) and the Microsoft Edge"
" or Google Chrome browser."
msgstr "您需要 Windows 10（2018 年 10 月更新或更新版本）和 Microsoft Edge 或 Google Chrome 浏览器。"

#: ../components/fido2/windows/passwordless-microsoft.rst:42
msgid "Log in to your Microsoft account and go to your “Account” page."
msgstr "登录 Microsoft 帐户，进入 \"帐户 \"页面。"

#: ../components/fido2/windows/passwordless-microsoft.rst:44
msgid "Select “Security”."
msgstr "选择 \"安全\"。"

#: ../components/fido2/windows/passwordless-microsoft.rst:51
msgid "Select “More security options”"
msgstr "选择 \"更多安全选项"

#: ../components/fido2/windows/passwordless-microsoft.rst:58
msgid "Select “Set up a security key”."
msgstr "选择 \"设置安全密钥\"。"

#: ../components/fido2/windows/passwordless-microsoft.rst:65
msgid "Confirm with “Next” under “USB device”."
msgstr "在 \"USB 设备 \"下确认 \"下一步\"。"

#: ../components/fido2/windows/passwordless-microsoft.rst:72
msgid ""
"Enter a PIN that you want to use for your Nitrokey FIDO2 and then select "
"“Next”."
msgstr "输入要用于 Nitrokey FIDO2 的 PIN 码，然后选择 \"下一步\"。"

#: ../components/fido2/windows/passwordless-microsoft.rst
#: ../components/nitropad/factory-reset.rst.inc:-1
#: ../components/nitropad/firmware-update.rst.inc:-1
#: ../components/nitropad/qubes/nitrokey-app.rst
#: ../components/pro/2fa-nextcloud.rst.inc:-1
#: ../components/pro/eidauthenticate.rst.inc:-1 ../components/pro/gpa.rst
#: ../components/pro/openpgp-keygen-gpa.rst.inc:-1
#: ../components/pro/openpgp-thunderbird.rst.inc:-1
#: ../components/pro/otp.rst.inc:-1 ../components/pro/putty.rst.inc:-1
#: ../components/pro/windows/2fa-microsoft.rst:-1
#: ../components/pro/windows/openpgp-csp.rst:-1
#: ../components/storage/firmware-update-manually.rst:-1
msgid "img7"
msgstr "img7"

#: ../components/fido2/windows/passwordless-microsoft.rst:80
msgid "Now tap on the marked position of the Nitrokey FIDO2."
msgstr "现在点击 Nitrokey FIDO2 的标记位置。"

#: ../components/fido2/windows/passwordless-microsoft.rst
#: ../components/nitropad/factory-reset.rst.inc:-1
#: ../components/nitropad/firmware-update.rst.inc:-1
#: ../components/pro/2fa-nextcloud.rst.inc:-1
#: ../components/pro/eidauthenticate.rst.inc:-1 ../components/pro/gpa.rst
#: ../components/pro/openpgp-thunderbird.rst.inc:-1
#: ../components/pro/otp.rst.inc:-1
#: ../components/pro/windows/2fa-microsoft.rst:-1
#: ../components/pro/windows/openpgp-csp.rst:-1
#: ../components/storage/firmware-update-manually.rst:-1
msgid "img8"
msgstr "img8"

#: ../components/fido2/windows/passwordless-microsoft.rst:87
msgid "Confirm with “Allow”."
msgstr "确认 \"允许\"。"

#: ../components/fido2/windows/passwordless-microsoft.rst
#: ../components/nitropad/factory-reset.rst.inc:-1
#: ../components/nitropad/firmware-update.rst.inc:-1
#: ../components/pro/2fa-nextcloud.rst.inc:-1
#: ../components/pro/eidauthenticate.rst.inc:-1 ../components/pro/gpa.rst
#: ../components/pro/openpgp-thunderbird.rst.inc:-1
#: ../components/pro/windows/2fa-microsoft.rst:-1
#: ../components/pro/windows/openpgp-csp.rst:-1
#: ../components/storage/firmware-update-manually.rst:-1
msgid "img9"
msgstr "img9"

#: ../components/fido2/windows/passwordless-microsoft.rst:94
msgid "Name your Nitrokey FIDO2 and then select “Next”."
msgstr "为 Nitrokey FIDO2 命名，然后选择 \"下一步\"。"

#: ../components/fido2/windows/passwordless-microsoft.rst
#: ../components/nitropad/factory-reset.rst.inc:-1
#: ../components/pro/openpgp-thunderbird.rst.inc:-1
#: ../components/pro/windows/2fa-microsoft.rst:-1
#: ../components/pro/windows/openpgp-csp.rst:-1
#: ../components/storage/firmware-update-manually.rst:-1
msgid "img10"
msgstr "img10"

#: ../components/fido2/windows/passwordless-microsoft.rst:101
msgid ""
"Now you have successfully set up password-free authentication for your "
"Microsoft account! Confirm with “Got it”."
msgstr "现在您已成功为 Microsoft 账户设置了免密码身份验证！确认 \"收到\"。"

#: ../components/fido2/windows/passwordless-microsoft.rst
#: ../components/nitropad/factory-reset.rst.inc:-1
#: ../components/pro/openpgp-thunderbird.rst.inc:-1
#: ../components/pro/windows/2fa-microsoft.rst:-1
#: ../components/pro/windows/openpgp-csp.rst:-1
#: ../components/storage/firmware-update-manually.rst:-1
msgid "img11"
msgstr "img11"

#: ../components/fido2/windows/reset.rst:6
msgid ""
"The Factory Reset operation deletes the FIDO secret keys stored on the "
"Nitrokey and generates new ones. Afterwards the Nitrokey behaves like a "
"new device."
msgstr "出厂重置操作会删除存储在 Nitrokey 上的 FIDO 密匙，并生成新的密匙。之后，Nitrokey 会像新设备一样运行。"

#: ../components/fido2/windows/reset.rst:8
msgid ""
"To avoid accidental and malicious reset of the Nitrokey, the required "
"touch confirmation time for the FIDO2 reset operation is longer and with "
"a distinct LED behavior (red LED light) than normal operations. To reset "
"the Nitrokey, confirm by touching the touch button for at least 5 seconds"
" until the green or blue LED lights up."
msgstr ""
"为避免意外和恶意重置 Nitrokey，与正常操作相比，FIDO2 重置操作所需的触摸确认时间更长，LED 指示灯（红色 LED "
"灯）也更亮。要重置 Nitrokey，请触摸触摸按钮确认至少 5 秒钟，直到绿色或蓝色 LED 灯亮起。"

#: ../components/fido2/windows/reset.rst:15
msgid "Windows 10"
msgstr "Windows 10"

#: ../components/fido2/windows/reset.rst:17
msgid ""
"Make sure you use at least version 2004. Please follow Windows’ reset "
"wizard."
msgstr "确保至少使用 2004 版本。请按照 Windows 的重置向导进行操作。"

#: ../components/fido2/windows/reset.rst:20
msgid ""
"If the total taken time for execution will be more than 10 seconds, the "
"Windows OS’ user interface will report failure. Reset operation is "
"executed on the Nitrokey even after the latter is reported failing, as "
"long as the user’s touch will be registered before the Nitrokey’s "
"internal operation timeout (touch confirmation is shown with the blue "
"color)."
msgstr ""
"如果总执行时间超过 10 秒，Windows 操作系统的用户界面将报告失败。只要用户的触摸操作在 Nitrokey "
"内部操作超时（触摸确认显示为蓝色）之前被记录，即使 Nitrokey 报告失败，也会对 Nitrokey 执行重置操作。"

#: ../components/fido2/windows/reset.rst:28
msgid "Windows 10 on a Virtual Machine"
msgstr "虚拟机上的 Windows 10"

#: ../components/fido2/windows/reset.rst:30
msgid ""
"Please keep in mind Nitrokey has internal timeout for accepting the FIDO "
"reset operation of 10 seconds since powering up. If the Nitrokey will "
"connect to a virtual machine later than that, it will return error and "
"the operation will be aborted."
msgstr ""
"请注意，Nitrokey 内部有一个接受 FIDO 重置操作的超时时间，即开机后的 10 秒钟。如果 Nitrokey "
"在超时后才连接虚拟机，则会返回错误并中止操作。"

#: ../components/fido2/windows/reset.rst:36
msgid "Other Ways to Reset"
msgstr "其他重置方法"

#: ../components/fido2/windows/reset.rst:38
msgid "Nitrokey can also be reset by:"
msgstr "还可以通过以下方式重置 Nitrokey："

#: ../components/hsm/faq.rst:2
msgid "Nitrokey HSM FAQ"
msgstr "Nitrokey HSM 常见问题解答"

#: ../components/shared-faqs/nitrokeys.rst.inc:2
msgid "Windows, Linux and macOS."
msgstr "Windows、Linux 和 macOS。"

#: ../components/hsm/faq.rst:17 ../components/shared-faqs/pins.rst.inc:11
msgid "**Q:** What is the maximum length of the PIN?"
msgstr "**问：** 密码的最大长度是多少？"

#: ../components/hsm/faq.rst:9 ../components/shared-faqs/pins.rst.inc:3
msgid ""
"Nitrokey uses PINs instead of passwords. The main difference is that the "
"hardware limits the amount of tries to three while a limit doesn't exist "
"for passwords. Because of this, a short PIN is still secure and there is "
"not need to choose a long and complex PIN."
msgstr ""
"Nitrokey 使用 PIN 代替密码。其主要区别在于，硬件将尝试次数限制为三次，而密码则没有限制。因此，简短的 PIN "
"码仍然是安全的，没有必要选择长而复杂的 PIN 码。"

#: ../components/hsm/faq.rst:14
msgid ""
"Nitrokey PINs can be up to 16 digits long and can consist of numbers, "
"characters and special characters. Note: When using GnuPG or OpenSC, 32 "
"character long PINs can be used but aren't supported by Nitrokey App."
msgstr ""
"Nitrokey PIN 长达 16 位数，可以由数字、字符和特殊字符组成。注意：使用 GnuPG 或 OpenSC 时，可以使用 32 "
"个字符长的 PIN 码，但 Nitrokey App 不支持。"

#: ../components/hsm/faq.rst:27 ../components/shared-faqs/pins.rst.inc:22
msgid "**Q:** What is the User PIN for?"
msgstr "**问：** 用户密码有什么用？"

#: ../components/hsm/faq.rst:20
msgid ""
"The PIN is at least 6-digits long and is used to get access to the "
"content of the Nitrokey. This is the PIN you will use a lot in every day "
"use."
msgstr "PIN 码至少为 6 位数，用于访问 Nitrokey 的内容。这是您在日常使用中会经常用到的 PIN 码。"

#: ../components/hsm/faq.rst:24
msgid ""
"The PIN can have up to 16 digits and other characters (e.g. alphabetic "
"and special characters). But as the PIN is blocked as soon three wrong "
"PIN attempts were done, it is sufficiently secure to only have a 6 digits"
" PIN."
msgstr ""
"PIN 码最多可以有 16 位数字和其他字符（如字母和特殊字符）。但是，只要三次尝试输入错误的 PIN 码，PIN 码就会被阻止，因此只输入 6 "
"位数的 PIN 码就足够安全了。"

#: ../components/hsm/faq.rst:34
msgid "**Q:** What is the SO PIN for?"
msgstr "**问：** SO PIN 码有什么用？"

#: ../components/hsm/faq.rst:30
msgid ""
"The SO PIN is used in the Nitrokey HSM only and is something like a "
"\"master\" PIN with special properties. Please read this instructions "
"carefully to understand the SO PIN of the Nitrokey HSM."
msgstr ""
"SO PIN 仅用于 Nitrokey HSM，类似于具有特殊属性的 \"主 \"PIN。请仔细阅读本说明，了解 Nitrokey HSM 的 "
"SO PIN。"

#: ../components/hsm/faq.rst:34
msgid "The SO PIN has to be exactly 16 digits long."
msgstr "SO PIN 码的长度必须正好是 16 位数。"

#: ../components/hsm/faq.rst:42
msgid "**Q:** How many data objects (DF, EF) can be stored?"
msgstr "**问：** 可以存储多少个数据对象（DF、EF）？"

#: ../components/hsm/faq.rst:37
msgid "76 KB EEPROM total, that can be used for"
msgstr "总共 76 KB EEPROM，可用于"

#: ../components/hsm/faq.rst:39
msgid "max. 150 x ECC-521 keys or"
msgstr "最大150 x ECC-521 按键或"

#: ../components/hsm/faq.rst:40
msgid "max. 300 x ECC/AES-256 keys or"
msgstr "最大300 x ECC/AES-256 密钥或"

#: ../components/hsm/faq.rst:41
msgid "max. 19 x RSA-4096 keys or"
msgstr "最大19 x RSA-4096 密钥或"

#: ../components/hsm/faq.rst:42
msgid "max. 38 x RSA-2048 keys"
msgstr "最大38 x RSA-2048 密钥"

#: ../components/hsm/faq.rst:45 ../components/storage/faq.rst:50
msgid "**Q:** How many keys can I store?"
msgstr "**问：** 我可以存储多少个密钥？"

#: ../components/hsm/faq.rst:45
msgid "Nitrokey HSM can store 20 RSA-2048 and 31 ECC-256 key pairs."
msgstr "Nitrokey HSM 可存储 20 对 RSA-2048 密钥和 31 对 ECC-256 密钥。"

#: ../components/hsm/faq.rst:53 ../components/pro/faq.rst:42
#: ../components/storage/faq.rst:58
msgid "**Q:** How fast is encryption and signing?"
msgstr "**问：** 加密和签名的速度有多快？"

#: ../components/hsm/faq.rst:48
msgid "Key generation on-card: RSA 2048: 2 per minute"
msgstr "在卡上生成密钥：RSA 2048：每分钟 2 个"

#: ../components/hsm/faq.rst:49
msgid "Key generation on-card: ECC 256: 10 per minute."
msgstr "在卡上生成密钥：ECC 256：每分钟 10 个。"

#: ../components/hsm/faq.rst:50
msgid "Signature creation with off-card hash: RSA 2048; 100 per minute"
msgstr "使用卡外散列创建签名：RSA 2048；每分钟 100 次"

#: ../components/hsm/faq.rst:51
msgid "Signature creation with off-card hash: ECDSA 256: 360 per minute"
msgstr "使用卡外散列创建签名：ECDSA 256：每分钟 360"

#: ../components/hsm/faq.rst:52
msgid ""
"Signature creation with on-card SHA-256 and 1 kb data: RSA 2048; 68 per "
"minute"
msgstr "使用卡上 SHA-256 和 1 kb 数据创建签名：RSA 2048；每分钟 68 个"

#: ../components/hsm/faq.rst:53
msgid ""
"Signature creation with on-card SHA-256 and 1 kb data: ECDSA 256: 125 per"
" minute"
msgstr "使用卡上 SHA-256 和 1 kb 数据创建签名：ECDSA 256：每分钟 125"

#: ../components/hsm/faq.rst:57
msgid "**Q:** How can I distinguish a Nitrokey HSM 1 from an Nitrokey HSM 2?"
msgstr "**问：** 如何区分 Nitrokey HSM 1 和 Nitrokey HSM 2？"

#: ../components/hsm/faq.rst:56
msgid ""
"Use ``opensc-tool --list-algorithms`` and compare with the table below. "
"Please also see `this thread`_ for the factsheets and more details."
msgstr "使用 ``opensc-tool --list-algorithms`` 并与下表进行比较。还请参阅`本主题`_了解情况说明和更多详情。"

#: ../components/shared-faqs/algos.rst.inc:3
msgid "**Q:** Which algorithms and maximum key length are supported?"
msgstr "**问：** 支持哪些算法和最大密钥长度？"

#: ../components/shared-faqs/algos.rst.inc:3
msgid "See the following table:"
msgstr "请参见下表："

#: ../components/pro/openpgp-keygen-on-device.rst.inc:191
#: ../components/shared-faqs/algos.rst.inc:6
msgid "Start"
msgstr "开始"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:191
#: ../components/shared-faqs/algos.rst.inc:6
msgid "Pro + Storage"
msgstr "专业 + 存储"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:191
#: ../components/shared-faqs/algos.rst.inc:6
msgid "Pro 2 + Storage 2"
msgstr "专业版 2 + 存储版 2"

#: ../components/nitrokey3/index.rst:2
#: ../components/shared-faqs/algos.rst.inc:6
msgid "Nitrokey 3"
msgstr "硝基 3"

#: ../components/shared-faqs/algos.rst.inc:6
msgid "HSM"
msgstr "HSM"

#: ../components/shared-faqs/algos.rst.inc:6
msgid "HSM 2"
msgstr "HSM 2"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:193
#: ../components/shared-faqs/algos.rst.inc:8
msgid "rsa1024"
msgstr "rsa1024"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:193
#: ../components/pro/openpgp-keygen-on-device.rst.inc:194
#: ../components/pro/openpgp-keygen-on-device.rst.inc:195
#: ../components/pro/openpgp-keygen-on-device.rst.inc:196
#: ../components/pro/openpgp-keygen-on-device.rst.inc:197
#: ../components/pro/openpgp-keygen-on-device.rst.inc:198
#: ../components/pro/openpgp-keygen-on-device.rst.inc:199
#: ../components/pro/openpgp-keygen-on-device.rst.inc:200
#: ../components/shared-faqs/algos.rst.inc:8
#: ../components/shared-faqs/algos.rst.inc:10
#: ../components/shared-faqs/algos.rst.inc:12
#: ../components/shared-faqs/algos.rst.inc:14
#: ../components/shared-faqs/algos.rst.inc:16
#: ../components/shared-faqs/algos.rst.inc:18
#: ../components/shared-faqs/algos.rst.inc:20
#: ../components/shared-faqs/algos.rst.inc:22
#: ../components/shared-faqs/algos.rst.inc:24
#: ../components/shared-faqs/algos.rst.inc:26
#: ../components/shared-faqs/algos.rst.inc:28
#: ../components/shared-faqs/algos.rst.inc:30
#: ../components/shared-faqs/algos.rst.inc:32
#: ../components/shared-faqs/algos.rst.inc:34
msgid "✓"
msgstr "✓"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:194
#: ../components/shared-faqs/algos.rst.inc:10
msgid "rsa2048"
msgstr "rsa2048"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:195
#: ../components/shared-faqs/algos.rst.inc:12
msgid "rsa3072"
msgstr "rsa3072"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:196
#: ../components/shared-faqs/algos.rst.inc:14
msgid "rsa4096"
msgstr "rsa4096"

#: ../components/shared-faqs/algos.rst.inc:16
msgid "curve25519"
msgstr "curve25519"

#: ../components/shared-faqs/algos.rst.inc:18
msgid "NIST-P 192"
msgstr "NIST-P 192"

#: ../components/shared-faqs/algos.rst.inc:20
msgid "NIST-P 256"
msgstr "NIST-P 256"

#: ../components/shared-faqs/algos.rst.inc:22
msgid "NIST-P 384-521"
msgstr "NIST-P 384-521"

#: ../components/shared-faqs/algos.rst.inc:24
msgid "Brainpool 192"
msgstr "脑池 192"

#: ../components/shared-faqs/algos.rst.inc:26
msgid "Brainpool 256-320"
msgstr "大脑池 256-320"

#: ../components/shared-faqs/algos.rst.inc:28
msgid "Brainpool 384-521"
msgstr "脑池 384-521"

#: ../components/shared-faqs/algos.rst.inc:30
msgid "secp192"
msgstr "secp192"

#: ../components/shared-faqs/algos.rst.inc:32
msgid "secp256"
msgstr "secp256"

#: ../components/shared-faqs/algos.rst.inc:34
msgid "secp521"
msgstr "secp521"

#: ../components/hsm/faq.rst:64
msgid ""
"**Q:** How can I use the True Random Number Generator (TRNG) of the "
"Nitrokey HSM for my applications?"
msgstr "**问：** 如何在我的应用中使用 Nitrokey HSM 的真实随机数生成器（TRNG）？"

#: ../components/hsm/faq.rst:62
msgid ""
"Nitrokey HSM can be used with `Botan`_ and `TokenTools`_ by using OpenSC "
"as a PKCS#11 driver."
msgstr "通过使用 OpenSC 作为 PKCS#11 驱动程序，Nitrokey HSM 可与 `Botan`_ 和 `TokenTools`_ 一起使用。"

#: ../components/hsm/faq.rst:64 ../components/to-be-integrated.rst:921
msgid ""
"OpenSSL can't use Nitrokey HSM's RNG directly because engine-pkcs11 "
"doesn't contain a mapping for OpenSSL to C_GenerateRandom."
msgstr ""
"OpenSSL 无法直接使用 Nitrokey HSM 的 RNG，因为 engine-pkcs11 不包含 OpenSSL 到 "
"C_GenerateRandom 的映射。"

#: ../components/hsm/faq.rst:68 ../components/pro/faq.rst:65
#: ../components/storage/faq.rst:81
msgid "**Q:** How good is the Random Number Generator?"
msgstr "**问：** 随机数生成器的性能如何？"

#: ../components/hsm/faq.rst:67
msgid ""
"Nitrokey HSM uses the True Random Number Generator of JCOP 2.4.1r3 which "
"has a quality of DRNG.2 (according to `AIS 31`_ of the German Federal "
"Office for Information Security, BSI)."
msgstr ""
"Nitrokey HSM 使用 JCOP 2.4.1r3 的真随机数生成器，其质量为 DRNG.2（根据德国联邦信息安全办公室 BSI 的 "
"\"AIS 31\"）。"

#: ../components/hsm/faq.rst:84
msgid "**Q:** Which API can I use?"
msgstr "**问：** 我可以使用哪个应用程序接口？"

#: ../components/hsm/faq.rst:71
msgid ""
"OpenSC: Comprehensive instructions exist for OpenSC framework. There is "
"nitrotool as a more comfortable frontend to OpenSC."
msgstr "OpenSC：OpenSC 框架有全面的说明。还有一个更舒适的 OpenSC 前端工具--nitrotool。"

#: ../components/hsm/faq.rst:74
msgid ""
"Embedded Systems: For systems with minimal memory footprint a read/only "
"PKCS#11 module is provided by the sc-hsm-embedded project.  This PKCS#11 "
"module is useful for deployments where key generation at the user's "
"workplace is not required. The PKCS#11 module also supports major "
"electronic signature cards available in the German market."
msgstr ""
"嵌入式系统：对于内存占用极小的系统，sc-hsm-embedded 项目提供了一个只读 PKCS#11 模块。  该 PKCS#11 "
"模块适用于不需要在用户工作场所生成密钥的部署。PKCS#11 模块还支持德国市场上的主要电子签名卡。"

#: ../components/hsm/faq.rst:80
msgid ""
"OpenSCDP: The SmartCard-HSM is fully integrated with OpenSCDP, the open "
"smart card development platform. See the public support scripts for "
"details. To import existing keys you can use its SCSH or NitroKeyWrapper."
msgstr ""
"OpenSCDP：SmartCard-HSM 与开放式智能卡开发平台 OpenSCDP 完全集成。详情请查看公共支持脚本。要导入现有密钥，可以使用"
" SCSH 或 NitroKeyWrapper。"

#: ../components/hsm/faq.rst:88
msgid "**Q:** Is the Nitrokey HSM 2 Common Criteria or FIPS certified?"
msgstr "**问：** Nitrokey HSM 2 是否通过了通用标准或 FIPS 认证？"

#: ../components/hsm/faq.rst:87
#, python-format
msgid ""
"The security controller (NXP JCOP 3 P60) is Common Criteria EAL 5+ "
"certified up to the OS level (`Certificate "
"<https://commoncriteriaportal.org/files/epfiles/NSCIB-"
"certificate%2021-98209.pdf>`__, `Certification Report "
"<https://commoncriteriaportal.org/files/epfiles/Certification%20Report"
"%20NSCIB-CC-98209-CR5%20-%20version%203.0%20(2022-10-14).pdf>`__, "
"`Security Target <https://commoncriteriaportal.org/files/epfiles/NSCIB-"
"CC-98209_5-STLite.pdf>`__, `Java Card System Protection Profile Open "
"Configuration, Version 3.0 "
"<https://commoncriteriaportal.org/files/ppfiles/ANSSI-CC-"
"profil_PP-2010-03en.pdf>`__)."
msgstr ""
"安全控制器（恩智浦 JCOP 3 P60）已通过通用标准 EAL 5+ 认证，达到操作系统级别（`证书 "
"<https://commoncriteriaportal.org/files/epfiles/NSCIB-"
"certificate%2021-98209.pdf>`__，`认证报告 "
"<https://commoncriteriaportal.org/files/epfiles/Certification%20Report"
"%20NSCIB-CC-98209-CR5%20-%20version%203.0%20(2022-10-14).pdf>`__，`安全目标 "
"<https://commoncriteriaportal.org/files/epfiles/NSCIB-"
"CC-98209_5-STLite.pdf>`__，`Java Card System Protection Profile Open "
"Configuration, Version 3.0 "
"<https://commoncriteriaportal.org/files/ppfiles/ANSSI-CC-"
"profil_PP-2010-03en.pdf>`__）。"

#: ../components/hsm/faq.rst:91
msgid "**Q:** How to import an existing key into the Nitrokey HSM?"
msgstr "**问：** 如何将现有密钥导入 Nitrokey HSM？"

#: ../components/hsm/faq.rst:91
msgid ""
"First, `set up`_ your Nitrokey HSM to use key backup and restore. Then "
"use Smart Card Shell for importing. If your key is stored in a Java key "
"store you can use `NitroKeyWrapper`_  instead."
msgstr ""
"首先，\"设置 \"您的 Nitrokey HSM 以使用密钥备份和还原。然后使用 Smart Card Shell 进行导入。如果您的密钥存储在"
" Java 密钥存储区，则可以使用 \"NitroKeyWrapper \"代替。"

#: ../components/hsm/faq.rst:94
msgid ""
"**Q:** How do I secure my Cloud Infrastructure/Kubernetes with Nitrokey "
"HSM?"
msgstr "**问：** 如何使用 Nitrokey HSM 确保云基础设施/Kubernetes 的安全？"

#: ../components/hsm/faq.rst:94
msgid ""
"An approach to secure keys for Hashicorp Vault/Bank-Vault on a Nitrokey "
"HSM can be found at `banzaicloud.com`_."
msgstr ""
"有关在 Nitrokey HSM 上确保 Hashicorp Vault/Bank-Vault 密钥安全的方法，请访问 "
"`banzaicloud.com`_。"

#: ../components/hsm/faq.rst:99
msgid "**Q:** Can I use Nitrokey HSM with cryptocurrencies?"
msgstr "**问：** 我可以将 Nitrokey HSM 与加密货币一起使用吗？"

#: ../components/hsm/faq.rst:97
msgid ""
"J.v.d.Bosch wrote a simple, free python `program`_ to secure the private "
"key of a Bitcoin wallet in a HSM. `Tezos`_ has been `reported`_ to work "
"with Nitrokey HSM."
msgstr ""
"J.v.d.Bosch写了一个简单、免费的python \"程序 \"来保护HSM中比特币钱包的私钥。据报道，Tezos 可以与 Nitrokey"
" HSM 配合使用。"

#: ../components/hsm/index.rst:2
msgid "Nitrokey HSM 2"
msgstr "Nitrokey HSM 2"

#: ../components/hsm/apache2-tls.rst.inc:2
msgid "TLS Setup With Apache2"
msgstr "使用 Apache2 设置 TLS"

#: ../components/hsm/apache2-tls.rst.inc:8
msgid ""
"The very same concept as descriped here can be used for many applications"
" using openssl as crypto-backend. The concept mostly boils down to: "
"replace (secret) key-file with PKCS#11 URL referencing a key on a "
"security token (Nitrokey)"
msgstr ""
"这里描述的概念与使用 openssl 作为加密后端的许多应用程序相同。这一概念主要归结为：用 PKCS#11 URL "
"替换（秘密）密钥文件，并引用安全令牌（Nitrokey）上的密钥。"

#: ../components/hsm/apache2-tls.rst.inc:15
#: ../components/hsm/import-keys-certs.rst.inc:24
#: ../components/hsm/pkcs11-url.rst.inc:12
#: ../components/nitropad/firmware-update.rst.inc:16
#: ../components/software/nitropy/all-platforms/installation.rst:38
msgid "Preparation"
msgstr "准备工作"

#: ../components/hsm/apache2-tls.rst.inc:17
msgid ""
"ensure that the `apache2` version is at least 2.4.42 for proper "
"``mod_ssl`` support"
msgstr "确保 `apache2` 版本至少为 2.4.42，以正确支持 `mod_ssl"

#: ../components/hsm/apache2-tls.rst.inc:19
msgid "activate ``mod_ssl`` using ``a2enmod ssl``, if not already done"
msgstr "使用 ``a2enmod ssl`` 激活``mod_ssl``（如果尚未完成）。"

#: ../components/hsm/apache2-tls.rst.inc:21
msgid ""
"additionally ``openssl`` is needed and ``libengine-pkcs11-openssl`` see "
":doc:`PKCS#11 URL<pkcs11-url>`"
msgstr ""
"另外还需要 ``openssl`` 和 ``libengine-pkcs11-openssl`` 参见 :doc:`PKCS#11 "
"URL<pkcs11-url>`"

#: ../components/hsm/apache2-tls.rst.inc:27
msgid "Configure Apache2 to Use a Security Key"
msgstr "配置 Apache2 以使用安全密钥"

#: ../components/hsm/apache2-tls.rst.inc:29
msgid ""
"Basically the only thing to do is replace ``SSLCertificateFile`` with the"
" proper PKCS#11 URL and delete any other references to keys or "
"certificates. E.g., ``SSLCertificateKeyFile`` is not needed anymore."
msgstr ""
"基本上，唯一要做的就是用正确的 PKCS#11 URL 替换 ``SSLCertificateFile`` "
"并删除对密钥或证书的其他引用。例如，不再需要 ``SSLCertificateKeyFile`` 。"

#: ../components/hsm/apache2-tls.rst.inc:33
msgid "An example directive might look like this:"
msgstr "指令示例如下"

#: ../components/hsm/apache2-tls.rst.inc:39
msgid ""
"The proper PKCS#11 URL can be extracted as documented in :doc:`PKCS#11 "
"URL Generation<pkcs11-url>`"
msgstr "可以按照 :doc:`PKCS#11 URL 生成<pkcs11-url>`中的记录提取正确的 PKCS#11 URL。"

#: ../components/hsm/apache2-tls.rst.inc:41
msgid "Be sure to place the directive inside a `VirtualHost` configuration."
msgstr "请务必将该指令放在 `VirtualHost` 配置中。"

#: ../components/hsm/apache2-tls.rst.inc:44
msgid "Provide PIN During Apache2 Startup"
msgstr "在 Apache2 启动过程中提供 PIN 码"

#: ../components/hsm/apache2-tls.rst.inc:46
msgid ""
"Using the previously described method Apache2 will ask on every startup "
"for the User-PIN, thus basically declining batch startup. Apache2 "
"provides another directive to provide the PIN during startup."
msgstr ""
"使用前面描述的方法，Apache2 将在每次启动时询问用户 PIN，因此基本上拒绝了批量启动。Apache2 提供了另一种在启动时提供 PIN "
"的指令。"

#: ../components/hsm/apache2-tls.rst.inc:54
msgid ""
"Apache2 expects an executable after ``|``, which will be executed during "
"startup and it's output (trailing newline is expected) will be used as "
"PIN. Obviously arbitrary complex PIN retrieval methods can be implemented"
" using this approach. Although here a trivial example has been chosen to "
"just ``echo`` the PIN during startup."
msgstr ""
"Apache2 希望在```|````后有一个可执行文件，该文件将在启动时被执行，其输出（尾部换行）将被用作 "
"PIN。显然，使用这种方法可以实现任意复杂的 PIN 检索方法。尽管这里选择了一个微不足道的例子，即在启动过程中只```回声```PIN。"

#: ../components/hsm/apache2-tls.rst.inc:59
msgid ""
"Further ``SSLPassPhraseDialog`` is a global directive, thus has to be "
"placed in the global configuration scope in Apache2."
msgstr "此外，`SSLPassPhraseDialog`` 是一个全局指令，因此必须放在 Apache2 的全局配置范围内。"

#: ../components/hsm/apache2-tls.rst.inc:64
msgid ""
"This shown example is not a secure mechanism to pass your PIN, as it will"
" be written in plain-text inside your configuration"
msgstr "这个示例并不是传递密码的安全机制，因为密码将以明文形式写入配置中"

#: ../components/hsm/apache2-tls.rst.inc:67
msgid "See the `Apache2 mod_ssl documentation`_ for more details on this feature."
msgstr "有关此功能的更多详情，请参阅 \"Apache2 mod_ssl 文档\"。"

#: ../components/hsm/apache2-tls.rst.inc:70
msgid "Complete Apache2 Config Example"
msgstr "完整的 Apache2 配置示例"

#: ../components/hsm/apache2-tls.rst.inc:71
msgid "A complete Apache2 (``VirtualHost``) config snippet might look like this:"
msgstr "一个完整的 Apache2（``VirtualHost``）配置片段可能如下所示："

#: ../components/pro/linux/automatic-screen-lock.rst:2
msgid "Automatic Screen Lock at Removal"
msgstr "移除时自动锁定屏幕"

#: ../components/pro/linux/automatic-screen-lock.rst:6
msgid ""
"This guide will walk you through the configuration of your computer, to "
"automatically lock your session when you remove the Nitrokey."
msgstr "本指南将指导您完成计算机配置，以便在移除 Nitrokey 时自动锁定会话。"

#: ../components/pro/linux/automatic-screen-lock.rst:8
msgid ""
"The configuration requires the creation of two files under two different "
"directories."
msgstr "配置需要在两个不同的目录下创建两个文件。"

#: ../components/pro/linux/automatic-screen-lock.rst:13
msgid ""
"Ubuntu 20.04 or Debian 10 (Buster), both with `Gnome Display Manager "
"<https://wiki.gnome.org/Projects/GDM>`__ installed."
msgstr ""
"Ubuntu 20.04 或 Debian 10 (Buster)，都安装了 `Gnome Display Manager "
"<https://wiki.gnome.org/Projects/GDM>`__。"

#: ../components/pro/linux/automatic-screen-lock.rst:16
msgid "Nitrokey Pro 2, Nitrokey Storage 2, or Nitrokey HSM 2"
msgstr "Nitrokey Pro 2、Nitrokey Storage 2 或 Nitrokey HSM 2"

#: ../components/nethsm/pkcs11-setup.rst:25
#: ../components/nextbox/external-storage.rst:18
#: ../components/nitrokey3/shared/openpgp-uif.rst.inc:15
#: ../components/pro/linux/automatic-screen-lock.rst:19
msgid "Configuration"
msgstr "配置"

#: ../components/pro/linux/automatic-screen-lock.rst:22
msgid "Create the ``.rules`` file"
msgstr "创建 ``.rules`` 文件"

#: ../components/pro/linux/automatic-screen-lock.rst:24
msgid "With your favorite text editor create a file called ``85-nitrokey.rules``"
msgstr "使用最喜欢的文本编辑器创建一个名为 ``85-nitrokey.rules`` 的文件"

#: ../components/pro/linux/automatic-screen-lock.rst:30
msgid "Add the following line to the file"
msgstr "在文件中添加以下一行"

#: ../components/pro/linux/automatic-screen-lock.rst:36
msgid "Save the file and quit the editor."
msgstr "保存文件并退出编辑器。"

#: ../components/pro/linux/automatic-screen-lock.rst:38
msgid ""
"This file sets up a new hardware rule that executes the ``gnome-"
"screensaver-lock`` at removal of the Nitrokey device."
msgstr "该文件设置了一条新的硬件规则，在移除 Nitrokey 设备时执行 \"gnome-screensaver-lock\"。"

#: ../components/pro/linux/automatic-screen-lock.rst:40
msgid ""
"You should change the configuration according to the device you are using"
" as following:"
msgstr "您应根据所使用的设备更改配置，如下所示："

#: ../components/pro/linux/automatic-screen-lock.rst:42
msgid "Nitrokey Pro: ``ENV{PRODUCT}==\"20a0/4108/101\"``"
msgstr "Nitrokey Pro: ``ENV{PRODUCT}==\"20a0/4108/101\"``"

#: ../components/pro/linux/automatic-screen-lock.rst:43
msgid "Nitrokey HSM: ``ENV{PRODUCT}==\"20a0/4230/101\"``"
msgstr "Nitrokey HSM：``ENV{PRODUCT}===\"20a0/4230/101\"``"

#: ../components/pro/linux/automatic-screen-lock.rst:44
msgid "Nitrokey Storage: ``ENV{PRODUCT}==\"20a0/4109/101\"``"
msgstr "Nitrokey 存储：``ENV{PRODUCT}===\"20a0/4109/101\"``"

#: ../components/pro/linux/automatic-screen-lock.rst:46
msgid ""
"If you have a different device and need to find out the ``ENV{PRODUCT}`` "
"string you can use the following command to find out the infos when "
"plugging in:"
msgstr "如果您有不同的设备，需要找出 ``ENV{PRODUCT}`` 字符串，可以使用以下命令在插入时找出信息："

#: ../components/pro/linux/automatic-screen-lock.rst:53
msgid "Create the ``gnome-screensaver-lock`` script"
msgstr "创建 ``gnome-screensaver-lock`` 脚本"

#: ../components/pro/linux/automatic-screen-lock.rst:55
msgid ""
"With your favorite text editor create a file called ``gnome-screensaver-"
"lock``"
msgstr "使用最喜欢的文本编辑器创建一个名为 ``gnome-screensaver-lock`` 的文件"

#: ../components/pro/linux/automatic-screen-lock.rst:61
msgid "Add the following text"
msgstr "添加以下文字"

#: ../components/pro/linux/automatic-screen-lock.rst:71
msgid ""
"In the first step, this script looks for the user-name of the gnome "
"session, i.e. ``user``."
msgstr "第一步，脚本会查找 gnome 会话的用户名，即 ``user``。"

#: ../components/pro/linux/automatic-screen-lock.rst:73
msgid ""
"When it is called at Nitrokey removal, the script queries ``user``, "
"switches to its session, and locks the screen by prompting the screen-"
"saver screen."
msgstr "在移除 Nitrokey 时调用该脚本时，脚本会查询 \"用户\"，切换到其会话，并通过提示屏幕保护程序锁定屏幕。"

#: ../components/pro/linux/automatic-screen-lock.rst:76
msgid "Execute the script"
msgstr "执行脚本"

#: ../components/pro/linux/automatic-screen-lock.rst:78
msgid ""
"Once all set up, execute the script once, and it will lock the screen. It"
" does not matter if the Nitrokey is plugged or not for this first "
"execution."
msgstr "全部设置完成后，执行一次脚本，它就会锁定屏幕。第一次执行时，是否插入 Nitrokey 并不重要。"

#: ../components/pro/linux/automatic-screen-lock.rst:83
msgid ""
"By now you can log back to your session by entering your password, and "
"(re)plug you Nitrokey if you did not do it before."
msgstr "现在，您可以输入密码登录会话，如果之前没有插入 Nitrokey，现在可以（重新）插入。"

#: ../components/pro/linux/automatic-screen-lock.rst:85
msgid ""
"The next time(s) you unplug your Nitrokey from the computer, it will "
"automatically lock the screen."
msgstr "下次从电脑上拔下 Nitrokey 时，它会自动锁定屏幕。"

#: ../components/hsm/certificate-authority.rst.inc:2
msgid "Creating a Certificate Authority"
msgstr "创建证书颁发机构"

#: ../components/hsm/certificate-authority.rst.inc:6
msgid ""
"This article shows you how to setup your own private certificate "
"authority backed by a Nitrokey HSM. This certificate authority has no "
"automation and does not really scale. Other open source projects can be "
"referenced for automation and scalability."
msgstr ""
"本文将向你展示如何建立由 Nitrokey HSM "
"支持的自己的私有证书颁发机构。该证书颁发机构没有自动化功能，也不能真正扩展。在自动化和可扩展性方面，可以参考其他开源项目。"

#: ../components/hsm/certificate-authority.rst.inc:9
msgid "Choose Cryptographic Algorithms"
msgstr "选择加密算法"

#: ../components/hsm/certificate-authority.rst.inc:11
msgid ""
"I’m going to assume that you’re as paranoid as I am, so I will be using "
"the following command for generating private keys:"
msgstr "我假设你和我一样偏执，所以我将使用以下命令生成私钥："

#: ../components/hsm/certificate-authority.rst.inc:17
msgid ""
"But, if you’re less paranoid that I am, you can safely choose the "
"following options:"
msgstr "不过，如果你不像我那么多疑，你可以放心地选择以下选项："

#: ../components/hsm/certificate-authority.rst.inc:24
msgid ""
"Likewise, I will be using the sha512 algorithm throughout this article, "
"but sha256 can safely be used."
msgstr "同样，我将在本文中使用 sha512 算法，但也可以安全地使用 sha256 算法。"

#: ../components/hsm/certificate-authority.rst.inc:27
msgid "Preparing to Start"
msgstr "准备开始"

#: ../components/hsm/certificate-authority.rst.inc:29
msgid "To start with, you need to pick a directory to store your CA."
msgstr "首先，您需要选择一个目录来存储 CA。"

#: ../components/hsm/certificate-authority.rst.inc:40
msgid "Install the necessary tools:"
msgstr "安装必要的工具："

#: ../components/hsm/certificate-authority.rst.inc:50
msgid ""
"For Windows download the official `OpenSC releases "
"<https://github.com/OpenSC/OpenSC/releases>`__ and make sure you install "
"`p11tool as described <https://github.com/thales-e-security/p11tool>`__. "
"Using the PowerShell most commands should be identical as long as both "
"tools and their binaries are within your ``PATH``."
msgstr ""
"对于 Windows，请下载官方的 `OpenSC 版本 "
"<https://github.com/OpenSC/OpenSC/releases>`__，并确保按照 "
"<https://github.com/thales-e-security/p11tool>`__ 所述安装 "
"`p11tool。只要这两个工具及其二进制文件都在您的 ``PATH`` 范围内，使用 PowerShell 的大多数命令应该是相同的。"

#: ../components/hsm/certificate-authority.rst.inc:56
msgid "Creating The Root Certificate Authority"
msgstr "创建根证书颁发机构"

#: ../components/hsm/certificate-authority.rst.inc:58
msgid ""
"We start by generating the private key for the certificate authority "
"directly on the Nitrokey HSM. This allows us to use the private key in "
"the future, but not access it."
msgstr "首先，我们直接在 Nitrokey HSM 上为证书颁发机构生成私钥。这样我们就可以在未来使用私钥，但无法访问它。"

#: ../components/hsm/certificate-authority.rst.inc:81
msgid ""
"Note the ID number (e0161cc8b6f5d66ac6835ecdecb623fc0506a675), we’ll need"
" it later."
msgstr "请注意 ID 号（e0161cc8b6f5d66ac6835decb623fc0506a675），我们稍后会用到它。"

#: ../components/hsm/certificate-authority.rst.inc:83
#: ../components/hsm/certificate-authority.rst.inc:238
msgid ""
"If you need the ID in the future, you can list the keys on the Nitrokey "
"HSM:"
msgstr "如果将来需要 ID，可以在 Nitrokey HSM 上列出密钥："

#: ../components/hsm/certificate-authority.rst.inc:89
#: ../components/hsm/certificate-authority.rst.inc:244
msgid ""
"We need to create a config file to generate a self-signed public "
"certificate."
msgstr "我们需要创建一个配置文件来生成自签名公开证书。"

#: ../components/hsm/certificate-authority.rst.inc:95
#: ../components/hsm/certificate-authority.rst.inc:250
msgid ""
"Fill out the request information in <angle brackets> with information for"
" your CA."
msgstr "在 < 角括弧> 中填写申请信息，并提供 CA 的相关信息。"

#: ../components/hsm/certificate-authority.rst.inc:155
msgid ""
"Generate the self-signed public certificate from the private key. Use the"
" private key id value from earlier."
msgstr "用私钥生成自签名公开证书。使用之前的私钥 id 值。"

#: ../components/hsm/certificate-authority.rst.inc:163
msgid ""
"Verify that the root certificate was generated correctly. Verify that "
"Signature-Algorithm matches above and below. Verify that Issuer and "
"Subject match, all root certificates are self signed. Verify that Key "
"Usage matches what was in the v3_ca information in our config file."
msgstr ""
"验证根证书是否正确生成。验证上面和下面的签名算法是否匹配。验证 \"签发人 \"和 \"主题 "
"\"是否匹配，所有根证书都是自签名的。验证密钥使用是否与配置文件中的 v3_ca 信息一致。"

#: ../components/hsm/certificate-authority.rst.inc:211
msgid "Creating The Intermediate Certificate Authority"
msgstr "创建中间证书颁发机构"

#: ../components/hsm/certificate-authority.rst.inc:213
msgid ""
"We continue by generating the private key for the intermediate "
"certificate authority directly on the Nitrokey HSM. This allows us to use"
" the private key in the future, but not access it."
msgstr "我们继续在 Nitrokey HSM 上直接生成中间证书颁发机构的私钥。这样我们就可以在未来使用私钥，但无法访问它。"

#: ../components/hsm/certificate-authority.rst.inc:236
msgid ""
"Note the ID number (bcb48fe9b566ae61891aabbfde6a23d4ff3ab639), we’ll need"
" it later."
msgstr "请注意 ID 编号（bcb48fe9b566ae61891aabbfde6a23d4ff3ab639），我们稍后会用到它。"

#: ../components/hsm/certificate-authority.rst.inc:277
msgid ""
"Generate the certificate signing request for the intermediate CA from the"
" intermediate CA’s private key. Use the private key ID value from "
"earlier."
msgstr "使用中间 CA 的私钥生成中间 CA 的证书签名请求。使用之前的私钥 ID 值。"

#: ../components/hsm/certificate-authority.rst.inc:285
msgid ""
"Verify that the CSR was created correctly. Verify that your Subject is "
"correct. Verify that your Public Key and Signature Algorithm are correct."
msgstr "验证 CSR 的创建是否正确。验证主题是否正确。验证公钥和签名算法是否正确。"

#: ../components/hsm/certificate-authority.rst.inc:318
#: ../components/hsm/certificate-authority.rst.inc:523
msgid "We need to find out the fully qualified PKCS#11 URI for your private key:"
msgstr "我们需要找出私钥的完全合格 PKCS#11 URI："

#: ../components/hsm/certificate-authority.rst.inc:356
#: ../components/hsm/certificate-authority.rst.inc:561
msgid "In this instance, the fully qualified PKCS#11 URI is:"
msgstr "在这种情况下，完全限定的 PKCS#11 URI 为"

#: ../components/hsm/certificate-authority.rst.inc:362
msgid ""
"Now, we need to create a config file to use the private key of the root "
"certificate to sign the csr of the intermediate certificate."
msgstr "现在，我们需要创建一个配置文件，使用根证书的私钥来签署中间证书的 csr。"

#: ../components/hsm/certificate-authority.rst.inc:414
msgid "Then sign the intermediate certificate with the root certificate."
msgstr "然后用根证书签署中间证书。"

#: ../components/hsm/certificate-authority.rst.inc:454
msgid ""
"Verify that the root certificate was generated correctly. Verify that the"
" Issuer and Subject are different, and correct. Verify that the Key Usage"
" matches the config file. Verify that the signature algorithm are correct"
" above and below."
msgstr "验证根证书是否正确生成。验证签发人和主题是否不同且正确。检查密钥使用是否与配置文件一致。验证上方和下方的签名算法是否正确。"

#: ../components/hsm/certificate-authority.rst.inc:501
msgid ""
"Verify that the intermediate certificate verifies against the root "
"certificate."
msgstr "验证中间证书是否与根证书一致。"

#: ../components/hsm/certificate-authority.rst.inc:508
msgid "Create a certificate chain file:"
msgstr "创建证书链文件："

#: ../components/hsm/certificate-authority.rst.inc:514
msgid "You now have a certificate authority backed by an HSM."
msgstr "现在您有了一个由 HSM 支持的证书颁发机构。"

#: ../components/hsm/certificate-authority.rst.inc:517
msgid "Sign a Server Certificate"
msgstr "签署服务器证书"

#: ../components/hsm/certificate-authority.rst.inc:519
msgid ""
"Now that you have a certificate authority, you’d probably like to know "
"how to use it."
msgstr "既然你已经有了证书颁发机构，你可能想知道如何使用它。"

#: ../components/hsm/certificate-authority.rst.inc:521
msgid ""
"Create a CSR in the normal method for your application. Proper creation "
"of your certificate, including SAN, for your particular application is "
"outside the scope of this document."
msgstr "按照正常方法为您的应用程序创建 CSR。为特定应用程序正确创建证书（包括 SAN）不在本文讨论范围之内。"

#: ../components/hsm/certificate-authority.rst.inc:567
msgid ""
"Create a config file to use the private key of the intermediate "
"certificate to sign the CSRs of your servers."
msgstr "创建一个配置文件，使用中间证书的私钥来签署服务器的 CSR。"

#: ../components/hsm/certificate-authority.rst.inc:622
msgid "Then run openssl to sign the server’s CSR."
msgstr "然后运行 openssl 来签署服务器的 CSR。"

#: ../components/hsm/certificate-authority.rst.inc:671
#: ../components/pro/windows/openvpn-viscosity.rst:94
msgid "References"
msgstr "参考资料"

#: ../components/hsm/certificate-authority.rst.inc:673
msgid "I used the following resources to help in compiling this document."
msgstr "在编写本文件时，我使用了以下资源。"

#: ../components/hsm/certificate-authority.rst.inc:675
msgid ""
"`How to initialize your Nitrokey HSM "
"<https://github.com/OpenSC/OpenSC/wiki/SmartCardHSM#initialize-the-"
"device>`__"
msgstr ""
"如何初始化 Nitrokey HSM <https://github.com/OpenSC/OpenSC/wiki/SmartCardHSM"
"#initialize-the-device>`__"

#: ../components/hsm/certificate-authority.rst.inc:676
msgid ""
"`How to create a root and intermediate CA <https://jamielinux.com/docs"
"/openssl-certificate-authority/create-the-root-pair.html>`__"
msgstr ""
"如何创建根 CA 和中间 CA <https://jamielinux.com/docs/openssl-certificate-"
"authority/create-the-root-pair.html>`__"

#: ../components/hsm/certificate-authority.rst.inc:677
msgid ""
"`How to ensure the serial numbers of your intermediate CA and server "
"certs are up to spec <https://www.phildev.net/ssl/creating_ca.html>`__"
msgstr "如何确保中间 CA 和服务器证书的序列号符合规格 <https://www.phildev.net/ssl/creating_ca.html>`__"

#: ../components/hsm/certificate-authority.rst.inc:678
msgid ""
"`How to generate ECC private keys <https://dev.to/benjaminblack"
"/obtaining-an-elliptic-curve-dsa-certificate-with-lets-encrypt-51bc>`__"
msgstr ""
"如何生成 ECC 私有密钥 <https://dev.to/benjaminblack/obtaining-an-elliptic-curve-"
"dsa-certificate-with-lets-encrypt-51bc>`__"

#: ../components/hsm/certificate-authority.rst.inc:679
msgid ""
"`How to find the PCKS11 URI from your HSM "
"<https://www.infradead.org/openconnect/pkcs11.html>`__"
msgstr ""
"如何从 HSM 找到 PCKS11 URI "
"<https://www.infradead.org/openconnect/pkcs11.html>`__"

#: ../components/hsm/certificate-authority.rst.inc:680
msgid ""
"`Troubleshooting (forum) <https://support.nitrokey.com/t/pki-ca-nitrokey-"
"hsm-does-not-support-signing/2598/14>`__"
msgstr ""
"故障排除（论坛） <https://support.nitrokey.com/t/pki-ca-nitrokey-hsm-does-not-"
"support-signing/2598/14>`__"

#: ../components/hsm/certificate-authority.rst.inc:683
msgid ""
"This document was originally `written by lyntux "
"<https://gist.github.com/lyntux/f02c6c3414ce48bc8ea8ab6dcdba1623>`__"
msgstr ""
"本文档最初由 lyntux "
"<https://gist.github.com/lyntux/f02c6c3414ce48bc8ea8ab6dcdba1623>`__ 撰写。"

#: ../components/hsm/linux/dnssec.rst:2
msgid "DNSSEC"
msgstr "DNSSEC"

#: ../components/hsm/linux/dnssec.rst:7
msgid ""
"Protect your domain name resolution using DNSSEC and a Nitrokey HSM as "
"secure key store. It's based on Smartcard-HSM which is why the following "
"resources apply:"
msgstr "使用 DNSSEC 和 Nitrokey HSM 作为安全密钥存储，保护您的域名解析。它基于智能卡-HSM，因此适用于以下资源："

#: ../components/hsm/linux/dnssec.rst:9
msgid ""
"Luis D Espinoza Sanchez & Eberhard W Lisse held a `session on using the "
"SmartCard-HSM for DNSSEC <https://singapore52.icann.org/en/schedule/mon-"
"tech/presentation-dnssec-card-signing-09feb15-en.pdf>`__ at the 2015 "
"ICAAN Meeting in Singapore."
msgstr ""
"Luis D Espinoza Sanchez 和 Eberhard W Lisse 在新加坡举行的 2015 ICAAN 会议上举办了 "
"\"关于将 SmartCard-HSM 用于 DNSSEC <https://singapore52.icann.org/en/schedule"
"/mon-tech/presentation-dnssec-card-signing-09feb15-en.pdf>`__ 的会议\"。"

#: ../components/hsm/linux/dnssec.rst:10
msgid ""
"Jan-Piet Mens wrote a nice article about `integrating the SmartCard-HSM "
"with PowerDNS <https://jpmens.net/2015/03/30/powerdns-with-a-smartcard-"
"hsm-for-dnssec/>`__."
msgstr ""
"Jan-Piet Mens 写了一篇关于 \"将 SmartCard-HSM 与 PowerDNS "
"<https://jpmens.net/2015/03/30/powerdns-with-a-smartcard-hsm-for-"
"dnssec/>`__ 集成 \"的好文章。"

#: ../components/hsm/linux/dnssec.rst:11
msgid ""
"Integration with `OpenDNSSEC <https://www.opendnssec.org/>`__ has been "
"successfully tested."
msgstr "与 `OpenDNSSEC <https://www.opendnssec.org/>`__ 的集成已成功测试。"

#: ../components/pro/gpa.rst:2
msgid "Setup With Gnu Privacy Assistant (GPA)"
msgstr "使用 Gnu 隐私助手 (GPA) 进行设置"

#: ../components/pro/gpa.rst:4
msgid ""
"This document describes how to use Gnu Privacy Assistant (GPA) to set up "
"the Nitrokey for its first usage."
msgstr "本文档介绍如何使用 Gnu 隐私助手 (GPA) 为首次使用 Nitrokey 进行设置。"

#: ../components/pro/gpa.rst:6
msgid ""
"First you need to install Gnu Privacy Assistant (GPA). For Windows you "
"should download and install the `GPG4Win <https://www.gpg4win.org/>`__ "
"package which contains GPA. For Linux you should install the GPA package "
"of your distribution (e.g. on Ubuntu: sudo apt-get install gpa )."
msgstr ""
"首先需要安装 Gnu Privacy Assistant (GPA)。对于 Windows，应下载并安装包含 GPA 的 `GPG4Win "
"<https://www.gpg4win.org/>`__ 软件包。对于 Linux，应安装发行版的 GPA 软件包（例如，在 Ubuntu "
"上：sudo apt-get install gpa）。"

#: ../components/pro/gpa.rst:8
msgid ""
"Start GPA and select the Card Manager; either by pressing the icon at the"
" top or by choosing Card Manager in the Windows menu."
msgstr "启动 GPA 并选择 \"卡片管理器\"；按顶部的图标或在 Windows 菜单中选择 \"卡片管理器\"。"

#: ../components/pro/gpa.rst:13
msgid ""
"The window of the Card Manager will appear. Enter your salutation, name "
"and optional other information. While doing so you might be asked to "
"enter the admin PIN."
msgstr "将出现卡片管理器窗口。输入您的称呼、姓名和其他可选信息。在此过程中，可能会要求您输入管理密码。"

#: ../components/pro/gpa.rst:18
msgid "Confirm this window and enter the admin PIN in the next window."
msgstr "确认该窗口，并在下一个窗口中输入管理密码。"

#: ../components/pro/gpa.rst:23
msgid ""
"In the Card Manager window you might need to scroll down until you see "
"the buttons to change the PINs. The term PIN is used interchangeable with"
" \"password\". Press the first button \"Change PIN\" in order to change "
"the user password. Read and confirm the following information window."
msgstr ""
"在 \"卡片管理器 \"窗口中，你可能需要向下滚动，直到看到更改 PIN 码的按钮。PIN 可与 \"密码 \"互换使用。按下第一个按钮 "
"\"Change PIN \"以更改用户密码。阅读并确认以下信息窗口。"

#: ../components/pro/gpa.rst:28
msgid ""
"Choose and enter your own PIN with a minimum length of six characters. "
"This PIN is required for the daily usage of the Nitrokey."
msgstr "选择并输入您自己的 PIN 码，最小长度为 6 个字符。日常使用 Nitrokey 时需要输入该 PIN 码。"

#: ../components/pro/gpa.rst:33
msgid ""
"Go back to the Card Manager window in step three. This time you choose "
"the third button Change PIN in order to change the admin PIN. The admin "
"PIN is required to change the information on the Nitrokey and to change "
"the cryptographic keys. Proceed as described in steps four and five."
msgstr ""
"回到步骤三的卡管理窗口。这次选择第三个按钮 \"更改密码 \"以更改管理员密码。更改 Nitrokey "
"上的信息和加密密钥都需要管理员密码。按步骤四和步骤五所述进行。"

#: ../components/pro/gpa.rst:35
msgid ""
"After changing both the user and the admin PIN, you are back in the Card "
"Manager window. Select \"Generate key\" in the \"Card\" menu."
msgstr "更改用户密码和管理密码后，您将回到 \"卡管理器 \"窗口。在 \"卡 \"菜单中选择 \"生成密钥\"。"

#: ../components/pro/gpa.rst:40
msgid ""
"Enter your name and e-mail address. You should keep \"backup\" enabled in"
" order to create a backup file of your cryptographic keys. Optionally you"
" might select an expiration date for your cryptographic keys."
msgstr "输入您的姓名和电子邮件地址。应保持启用 \"备份\"，以便创建加密密钥的备份文件。您还可以选择加密密钥的过期日期。"

#: ../components/pro/gpa.rst:45
msgid "Wait until the keys are generated successfully."
msgstr "等待密钥成功生成。"

#: ../components/pro/gpa.rst:50
msgid ""
"Enter a strong passphrase for your backup keys. We strongly recommend to "
"store the backup file on a separate storage(e.g. CD-ROM) and on a safe "
"location."
msgstr "为备份密钥输入一个强大的口令。我们强烈建议将备份文件存储在单独的存储器（如 CD-ROM）和安全位置。"

#: ../components/pro/gpa.rst:55
msgid ""
"Congratulations, your Nitrokey is now ready to use. Please see the "
"`applications <https://www.nitrokey.com/documentation/applications>`__ "
"section for further information of its usage."
msgstr ""
"恭喜您，您的 Nitrokey 已经可以使用了。请参阅 \"应用程序 "
"<https://www.nitrokey.com/documentation/applications>`__\"部分了解更多使用信息。"

#: ../components/hsm/mac/hard-disk-encryption.rst:2
#: ../components/hsm/windows/hard-disk-encryption.rst:2
#: ../components/pro/linux/hard-disk-encryption.rst:2
#: ../components/pro/mac/hard-disk-encryption.rst:2
#: ../components/pro/windows/hard-disk-encryption.rst:2
#: ../components/storage/mac/hard-disk-encryption.rst:2
#: ../components/storage/windows/hard-disk-encryption.rst:2
msgid "Hard Disk Encryption"
msgstr "硬盘加密"

#: ../components/pro/hard-disk-encryption.rst.inc:6
#: ../components/pro/linux/hard-disk-encryption.rst:7
msgid "VeraCrypt (formerly TrueCrypt)"
msgstr "VeraCrypt（原 TrueCrypt）"

#: ../components/pro/hard-disk-encryption.rst.inc:8
#: ../components/pro/linux/hard-disk-encryption.rst:9
msgid ""
"`VeraCrypt <https://www.veracrypt.fr/en/Home.html>`__ is a free and Open "
"Source disk encryption software for Windows, macOS, and GNU+Linux. It is "
"the successor of TrueCrypt and thus recommended, although the following "
"instructions should apply to TrueCrypt as well."
msgstr ""
"`VeraCrypt <https://www.veracrypt.fr/en/Home.html>`__ 是一款适用于 "
"Windows、macOS 和 GNU+Linux 的免费开源磁盘加密软件。它是 TrueCrypt "
"的后续版本，因此值得推荐，不过以下说明也适用于 TrueCrypt。"

#: ../components/pro/linux/hard-disk-encryption.rst:11
msgid ""
"Follow these steps to use the program with `Nitrokey Storage 2 "
"<https://shop.nitrokey.com/shop/product/nitrokey-storage-2-56>`__ or "
"`Nitrokey Pro 2 <https://shop.nitrokey.com/shop/product/nk-pro-2"
"-nitrokey-pro-2-3>`__:"
msgstr ""
"请按照以下步骤将程序与 `Nitrokey Storage 2 <https://shop.nitrokey.com/shop/product"
"/nitrokey-storage-2-56>`__ 或 `Nitrokey Pro 2 "
"<https://shop.nitrokey.com/shop/product/nk-pro-2-nitrokey-pro-2-3>`__ "
"一起使用："

#: ../components/pro/hard-disk-encryption.rst.inc:12
#: ../components/pro/linux/hard-disk-encryption.rst:15
msgid ""
"Install the latest release of `OpenSC "
"<https://github.com/OpenSC/OpenSC/wiki>`__, or download the `PKCS#11 "
"library <https://smartcard-auth.de/download-en.html>`__."
msgstr ""
"安装最新版本的 `OpenSC <https://github.com/OpenSC/OpenSC/wiki>`__，或下载 `PKCS#11 库"
" <https://smartcard-auth.de/download-en.html>`__。"

#: ../components/pro/hard-disk-encryption.rst.inc:15
#: ../components/pro/linux/hard-disk-encryption.rst:18
msgid ""
"Choose the library in VeraCrypt under Settings>Preferences>Security Token"
" (location depends on system, e.g. ``/usr/lib/opensc``)."
msgstr ""
"在 VeraCrypt 的 \"设置\">\"首选项\">\"安全令牌 \"下选择库（位置取决于系统，例如 "
"``/usr/lib/opensc``）。"

#: ../components/pro/hard-disk-encryption.rst.inc:17
#: ../components/pro/linux/hard-disk-encryption.rst:20
msgid "Generate a 64 Byte key file via Tools>Keyfile Generator."
msgstr "通过工具 > 密钥文件生成器生成 64 字节密钥文件。"

#: ../components/pro/hard-disk-encryption.rst.inc:18
#: ../components/pro/linux/hard-disk-encryption.rst:21
msgid ""
"Now you should be able to import the generated key file via Tools>Manage "
"Security Token Keyfiles. You should choose the first Slot (``[0] User "
"PIN``). The keyfile is then stored on the Nitrokey as ‘Private Data "
"Object 1’ (``PrivDO1``)."
msgstr ""
"现在你可以通过 \"工具\">\"管理安全令牌密钥文件 \"导入生成的密钥文件。你应该选择第一个插槽（`[0] 用户密码``）。密钥文件将作为 "
"\"私人数据对象 1\"（``PrivDO1``）存储在 Nitrokey 中。"

#: ../components/pro/hard-disk-encryption.rst.inc:22
#: ../components/pro/linux/hard-disk-encryption.rst:25
msgid "After this you should wipe the original keyfile on your Computer securely!"
msgstr "之后，你应该安全地清除电脑中的原始密钥文件！"

#: ../components/pro/hard-disk-encryption.rst.inc:24
#: ../components/pro/linux/hard-disk-encryption.rst:27
msgid ""
"Now you can use VeraCrypt with the Nitrokey: Create a container, choose "
"the keyfile on the device as an alternative to a password."
msgstr "现在您可以使用 VeraCrypt 和 Nitrokey：创建一个容器，选择设备上的密钥文件作为密码的替代。"

#: ../components/pro/hard-disk-encryption.rst.inc:29
#: ../components/pro/linux/hard-disk-encryption.rst:32
msgid "Security Consideration"
msgstr "安全考虑"

#: ../components/pro/hard-disk-encryption.rst.inc:31
#: ../components/pro/linux/hard-disk-encryption.rst:34
msgid ""
"Please note that VeraCrypt doesn’t make use of the full security which "
"Nitrokey (and smart cards in general) offer. Instead it stores a keyfile "
"on the Nitrokey which theoretically could be stolen by a computer virus "
"after the user enters the PIN."
msgstr ""
"请注意，VeraCrypt 并没有利用 Nitrokey（以及一般智能卡）提供的全部安全性。相反，它在 Nitrokey "
"上存储了一个密钥文件，理论上用户输入 PIN 码后，该密钥文件可能会被计算机病毒窃取。"

#: ../components/pro/hard-disk-encryption.rst.inc:36
#: ../components/pro/linux/hard-disk-encryption.rst:39
msgid ""
"Note: `Aloaha Crypt <https://www.aloaha.com/aloaha-crypt-disk/>`__ is "
"based on TrueCrypt/VeraCrypt but without the described security "
"limitation."
msgstr ""
"注：`Aloaha Crypt <https://www.aloaha.com/aloaha-crypt-disk/>`__ 基于 "
"TrueCrypt/VeraCrypt 但没有所述的安全限制。"

#: ../components/pro/linux/hard-disk-encryption.rst:42
msgid "Hard Disk Encryption on GNU+Linux with LUKS/dm-crypt"
msgstr "使用 LUKS/dm-crypt 在 GNU+Linux 上加密硬盘"

#: ../components/pro/linux/hard-disk-encryption.rst:44
msgid ""
"Here are `excellent instructions <https://blog.kumina.nl/2010/07/two-"
"factor-luks-using-ubuntu/>`__ how to use Nitrokey to encrypt your hard "
"disk under GNU+Linux with LUKS/dm-crypt. `Other instructions "
"<https://wiki.ubuntu.com/SmartCardLUKSDiskEncryption>`__."
msgstr ""
"下面是 <https://blog.kumina.nl/2010/07/two-factor-luks-using-ubuntu/>`__ "
"如何使用 Nitrokey 在 GNU+Linux 下用 LUKS/dm-crypt 加密硬盘的 \"精彩说明\"。其他说明 "
"<https://wiki.ubuntu.com/SmartCardLUKSDiskEncryption>`__。"

#: ../components/pro/linux/hard-disk-encryption.rst:46
msgid ""
"Purism has created a `simple script "
"<https://docs.puri.sm/PureBoot/LibremKeyLUKS.html>`__ to add the "
"Nitrokey/LibremKey as a way to unlock LUKS partitions (not tested by "
"Nitrokey yet)."
msgstr ""
"Purism 创建了一个 \"简单脚本 <https://docs.puri.sm/PureBoot/LibremKeyLUKS.html>`__"
" 添加 Nitrokey/LibremKey 作为解锁 LUKS 分区的方法（Nitrokey 尚未测试）。"

#: ../components/pro/linux/hard-disk-encryption.rst:48
msgid ""
"`This project <https://github.com/artosan/nitroluks/>`__ aims to ease the"
" use of LUKS with the Nitrokey Pro or Storage based on the Password Safe "
"(not tested by Nitrokey yet). A description on how to use it on Gentoo "
"can be found `here <https://amedeos.github.io/gentoo/nitrokey/2019/01/21"
"/gentoo-nitrokey-luks.html>`__."
msgstr ""
"本项目 <https://github.com/artosan/nitroluks/>`__ 旨在简化 LUKS 与 Nitrokey Pro "
"或基于密码保险箱的存储设备（Nitrokey 尚未测试）的配合使用。关于如何在 Gentoo 上使用它的说明，请参见 `这里 "
"<https://amedeos.github.io/gentoo/nitrokey/2019/01/21/gentoo-nitrokey-"
"luks.html>`__。"

#: ../components/pro/linux/hard-disk-encryption.rst:50
msgid ""
"For Arch Linux, see `initramfs-scencrypt <https://github.com/fuhry"
"/initramfs-scencrypt>`__."
msgstr ""
"对于 Arch Linux，请参见 `initramfs-scencrypt <https://github.com/fuhry"
"/initramfs-scencrypt>`__。"

#: ../components/pro/linux/hard-disk-encryption.rst:53
msgid "Storage Encryption on GNU+Linux with EncFS"
msgstr "使用 EncFS 在 GNU+Linux 上进行存储加密"

#: ../components/pro/linux/hard-disk-encryption.rst:57
msgid "Prerequisite"
msgstr "先决条件"

#: ../components/pro/linux/hard-disk-encryption.rst:59
msgid ""
"Please ensure that you `installed the device driver, changed the default "
"PINs and generated or imported keys with GnuPG "
"<https://www.nitrokey.com/start>`__."
msgstr ""
"请确保您 \"安装了设备驱动程序，更改了默认 PIN 码，并使用 GnuPG "
"<https://www.nitrokey.com/start>`__ 生成或导入了密钥。"

#: ../components/pro/linux/hard-disk-encryption.rst:63
msgid ""
"`EncFS <https://github.com/vgough/encfs>`__ is an easy to utlity for "
"encrypted file systems and it is based on `FUSE "
"<https://de.wikipedia.org/wiki/Filesystem_in_Userspace>`__. You may "
"follow these steps to use it with very long passwords and Nitrokey Pro 2:"
msgstr ""
"`EncFS <https://github.com/vgough/encfs>`__ 是一个易于使用的加密文件系统，它基于 `FUSE "
"<https://de.wikipedia.org/wiki/Filesystem_in_Userspace>`__。你可以按照以下步骤将其用于超长密码和"
" Nitrokey Pro 2："

#: ../components/pro/linux/hard-disk-encryption.rst:67
#: ../components/to-be-integrated.rst:187
msgid "Initialization"
msgstr "初始化"

#: ../components/pro/linux/hard-disk-encryption.rst:69
msgid "Create a key file with random data:"
msgstr "创建一个包含随机数据的密钥文件："

#: ../components/pro/linux/hard-disk-encryption.rst:76
msgid "Encrypt the key file and use the User-ID of your Nitrokey"
msgstr "加密密钥文件并使用 Nitrokey 的用户 ID"

#: ../components/pro/linux/hard-disk-encryption.rst:83
msgid "Remove the key file in clear text:"
msgstr "删除明文密钥文件："

#: ../components/pro/linux/hard-disk-encryption.rst:90
msgid "Create mount point:"
msgstr "创建挂载点"

#: ../components/pro/linux/hard-disk-encryption.rst:97
msgid "Create the actual encryption folder"
msgstr "创建实际加密文件夹"

#: ../components/pro/linux/hard-disk-encryption.rst:106
msgid "Unmount the new file system:"
msgstr "卸载新文件系统"

#: ../components/pro/linux/hard-disk-encryption.rst:116
msgid "Mount encrypted file system and enter PIN of Nitrokey:"
msgstr "挂载加密文件系统并输入 Nitrokey 的 PIN 码："

#: ../components/pro/linux/hard-disk-encryption.rst:123
msgid "After usage, unmount the file system:"
msgstr "使用后，卸载文件系统："

#: ../components/pro/linux/hard-disk-encryption.rst:131
msgid "Storage Encryption on GNU+Linux with ECryptFS"
msgstr "使用 ECryptFS 在 GNU+Linux 上进行存储加密"

#: ../components/pro/linux/hard-disk-encryption.rst:133
msgid ""
"`eCryptfs <https://www.ecryptfs.org/>`__ is a file based transparent "
"encryption file system for GNU+Linux which can be used with Nitrokey "
"through a PKCS#11 driver."
msgstr ""
"`eCryptfs <https://www.ecryptfs.org/>`__ 是一个基于文件的 GNU+Linux 透明加密文件系统，可通过 "
"PKCS#11 驱动程序与 Nitrokey 一起使用。"

#: ../components/pro/linux/hard-disk-encryption.rst:135
msgid "See `these <http://tkxuyen.com/blog/?p=293>`__ instructions:"
msgstr "请参阅 \"这些 <http://tkxuyen.com/blog/?p=293>`__ 说明\"："

#: ../components/pro/linux/hard-disk-encryption.rst:137
msgid "Import the certificate and key to the Nitrokey"
msgstr "将证书和密钥导入 Nitrokey"

#: ../components/pro/linux/hard-disk-encryption.rst:145
msgid "Create the file ~/.ecryptfsrc.pkcs11:"
msgstr "创建 ~/.ecryptfsrc.pkcs11 文件："

#: ../components/pro/linux/hard-disk-encryption.rst:152
msgid "Enter this content:"
msgstr "输入此内容："

#: ../components/pro/linux/hard-disk-encryption.rst:164
msgid "Copy the serialized id for later usage:"
msgstr "复制序列化的 ID，以便以后使用："

#: ../components/pro/linux/hard-disk-encryption.rst:174
msgid ""
"Alternatively, try `ESOSI <https://sourceforge.net/projects/esosi/>`__ or"
" follow these steps using OpenSC and OpenVPN."
msgstr ""
"或者尝试 `ESOSI <https://sourceforge.net/projects/esosi/>`__ 或按照以下步骤使用 OpenSC"
" 和 OpenVPN。"

#: ../components/pro/linux/hard-disk-encryption.rst:176
msgid ""
"Source of the guide: "
"https://www.nitrokey.com/documentation/applications#a:hard-disk-"
"encryption"
msgstr ""
"指南来源：https://www.nitrokey.com/documentation/applications#a:hard-disk-"
"encryption"

#: ../components/hsm/import-keys-certs.rst.inc:2
msgid "Importing Keys And Certificates"
msgstr "导入密钥和证书"

#: ../components/hsm/import-keys-certs.rst.inc:6
msgid ""
"Generally the concept to import key-pairs and/or certificates is the "
"following:"
msgstr "一般来说，导入密钥对和/或证书的概念如下："

#: ../components/hsm/import-keys-certs.rst.inc:9
msgid "Create a DKEK (Device Key Encryption Key) share"
msgstr "创建 DKEK（设备密钥加密密钥）共享"

#: ../components/hsm/import-keys-certs.rst.inc:10
msgid "Initialize device and enable DKEK as \"Device Encryption Scheme\""
msgstr "初始化设备并启用 DKEK 作为 \"设备加密方案\"。"

#: ../components/hsm/import-keys-certs.rst.inc:11
msgid "Import DKEK share into device"
msgstr "将 DKEK 共享导入设备"

#: ../components/hsm/import-keys-certs.rst.inc:12
msgid "Import PKCS#12 container(s) into DKEK"
msgstr "将 PKCS#12 容器导入 DKEK"

#: ../components/hsm/import-keys-certs.rst.inc:14
msgid ""
"This documentation covers only one specific use-case and should serve as "
"an example for the overall workflow. For further information please read "
"`this thread`_ and `this blog post`_."
msgstr "本文档仅涵盖一个特定用例，应作为整个工作流程的范例。如需了解更多信息，请阅读 \"本主题 \"和 \"本博文\"。"

#: ../components/hsm/import-keys-certs.rst.inc:20
msgid ""
"This procedure will reset your Nitrokey HSM 2 device and all data on it "
"will be deleted!"
msgstr "此程序将重置 Nitrokey HSM 2 设备，设备上的所有数据都将被删除！"

#: ../components/hsm/import-keys-certs.rst.inc:26
msgid ""
"make sure all the keys you would like to import are available as PKCS#12 "
"containers (`.p12`) and you know the password, if needed"
msgstr "确保您要导入的所有密钥都是 PKCS#12 容器 (`.p12`)，如有需要，您还需要知道密码"

#: ../components/hsm/import-keys-certs.rst.inc:29
msgid ""
"be sure that nothing on the used Nitrokey HSM 2 is needed, it will be "
"deleted during this procedure"
msgstr "确保已使用的 Nitrokey HSM 2 上没有任何需要的内容，这些内容将在此过程中删除"

#: ../components/hsm/import-keys-certs.rst.inc:32
msgid ""
"download the latest `Smart Card Shell`_ and unpack it into your work-"
"directory"
msgstr "下载最新的 \"Smart Card Shell\"_，并解压到工作目录中"

#: ../components/hsm/import-keys-certs.rst.inc:35
msgid "Importing Via The SCSH3 GUI"
msgstr "通过 SCSH3 图形用户界面导入"

#: ../components/hsm/import-keys-certs.rst.inc:37
msgid ""
"Inside the unpacked directory you will find ``scsh3gui``, which can be "
"started using ``bash scsh3gui`` (for windows double-click on: "
"``scsh3gui.cmd``)."
msgstr ""
"在解压后的目录中可以找到 ``scsh3gui``，可以使用 ``bash scsh3gui``（windows "
"双击：``scsh3gui.cmd``）启动它。"

#: ../components/hsm/import-keys-certs.rst.inc:40
msgid ""
"Once the SCSH3 Tool is open, you should see your Nitrokey HSM 2 inside "
"the tree view. Please follow these steps to import:"
msgstr "打开 SCSH3 工具后，您应该能在树形视图中看到 Nitrokey HSM 2。请按照以下步骤导入："

#: ../components/hsm/import-keys-certs.rst.inc:43
msgid "Start key-manager (File -> Keymanager)"
msgstr "启动钥匙管理器（文件 -> 钥匙管理器）"

#: ../components/hsm/import-keys-certs.rst.inc:45
msgid "Right-click \"Smartcard-HSM\" -> create DKEK share"
msgstr "右键单击 \"Smartcard-HSM\" -> 创建 DKEK 共享"

#: ../components/hsm/import-keys-certs.rst.inc:47
msgid "Choose file location"
msgstr "选择文件位置"

#: ../components/hsm/import-keys-certs.rst.inc:49
msgid "Choose DKEK share password"
msgstr "选择 DKEK 共享密码"

#: ../components/hsm/import-keys-certs.rst.inc:51
msgid "Right-click \"Smartcard-HSM\" -> Initialize device"
msgstr "右键单击 \"Smartcard-HSM\" -> 初始化设备"

#: ../components/hsm/import-keys-certs.rst.inc:53
msgid "Enter SO-PIN"
msgstr "输入 SO-PIN"

#: ../components/hsm/import-keys-certs.rst.inc:55
msgid "(optional) Enter label and enter URL/Host"
msgstr "(可选） 输入标签并输入 URL/主机"

#: ../components/hsm/import-keys-certs.rst.inc:57
msgid "Select authentication method: \"User PIN\""
msgstr "选择验证方法：\"用户密码"

#: ../components/hsm/import-keys-certs.rst.inc:59
msgid ""
"Allow RESET RETRY COUNTER: \"Resetting and unblocking PIN with SO-PIN not"
" allowed\""
msgstr "允许重置重试计数器：\"不允许使用 SO-PIN 重置和解锁 PIN\"。"

#: ../components/hsm/import-keys-certs.rst.inc:61
msgid "Enter and confirm User PIN"
msgstr "输入并确认用户密码"

#: ../components/hsm/import-keys-certs.rst.inc:63
msgid "\"Select Device Key Encryption scheme\" -> \"DKEK shares\""
msgstr "\"选择设备密钥加密方案\"->\"DKEK 共享\"。"

#: ../components/hsm/import-keys-certs.rst.inc:65
msgid "Enter number of DKEK shares: 1"
msgstr "输入 DKEK 股份数：1"

#: ../components/hsm/import-keys-certs.rst.inc:67
msgid "Right-click DKEK set-up in progress -> \"Import DKEK share\""
msgstr "右键单击正在进行的 DKEK 设置 -> \"导入 DKEK 共享\"。"

#: ../components/hsm/import-keys-certs.rst.inc:69
msgid "Choose DKEK share file location"
msgstr "选择 DKEK 共享文件位置"

#: ../components/hsm/import-keys-certs.rst.inc:71
msgid "Password for DKEK share"
msgstr "DKEK 共享密码"

#: ../components/hsm/import-keys-certs.rst.inc:73
msgid "Right-click \"SmartCard-HSM\" -> \"Import from PKCS#12\""
msgstr "右键单击 \"SmartCard-HSM\"->\"从 PKCS#12 导入"

#: ../components/hsm/import-keys-certs.rst.inc:75
msgid "Enter number of shares -> 1"
msgstr "输入股份数 -> 1"

#: ../components/hsm/import-keys-certs.rst.inc:77
msgid "Enter file location of DKEK share"
msgstr "输入 DKEK 共享的文件位置"

#: ../components/hsm/import-keys-certs.rst.inc:79
msgid "Enter Password for DKEK share"
msgstr "输入 DKEK 共享密码"

#: ../components/hsm/import-keys-certs.rst.inc:81
msgid "Select PKCS#12 container for import (Enter password, if set)"
msgstr "选择用于导入的 PKCS#12 容器（如果已设置，请输入密码）"

#: ../components/hsm/import-keys-certs.rst.inc:83
msgid "Select Key"
msgstr "选择键"

#: ../components/hsm/import-keys-certs.rst.inc:85
msgid "Select Name to be used (This is the Label used for the key on the device)"
msgstr "选择要使用的名称（这是设备上用于按键的标签）"

#: ../components/hsm/import-keys-certs.rst.inc:87
msgid "Import more keys, if needed"
msgstr "根据需要导入更多密钥"

#: ../components/hsm/import-keys-certs.rst.inc:89
msgid ""
"Once this is done, you can check that the keys have been successfully "
"imported using:"
msgstr "完成上述操作后，您就可以检查密钥是否已成功导入："

#: ../components/hsm/import-keys-certs.rst.inc:96
msgid ""
"In the resulting output you will find the imported keys labeled by the "
"name you chose previously."
msgstr "在输出结果中，你会发现导入的密钥都标有你之前选择的名称。"

#: ../components/hsm/linux/index.rst:2
msgid "Nitrokey HSM with GNU/Linux"
msgstr "使用 GNU/Linux 的 Nitrokey HSM"

#: ../components/hsm/linux/index.rst:13
msgid ""
"Install `OpenSC <https://github.com/OpenSC/OpenSC/wiki>`__. You need at "
"least version 0.19. You can find recent builds for debian-based systems "
"like Ubuntu `here <https://github.com/Nitrokey/opensc-build>`__ if your "
"system does not have the newest version of OpenSC. Alternatively, install"
" `this <https://www.cardcontact.de/download/sc-hsm-starterkit.zip>`__ "
"driver (`source <https://github.com/CardContact/sc-hsm-embedded>`__)."
msgstr ""
"安装 `OpenSC <https://github.com/OpenSC/OpenSC/wiki>`__。至少需要 0.19 "
"版。如果你的系统没有最新版本的 OpenSC，你可以在`这里 <https://github.com/Nitrokey/opensc-"
"build>`__ 找到基于 debian 的系统（如 Ubuntu）的最新版本。或者，安装 `this "
"<https://www.cardcontact.de/download/sc-hsm-starterkit.zip>`__ 驱动程序 "
"(`source <https://github.com/CardContact/sc-hsm-embedded>`__)。"

#: ../components/hsm/linux/index.rst:20 ../components/hsm/mac/index.rst:17
#: ../components/hsm/windows/index.rst:17
msgid ""
"Define SO-PIN and PIN of your own choices. See `these instructions "
"<https://github.com/OpenSC/OpenSC/wiki/SmartCardHSM#initialize-the-"
"device>`__. Afterwards you can begin to `generate new keys "
"<https://github.com/OpenSC/OpenSC/wiki/SmartCardHSM#generate-key-"
"pair>`__."
msgstr ""
"自行定义 SO-PIN 和 PIN。请参阅 \"这些说明 "
"<https://github.com/OpenSC/OpenSC/wiki/SmartCardHSM#initialize-the-"
"device>`__\"。之后就可以开始 \"生成新密钥 "
"<https://github.com/OpenSC/OpenSC/wiki/SmartCardHSM#generate-key-"
"pair>`__\"。"

#: ../components/hsm/linux/index.rst:25 ../components/hsm/mac/index.rst:22
#: ../components/hsm/windows/index.rst:22 ../components/pro/linux/index.rst:33
#: ../components/pro/mac/index.rst:26 ../components/pro/windows/index.rst:29
#: ../components/start/linux/index.rst:41 ../components/start/mac/index.rst:42
#: ../components/start/windows/index.rst:41
#: ../components/storage/linux/index.rst:29
#: ../components/storage/mac/index.rst:27
#: ../components/storage/windows/index.rst:31
msgid "Your Nitrokey is now ready to use."
msgstr "您的 Nitrokey 现在可以使用了。"

#: ../components/hsm/linux/index.rst:27 ../components/hsm/mac/index.rst:24
#: ../components/hsm/windows/index.rst:24
msgid ""
"There is `nitrotool <https://github.com/johndoe31415/nitrotool>`__ as a "
"more comfortable frontend to OpenSC. (hsmwiz)"
msgstr ""
"有 `nitrotool <https://github.com/johndoe31415/nitrotool>`__ 作为 OpenSC "
"更舒适的前端。(hsmwiz)"

#: ../components/hsm/linux/index.rst:28 ../components/hsm/mac/index.rst:25
#: ../components/hsm/windows/index.rst:25
msgid ""
"Embedded Systems: For systems with minimal memory footprint a read/only "
"PKCS#11 module is provided by the `sc-hsm-embedded "
"<https://github.com/CardContact/sc-hsm-embedded>`__ project."
msgstr ""
"嵌入式系统：对于内存占用极小的系统，\"sc-hsm-embedded <https://github.com/CardContact/sc-"
"hsm-embedded>`__\"项目提供了只读 PKCS#11 模块。"

#: ../components/hsm/linux/index.rst:29 ../components/hsm/mac/index.rst:26
#: ../components/hsm/windows/index.rst:26
msgid ""
"`This PKCS#11 module <https://github.com/CardContact/sc-hsm-"
"embedded/wiki/PKCS11>`__ is useful for deployments where key generation "
"at the user's workplace is not required. The PKCS#11 module also supports"
" major electronic signature cards available in the German market."
msgstr ""
"该 PKCS#11 模块 <https://github.com/CardContact/sc-hsm-"
"embedded/wiki/PKCS11>`__ 适用于不需要在用户工作场所生成密钥的部署。PKCS#11 模块还支持德国市场上的主要电子签名卡。"

#: ../components/hsm/linux/index.rst:30 ../components/hsm/mac/index.rst:27
#: ../components/hsm/windows/index.rst:27
msgid ""
"OpenSCDP: The SmartCard-HSM is fully integrated with `OpenSCDP "
"<https://www.openscdp.org/>`__, the open smart card development platform."
" See the `public support scripts <https://www.openscdp.org/scripts/sc-"
"hsm/jsdoc/index.html>`__ for details."
msgstr ""
"OpenSCDP：SmartCard-HSM 与开放式智能卡开发平台 \"OpenSCDP "
"<https://www.openscdp.org/>`__\"完全集成。详情请参见 \"公共支持脚本 "
"<https://www.openscdp.org/scripts/sc-hsm/jsdoc/index.html>`__\"。"

#: ../components/hsm/linux/ipsec.rst:2 ../components/pro/linux/ipsec.rst:2
#: ../components/start/linux/ipsec.rst:2
#: ../components/storage/linux/ipsec.rst:2
#: ../components/to-be-integrated.rst:458
#: ../components/to-be-integrated.rst:829
msgid "IPsec"
msgstr "IPsec"

#: ../components/hsm/ipsec.rst.inc:3
msgid ""
"`Strong Swan <https://www.strongswan.org/>`__ works using the `PKCS#11 "
"driver <https://www.nitrokey.com/documentation/applications#pkcs11>`__. "
"Basically follow these steps:"
msgstr ""
"`Strong Swan <https://www.strongswan.org/>`__ 使用 `PKCS#11 驱动程序 "
"<https://www.nitrokey.com/documentation/applications#pkcs11>`__ 运行。基本步骤如下"

#: ../components/hsm/ipsec.rst.inc:5 ../components/to-be-integrated.rst:462
#: ../components/to-be-integrated.rst:833
msgid ""
"Generate a key on Nitrokey via pkcs11-tool. In this example it's a 4096 "
"bit RSA key."
msgstr "通过 pkcs11-tool 在 Nitrokey 上生成密钥。本例中使用的是 4096 位 RSA 密钥。"

#: ../components/hsm/ipsec.rst.inc:11 ../components/to-be-integrated.rst:466
#: ../components/to-be-integrated.rst:837
msgid "Generate a certificate signing request via openssl + pkcs11 module"
msgstr "通过 openssl + pkcs11 模块生成证书签名请求"

#: ../components/hsm/ipsec.rst.inc:19 ../components/to-be-integrated.rst:472
#: ../components/to-be-integrated.rst:843
msgid "Sign the certificate with your certificate authority"
msgstr "使用证书颁发机构签署证书"

#: ../components/hsm/ipsec.rst.inc:21 ../components/to-be-integrated.rst:474
#: ../components/to-be-integrated.rst:845
msgid "Convert the certificate to DER"
msgstr "将证书转换为 DER"

#: ../components/hsm/ipsec.rst.inc:27 ../components/to-be-integrated.rst:431
#: ../components/to-be-integrated.rst:478
#: ../components/to-be-integrated.rst:802
#: ../components/to-be-integrated.rst:849
msgid "Import  the certificate into the Nitrokey via pkcs11-tool"
msgstr "通过 pkcs11-tool 将证书导入 Nitrokey"

#: ../components/hsm/ipsec.rst.inc:33 ../components/to-be-integrated.rst:482
#: ../components/to-be-integrated.rst:853
msgid ""
"Configure Strongswan to load opensc-pkcs11 module then to load the "
"certificate on Nitrokey. Edit /etc/strongswan.d/charon/pkcs11.conf and "
"add the following module:"
msgstr ""
"配置 Strongswan 加载 opensc-pkcs11 模块，然后在 Nitrokey 上加载证书。编辑 "
"/etc/strongswan.d/charon/pkcs11.conf 并添加以下模块："

#: ../components/hsm/ipsec.rst.inc:44 ../components/to-be-integrated.rst:490
#: ../components/to-be-integrated.rst:861
msgid ""
"Initiate the VPN connection via IPSec/Strongswan, then prompt for "
"Nitrokey PIN"
msgstr "通过 IPSec/Strongswan 启动 VPN 连接，然后提示输入 Nitrokey PIN 码"

#: ../components/hsm/ipsec.rst.inc:46
msgid "VPN is now connected"
msgstr "VPN 已连接"

#: ../components/hsm/linux/n-of-m-schemes.rst:2
msgid "N-of-m Schemes"
msgstr "N-of-m 计划"

#: ../components/hsm/n-of-m-schemes.rst:1
msgid ""
"The Nitrokey HSM 2 supports two different n-of-m schemes - one for secure"
" sharing of key material/passwords and one for public key authentication "
"to control the access to the device. Please see `this blog post "
"<https://www.smartcard-"
"hsm.com/2015/10/10/Shared_Control_over_Key_Usage.html>`__ for more "
"detailed information."
msgstr ""
"Nitrokey HSM 2 支持两种不同的 n-of-m "
"方案：一种用于安全共享密钥材料/密码，另一种用于公钥验证，以控制对设备的访问。更多详细信息，请参阅 \"本博文 <https://www"
".smartcard-hsm.com/2015/10/10/Shared_Control_over_Key_Usage.html>`__\"。"

#: ../components/hsm/n-of-m-schemes.rst:4
msgid "N-of-m for DKEK Shares"
msgstr "DKEK 股票的市净率"

#: ../components/hsm/n-of-m-schemes.rst:6
msgid ""
"This feature can be used with OpenSC as described `here "
"<https://github.com/OpenSC/OpenSC/wiki/SmartCardHSM#using-key-backup-and-"
"restore>`__. The general approach is seen in the videos below (external "
"links)."
msgstr ""
"该功能可与 OpenSC 配合使用，详见\"<https://github.com/OpenSC/OpenSC/wiki/SmartCardHSM"
"#using-key-backup-and-restore>`__\"。一般方法见下面的视频（外部链接）。"

#: ../components/hsm/n-of-m-schemes.rst:8
#: ../components/to-be-integrated.rst:898
msgid "Nitrokey HSM's Secure Key Backup and Restore:"
msgstr "Nitrokey HSM 的安全密钥备份和还原："

#: ../components/hsm/n-of-m-schemes.rst:17
msgid ""
"<script id=\"asciicast-152957\" src=\"https://asciinema.org/a/152957.js\""
" async></script>"
msgstr ""
"<script id=\"asciicast-152957\" src=\"https://asciinema.org/a/152957.js\""
" async></script>"

#: ../components/hsm/n-of-m-schemes.rst:20
msgid ""
"<iframe width=\"560\" height=\"315\" "
"src=\"https://asciinema.org/a/152957\" frameborder=\"0\" "
"allowfullscreen></iframe>"
msgstr ""
"<iframe width=\"560\" height=\"315\" "
"src=\"https://asciinema.org/a/152957\" frameborder=\"0\" "
"allowfullscreen></iframe>"

#: ../components/hsm/n-of-m-schemes.rst:22
#: ../components/to-be-integrated.rst:902
msgid "Nitrokey HSM's M-of-N Threshold Scheme:"
msgstr "Nitrokey HSM 的 M-of-N 门限方案："

#: ../components/hsm/n-of-m-schemes.rst:30
msgid ""
"<iframe width=\"560\" height=\"315\" "
"src=\"https://asciinema.org/a/153021\" frameborder=\"0\" "
"allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>"
msgstr ""
"<iframe width=\"560\" height=\"315\" "
"src=\"https://asciinema.org/a/153021\" frameborder=\"0\" "
"allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>"

#: ../components/hsm/n-of-m-schemes.rst:33
msgid "N-of-m for public key authentication"
msgstr "用于公钥验证的 N-of-m"

#: ../components/hsm/n-of-m-schemes.rst:35
msgid ""
"So far n-of-m authentication is only supported in OpenSCDP. `The blog "
"post <https://www.smartcard-"
"hsm.com/2015/10/10/Shared_Control_over_Key_Usage.html>`__ gives an "
"overview and a how-to `here "
"<https://devnet.cardcontact.de/documents/7>`__ (CDN access required) is "
"shown the process step by step in the Smart Card Shell."
msgstr ""
"到目前为止，只有 OpenSCDP 支持 n-of-m 身份验证。博文 <https://www.smartcard-"
"hsm.com/2015/10/10/Shared_Control_over_Key_Usage.html>`__ 概要介绍了这一过程，并在 "
"<https://devnet.cardcontact.de/documents/7>`__ （需要访问 CDN）中介绍了如何在智能卡 Shell"
" 中逐步完成这一过程。"

#: ../components/hsm/n-of-m-schemes.rst:37
msgid ""
"N-of-m authentication is also supported in the `PKI-as-a-Service Portal "
"<https://www.smartcard-hsm.com/2018/02/13/pki-as-a-service.html>`__ for "
"locally and remote connected HSMs. The PKI-as-a-Service Portal is based "
"on OpenSCDP."
msgstr ""
"在 \"PKI-as-a-Service Portal <https://www.smartcard-hsm.com/2018/02/13"
"/pki-as-a-service.html>`__\"中，本地和远程连接的 HSM 也支持 N-of-m 身份验证。PKI-"
"as-a-Service Portal 基于 OpenSCDP。"

#: ../components/hsm/pkcs11-url.rst.inc:2
msgid "PKCS#11 URL Generation"
msgstr "PKCS#11 URL 生成"

#: ../components/hsm/pkcs11-url.rst.inc:7
msgid ""
"Various applications use openssl to handle e.g., TLS certificates. This "
"concept mostly allows simply replacing a file-path (for the secret) with "
"a so-called **PKCS#11 URL** to use a secret from a e.g., Nitrokey."
msgstr ""
"各种应用程序都使用 openssl 来处理 TLS 证书等。这一概念主要是用一个所谓的 **PKCS#11 URL** "
"替换文件路径（用于密文），以使用来自 Nitrokey 等的密文。"

#: ../components/hsm/pkcs11-url.rst.inc:14
msgid "ensure ``openssl`` is installed"
msgstr "确保已安装 ``openssl``"

#: ../components/hsm/pkcs11-url.rst.inc:16
msgid ""
"ensure ``openssl`` can use the PKCS#11 engine by installing ``libengine-"
"pkcs11-openssl``"
msgstr "通过安装 ``libengine-pkcs11-openssl`` 确保 ``openssl` 可以使用 PKCS#11 引擎"

#: ../components/hsm/pkcs11-url.rst.inc:25
msgid "install ``opensc`` and ``gnutls-bin`` for necessary tools"
msgstr "安装 ``opensc`` 和 ``gnutls-bin` 以获得必要的工具"

#: ../components/hsm/pkcs11-url.rst.inc:27
msgid ""
"verify that your needed keys and/or certificates are available on your "
"Nitrokey using ``pkcs15-tool -D``"
msgstr "使用 ``pkcs15-tool -D`` 验证 Nitrokey 上是否有所需的密钥和/或证书"

#: ../components/hsm/pkcs11-url.rst.inc:29
msgid ""
"if you want to use ECC keys/mechanisms through ``libengine-"
"pkcs11-openssl``, you'll have to ensure its version is at least 0.4.10"
msgstr "如果想通过 ``libengine-pkcs11-openssl`` 使用 ECC 密钥/机制，则必须确保其版本至少为 0.4.10"

#: ../components/hsm/pkcs11-url.rst.inc:33
msgid "List and Generate PKCS#11 URLs"
msgstr "列出并生成 PKCS#11 URL"

#: ../components/hsm/pkcs11-url.rst.inc:35
msgid "Use the following command to get a list of available tokens (Nitrokeys):"
msgstr "使用以下命令获取可用令牌（Nitrokeys）列表："

#: ../components/hsm/pkcs11-url.rst.inc:42
msgid ""
"Choose the token (Nitrokey) URL you want to generate URL tokens for and "
"use it like this:"
msgstr "选择要生成 URL 标记的标记（Nitrokey）URL，然后像这样使用它："

#: ../components/hsm/pkcs11-url.rst.inc:51
msgid ""
"If you inspect the tail of the URL you'll recognize: ``label``, ``id`` "
"and more, these can be partly removed as long as the necessary objects "
"can be uniquely identified using the resulting URL, see :doc:`TLS Apache2"
" Configuration<apache2-tls>` for an example using ``id`` only."
msgstr ""
"如果您检查 URL 的尾部，就会发现：label\"、\"id \"等，这些都可以部分移除，只要使用生成的 URL "
"可以唯一地识别必要的对象即可，参见 :doc:`TLS Apache2 Configuration<apache2-tls>` 以了解仅使用 "
"\"id \"的示例。"

#: ../components/hsm/smime.rst.inc:2 ../components/pro/smime.rst.inc:2
msgid "S/MIME Email Encryption"
msgstr "S/MIME 电子邮件加密"

#: ../components/hsm/smime.rst.inc:7
#: ../components/nextbox/technical/replace-drive.rst:12
#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:15
#: ../components/pro/linux/openvpn-easyrsa.rst:22
#: ../components/pro/openpgp-outlook.rst.inc:12
#: ../components/pro/smime-outlook.rst.inc:7
#: ../components/pro/smime-thunderbird.rst.inc:7
#: ../components/pro/smime.rst.inc:7
#: ../components/pro/windows/openpgp-csp.rst:9
#: ../components/pro/windows/openvpn-easyrsa.rst:22
#: ../components/pro/windows/openvpn-viscosity.rst:15
#: ../components/storage/linux/openvpn-easyrsa.rst:22
msgid "Prerequisites"
msgstr "先决条件"

#: ../components/hsm/smime.rst.inc:9 ../components/pro/smime.rst.inc:9
#: ../components/shared/openpgp.rst.inc:1
msgid "There are two widely used standards for email encryption."
msgstr "目前有两种广泛使用的电子邮件加密标准。"

#: ../components/hsm/smime.rst.inc:11 ../components/pro/smime.rst.inc:11
#: ../components/shared/openpgp.rst.inc:3
msgid "OpenPGP/GnuPG is popular among individuals,"
msgstr "OpenPGP/GnuPG 在个人中很流行、"

#: ../components/hsm/smime.rst.inc:13 ../components/pro/smime.rst.inc:13
#: ../components/shared/openpgp.rst.inc:5
msgid "S/MIME/X.509 is mostly used by enterprises."
msgstr "企业大多使用 S/MIME/X.509。"

#: ../components/hsm/smime.rst.inc:15
msgid ""
"The Nitrokey HSM 2 currently supports the S/MIME/X.509 standard. This "
"page describes the usage of S/MIME email encryption."
msgstr "Nitrokey HSM 2 目前支持 S/MIME/X.509 标准。本页介绍 S/MIME 电子邮件加密的用法。"

#: ../components/hsm/smime.rst.inc:17 ../components/pro/smime.rst.inc:17
#, fuzzy
msgid ""
"You need to purchase a S/MIME certificate (e.g. at `CERTUM "
"<https://www.certum.eu/en/cert_offer_cert_id/>`__) or may already got one"
" by your company. Furthermore, you need to install `OpenSC "
"<https://github.com/OpenSC/OpenSC/wiki>`__ on your System. While "
"GNU/Linux users usually can install OpenSC over the package manager (e.g."
" ``sudo apt install opensc`` on Ubuntu), macOS and Windows users can "
"download the installation files from the `OpenSC "
"<https://github.com/OpenSC/OpenSC/releases>`__ page."
msgstr ""
"您需要购买一个 S/MIME 证书（例如在 `CERTUM "
"<https://www.certum.eu/en/cert_offer_cert_id/>`__），或者您的公司可能已经购买了一个。此外，您还需要在系统中安装"
" `OpenSC <https://github.com/OpenSC/OpenSC/wiki>`__。GNU/Linux "
"用户通常可以通过软件包管理器安装 OpenSC（例如在 Ubuntu 上使用 ``sudo apt install opensc``），而 "
"macOS 和 Windows 用户可以从 `OpenSC "
"<https://github.com/OpenSC/OpenSC/releases>`__ 页面下载安装文件。"

#: ../components/hsm/smime.rst.inc:20 ../components/pro/smime.rst.inc:20
msgid "Import Existing Key and Certificate"
msgstr "导入现有密钥和证书"

#: ../components/hsm/smime.rst.inc:2 ../components/hsm/smime.rst.inc:22
#: ../components/pro/smime.rst.inc:2 ../components/pro/smime.rst.inc:22
msgid ""
"The following instructions are based on the `wiki of OpenSC "
"<https://github.com/OpenSC/OpenSC/wiki/OpenPGP-card>`__. We will assume, "
"that you already got a key-certificate pair as a .p12 file. Please have a"
" look at the wiki page, if you got a separate key and certificate file."
msgstr ""
"下面的说明基于 \"wiki of OpenSC <https://github.com/OpenSC/OpenSC/wiki/OpenPGP-"
"card>`__\"。我们假设你已经得到了一个 .p12 文件的密钥-证书对。如果你有单独的密钥和证书文件，请查看维基页面。"

#: ../components/hsm/smime.rst.inc:4 ../components/hsm/smime.rst.inc:24
#: ../components/pro/smime.rst.inc:4 ../components/pro/smime.rst.inc:24
#, fuzzy
msgid ""
"To open the Windows command line please push the Windows-key and R-key. "
"Now type ‘cmd.exe’ in the text field and hit enter. To open a Terminal on"
" macOS or GNU/Linux please use the application search (e.g. spotlight on "
"macOS)."
msgstr ""
"要打开 Windows 命令行，请按下 Windows 键和 R 键。现在在文本字段中输入 \"cmd.exe\"，然后按回车键。要在 macOS"
" 或 GNU/Linux 上打开终端，请使用应用程序搜索（例如 macOS 上的 spotlight）。"

#: ../components/hsm/smime.rst.inc:6 ../components/hsm/smime.rst.inc:26
#: ../components/pro/smime.rst.inc:6 ../components/pro/smime.rst.inc:26
msgid ""
"To make these commands as simple as possible, the .p12 file needs to be "
"in your home folder. On Windows this is usually "
"``C:\\Users\\yourusername`` and on macOS and GNU/Linux system it will be "
"``/home/yourusername``. If you do not store the .p12 file there, you have"
" to adapt the path in the commands below. Please plug in the Nitrokey "
"before submitting the commands."
msgstr ""
"为了使这些命令尽可能简单，.p12 文件需要放在您的主文件夹中。在 Windows "
"系统中通常是``C:\\Users\\yourusername``，在 macOS 和 GNU/Linux "
"系统中是``/home/yourusername``。如果您没有在此处存储 .p12 文件，则必须调整以下命令中的路径。请在提交命令前插入 "
"Nitrokey。"

#: ../components/hsm/smime.rst.inc:8 ../components/hsm/smime.rst.inc:28
#: ../components/pro/smime.rst.inc:8 ../components/pro/smime.rst.inc:28
msgid ""
"Assuming that your key-certificate file reads ‘myprivate.p12’ the "
"commands for Windows looks like this:"
msgstr "假设密钥证书文件为 \"myprivate.p12\"，Windows 下的命令如下："

#: ../components/hsm/smime.rst.inc:15 ../components/hsm/smime.rst.inc:35
#: ../components/pro/smime.rst.inc:15 ../components/pro/smime.rst.inc:35
msgid "and on macOS and GNU/Linux it will be"
msgstr "而在 macOS 和 GNU/Linux 上，它将是"

#: ../components/hsm/smime.rst.inc:22 ../components/hsm/smime.rst.inc:42
#: ../components/pro/smime.rst.inc:22 ../components/pro/smime.rst.inc:42
msgid ""
"The two commands copy the key-certificate pair to the slot 2 (needed for "
"decrypting emails) and slot 3 (needed for signing). The output looks on "
"both systems something like this:"
msgstr "这两条命令分别将密钥-证书对复制到插槽 2（解密邮件时需要）和插槽 3（签名时需要）。输出结果在两个系统上都是这样的"

#: ../components/hsm/smime.rst.inc:29 ../components/hsm/smime.rst.inc:49
#: ../components/pro/smime.rst.inc:29 ../components/pro/smime.rst.inc:49
msgid ""
"Please note that there will be error messages that can be safely ignored "
"(see output example above). You now have the key-certificate pair loaded "
"on the Nitrokey."
msgstr "请注意，有些错误信息可以忽略（见上文输出示例）。现在，你已经在 Nitrokey 上加载了密钥-证书对。"

#: ../components/hsm/smime.rst.inc:34 ../components/hsm/smime.rst.inc:54
#: ../components/pro/smime.rst.inc:34 ../components/pro/smime.rst.inc:54
#: ../components/shared/openpgp.rst.inc:44
msgid "You can find further information about the usage on these pages:"
msgstr "您可以在这些页面上找到有关使用的更多信息："

#: ../components/hsm/smime.rst.inc:36 ../components/hsm/smime.rst.inc:56
#: ../components/pro/smime.rst.inc:36 ../components/pro/smime.rst.inc:56
msgid "for using `S/MIME encryption on Thunderbird <smime-thunderbird.html>`_"
msgstr ""
"用于在 Thunderbird <smime-thunderbird.html>`` 上使用 S/MIME "
"加密___________________________。"

#: ../components/hsm/smime.rst.inc:39 ../components/hsm/smime.rst.inc:59
#: ../components/pro/smime.rst.inc:39 ../components/pro/smime.rst.inc:59
msgid "for using `S/MIME encryption on Outlook <smime-outlook.html>`_"
msgstr ""
"用于在 Outlook <smime-outlook.html>`` 上使用 S/MIME "
"加密___________________________。"

#: ../components/hsm/smime.rst.inc:42 ../components/hsm/smime.rst.inc:62
#: ../components/pro/smime.rst.inc:42 ../components/pro/smime.rst.inc:62
msgid ""
"for using `Evolution <https://help.gnome.org/users/evolution/stable/mail-"
"encryption.html.en>`__, an email client for the Gnome Desktop on Linux "
"systems"
msgstr ""
"用于在 Linux 系统上使用 \"Evolution "
"<https://help.gnome.org/users/evolution/stable/mail-"
"encryption.html.en>`___\"--Gnome 桌面的电子邮件客户端"

#: ../components/pro/smime-outlook.rst.inc:2
msgid "S/MIME Email Encryption with Outlook"
msgstr "使用 Outlook 进行 S/MIME 电子邮件加密"

#: ../components/pro/smime-outlook.rst.inc:9
msgid ""
"If you do not have a S/MIME key-certificate pair installed on your "
"Nitrokey yet, please look at `this page <smime.html>`_ first."
msgstr "如果您的 Nitrokey 上还没有安装 S/MIME 密钥-证书对，请先查看`此页面 <smime.html>`_ 。"

#: ../components/pro/smime-outlook.rst.inc:11
msgid ""
"You need to have OpenSC installed on your System. Please have a look at "
"the `wiki page of the OpenSC project "
"<https://github.com/OpenSC/OpenSC/wiki>`__."
msgstr ""
"您需要在系统中安装 OpenSC。请查看 OpenSC 项目的维基页面 "
"<https://github.com/OpenSC/OpenSC/wiki>`__。"

#: ../components/hsm/windows/smime.rst:5
#: ../components/nitrokey3/windows/smime.rst:5
#: ../components/pro/smime-outlook.rst.inc:15
#: ../components/pro/smime-thunderbird.rst.inc:15
#: ../components/pro/windows/smime.rst:5
#: ../components/storage/windows/smime.rst:5
msgid ""
"Windows users with 64-bit system (standard) need to install both, the "
"32-bit and the 64-bit version of OpenSC!"
msgstr "使用 64 位系统（标准）的 Windows 用户需要同时安装 32 位和 64 位版本的 OpenSC！"

#: ../components/pro/smime-outlook.rst.inc:19
msgid "Settings in Outlook"
msgstr "Outlook 中的设置"

#: ../components/pro/smime-outlook.rst.inc:21
msgid ""
"Before you can use the Nitrokey in Outlook you have to activate S/MIME "
"encryption. You can achieve this by clicking on to ‘Start’ -> ‘Options’ "
"and clicking on ‘Trust Center’ in the options window. In section ‘Email "
"Security’ you can choose your S/MIME identity. Your certificate should "
"already be recognized by Outlook."
msgstr ""
"在 Outlook 中使用 Nitrokey 之前，您必须先激活 S/MIME 加密。您可以点击 "
"\"开始\"->\"选项\"，然后点击选项窗口中的 \"信任中心\"。在 \"电子邮件安全 \"部分，您可以选择您的 S/MIME "
"身份。您的证书应该已经被 Outlook 识别。"

#: ../components/pro/smime-outlook.rst.inc:36
msgid ""
"When composing a mail you can now choose to encrypt and sign the message "
"in the ‘Options’ ribbon of the compose window."
msgstr "撰写邮件时，您现在可以在撰写窗口的 \"选项 \"功能区选择对邮件进行加密和签名。"

#: ../components/pro/smime-outlook.rst.inc:43
msgid ""
"Outlook will only encrypt message to mail addresses which are saved in "
"your address book. So make sure, that the persons you want to write an "
"encrypted mail to have an entry in Outlook’s contacts. You can ask the "
"person to write you a signed mail, so that you can import the certificate"
" information."
msgstr ""
"Outlook 只对保存在通讯录中的邮件地址进行加密。因此，请确保您要写加密邮件的人在 Outlook "
"的通讯录中有记录。你可以要求对方给你写一封签名邮件，这样你就可以导入证书信息。"

#: ../components/pro/smime-outlook.rst.inc:45
msgid ""
"Depending on your certificate or the certificate of your partners you may"
" have to import a so-called root certificate. This is the certificate of "
"the party which issued the certificate you or your partner uses. You "
"should usually got informed if this is necessary."
msgstr "根据您的证书或合作伙伴的证书，您可能需要导入所谓的根证书。这是为您或您的合作伙伴颁发证书的一方的证书。如果有必要，通常会通知您。"

#: ../components/pro/smime-thunderbird.rst.inc:2
msgid "S/MIME Email Encryption with Thunderbird"
msgstr "使用 Thunderbird 进行 S/MIME 电子邮件加密"

#: ../components/pro/smime-thunderbird.rst.inc:9
msgid ""
"If you do not have a S/MIME key-certificate pair installed on your "
"Nitrokey yet or if you did not installed OpenSC, please look at `this "
"page <smime.html>`_ first."
msgstr ""
"如果您的 Nitrokey 上还没有安装 S/MIME 密钥-证书对，或者您还没有安装 OpenSC，请先查看`此页面 "
"<smime.html>`_ 。"

#: ../components/pro/smime-thunderbird.rst.inc:11
#, fuzzy
msgid ""
"You need to have `OpenSC installed "
"<https://github.com/OpenSC/OpenSC/wiki>`__ on your System. While "
"GNU/Linux users usually can install OpenSC over the package manager (e.g."
" ``sudo apt update && sudo apt install opensc`` on Ubuntu), macOS and "
"Windows users can download the installation files from OpenSC directly."
msgstr ""
"您需要在系统中安装 \"OpenSC <https://github.com/OpenSC/OpenSC/wiki>`__\"。GNU/Linux"
" 用户通常可以通过软件包管理器安装 OpenSC（例如，在 Ubuntu 上使用 ``sudo apt update && sudo apt "
"install opensc``），而 macOS 和 Windows 用户则可以直接从 OpenSC 下载安装文件。"

#: ../components/pro/smime-thunderbird.rst.inc:19
msgid "Settings in Thunderbird"
msgstr "雷鸟中的设置"

#: ../components/pro/smime-thunderbird.rst.inc:21
msgid ""
"Before you can use the Nitrokey in Thunderbird you have to activate "
"S/MIME encryption in the account settings. You can achieve this by "
"clicking on the menu and go to ‘Preferences’ -> ‘Account Settings’ and "
"clicking on ‘Security’ in the account settings window."
msgstr ""
"在 Thunderbird 中使用 Nitrokey 之前，您必须在账户设置中激活 S/MIME 加密。您可以点击菜单，进入 "
"\"首选项\"->\"账户设置\"，然后点击账户设置窗口中的 \"安全\"。"

#: ../components/pro/smime-thunderbird.rst.inc:28
msgid ""
"Click on “Security Devices” to import the right PCKS11 module. Click on "
"“Load” on the right-hand side. Now give the Module a name (like “OpenSC "
"Module”) and click on “Browse” to choose the location of the Module (see "
"below)."
msgstr ""
"点击 \"安全设备\"，导入正确的 PCKS11 模块。点击右侧的 \"加载\"。现在给模块命名（如 \"OpenSC 模块\"），然后点击 "
"\"浏览 \"选择模块的位置（见下图）。"

#: ../components/pro/smime-thunderbird.rst.inc:35
msgid ""
"On Windows the right file lays under “C:\\Windows\\System32\\opensc-"
"pkcs11.dll”. On macOS and GNU/Linux the file should be in “/lib/pkcs11"
"/opensc-pkcs11.so” or “/usr/lib/pkcs11/opensc-pkcs11.so” or alike. Press "
"“OK” twice and you are back in security section of the account settings. "
"Now you can actually choose a certificate on the upper part of the "
"window. You should get asked for a PIN to unlock your Nitrokey. Please "
"type in your User PIN."
msgstr ""
"在 Windows 上，正确的文件位于 \"C:\\Windows\\System32\\opensc-pkcs11.dll\"。在 macOS "
"和 GNU/Linux 上，文件应位于\"/lib/pkcs11/opensc-pkcs11.so \"或\"/usr/lib/pkcs11"
"/opensc-pkcs11.so \"或类似位置。按两次 "
"\"OK\"，你就回到了账户设置的安全部分。现在，你可以在窗口上部选择证书。你会被要求输入一个 PIN 码来解锁你的 "
"Nitrokey。请输入您的用户密码。"

#: ../components/pro/smime-thunderbird.rst.inc:45
msgid ""
"When composing an email you can now choose to encrypt and sign the "
"message."
msgstr "撰写电子邮件时，您现在可以选择对邮件进行加密和签名。"

#: ../components/hsm/linux/stunnel.rst:2 ../components/pro/linux/stunnel.rst:2
#: ../components/start/linux/stunnel.rst:2
#: ../components/storage/linux/stunnel.rst:2
msgid "Stunnel"
msgstr "Stunnel"

#: ../components/hsm/stunnel.rst.inc:3
msgid ""
"`Stunnel <https://www.stunnel.org/>`__ works as an SSL encryption wrapper"
" between remote client and local (inetd-startable) or remote server. It "
"can be used to add SSL functionality to commonly used inetd daemons like "
"POP2, POP3, and IMAP servers without any changes in the programs' code."
msgstr ""
"`Stunnel <https://www.stunnel.org/>`__ 在远程客户端与本地（inetd-"
"startable）或远程服务器之间充当 SSL 加密包装器。它可用于为常用的 inetd 守护进程（如 POP2、POP3 和 IMAP "
"服务器）添加 SSL 功能，而无需修改程序代码。"

#: ../components/hsm/stunnel.rst.inc:5 ../components/to-be-integrated.rst:497
#: ../components/to-be-integrated.rst:868
msgid "Stunnel is able to load OpenSC PKCS#11 engine using this configuration:"
msgstr "Stunnel 可以使用此配置加载 OpenSC PKCS#11 引擎："

#: ../components/pro/hard-disk-encryption.rst.inc:10
msgid ""
"Follow these steps to use the program with `Nitrokey "
"<https://shop.nitrokey.com/>`__:"
msgstr "请按照以下步骤将程序与 `Nitrokey <https://shop.nitrokey.com/>`__ 一起使用："

#: ../components/hsm/mac/index.rst:2
msgid "Nitrokey HSM with macOS"
msgstr "配备 macOS 的 Nitrokey HSM"

#: ../components/hsm/mac/index.rst:13 ../components/hsm/windows/index.rst:13
msgid ""
"Install `OpenSC <https://github.com/OpenSC/OpenSC/wiki>`__. "
"Alternatively, install `this <https://www.cardcontact.de/download/sc-hsm-"
"starterkit.zip>`__ driver (`source <https://github.com/CardContact/sc-"
"hsm-embedded>`__)."
msgstr ""
"安装 `OpenSC <https://github.com/OpenSC/OpenSC/wiki>`__。或者，安装 `this "
"<https://www.cardcontact.de/download/sc-hsm-starterkit.zip>`__ "
"驱动程序（`source <https://github.com/CardContact/sc-hsm-embedded>`__）。"

#: ../components/hsm/windows/index.rst:2
msgid "Nitrokey HSM With Windows"
msgstr "带 Windows 的 Nitrokey HSM"

#: ../components/pro/smart-policy.rst.inc:2
msgid "Login to Windows Domain Computers With MS Active Directory"
msgstr "使用 MS Active Directory 登录 Windows 域计算机"

#: ../components/pro/smart-policy.rst.inc:6
msgid ""
"Download and install the latest `OpenSC "
"<https://github.com/OpenSC/OpenSC/wiki>`__."
msgstr "下载并安装最新的 `OpenSC <https://github.com/OpenSC/OpenSC/wiki>`__。"

#: ../components/pro/smart-policy.rst.inc:8
#, fuzzy
msgid ""
"Use a text editor to add the following settings to ``C:\\Program "
"Files:\\OpenSC Project\\OpenSC\\opensc.conf``."
msgstr ""
"使用文本编辑器在 ``C:\\Program Files:\\OpenSC Project\\OpenSC\\opensc.conf`` "
"中添加以下设置。"

#: ../components/pro/smart-policy.rst.inc:47
msgid ""
"Open a command terminal and enter “regedit”. Use regedit to import `this "
"file <https://www.nitrokey.com/sites/default/files/nk-hsm.reg>`__."
msgstr ""
"打开命令终端，输入 \"regedit\"。使用 regedit 导入 \"此文件 "
"<https://www.nitrokey.com/sites/default/files/nk-hsm.reg>`__\"。"

#: ../components/pro/smart-policy.rst.inc:50
msgid ""
"Now you can enroll Nitrokeys for your users managed in Microsoft Active "
"Directory. You may either use Microsoft PKI, `gpgsm "
"<https://www.gnupg.org/documentation/manuals/gnupg/Howto-Create-a-Server-"
"Cert.html>`__, or `Smart Policy <https://www.mysmartlogon.com/products"
"/smart-policy.html>`__. The following steps describe the usage of Smart "
"Policy."
msgstr ""
"现在，您可以为 Microsoft Active Directory 管理的用户注册 Nitrokeys。您可以使用 Microsoft "
"PKI、\"gpgsm <https://www.gnupg.org/documentation/manuals/gnupg/Howto-"
"Create-a-Server-Cert.html>`__\"或 \"智能策略 "
"<https://www.mysmartlogon.com/products/smart-"
"policy.html>`__\"。下面介绍智能策略的使用步骤。"

#: ../components/pro/smart-policy.rst.inc:56
msgid ""
"`Download "
"<https://download.mysmartlogon.com/SmartPolicyv2/SmartPolicy%20-%20Stage%203.exe>`__"
" and install Smart Policy."
msgstr ""
"下载 "
"<https://download.mysmartlogon.com/SmartPolicyv2/SmartPolicy%20-%20Stage%203.exe>`__"
" 并安装智能策略。"

#: ../components/pro/smart-policy.rst.inc:58
msgid "Select “Read a smart card”"
msgstr "选择 \"读取智能卡\"。"

#: ../components/pro/smart-policy.rst.inc:65
msgid "Select the certificate, mapping, and user."
msgstr "选择证书、映射和用户。"

#: ../components/pro/smart-policy.rst.inc:72
msgid "Verify the device status via CRL."
msgstr "通过 CRL 验证设备状态。"

#: ../components/pro/smart-policy.rst.inc:79
msgid "Choose a Group Policy Object (GPO)."
msgstr "选择组策略对象 (GPO)。"

#: ../components/pro/smart-policy.rst.inc:86
msgid "Confirm applying the mapping."
msgstr "确认应用映射。"

#: ../components/pro/eidauthenticate.rst.inc:75
#: ../components/pro/smart-policy.rst.inc:93
msgid ""
"From now on, when logging on to your Windows computer you need to connect"
" the Nitrokey and enter your PIN."
msgstr "从现在起，登录 Windows 计算机时，您需要连接 Nitrokey 并输入密码。"

#: ../components/nethsm/administration.rst:2
msgid "Administration"
msgstr "行政部门"

#: ../components/nethsm/administration.rst:4
msgid ""
"This chapter describes administrative tasks for users with the "
"*Administrator* role. Please refer to chapter `Roles "
"<administration#roles>`__ to learn more about the role."
msgstr ""
"本章介绍具有 *Administrator* 角色的用户的管理任务。请参阅 \"角色 "
"<administration#roles>___\"一章，了解有关角色的更多信息。"

#: ../components/nethsm/administration.rst:8
#: ../components/nethsm/operation.rst:8
msgid ""
"Please make sure you read the information in the beginning of `this "
"document <index.html>`__ before starting to work."
msgstr "在开始工作之前，请务必阅读 \"本文档 <index.html>`__\" 开头的信息。"

#: ../components/nethsm/administration.rst:11
msgid "System Management"
msgstr "系统管理"

#: ../components/nethsm/administration.rst:14
msgid "Device Information"
msgstr "设备信息"

#: ../components/nethsm/administration.rst:16
msgid ""
"The vendor and product information for a NetHSM can be retrieved as "
"follows."
msgstr "NetHSM 的供应商和产品信息可按如下方式检索。"

#: ../components/nethsm/administration.rst:19
#: ../components/nethsm/administration.rst:60
#: ../components/nethsm/administration.rst:77
#: ../components/nethsm/administration.rst:131
#: ../components/nethsm/administration.rst:150
#: ../components/nethsm/administration.rst:166
#: ../components/nethsm/administration.rst:192
#: ../components/nethsm/administration.rst:238
#: ../components/nethsm/administration.rst:270
#: ../components/nethsm/administration.rst:296
#: ../components/nethsm/administration.rst:338
#: ../components/nethsm/administration.rst:375
#: ../components/nethsm/administration.rst:409
#: ../components/nethsm/administration.rst:443
#: ../components/nethsm/administration.rst:471
#: ../components/nethsm/administration.rst:501
#: ../components/nethsm/administration.rst:573
#: ../components/nethsm/administration.rst:600
#: ../components/nethsm/administration.rst:667
#: ../components/nethsm/administration.rst:702
#: ../components/nethsm/administration.rst:738
#: ../components/nethsm/administration.rst:791
#: ../components/nethsm/administration.rst:825
#: ../components/nethsm/administration.rst:841
#: ../components/nethsm/administration.rst:860
#: ../components/nethsm/administration.rst:885
#: ../components/nethsm/administration.rst:903
#: ../components/nethsm/administration.rst:926
#: ../components/nethsm/administration.rst:991
#: ../components/nethsm/administration.rst:1045
#: ../components/nethsm/administration.rst:1074
#: ../components/nethsm/administration.rst:1116
#: ../components/nethsm/administration.rst:1171
#: ../components/nethsm/administration.rst:1202
#: ../components/nethsm/administration.rst:1235
#: ../components/nethsm/administration.rst:1266
#: ../components/nethsm/administration.rst:1292
#: ../components/nethsm/getting-started.rst:126
#: ../components/nethsm/operation.rst:58 ../components/nethsm/operation.rst:144
#: ../components/nethsm/operation.rst:190
#: ../components/nethsm/operation.rst:255
#: ../components/nethsm/operation.rst:288
#: ../components/nethsm/operation.rst:326
#: ../components/nethsm/operation.rst:351
#: ../components/nethsm/operation.rst:379
#: ../components/nethsm/operation.rst:440
#: ../components/nethsm/operation.rst:470
#: ../components/nethsm/operation.rst:511
#: ../components/nethsm/operation.rst:556
#: ../components/nethsm/operation.rst:602
#: ../components/nethsm/operation.rst:665
#: ../components/nethsm/operation.rst:729
#: ../components/nethsm/operation.rst:791
#: ../components/nethsm/operation.rst:832
#: ../components/software/nitropy/index.rst:2
msgid "nitropy"
msgstr "硝基"

#: ../components/nethsm/administration.rst:20
#: ../components/nethsm/administration.rst:61
#: ../components/nethsm/administration.rst:87
#: ../components/nethsm/administration.rst:132
#: ../components/nethsm/administration.rst:151
#: ../components/nethsm/administration.rst:167
#: ../components/nethsm/administration.rst:206
#: ../components/nethsm/administration.rst:247
#: ../components/nethsm/administration.rst:281
#: ../components/nethsm/administration.rst:319
#: ../components/nethsm/administration.rst:355
#: ../components/nethsm/administration.rst:384
#: ../components/nethsm/administration.rst:422
#: ../components/nethsm/administration.rst:452
#: ../components/nethsm/administration.rst:480
#: ../components/nethsm/administration.rst:506
#: ../components/nethsm/administration.rst:582
#: ../components/nethsm/administration.rst:613
#: ../components/nethsm/administration.rst:682
#: ../components/nethsm/administration.rst:715
#: ../components/nethsm/administration.rst:761
#: ../components/nethsm/administration.rst:800
#: ../components/nethsm/administration.rst:826
#: ../components/nethsm/administration.rst:842
#: ../components/nethsm/administration.rst:861
#: ../components/nethsm/administration.rst:886
#: ../components/nethsm/administration.rst:904
#: ../components/nethsm/administration.rst:927
#: ../components/nethsm/administration.rst:1014
#: ../components/nethsm/administration.rst:1054
#: ../components/nethsm/administration.rst:1083
#: ../components/nethsm/administration.rst:1127
#: ../components/nethsm/administration.rst:1172
#: ../components/nethsm/administration.rst:1211
#: ../components/nethsm/administration.rst:1244
#: ../components/nethsm/administration.rst:1277
#: ../components/nethsm/administration.rst:1303
#: ../components/nethsm/getting-started.rst:138
#: ../components/nethsm/operation.rst:87 ../components/nethsm/operation.rst:171
#: ../components/nethsm/operation.rst:229
#: ../components/nethsm/operation.rst:268
#: ../components/nethsm/operation.rst:301
#: ../components/nethsm/operation.rst:331
#: ../components/nethsm/operation.rst:356
#: ../components/nethsm/operation.rst:384
#: ../components/nethsm/operation.rst:455
#: ../components/nethsm/operation.rst:485
#: ../components/nethsm/operation.rst:541
#: ../components/nethsm/operation.rst:569
#: ../components/nethsm/operation.rst:629
#: ../components/nethsm/operation.rst:684
#: ../components/nethsm/operation.rst:746
#: ../components/nethsm/operation.rst:808
#: ../components/nethsm/operation.rst:845
msgid "**Example**"
msgstr "**举例**"

#: ../components/nethsm/administration.rst:32
#: ../components/nethsm/administration.rst:71
#: ../components/nethsm/administration.rst:96
#: ../components/nethsm/administration.rst:141
#: ../components/nethsm/administration.rst:160
#: ../components/nethsm/administration.rst:176
#: ../components/nethsm/administration.rst:220
#: ../components/nethsm/administration.rst:264
#: ../components/nethsm/administration.rst:290
#: ../components/nethsm/administration.rst:332
#: ../components/nethsm/administration.rst:360
#: ../components/nethsm/administration.rst:397
#: ../components/nethsm/administration.rst:431
#: ../components/nethsm/administration.rst:462
#: ../components/nethsm/administration.rst:489
#: ../components/nethsm/administration.rst:559
#: ../components/nethsm/administration.rst:594
#: ../components/nethsm/administration.rst:622
#: ../components/nethsm/administration.rst:696
#: ../components/nethsm/administration.rst:724
#: ../components/nethsm/administration.rst:771
#: ../components/nethsm/administration.rst:809
#: ../components/nethsm/administration.rst:835
#: ../components/nethsm/administration.rst:851
#: ../components/nethsm/administration.rst:874
#: ../components/nethsm/administration.rst:897
#: ../components/nethsm/administration.rst:915
#: ../components/nethsm/administration.rst:939
#: ../components/nethsm/administration.rst:1025
#: ../components/nethsm/administration.rst:1063
#: ../components/nethsm/administration.rst:1097
#: ../components/nethsm/administration.rst:1138
#: ../components/nethsm/administration.rst:1183
#: ../components/nethsm/administration.rst:1220
#: ../components/nethsm/administration.rst:1253
#: ../components/nethsm/administration.rst:1286
#: ../components/nethsm/administration.rst:1312
#: ../components/nethsm/getting-started.rst:153
#: ../components/nethsm/operation.rst:96 ../components/nethsm/operation.rst:184
#: ../components/nethsm/operation.rst:245
#: ../components/nethsm/operation.rst:277
#: ../components/nethsm/operation.rst:314
#: ../components/nethsm/operation.rst:345
#: ../components/nethsm/operation.rst:373
#: ../components/nethsm/operation.rst:423
#: ../components/nethsm/operation.rst:464
#: ../components/nethsm/operation.rst:494
#: ../components/nethsm/operation.rst:550
#: ../components/nethsm/operation.rst:593
#: ../components/nethsm/operation.rst:645
#: ../components/nethsm/operation.rst:695
#: ../components/nethsm/operation.rst:755
#: ../components/nethsm/operation.rst:813
#: ../components/nethsm/operation.rst:854
msgid "REST API"
msgstr "REST API"

#: ../components/nethsm/administration.rst:33
msgid ""
"Information about the `/info` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_info>`__."
msgstr ""
"有关 `/info` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_info>`__。"

#: ../components/nethsm/administration.rst:36
#: ../components/nethsm/administration.rst:41
msgid "Boot Mode"
msgstr "启动模式"

#: ../components/nethsm/administration.rst:38
msgid "NetHSM can be used in *Attended Boot* mode and *Unattended Boot* mode."
msgstr "NetHSM 可在 *Attended Boot* 模式和 *Unattended Boot* 模式下使用。"

#: ../components/nethsm/administration.rst:41
#: ../components/nethsm/administration.rst:81
#: ../components/nethsm/administration.rst:105
#: ../components/nethsm/administration.rst:196
#: ../components/nethsm/administration.rst:242
#: ../components/nethsm/administration.rst:274
#: ../components/nethsm/administration.rst:300
#: ../components/nethsm/administration.rst:342
#: ../components/nethsm/administration.rst:350
#: ../components/nethsm/administration.rst:379
#: ../components/nethsm/administration.rst:413
#: ../components/nethsm/administration.rst:447
#: ../components/nethsm/administration.rst:475
#: ../components/nethsm/administration.rst:577
#: ../components/nethsm/administration.rst:604
#: ../components/nethsm/administration.rst:671
#: ../components/nethsm/administration.rst:710
#: ../components/nethsm/administration.rst:742
#: ../components/nethsm/administration.rst:756
#: ../components/nethsm/administration.rst:795
#: ../components/nethsm/administration.rst:952
#: ../components/nethsm/administration.rst:995
#: ../components/nethsm/administration.rst:1009
#: ../components/nethsm/administration.rst:1049
#: ../components/nethsm/administration.rst:1078
#: ../components/nethsm/administration.rst:1120
#: ../components/nethsm/administration.rst:1206
#: ../components/nethsm/administration.rst:1239
#: ../components/nethsm/administration.rst:1270
#: ../components/nethsm/administration.rst:1296
#: ../components/nethsm/getting-started.rst:130
#: ../components/nethsm/metrics.rst:7 ../components/nethsm/operation.rst:66
#: ../components/nethsm/operation.rst:82 ../components/nethsm/operation.rst:152
#: ../components/nethsm/operation.rst:160
#: ../components/nethsm/operation.rst:198
#: ../components/nethsm/operation.rst:222
#: ../components/nethsm/operation.rst:263
#: ../components/nethsm/operation.rst:296
#: ../components/nethsm/operation.rst:448
#: ../components/nethsm/operation.rst:478
#: ../components/nethsm/operation.rst:519
#: ../components/nethsm/operation.rst:527
#: ../components/nethsm/operation.rst:536
#: ../components/nethsm/operation.rst:564
#: ../components/nethsm/operation.rst:610
#: ../components/nethsm/operation.rst:673
#: ../components/nethsm/operation.rst:737
#: ../components/nethsm/operation.rst:799
#: ../components/nethsm/operation.rst:840
#: ../components/nextbox/technical/led-colors.rst:5
#: ../components/nitrokey3/windows/piv/key_management.rst:11
msgid "Description"
msgstr "说明"

#: ../components/nethsm/administration.rst:43
msgid "*Attended Boot*"
msgstr "*Attended Boot*"

#: ../components/nethsm/administration.rst:43
msgid ""
"The NetHSM boots up into a _Locked_ state. The *Unlock Passphrase* needs "
"to be entered during each start, which is used to decrypt the *User "
"Data*. For security reasons, this mode is recommended and it's the "
"default mode for a freshly provisioned system."
msgstr ""
"NetHSM "
"启动时处于_锁定_状态。每次启动时都需要输入*解锁密码*，用于解密*用户数据*。出于安全考虑，建议使用这种模式，这也是新配置系统的默认模式。"

#: ../components/nethsm/administration.rst:48
msgid "*Unattended Boot*"
msgstr "*无人值守启动*"

#: ../components/nethsm/administration.rst:48
msgid ""
"The system starts unattended without the need to enter the *Unlock* "
"*Passphrase* into an _Operational_ state. Use this mode if your "
"availability requirements can not be fulfilled with *Attended Boot* mode."
msgstr ""
"系统在无人看管的情况下启动，无需输入*解锁* *密码*即可进入_运行_状态。如果 *Attended Boot* "
"模式无法满足您对可用性的要求，请使用此模式。"

#: ../components/nethsm/administration.rst:55
msgid ""
"Regardless of the boot mode, the *Unlock Passphrase* retains its validity"
" and is required for restoring backups on other hardware. Keep the "
"*Unlock Passphrase* safe at any time."
msgstr "无论采用哪种启动模式，*解锁密码*都会保持其有效性，在其他硬件上恢复备份时也需要使用该密码。请随时妥善保管*解锁密码*。"

#: ../components/nethsm/administration.rst:57
msgid "The current boot mode can be retrieved as follows."
msgstr "当前启动模式的检索方式如下。"

#: ../components/nethsm/administration.rst:72
msgid ""
"Information about the `/config/unattended-boot` endpoint can be found in "
"the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_config-"
"unattended-boot>`__."
msgstr ""
"有关 `/config/unattended-boot` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_config-"
"unattended-boot>`__。"

#: ../components/nethsm/administration.rst:74
msgid ""
"The boot mode can be changed as follows. At next boot, the NetHSM will "
"behave accordingly."
msgstr "启动模式可作如下更改。下一次启动时，NetHSM 将执行相应的操作。"

#: ../components/nethsm/administration.rst:78
#: ../components/nethsm/administration.rst:347
#: ../components/nethsm/administration.rst:472
#: ../components/nethsm/administration.rst:707
#: ../components/nethsm/administration.rst:753
#: ../components/nethsm/administration.rst:792
#: ../components/nethsm/administration.rst:1046
#: ../components/nethsm/administration.rst:1203
#: ../components/nethsm/administration.rst:1236
#: ../components/nethsm/administration.rst:1267
#: ../components/nethsm/administration.rst:1293
#: ../components/nethsm/operation.rst:149
#: ../components/nethsm/operation.rst:260
#: ../components/nethsm/operation.rst:445
#: ../components/nethsm/operation.rst:475
#: ../components/nethsm/operation.rst:533
#: ../components/nethsm/operation.rst:837
msgid "**Arguments**"
msgstr "**论据**"

#: ../components/nethsm/administration.rst:81
#: ../components/nethsm/administration.rst:350
#: ../components/nethsm/administration.rst:475
#: ../components/nethsm/administration.rst:710
#: ../components/nethsm/administration.rst:756
#: ../components/nethsm/administration.rst:795
#: ../components/nethsm/administration.rst:1049
#: ../components/nethsm/administration.rst:1206
#: ../components/nethsm/administration.rst:1239
#: ../components/nethsm/administration.rst:1270
#: ../components/nethsm/administration.rst:1296
#: ../components/nethsm/operation.rst:152
#: ../components/nethsm/operation.rst:263
#: ../components/nethsm/operation.rst:448
#: ../components/nethsm/operation.rst:478
#: ../components/nethsm/operation.rst:536
#: ../components/nethsm/operation.rst:840
msgid "Argument"
msgstr "论据"

#: ../components/nethsm/administration.rst:83
msgid "Status"
msgstr "现状"

#: ../components/nethsm/administration.rst:83
msgid "Enable or disable *Unattended Boot*. Can have value ``on`` or ``off``."
msgstr "启用或禁用 *Unattended Boot*。值可以是 \"on \"或 \"off\"。"

#: ../components/nethsm/administration.rst:97
msgid ""
"Information about the `/config/unattended-boot` endpoint can be found in "
"the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_config-"
"unattended-boot>`__."
msgstr ""
"有关 `/config/unattended-boot` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_config-"
"unattended-boot>`__。"

#: ../components/nethsm/administration.rst:100
#: ../components/nethsm/administration.rst:105
msgid "State"
msgstr "国家"

#: ../components/nethsm/administration.rst:102
msgid ""
"The NetHSM software has four states: *Unprovisioned*, *Provisioned*, "
"*Locked*, and *Operational*."
msgstr "NetHSM 软件有四种状态：*未配置*、已配置*、锁定*和运行*。"

#: ../components/nethsm/administration.rst:107
msgid "*Unprovisioned*"
msgstr "*未配置*"

#: ../components/nethsm/administration.rst:107
msgid "NetHSM without configuration (factory default)"
msgstr "无配置的 NetHSM（出厂默认设置）"

#: ../components/nethsm/administration.rst:109
msgid "*Provisioned*"
msgstr "*已配置*"

#: ../components/nethsm/administration.rst:109
msgid ""
"NetHSM with configuration. The *Provisioned* state implies either "
"*Operational* or *Locked* state."
msgstr "带配置的 NetHSM。已配置*状态意味着*运行*或*锁定*状态。"

#: ../components/nethsm/administration.rst:112
msgid "*Operational*"
msgstr "*运行*"

#: ../components/nethsm/administration.rst:112
msgid ""
"NetHSM with configuration and ready to execute commands. The "
"*Operational* state implies the *Provisioned* state."
msgstr "NetHSM 已配置并可执行命令。运行*状态意味着*已配置*状态。"

#: ../components/nethsm/administration.rst:115
msgid "*Locked*"
msgstr "*锁定"

#: ../components/nethsm/administration.rst:115
msgid ""
"NetHSM with configuration but encrypted and inaccessible data stores. "
"Typically, the next step is to unlock the system. The *Locked* state "
"implies the *Provisioned* state."
msgstr "NetHSM 具有配置，但数据存储已加密且无法访问。通常情况下，下一步是解锁系统。锁定*状态意味着*已配置*状态。"

#: ../components/nethsm/administration.rst:-1
#: ../components/nethsm/administration.rst:124
msgid "States and transitions of the NetHSM"
msgstr "净健康和安全机制的状态和过渡"

#: ../components/nethsm/administration.rst:128
msgid "The current state of the NetHSM can be retrieved as follows."
msgstr "可通过以下方式检索 NetHSM 的当前状态。"

#: ../components/nethsm/administration.rst:142
msgid ""
"Information about the `/health/state` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_health-"
"state>`__."
msgstr ""
"有关 `/health/state` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_health-"
"state>`__。"

#: ../components/nethsm/administration.rst:144
msgid ""
"A new NetHSM has an *Unprovisioned* state and after provisioning enters "
"the *Operational* state. The provisioning of a NetHSM is described in the"
" chapter `Provisioning <getting-started#provisioning>`__."
msgstr ""
"新的 NetHSM 处于*未配置*状态，配置后进入*运行*状态。NetHSM 的调配在 \"调配 <getting-"
"started#provisioning>`__\" 一章中描述。"

#: ../components/nethsm/administration.rst:147
msgid ""
"A NetHSM in *Operational* state can be locked again to protect it as "
"follows."
msgstr "处于 * 运行* 状态的 NetHSM 可通过以下方式再次锁定，以对其进行保护。"

#: ../components/nethsm/administration.rst:161
msgid ""
"Information about the `/lock` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/POST_lock>`__."
msgstr ""
"有关 `/lock` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/POST_lock>`__。"

#: ../components/nethsm/administration.rst:163
msgid ""
"A NetHSM in *Locked* state can be unlocked as follows. While the NetHSM "
"is in the _Locked_ state no other operations are possible. Afterwards the"
" NetHSM is in an _Operational_ state."
msgstr ""
"处于*锁定*状态的 NetHSM 可通过以下方式解锁。当 NetHSM 处于_锁定_状态时，不能进行其他操作。之后，NetHSM "
"将处于_Operational_（运行）状态。"

#: ../components/nethsm/administration.rst:177
msgid ""
"Information about the `/unlock` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/POST_unlock>`__."
msgstr ""
"有关 `/unlock` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/POST_unlock>`__。"

#: ../components/nethsm/administration.rst:180
msgid "Unlock Passphrase"
msgstr "解锁密码"

#: ../components/nethsm/administration.rst:182
msgid ""
"The *Unlock Passphrase* is used to derive an *Unlock Key* if the NetHSM "
"is in *Locked* state. The passphrase is initially set during provisioning"
" of the NetHSM."
msgstr "如果 NetHSM 处于*锁定*状态，*解锁密码*将用于生成*解锁密钥*。密码最初是在配置 NetHSM 时设置的。"

#: ../components/nethsm/administration.rst:186
#: ../components/nethsm/getting-started.rst:120
msgid ""
"The unlock passphrase cannot be reset without knowing the current value. "
"If the unlock passphrase is lost, neither can it be reset to a new value "
"nor can the NetHSM be unlocked."
msgstr "在不知道当前值的情况下，无法重置解锁密码。如果解锁密码丢失，既无法重置为新值，也无法解锁 NetHSM。"

#: ../components/nethsm/administration.rst:189
msgid "The *Unlock Passphrase* can be set as follows."
msgstr "解锁密码*的设置方法如下。"

#: ../components/nethsm/administration.rst:193
#: ../components/nethsm/administration.rst:668
#: ../components/nethsm/administration.rst:1006
#: ../components/nethsm/administration.rst:1075
#: ../components/nethsm/getting-started.rst:127
#: ../components/nethsm/operation.rst:79 ../components/nethsm/operation.rst:157
#: ../components/nethsm/operation.rst:219
#: ../components/nethsm/operation.rst:293
#: ../components/nethsm/operation.rst:524
msgid "**Optional Options**"
msgstr "** 可选项目**"

#: ../components/nethsm/administration.rst:196
#: ../components/nethsm/administration.rst:242
#: ../components/nethsm/administration.rst:274
#: ../components/nethsm/administration.rst:300
#: ../components/nethsm/administration.rst:342
#: ../components/nethsm/administration.rst:379
#: ../components/nethsm/administration.rst:413
#: ../components/nethsm/administration.rst:447
#: ../components/nethsm/administration.rst:577
#: ../components/nethsm/administration.rst:604
#: ../components/nethsm/administration.rst:671
#: ../components/nethsm/administration.rst:742
#: ../components/nethsm/administration.rst:995
#: ../components/nethsm/administration.rst:1009
#: ../components/nethsm/administration.rst:1078
#: ../components/nethsm/administration.rst:1120
#: ../components/nethsm/getting-started.rst:130
#: ../components/nethsm/operation.rst:66 ../components/nethsm/operation.rst:82
#: ../components/nethsm/operation.rst:160
#: ../components/nethsm/operation.rst:198
#: ../components/nethsm/operation.rst:222
#: ../components/nethsm/operation.rst:296
#: ../components/nethsm/operation.rst:519
#: ../components/nethsm/operation.rst:527
#: ../components/nethsm/operation.rst:564
#: ../components/nethsm/operation.rst:610
#: ../components/nethsm/operation.rst:673
#: ../components/nethsm/operation.rst:737
#: ../components/nethsm/operation.rst:799
msgid "Option"
msgstr "选项"

#: ../components/nethsm/administration.rst:198
#: ../components/nethsm/administration.rst:673
msgid "``-n``, ``--new-passphrase`` ``TEXT``"
msgstr "``-n``, ``--new-passphrase`` ``TEXT``"

#: ../components/nethsm/administration.rst:198
msgid "The new unlock passphrase"
msgstr "新的解锁密码"

#: ../components/nethsm/administration.rst:200
#: ../components/nethsm/administration.rst:675
msgid "``-p``, ``--current-passphrase`` ``TEXT``"
msgstr "``-p``, ``--current-passphrase`` ``TEXT``"

#: ../components/nethsm/administration.rst:200
msgid "The current unlock passphrase"
msgstr "当前的解锁密码"

#: ../components/nethsm/administration.rst:202
#: ../components/nethsm/administration.rst:678
msgid "``-f``, ``--force``"
msgstr "`-f``，`-force``"

#: ../components/nethsm/administration.rst:202
#: ../components/nethsm/administration.rst:678
msgid "Do not ask for confirmation before changing the passphrase"
msgstr "更改密码前不要要求确认"

#: ../components/nethsm/administration.rst:221
msgid ""
"Information about the `/config/unlock-passphrase` endpoint can be found "
"in the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_config-"
"unlock-passphrase>`__."
msgstr ""
"有关 `/config/unlock-passphrase` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_config-"
"unlock-passphrase>`__。"

#: ../components/nethsm/administration.rst:224
msgid "TLS Certificate"
msgstr "TLS 证书"

#: ../components/nethsm/administration.rst:226
msgid ""
"The TLS certificate is used for the HTTPS based REST API, and thus also "
"used by *nitropy*. During provisioning a self-signed certificate is "
"created. The certificate can be replaced, for example with a signed "
"certificate from a certificate authority (CA). In this case a Certificate"
" Signing Request (CSR) must be generated. After signing the certificate "
"must be imported to the NetHSM."
msgstr ""
"TLS 证书用于基于 HTTPS 的 REST API，因此也被 *nitropy* "
"使用。在配置过程中，会创建一个自签名证书。该证书可由证书颁发机构（CA）的签名证书替换。在这种情况下，必须生成证书签名请求（CSR）。证书签名后必须导入"
" NetHSM。"

#: ../components/nethsm/administration.rst:232
msgid ""
"A change is only necessary when the certificate is to be replace. Such "
"change may be to replace it with a signed certificate from a certificate "
"authority (CA)."
msgstr "只有在更换证书时才需要更改。这种更改可能是用证书颁发机构（CA）签署的证书来取代。"

#: ../components/nethsm/administration.rst:235
msgid "The TLS certificate can be retrieved as follows."
msgstr "TLS 证书的检索方式如下。"

#: ../components/nethsm/administration.rst:239
#: ../components/nethsm/administration.rst:271
#: ../components/nethsm/administration.rst:297
#: ../components/nethsm/administration.rst:339
#: ../components/nethsm/administration.rst:376
#: ../components/nethsm/administration.rst:410
#: ../components/nethsm/administration.rst:444
#: ../components/nethsm/administration.rst:574
#: ../components/nethsm/administration.rst:601
#: ../components/nethsm/administration.rst:992
#: ../components/nethsm/administration.rst:1117
#: ../components/nethsm/operation.rst:63 ../components/nethsm/operation.rst:195
#: ../components/nethsm/operation.rst:516
#: ../components/nethsm/operation.rst:561
#: ../components/nethsm/operation.rst:607
#: ../components/nethsm/operation.rst:670
#: ../components/nethsm/operation.rst:734
#: ../components/nethsm/operation.rst:796
msgid "**Required Options**"
msgstr "**必要选项**"

#: ../components/nethsm/administration.rst:244
#: ../components/nethsm/administration.rst:302
#: ../components/nethsm/administration.rst:344
msgid "``-a``, ``--api``"
msgstr "a\"、\"--api"

#: ../components/nethsm/administration.rst:244
#: ../components/nethsm/administration.rst:344
msgid "Set the certificate for the NetHSM TLS interface"
msgstr "为 NetHSM TLS 接口设置证书"

#: ../components/nethsm/administration.rst:265
msgid ""
"Information about the `/config/tls/cert.pem` endpoint can be found in the"
" `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_config-"
"tls-cert-pem>`__."
msgstr ""
"有关 `/config/tls/cert.pem` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_config-"
"tls-cert-pem>`__。"

#: ../components/nethsm/administration.rst:267
msgid "The TLS certificate can be generated as follows."
msgstr "TLS 证书的生成过程如下。"

#: ../components/nethsm/administration.rst:276
msgid "``-t``, ``--type`` ``[RSA|Curve25519|EC_P224|EC_P256|EC_P384|EC_P521]``"
msgstr "``-t``, ``--type`` ``[RSA|Curve25519|EC_P224|EC_P256|EC_P384|EC_P521]``"

#: ../components/nethsm/administration.rst:276
msgid "The type for the generated key"
msgstr "生成密钥的类型"

#: ../components/nethsm/administration.rst:278
#: ../components/nethsm/operation.rst:76
msgid "``-l``, ``--length`` ``INTEGER``"
msgstr "`-l``, ``--length`` `INTEGER`."

#: ../components/nethsm/administration.rst:278
#: ../components/nethsm/operation.rst:76
msgid "The length of the generated key"
msgstr "生成密钥的长度"

#: ../components/nethsm/administration.rst:291
msgid ""
"Information about the `/config/tls/generate` endpoint can be found in the"
" `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_config-tls-generate>`__."
msgstr ""
"有关 `/config/tls/generate` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_config-tls-generate>`__。"

#: ../components/nethsm/administration.rst:293
msgid ""
"The Certificate Signing Request (CSR) for the certificate can be "
"generated as follows."
msgstr "证书的证书签名请求（CSR）可按如下方式生成。"

#: ../components/nethsm/administration.rst:302
msgid "Generate a CSR for the NetHSM TLS certificate"
msgstr "为 NetHSM TLS 证书生成 CSR"

#: ../components/nethsm/administration.rst:304
#: ../components/nethsm/operation.rst:614
msgid "``--country`` ``TEXT``"
msgstr "`-ountry`` ``TEXT``"

#: ../components/nethsm/administration.rst:304
#: ../components/nethsm/operation.rst:614
msgid "The country name"
msgstr "国家名称"

#: ../components/nethsm/administration.rst:306
#: ../components/nethsm/operation.rst:616
msgid "``--state-or-province`` ``TEXT``"
msgstr "``--state-or-province`` ``TEXT``"

#: ../components/nethsm/administration.rst:306
#: ../components/nethsm/operation.rst:616
msgid "The state or province name"
msgstr "州或省名称"

#: ../components/nethsm/administration.rst:308
#: ../components/nethsm/operation.rst:618
msgid "``--locality`` ``TEXT``"
msgstr "``--locality`` ``TEXT``"

#: ../components/nethsm/administration.rst:308
#: ../components/nethsm/operation.rst:618
msgid "The locality name"
msgstr "地点名称"

#: ../components/nethsm/administration.rst:310
#: ../components/nethsm/operation.rst:620
msgid "``--organization`` ``TEXT``"
msgstr "``--organization`` ``TEXT``"

#: ../components/nethsm/administration.rst:310
#: ../components/nethsm/operation.rst:620
msgid "The organization name"
msgstr "组织名称"

#: ../components/nethsm/administration.rst:312
#: ../components/nethsm/operation.rst:622
msgid "``--organizational-unit`` ``TEXT``"
msgstr "``--organizational-unit`` ``TEXT``"

#: ../components/nethsm/administration.rst:312
#: ../components/nethsm/operation.rst:622
msgid "The organization unit name"
msgstr "组织单位名称"

#: ../components/nethsm/administration.rst:314
#: ../components/nethsm/operation.rst:624
msgid "``--common-name`` ``TEXT``"
msgstr "`--common-name`` ``TEXT``"

#: ../components/nethsm/administration.rst:314
#: ../components/nethsm/operation.rst:624
msgid "The common name"
msgstr "通用名称"

#: ../components/nethsm/administration.rst:316
#: ../components/nethsm/operation.rst:626
msgid "``--email-address`` ``TEXT``"
msgstr "``--email-address`` ``TEXT``"

#: ../components/nethsm/administration.rst:316
#: ../components/nethsm/operation.rst:626
msgid "The email address"
msgstr "电子邮件地址"

#: ../components/nethsm/administration.rst:333
msgid ""
"Information about the `/config/tls/csr.pem` endpoint can be found in the "
"`API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_config-tls-csr-pem>`__."
msgstr ""
"有关 `/config/tls/csr.pem` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_config-tls-csr-pem>`__。"

#: ../components/nethsm/administration.rst:335
msgid "The certificate can be replaced as follows."
msgstr "证书的更换方法如下。"

#: ../components/nethsm/administration.rst:352
#: ../components/nethsm/administration.rst:712
#: ../components/nethsm/administration.rst:797
#: ../components/nethsm/operation.rst:154
#: ../components/nethsm/operation.rst:538
msgid "``FILENAME``"
msgstr "``FILENAME``"

#: ../components/nethsm/administration.rst:352
#: ../components/nethsm/operation.rst:538
msgid "Certificate file"
msgstr "证书文件"

#: ../components/nethsm/administration.rst:361
msgid ""
"Information about the `/config/tls/csr.pem` endpoint can be found in the "
"`API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_config-"
"tls-cert-pem>`__."
msgstr ""
"有关 `/config/tls/csr.pem` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_config-"
"tls-cert-pem>`__。"

#: ../components/nethsm/administration.rst:364
msgid "Network"
msgstr "网络"

#: ../components/nethsm/administration.rst:366
msgid ""
"The network configuration defines the settings used for the *Network "
"Port*."
msgstr "网络配置定义用于*网络端口*的设置。"

#: ../components/nethsm/administration.rst:369
msgid "This settings do not configure the *BMC Network Port*."
msgstr "此设置不配置 *BMC 网络端口*。"

#: ../components/nethsm/administration.rst:372
msgid "The network configuration can be retrieved as follows."
msgstr "网络配置的检索方式如下。"

#: ../components/nethsm/administration.rst:381
msgid "``--network``"
msgstr "网络"

#: ../components/nethsm/administration.rst:381
msgid "Query the network configuration"
msgstr "查询网络配置"

#: ../components/nethsm/administration.rst:398
msgid ""
"Information about the `/config/network` endpoint can be found in the `API"
" documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_config-"
"network>`__."
msgstr ""
"有关 `/config/network` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_config-"
"network>`__。"

#: ../components/nethsm/administration.rst:400
msgid "Set the network configuration as follows."
msgstr "设置网络配置如下。"

#: ../components/nethsm/administration.rst:403
msgid "The NetHSM does not support DHCP (Dynamic Host Configuration Protocol)."
msgstr "NetHSM 不支持 DHCP（动态主机配置协议）。"

#: ../components/nethsm/administration.rst:406
msgid "The NetHSM does not support IPv6 (Internet Protocol version 6)."
msgstr "NetHSM 不支持 IPv6（互联网协议版本 6）。"

#: ../components/nethsm/administration.rst:415
msgid "``-a``, ``--ip-address``"
msgstr "a\"、\"--IP 地址"

#: ../components/nethsm/administration.rst:415
msgid "The new IP address"
msgstr "新的 IP 地址"

#: ../components/nethsm/administration.rst:417
msgid "``-n``, ``--netmask``"
msgstr "``-n``, ``--netmask``"

#: ../components/nethsm/administration.rst:417
msgid "The new netmask"
msgstr "新的网络掩码"

#: ../components/nethsm/administration.rst:419
msgid "``-g``, ``--gateway``"
msgstr "`-g``，`--网关``"

#: ../components/nethsm/administration.rst:419
msgid "The new gateway"
msgstr "新网关"

#: ../components/nethsm/administration.rst:432
msgid ""
"Information about the `/config/network` endpoint can be found in the `API"
" documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_config-"
"network>`__."
msgstr ""
"有关 `/config/network` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_config-"
"network>`__。"

#: ../components/nethsm/administration.rst:435
msgid "Time"
msgstr "时间"

#: ../components/nethsm/administration.rst:437
msgid ""
"The time configuration sets the system time of the NetHSM software. It is"
" usually not required to set the system time, as it is set during "
"provisioning."
msgstr "时间配置设置 NetHSM 软件的系统时间。通常不需要设置系统时间，因为系统时间已在配置过程中设置。"

#: ../components/nethsm/administration.rst:440
msgid "The time configuration can be retrieved as follows."
msgstr "时间配置的检索方式如下。"

#: ../components/nethsm/administration.rst:449
msgid "``--time``"
msgstr "时间"

#: ../components/nethsm/administration.rst:449
msgid "Query the system time"
msgstr "查询系统时间"

#: ../components/nethsm/administration.rst:463
msgid ""
"Information about the `/config/time` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_config-"
"time>`__."
msgstr ""
"有关 `/config/time` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_config-"
"time>`__。"

#: ../components/nethsm/administration.rst:465
msgid "Set the time of the NetHSM."
msgstr "设置 NetHSM 的时间。"

#: ../components/nethsm/administration.rst:468
msgid "Make sure to pass the time in UTC timezone."
msgstr "确保使用 UTC 时区传递时间。"

#: ../components/nethsm/administration.rst:477
msgid "``time``"
msgstr "时间"

#: ../components/nethsm/administration.rst:477
msgid "The system time to set (Format: YYYY-MM-DDTHH:MM:SSZ)"
msgstr "要设置的系统时间（格式：YYYY-MM-DDTHH:MM:SSZ）"

#: ../components/nethsm/administration.rst:490
msgid ""
"Information about the `/config/time` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_config-"
"time>`__."
msgstr ""
"有关 `/config/time` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_config-"
"time>`__。"

#: ../components/nethsm/administration.rst:493
#: ../components/nethsm/metrics.rst:4
msgid "Metrics"
msgstr "衡量标准"

#: ../components/nethsm/administration.rst:495
msgid ""
"The NetHSM logs metrics of system parameters. Please refer to `Metrics "
"<metrics>`__ to learn more about each metric."
msgstr "NetHSM 记录系统参数的度量。请参阅 `Metrics <metrics>`__ 了解每个指标的更多信息。"

#: ../components/nethsm/administration.rst:498
msgid "The metrics can be retrieved as follows."
msgstr "度量指标的检索方法如下。"

#: ../components/nethsm/administration.rst:502
#: ../components/nethsm/administration.rst:703
#: ../components/nethsm/operation.rst:59 ../components/nethsm/operation.rst:145
#: ../components/nethsm/operation.rst:191
#: ../components/nethsm/operation.rst:256
#: ../components/nethsm/operation.rst:289
#: ../components/nethsm/operation.rst:327
#: ../components/nethsm/operation.rst:352
#: ../components/nethsm/operation.rst:380
#: ../components/nethsm/operation.rst:441
#: ../components/nethsm/operation.rst:471
#: ../components/nethsm/operation.rst:512
#: ../components/nethsm/operation.rst:557
#: ../components/nethsm/operation.rst:603
#: ../components/nethsm/operation.rst:666
#: ../components/nethsm/operation.rst:730
#: ../components/nethsm/operation.rst:792
#: ../components/nethsm/operation.rst:833
msgid "**Required Role**"
msgstr "** 所需角色**"

#: ../components/nethsm/administration.rst:504
msgid "This operation requires an authentication with the *Metrics* role."
msgstr "此操作需要使用 *Metrics* 角色进行验证。"

#: ../components/nethsm/administration.rst:560
msgid ""
"Information about the `/metrics` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_metrics>`__."
msgstr ""
"有关 `/metrics` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_metrics>`__。"

#: ../components/nethsm/administration.rst:563
msgid "Logging"
msgstr "记录"

#: ../components/nethsm/administration.rst:565
msgid ""
"The NetHSM can log system events to the serial port or to a syslog server"
" on the network."
msgstr "NetHSM 可将系统事件记录到串行端口或网络上的系统日志服务器。"

#: ../components/nethsm/administration.rst:568
msgid ""
"For any production deployment, the NetHSM log should be monitored "
"continuously to provide immediate notification of any potential security "
"issues."
msgstr "对于任何生产部署，都应持续监控 NetHSM 日志，以便即时通知任何潜在的安全问题。"

#: ../components/nethsm/administration.rst:570
msgid "The syslog server configuration can be retrieved as follows."
msgstr "系统日志服务器配置的检索方式如下。"

#: ../components/nethsm/administration.rst:579
msgid "``--logging``"
msgstr "记录"

#: ../components/nethsm/administration.rst:579
msgid "Query the logging configuration"
msgstr "查询日志记录配置"

#: ../components/nethsm/administration.rst:595
msgid ""
"Information about the `/config/logging` endpoint can be found in the `API"
" documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_config-"
"logging>`__."
msgstr ""
"有关 `/config/logging` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_config-"
"logging>`__。"

#: ../components/nethsm/administration.rst:597
msgid "The syslog server configuration can be set as follows."
msgstr "系统日志服务器配置可设置如下。"

#: ../components/nethsm/administration.rst:606
msgid "``-a``, ``--ip-address`` ``TEXT``"
msgstr "``-a``, ``--IP-address`` ``TEXT``"

#: ../components/nethsm/administration.rst:606
msgid "The IP address of the new logging destination"
msgstr "新日志记录目的地的 IP 地址"

#: ../components/nethsm/administration.rst:608
msgid "``-p``, ``--port`` ``INTEGER``"
msgstr "``-p``, ``--port`` ``INTEGER``."

#: ../components/nethsm/administration.rst:608
msgid "The port of the new logging destination"
msgstr "新日志记录目的地的端口"

#: ../components/nethsm/administration.rst:610
msgid "``-l``, ``--log-level`` ``[debug|info|warning|error]``"
msgstr "l\"，\"--log-level\"，\"[debug|info|warning|error]\"。"

#: ../components/nethsm/administration.rst:610
msgid "The new log level"
msgstr "新的日志级别"

#: ../components/nethsm/administration.rst:623
msgid ""
"Information about the `/config/logging` endpoint can be found in the `API"
" documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_config-"
"logging>`__."
msgstr ""
"有关 `/config/logging` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_config-"
"logging>`__。"

#: ../components/nethsm/administration.rst:625
msgid ""
"The serial console works right from the start of the NetHSM hardware. It "
"includes events from the NetHSM firmware and the NetHSM software."
msgstr "串行控制台从 NetHSM 硬件开始工作。它包括来自 NetHSM 固件和 NetHSM 软件的事件。"

#: ../components/nethsm/administration.rst:627
msgid "The serial console connection settings are as follows."
msgstr "串行控制台连接设置如下。"

#: ../components/nethsm/administration.rst:630
msgid "Setting"
msgstr "设置"

#: ../components/nethsm/administration.rst:630
msgid "Value"
msgstr "价值"

#: ../components/nethsm/administration.rst:632
msgid "Baud rate"
msgstr "波特率"

#: ../components/nethsm/administration.rst:632
msgid "115200"
msgstr "115200"

#: ../components/nethsm/administration.rst:634
msgid "Data bits"
msgstr "数据位"

#: ../components/nethsm/administration.rst:634
msgid "8"
msgstr "8"

#: ../components/nethsm/administration.rst:636
msgid "Stop bits"
msgstr "停止位"

#: ../components/nethsm/administration.rst:636
msgid "1"
msgstr "1"

#: ../components/nethsm/administration.rst:638
msgid "Parity"
msgstr "奇偶校验"

#: ../components/nethsm/administration.rst:638
#: ../components/nethsm/administration.rst:640
#: ../components/nextbox/technical/led-colors.rst:7
#: ../components/nextbox/technical/led-colors.rst:8
#: ../components/nextbox/technical/led-colors.rst:10
#: ../components/nextbox/technical/led-colors.rst:12
#: ../components/nextbox/technical/led-colors.rst:15
msgid "None"
msgstr "无"

#: ../components/nethsm/administration.rst:640
msgid "Flow Control"
msgstr "流量控制"

#: ../components/nethsm/administration.rst:644
#: ../components/nextbox/backup-restore.rst:25
msgid "Backup"
msgstr "备份"

#: ../components/nethsm/administration.rst:646
msgid ""
"The NetHSM *User Data* can be saved to a backup file. This backup file "
"contains all *User Data*, namely *Configuration Store*, *Authentication "
"Store*, *Domain Key Store* and *Key Store*."
msgstr "NetHSM *用户数据*可保存到备份文件中。该备份文件包含所有*用户数据*，即*配置存储*、*身份验证存储*、*域密钥存储*和*密钥存储*。"

#: ../components/nethsm/administration.rst:651
msgid ""
"A NetHSM system software in *Unattended Boot* mode will require the "
"*Unlock Passphrase* if restored on a different NetHSM hardware. Please "
"refer to chapter `Unlock Passphrase <administration#unlock-passphrase>`__"
" to learn more."
msgstr ""
"如果在不同的 NetHSM 硬件上还原*无人值守启动*模式下的 NetHSM 系统软件，则需要*解锁密码*。请参阅 \"解锁密码 "
"\"一章<administration#unlock-passphrase>___了解更多信息。"

#: ../components/nethsm/administration.rst:655
msgid ""
"A NetHSM in *Unattended Boot* mode will be in the same mode after a "
"restore."
msgstr "处于*无人值守启动*模式的 NetHSM 在还原后将处于相同的模式。"

#: ../components/nethsm/administration.rst:657
msgid ""
"Before a backup can be initiated the *Backup Passphrase* must be set. The"
" *Backup Passphrase* is used to encrypt the data in the backup file."
msgstr "在启动备份之前，必须设置*备份密码*。备份密码*用于加密备份文件中的数据。"

#: ../components/nethsm/administration.rst:661
msgid ""
"The backup passphrase cannot be reset without knowing the current value. "
"If the backup passphrase is lost, neither can it be reset to a new value "
"nor can the created backups be restored."
msgstr "在不知道当前值的情况下，无法重置备份口令。如果备份口令丢失，既不能重置为新值，也不能恢复已创建的备份。"

#: ../components/nethsm/administration.rst:664
msgid "The backup passphrase can be set as follows."
msgstr "备份密码的设置方法如下。"

#: ../components/nethsm/administration.rst:673
msgid "The new backup passphrase"
msgstr "新的备份口令"

#: ../components/nethsm/administration.rst:675
msgid "The current backup passphrase (or an empty string if not set)"
msgstr "当前备份口令（如果未设置，则为空字符串）"

#: ../components/nethsm/administration.rst:697
msgid ""
"Information about the `/config/backup-passphrase` endpoint can be found "
"in the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_config-"
"backup-passphrase>`__."
msgstr ""
"有关 `/config/backup-passphrase` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_config-"
"backup-passphrase>`__。"

#: ../components/nethsm/administration.rst:699
msgid "The backup can be executed as follows."
msgstr "备份的执行方式如下。"

#: ../components/nethsm/administration.rst:705
msgid "This operation requires an authentication with the *Backup* role."
msgstr "此操作需要使用 *Backup* 角色进行身份验证。"

#: ../components/nethsm/administration.rst:712
msgid "Backup file"
msgstr "备份文件"

#: ../components/nethsm/administration.rst:725
msgid ""
"Information about the `/system/backup` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-backup>`__."
msgstr ""
"有关 `/system/backup` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-backup>`__。"

#: ../components/nethsm/administration.rst:728
#: ../components/nextbox/backup-restore.rst:43
msgid "Restore"
msgstr "恢复"

#: ../components/nethsm/administration.rst:730
msgid "The NetHSM can be restored from a backup file."
msgstr "可以从备份文件恢复 NetHSM。"

#: ../components/nethsm/administration.rst:732
msgid ""
"If the NetHSM is *Unprovisioned* it will restore all *User Data* "
"including system configuration and reboot. Therefore the system may get "
"different network settings, TLS certificate and *Unlock Passphrase* "
"afterwards."
msgstr ""
"如果 NetHSM 是*未配置*，它将恢复所有*用户数据*，包括系统配置并重新启动。因此，系统之后可能会获得不同的网络设置、TLS "
"证书和*解锁密码*。"

#: ../components/nethsm/administration.rst:733
msgid ""
"If the NetHSM is *Provisioned* it will restore users and user keys but "
"not system configuration. In this case all previously existing users and "
"user keys will be deleted. The NetHSM ends in an *Operational* state."
msgstr ""
"如果 NetHSM 已*配置*，它将恢复用户和用户密钥，但不会恢复系统配置。在这种情况下，所有先前存在的用户和用户密钥都将被删除。NetHSM "
"将以*运行*状态结束。"

#: ../components/nethsm/administration.rst:735
msgid "The restore can be applied as follows."
msgstr "还原方法如下。"

#: ../components/nethsm/administration.rst:739
msgid "**Optional options**"
msgstr "** 可选项目**"

#: ../components/nethsm/administration.rst:744
msgid "``-p``, ``--backup-passphrase`` ``passphrase``"
msgstr "``-p``, ``--backup-passphrase`` `passphrase``"

#: ../components/nethsm/administration.rst:744
msgid "The *Backup Passphrase*"
msgstr "备份密码"

#: ../components/nethsm/administration.rst:746
#: ../components/nethsm/getting-started.rst:132
msgid "``-t``, ``--system-time``"
msgstr "系统时间"

#: ../components/nethsm/administration.rst:746
#: ../components/nethsm/getting-started.rst:132
msgid "The system time to set (Format: ``YYYY-MM-DDTHH:MM:SSZ``)"
msgstr "要设置的系统时间（格式：`YYYY-MM-DDTHH:MM:SSZ``）。"

#: ../components/nethsm/administration.rst:750
msgid ""
"Make sure the time of your local computer is correctly set. To set a "
"different time, please provide it manually."
msgstr "确保本地计算机的时间设置正确。要设置不同的时间，请手动提供。"

#: ../components/nethsm/administration.rst:758
msgid "``FILENAME`` | Restore file"
msgstr "恢复文件"

#: ../components/nethsm/administration.rst:772
msgid ""
"Information about the `/system/restore` endpoint can be found in the `API"
" documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-restore>`__."
msgstr ""
"有关 `/system/restore` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-restore>`__。"

#: ../components/nethsm/administration.rst:775
msgid "Clustering"
msgstr "聚类"

#: ../components/nethsm/administration.rst:777
msgid ""
"NetHSM is stateless, so that several NetHSM devices can be used to "
"process extremely high throughput and provide high availability. The "
"PKCS#11 module supports round-robin schedule for a cluster of NetHSM "
"instances. Multiple instances of NetHSM can be synchronized via encrypted"
" backups. For this a separate system downloads and uploads backup files "
"between the instances. This separate system doesn’t have access to the "
"backup data in clear text because the backup files are encrypted. The "
"synchronization can be easily scripted by using `pynitrokey "
"<https://docs.nitrokey.com/software/nitropy/>`__ as shown in `this "
"example <https://github.com/Nitrokey/nitrokey-"
"snippets/tree/main/nethsm/sync>`__."
msgstr ""
"NetHSM 是无状态的，因此可以使用多个 NetHSM 设备来处理极高的吞吐量，并提供高可用性。PKCS#11 模块支持 NetHSM "
"实例集群的轮循计划。多个 NetHSM "
"实例可通过加密备份实现同步。为此，需要一个单独的系统在实例之间下载和上传备份文件。由于备份文件已加密，因此该独立系统无法访问明文备份数据。使用 "
"`pynitrokey <https://docs.nitrokey.com/software/nitropy/>`__ "
"可以很容易地编写同步脚本，如 `this example <https://github.com/Nitrokey/nitrokey-"
"snippets/tree/main/nethsm/sync>`__ 所示。"

#: ../components/nethsm/administration.rst:780
msgid "Software Update"
msgstr "软件更新"

#: ../components/nethsm/administration.rst:782
msgid ""
"Software updates can be installed in a two-step process. First the update"
" image needs to be uploaded to a *Provisioned* NetHSM. The NetHSM "
"verifies image authenticity, integrity, and version number. Optionally, "
"the NetHSM displays release notes, if any."
msgstr ""
"软件更新可分两步安装。首先，需要将更新镜像上传到*已配置*的 NetHSM。NetHSM "
"会验证映像的真实性、完整性和版本号。如果有版本说明，NetHSM 还会显示。"

#: ../components/nethsm/administration.rst:786
msgid ""
"Data loss may occur due to the installation of a beta update! Stable "
"versions should not cause data loss. However, it's recommended to create "
"a backup before updating."
msgstr "安装测试版更新可能会导致数据丢失！稳定版本不会导致数据丢失。不过，建议在更新前创建备份。"

#: ../components/nethsm/administration.rst:788
msgid "The update file can be uploaded as follows."
msgstr "更新文件的上传方式如下。"

#: ../components/nethsm/administration.rst:797
msgid "Update file"
msgstr "更新文件"

#: ../components/nethsm/administration.rst:810
msgid ""
"Information about the `/system/update` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-update>`__."
msgstr ""
"有关 `/system/update` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-update>`__。"

#: ../components/nethsm/administration.rst:812
msgid ""
"Afterwards the update can be applied or aborted. Please refer to the "
"desired option below. If the NetHSM is powered down before the \"commit\""
" operation, the update file has to be uploaded again."
msgstr "之后可以应用或放弃更新。请参阅以下所需的选项。如果 NetHSM 在 \"提交 \"操作前断电，则必须重新上传更新文件。"

#: ../components/nethsm/administration.rst:816
msgid ""
"If the upload of the update image fails with ``Error: NetHSM request "
"failed: Bad request -- malformed image``, please follow the steps below."
msgstr "如果上传更新映像失败，显示 \"错误：NetHSM 请求失败：Bad request -- malformed image```，请按以下步骤操作。"

#: ../components/nethsm/administration.rst:818
msgid ""
"Make sure you have a valid update file by checking with the provided "
"signature."
msgstr "根据提供的签名进行检查，确保更新文件有效。"

#: ../components/nethsm/administration.rst:819
msgid ""
"Make sure you don't have a high log level, such as ``DEBUG`` enabled. "
"Please refer to chapter `Logging "
"<https://docs.nitrokey.com/nethsm/administration#logging>`__ to learn "
"more about the log level configuration."
msgstr ""
"确保没有启用高日志级别，如 ``DEBUG``。有关日志级别配置的更多信息，请参阅 \"日志 "
"<https://docs.nitrokey.com/nethsm/administration#logging>`__\" 一章。"

#: ../components/nethsm/administration.rst:820
msgid "Reboot the appliance to free up used memory."
msgstr "重启设备，释放已用内存。"

#: ../components/nethsm/administration.rst:822
msgid ""
"The update can be applied (committed) as follows. Any data migration is "
"only performed *after* the NetHSM has successfully booted the new system "
"software version."
msgstr "更新的应用（提交）如下。只有在 NetHSM 成功启动新的系统软件版本之后，才会进行数据迁移。"

#: ../components/nethsm/administration.rst:836
msgid ""
"Information about the `/system/commit-update` endpoint can be found in "
"the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-commit-update>`__."
msgstr ""
"有关 `/system/commit-update` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-commit-update>`__。"

#: ../components/nethsm/administration.rst:838
msgid "The update can be cancelled as follows."
msgstr "取消更新的方法如下。"

#: ../components/nethsm/administration.rst:852
msgid ""
"Information about the `/system/cancel-update` endpoint can be found in "
"the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-cancel-update>`__."
msgstr ""
"有关 `/system/cancel-update` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-cancel-update>`__。"

#: ../components/nethsm/administration.rst:855
msgid "System Information"
msgstr "系统信息"

#: ../components/nethsm/administration.rst:857
msgid ""
"System information such as firmware version, software version, and "
"hardware version can be retrieved as follows."
msgstr "固件版本、软件版本和硬件版本等系统信息可按如下方式检索。"

#: ../components/nethsm/administration.rst:875
msgid ""
"Information about the `/system/info` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/get_system_info>`__."
msgstr ""
"有关 `/system/info` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/get_system_info>`__。"

#: ../components/nethsm/administration.rst:878
msgid "Reboot and Shutdown"
msgstr "重启和关机"

#: ../components/nethsm/administration.rst:880
msgid ""
"The NetHSM can be rebooted and shutdown, either remotely, or with the "
"restart and poweroff button on the front of the NetHSM hardware."
msgstr "NetHSM 可通过远程或 NetHSM 硬件正面的重启和关机按钮重启和关机。"

#: ../components/nethsm/administration.rst:882
msgid "The remote reboot can be initiated as follows."
msgstr "远程重启的启动方式如下。"

#: ../components/nethsm/administration.rst:898
msgid ""
"Information about the `/system/reboot` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-reboot>`__."
msgstr ""
"有关 `/system/reboot` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-reboot>`__。"

#: ../components/nethsm/administration.rst:900
msgid "The remote shutdown can be initiated as follows."
msgstr "远程关机的启动方式如下。"

#: ../components/nethsm/administration.rst:916
msgid ""
"Information about the `/system/shutdown` endpoint can be found in the "
"`API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-shutdown>`__."
msgstr ""
"有关 `/system/shutdown` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-shutdown>`__。"

#: ../components/nethsm/administration.rst:919
msgid "Reset to Factory Defaults"
msgstr "重置为出厂默认设置"

#: ../components/nethsm/administration.rst:921
msgid ""
"A *Provisioned* NetHSM can be reset to factory defaults. In this case all"
" user data is securely deleted and the NetHSM boots into an "
"*Unprovisioned* state. Afterwards, you may want to `provision <getting-"
"started#provisioning>`__ the NetHSM."
msgstr ""
"已*配置*的 NetHSM 可重置为出厂默认设置。在这种情况下，所有用户数据都会被安全删除，NetHSM 会启动到*未配置*状态。之后，您可能需要"
" \"配置 <getting-started#provisioning>`__ NetHSM\"。"

#: ../components/nethsm/administration.rst:923
#: ../components/nitrokey3/windows/piv/factory_reset.rst:10
msgid "The reset to factory defaults can be performed as follows."
msgstr "重置为出厂默认设置的步骤如下。"

#: ../components/nethsm/administration.rst:940
msgid ""
"Information about the `/system/factory-reset` endpoint can be found in "
"the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-factory-reset>`__."
msgstr ""
"有关 `/system/factory-reset` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/POST_system-factory-reset>`__。"

#: ../components/nethsm/administration.rst:943
msgid "User Management"
msgstr "用户管理"

#: ../components/nethsm/administration.rst:946
msgid "Roles"
msgstr "角色"

#: ../components/nethsm/administration.rst:948
msgid ""
"The NetHSM allows the separation of duties by using different roles. Each"
" user account configured on the NetHSM has one of the following *Roles* "
"assigned to it."
msgstr "NetHSM 允许使用不同的角色来区分职责。NetHSM 上配置的每个用户账户都分配有以下*角色*之一。"

#: ../components/nethsm/administration.rst:952
msgid "Role"
msgstr "角色"

#: ../components/nethsm/administration.rst:954
msgid "*Administrator*"
msgstr "*管理员*"

#: ../components/nethsm/administration.rst:954
msgid ""
"A user account with this Role has access to all operations provided by "
"the NetHSM, except for key usage operations, i.e. message signing and "
"decryption."
msgstr "具有该角色的用户账户可访问 NetHSM 提供的所有操作，但密钥使用操作（即信息签名和解密）除外。"

#: ../components/nethsm/administration.rst:958
msgid "*Operator*"
msgstr "*操作员*"

#: ../components/nethsm/administration.rst:958
msgid ""
"A user account with this Role has access to all key usage operations, a "
"read-only subset of key management operations and user management "
"operations allowing changes to their own account only."
msgstr "具有该角色的用户账户可以访问所有密钥使用操作、密钥管理操作的只读子集以及只允许更改自己账户的用户管理操作。"

#: ../components/nethsm/administration.rst:963
msgid "*Metrics*"
msgstr "*计量*"

#: ../components/nethsm/administration.rst:963
msgid ""
"A user account with this Role has access to read-only metrics operations "
"only."
msgstr "具有此角色的用户账户只能进行只读度量操作。"

#: ../components/nethsm/administration.rst:966
msgid "*Backup*"
msgstr "*备份*"

#: ../components/nethsm/administration.rst:966
msgid ""
"A user account with this Role has access to the operations required to "
"initiate a system backup only."
msgstr "具有该角色的用户账户只能访问启动系统备份所需的操作。"

#: ../components/nethsm/administration.rst:970
msgid ""
"See `Namespaces <administration#namespaces>`__ and `Tags <administration"
"#tags-for-users>`__ for more fine-grained access restricions."
msgstr ""
"请参阅 \"命名空间 <administration#namespaces>`__\" 和 \"标签 <administration#tags-"
"for-users>`__\" 以了解更精细的访问限制。"

#: ../components/nethsm/administration.rst:973
msgid "In a future release, additional *Roles* may be introduced."
msgstr "在未来的版本中，可能会引入更多*角色*。"

#: ../components/nethsm/administration.rst:976
msgid "Add User"
msgstr "添加用户"

#: ../components/nethsm/administration.rst:978
msgid ""
"Add a user account to the NetHSM. Each user account has a *Role*, which "
"needs to be specified. Please refer to chapter `Roles "
"<administration#roles>`__ to learn more about *Roles*."
msgstr ""
"向 NetHSM 添加用户账户。每个用户账户都有一个 *角色*，需要指定。有关 *Role* 的更多信息，请参阅 \"Roles "
"<administration#roles>`__\" 一章。"

#: ../components/nethsm/administration.rst:982
msgid ""
"Optionally, a user can be assigned to a `*Namespace* "
"<administration#namespaces>`__."
msgstr "可选择将用户分配给`*命名空间* <administration#namespaces>`__。"

#: ../components/nethsm/administration.rst:985
msgid ""
"The user ID must be alphanumeric. The NetHSM assigns a random user ID if "
"none is specified."
msgstr "用户 ID 必须是字母数字。如果没有指定用户 ID，NetHSM 将随机分配一个用户 ID。"

#: ../components/nethsm/administration.rst:988
msgid "A user account can be added as follows."
msgstr "添加用户账户的方法如下。"

#: ../components/nethsm/administration.rst:997
msgid "``-n``, ``--real-name`` ``TEXT``"
msgstr "``-n``, ``--real-name`` ``TEXT``"

#: ../components/nethsm/administration.rst:997
msgid "The real name of the new user"
msgstr "新用户的真实姓名"

#: ../components/nethsm/administration.rst:999
msgid "``-N``, ``--namespace`` ``TEXT``"
msgstr "``-N``, ``--namespace`` ``TEXT``"

#: ../components/nethsm/administration.rst:999
msgid "The Namespace of the new user"
msgstr "新用户的命名空间"

#: ../components/nethsm/administration.rst:1001
msgid "``-r``, ``--role`` ``[Administrator|Operator|Metrics|Backup]``"
msgstr "r\"，\"--角色\"，\"[管理员|操作员|度量|备份]\"。"

#: ../components/nethsm/administration.rst:1001
msgid "The *Role* of the new user"
msgstr "新用户的*角色"

#: ../components/nethsm/administration.rst:1003
#: ../components/nethsm/administration.rst:1124
msgid "``-p``, ``--passphrase`` ``TEXT``"
msgstr "``-p``, ``--passphrase`` ``TEXT``"

#: ../components/nethsm/administration.rst:1003
msgid "The passphrase of the new user"
msgstr "新用户的口令"

#: ../components/nethsm/administration.rst:1011
#: ../components/nethsm/administration.rst:1122
msgid "``-u``, ``--user-id`` ``TEXT``"
msgstr "``-u``, ``--user-id`` ``TEXT``"

#: ../components/nethsm/administration.rst:1011
msgid "The user ID of the new user"
msgstr "新用户的用户 ID"

#: ../components/nethsm/administration.rst:1026
msgid ""
"Information about the `/users` endpoint, to create a user without "
"specifying the user ID, can be found in the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/POST_users>`__."
msgstr ""
"有关 `/users` 端点的信息，可在 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/POST_users>`__"
" 中找到，该端点用于在不指定用户 ID 的情况下创建用户。"

#: ../components/nethsm/administration.rst:1028
msgid ""
"Information about the `/users/{UserID}` endpoint, to create a user with "
"specifying the user ID, can be found in the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_users-"
"UserID>`__."
msgstr ""
"有关 `/users/{UserID}` 端点的信息，可在 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_users-"
"UserID>`__ 中找到，该端点用于通过指定用户 ID 创建用户。"

#: ../components/nethsm/administration.rst:1030
msgid ""
"By default, the Namespace is inherited from the user that adds the new "
"user. Only users without a Namespace can choose a different Namespace for"
" new users. The Namespace is used as a prefix for the user name, for "
"example `namespace~user`. Therefore, the same user name can be used in "
"several Namespaces."
msgstr ""
"默认情况下，命名空间由添加新用户的用户继承。只有没有名称空间的用户才能为新用户选择不同的名称空间。命名空间用作用户名的前缀，例如 "
"`namespace~user`。因此，同一个用户名可以在多个命名空间中使用。"

#: ../components/nethsm/administration.rst:1035
msgid "Delete User"
msgstr "删除用户"

#: ../components/nethsm/administration.rst:1037
msgid "Delete a user account from the NetHSM."
msgstr "从 NetHSM 中删除用户帐户。"

#: ../components/nethsm/administration.rst:1040
msgid "Deletion is permanent and can not be reverted."
msgstr "删除是永久性的，无法恢复。"

#: ../components/nethsm/administration.rst:1042
msgid "A user account can be deleted as follows."
msgstr "删除用户账户的方法如下。"

#: ../components/nethsm/administration.rst:1051
#: ../components/nethsm/administration.rst:1272
#: ../components/nethsm/administration.rst:1298
msgid "``USER_ID``"
msgstr "用户名"

#: ../components/nethsm/administration.rst:1051
msgid "The user Id of the user."
msgstr "用户的用户 ID。"

#: ../components/nethsm/administration.rst:1064
msgid ""
"Information about the `/users/{UserID}` endpoint can be found in the `API"
" documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/DELETE_users-UserID>`__."
msgstr ""
"有关 `/users/{UserID}` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/DELETE_users-UserID>`__。"

#: ../components/nethsm/administration.rst:1067
msgid "List Users"
msgstr "列表用户"

#: ../components/nethsm/administration.rst:1069
msgid "List the users on the NetHSM."
msgstr "列出 NetHSM 上的用户。"

#: ../components/nethsm/administration.rst:1071
#: ../components/nethsm/administration.rst:1168
#: ../components/nethsm/operation.rst:285
msgid "The list can be retrieved as follows."
msgstr "该列表的检索方式如下"

#: ../components/nethsm/administration.rst:1080
msgid "``--details``, ``--no-details``"
msgstr "详细信息\"、\"无详细信息"

#: ../components/nethsm/administration.rst:1080
msgid "Query the real name and role of the user"
msgstr "查询用户的真实姓名和角色"

#: ../components/nethsm/administration.rst:1098
msgid ""
"Information about the `/users` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_users>`__."
msgstr ""
"有关 `/users` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_users>`__。"

#: ../components/nethsm/administration.rst:1100
msgid ""
"Information about the `/users/{UserID}` endpoint can be found in the `API"
" documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_users-"
"UserID>`__."
msgstr ""
"有关 `/users/{UserID}` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_users-"
"UserID>`__。"

#: ../components/nethsm/administration.rst:1102
msgid "Users within a Namespace can only see users in the same Namespace."
msgstr "名称空间内的用户只能看到同一名称空间内的用户。"

#: ../components/nethsm/administration.rst:1105
msgid "User Passphrase"
msgstr "用户密码"

#: ../components/nethsm/administration.rst:1107
msgid ""
"The passphrase of a user account can be reset. A passphrase is initial "
"set during adding of a user account."
msgstr "用户账户的口令可以重置。口令是在添加用户账户时初始设置的。"

#: ../components/nethsm/administration.rst:1111
msgid "Passphrases must have >= 10 and <= 200 characters."
msgstr "口令必须 >= 10 个字符，<= 200 个字符。"

#: ../components/nethsm/administration.rst:1113
msgid "The user passphrase can be set as follows."
msgstr "用户密码的设置方法如下。"

#: ../components/nethsm/administration.rst:1122
msgid "The user ID of the user"
msgstr "用户的用户 ID"

#: ../components/nethsm/administration.rst:1124
msgid "The new passphrase of the user"
msgstr "用户的新口令"

#: ../components/nethsm/administration.rst:1139
msgid ""
"Information about the `/users/{UserID}/passphrase` endpoint can be found "
"in the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/POST_users-"
"UserID-passphrase>`__."
msgstr ""
"有关 `/users/{UserID}/passphrase` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/POST_users-"
"UserID-passphrase>`__。"

#: ../components/nethsm/administration.rst:1142
msgid "Namespaces"
msgstr "命名空间"

#: ../components/nethsm/administration.rst:1144
msgid ""
"*Namespaces* were introduced in software version 2.0. When migrating from"
" an earlier version of the software, all existing users and keys will be "
"without a Namespace."
msgstr "软件 2.0 版引入了*命名空间*。从软件早期版本迁移时，所有现有用户和密钥都将没有命名空间。"

#: ../components/nethsm/administration.rst:1146
msgid ""
"Similarly to the concept of partitions, NetHSM supports the more flexible"
" *Namespaces* which group keys, administrators, and users on a NetHSM "
"into separate subsets. Users can only see and use keys in the same "
"Namespace and can only see users in the same Namespace. It is not "
"possible to see users and to see and use keys of other Namespaces. When a"
" new user is created, it inherits the Namespace of the user that created "
"it. The available storage capacity is shared between all Namespaces."
msgstr ""
"与分区的概念类似，NetHSM 支持更灵活的*命名空间*，可将 NetHSM "
"上的密钥、管理员和用户分成不同的子集。用户只能查看和使用同一命名空间中的密钥，也只能查看同一命名空间中的用户。无法查看其他命名空间的用户，也无法查看和使用其他命名空间的密钥。创建新用户时，新用户将继承创建用户的名称空间。所有命名空间共享可用存储容量。"

#: ../components/nethsm/administration.rst:1152
msgid ""
"Users with the *Administrator* `Role <administration#roles>`__ are also "
"referred to as *R-Administrator* if they are not in a Namespace, or "
"*N-Administrator* if they are in a Namespace."
msgstr ""
"具有 *Administrator* `Role <administration#roles>`__ 的用户，如果不在名称空间中，也称为 "
"*R-Administrator*，如果在名称空间中，则称为 *N-Administrator*。"

#: ../components/nethsm/administration.rst:1154
msgid ""
"Special rules apply to *R-Administrator* users: They can set the "
"Namespace for new users, list all users and query the Namespace of a "
"user. Also, the NetHSM configuration can only be accessed by "
"*R-Administrator* users.  R-Administrators can not see keys in a "
"Namespace."
msgstr ""
"特殊规则适用于 *R-Administrator* 用户：他们可以为新用户设置命名空间、列出所有用户和查询某个用户的命名空间。此外，NetHSM "
"配置只能由 *R-Administrator* 用户访问。  R- 管理员不能查看名称空间中的键。"

#: ../components/nethsm/administration.rst:1158
msgid ""
"To be able to generate keys and users in a Namespace, the Namespace needs"
" to be created by an *R-Administrator* user. Once the Namespace has been "
"created, *R-Administrator* users can no longer create, delete or modify "
"users in that Namespace.  This allows to protect Namespaces' keys being "
"accessed by R-Administrator (also indirectly by adding a new user on "
"behalf or resetting existing user's or administrator's credentials). "
"Therefore, it is necessary to create an *N-Administrator* user for the "
"Namespace before creating the Namespace. *R-Administrator* users can also"
" delete a Namespace with all contained keys."
msgstr ""
"要在名称空间中生成密钥和用户，名称空间必须由*R-管理员*用户创建。命名空间创建后，*R-Administrator* "
"用户就不能再创建、删除或修改该命名空间中的用户。  这可以保护 R-Administrator "
"访问命名空间的密钥（也可以通过代表添加新用户或重置现有用户或管理员的凭据来间接保护）。因此，在创建命名空间之前，有必要为命名空间创建一个 "
"*N-Administrator* 用户。*R-Administrator* 用户还可以删除名称空间和其中包含的所有密钥。"

#: ../components/nethsm/administration.rst:1164
msgid "List Namespaces"
msgstr "列出命名空间"

#: ../components/nethsm/administration.rst:1166
msgid "List the Namespaces on the NetHSM."
msgstr "列出 NetHSM 上的命名空间。"

#: ../components/nethsm/administration.rst:1184
msgid ""
"Information about the `/namespaces` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_namespaces>`__."
msgstr ""
"有关 `/namespaces` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/GET_namespaces>`__。"

#: ../components/nethsm/administration.rst:1187
msgid "Add Namespace"
msgstr "添加命名空间"

#: ../components/nethsm/administration.rst:1189
msgid "Add a Namespace to the NetHSM."
msgstr "向 NetHSM 添加命名空间。"

#: ../components/nethsm/administration.rst:1191
msgid ""
"*R-Administrator* users can already create new accounts in the Namespace "
"before it is created. After the creation, only *N-Administrator* users "
"can manage the users in the Namespace. The creation and usage of keys in "
"the Namespace is only possible after it has been added."
msgstr ""
"在命名空间创建之前，*R-管理员*用户已经可以在命名空间中创建新账户。创建后，只有 *N-Administrator* "
"用户可以管理名称空间中的用户。只有在添加名称空间后，才能在名称空间中创建和使用密钥。"

#: ../components/nethsm/administration.rst:1196
msgid ""
"The Namespace ID must be alphanumeric. The NetHSM assigns a random user "
"ID if none is specified."
msgstr "命名空间 ID 必须是字母数字。如果没有指定用户 ID，NetHSM 会随机分配一个。"

#: ../components/nethsm/administration.rst:1199
msgid "A Namespace can be added as follows."
msgstr "命名空间的添加方法如下。"

#: ../components/nethsm/administration.rst:1208
msgid "``NAMESPACE`` | The new Namespace."
msgstr "新命名空间。"

#: ../components/nethsm/administration.rst:1221
msgid ""
"Information about the `/namespaces/{NamespaceID}` endpoint can be found "
"in the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/PUT_namespaces-NamespaceID>`__."
msgstr ""
"有关 `/namespaces/{NamespaceID}` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/PUT_namespaces-NamespaceID>`__。"

#: ../components/nethsm/administration.rst:1225
msgid "Delete Namespace"
msgstr "删除命名空间"

#: ../components/nethsm/administration.rst:1227
msgid "Delete a Namespace from the NetHSM."
msgstr "从 NetHSM 中删除命名空间。"

#: ../components/nethsm/administration.rst:1229
msgid ""
"Deleting a Namespace also deletes all keys of that Namespace. Remaining "
"users in the Namespace cannot add keys until the Namespace has been added"
" again."
msgstr "删除名称空间也会删除该名称空间的所有键。名称空间中的其他用户在再次添加名称空间之前无法添加键值。"

#: ../components/nethsm/administration.rst:1232
msgid "A Namespace can be deleted as follows."
msgstr "删除命名空间的方法如下。"

#: ../components/nethsm/administration.rst:1241
msgid "``NAMESPACE``"
msgstr "``NAMESPACE``"

#: ../components/nethsm/administration.rst:1241
msgid "The Namespace to delete."
msgstr "要删除的命名空间。"

#: ../components/nethsm/administration.rst:1254
msgid ""
"Information about the `/namespaces/{NamespaceID}` endpoint can be found "
"in the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/DELETE_namespaces-NamespaceID>`__."
msgstr ""
"有关 `/namespaces/{NamespaceID}` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/DELETE_namespaces-NamespaceID>`__。"

#: ../components/nethsm/administration.rst:1257
msgid "Tags for Users"
msgstr "用户标签"

#: ../components/nethsm/administration.rst:1259
msgid ""
"*Tags* can be used to set fine-grained access restrictions on keys, and "
"are an optional feature. One or more *Tags* can be assigned to user "
"accounts with the *Operator* role only. The *Operators* can see all keys,"
" but only use those with at least one corresponding *Tag*. A key can not "
"be modified by an *Operator* user."
msgstr ""
"*标签*可用于对密钥设置精细的访问限制，是一项可选功能。一个或多个 *Tags* 可以分配给只有 *Operator* "
"角色的用户账户。操作员*可以查看所有密钥，但只能使用至少有一个相应*标签*的密钥。操作员*用户不能修改密钥。"

#: ../components/nethsm/administration.rst:1261
msgid ""
"To learn about how to use *Tags* on keys, please refer to `Tags for Keys "
"<operation#tags-for-keys>`__."
msgstr "要了解如何在按键上使用 *Tags* ，请参阅 `Tags for Keys <operation#tags-for-keys>`__ 。"

#: ../components/nethsm/administration.rst:1263
msgid "A *Tag* can be added as follows."
msgstr "可按如下方式添加*标签*。"

#: ../components/nethsm/administration.rst:1272
#: ../components/nethsm/administration.rst:1298
msgid "The user ID to set the tag on."
msgstr "要设置标签的用户 ID。"

#: ../components/nethsm/administration.rst:1274
#: ../components/nethsm/administration.rst:1300
#: ../components/nethsm/operation.rst:452
#: ../components/nethsm/operation.rst:482
msgid "``TAG``"
msgstr "`TAG``"

#: ../components/nethsm/administration.rst:1274
#: ../components/nethsm/administration.rst:1300
msgid "The tag to set on the user ID."
msgstr "要在用户 ID 上设置的标签。"

#: ../components/nethsm/administration.rst:1287
msgid ""
"Information about the `/users/{UserID}/tags/{Tag}` endpoint can be found "
"in the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_users-"
"UserID-tags-Tag>`__."
msgstr ""
"有关 `/users/{UserID}/tags/{Tag}` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/PUT_users-"
"UserID-tags-Tag>`__。"

#: ../components/nethsm/administration.rst:1289
#: ../components/nethsm/operation.rst:467
msgid "The *Tag* can be deleted as follows."
msgstr "删除 *Tag* 的方法如下。"

#: ../components/nethsm/administration.rst:1313
msgid ""
"Information about the `/users/{UserID}/tags/{Tag}` endpoint can be found "
"in the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/DELETE_users-UserID-tags-Tag>`__."
msgstr ""
"有关 `/users/{UserID}/tags/{Tag}` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default"
"/DELETE_users-UserID-tags-Tag>`__。"

#: ../components/nethsm/apache.rst:2
msgid "Apache"
msgstr "阿帕奇"

#: ../components/nethsm/apache.rst:4
msgid ""
"You can configure `Apache httpd <https://httpd.apache.org/>`__ to use "
"NetHSM via the OpenSSL engine which then uses NetHSM's PKCS#11 module."
msgstr ""
"您可以配置 `Apache httpd <https://httpd.apache.org/>`__ 通过 OpenSSL 引擎使用 "
"NetHSM，然后使用 NetHSM 的 PKCS#11 模块。"

#: ../components/nethsm/apache.rst:6 ../components/nethsm/nginx.rst:6
msgid ""
"The certificate file has to be on the disk but the private key can be "
"used from the NetHSM."
msgstr "证书文件必须在磁盘上，但私钥可通过 NetHSM 使用。"

#: ../components/nethsm/apache.rst:8 ../components/nethsm/nginx.rst:8
msgid "A full example is available `below <#example>`__."
msgstr "<#example>`__ 下面有一个完整的示例。"

#: ../components/nethsm/apache.rst:11 ../components/nethsm/nginx.rst:11
msgid "OpenSSL Configuration"
msgstr "OpenSSL 配置"

#: ../components/nethsm/apache.rst:13
msgid ""
"Set up the OpenSSL engine by following the `OpenSSL Engine  setup guide "
"<openssl.html#engine>`__. (OpenSSL Providers aren't supported yet by "
"Apache httpd.)"
msgstr ""
"按照 \"OpenSSL 引擎设置指南\"<openssl.html#engine>___设置 OpenSSL 引擎（Apache httpd "
"尚不支持 OpenSSL Providers）。"

#: ../components/nethsm/apache.rst:16
msgid "Httpd Configuration"
msgstr "Httpd 配置"

#: ../components/nethsm/apache.rst:18
msgid "Add the following lines to your ``httpd.conf`` :"
msgstr "在``httpd.conf``中添加以下行："

#: ../components/nethsm/apache.rst:37
msgid "The ``SSLCertificateFile`` must point to a certificate file on the disk."
msgstr "SSLCertificateFile \"必须指向磁盘上的证书文件。"

#: ../components/nethsm/apache.rst:39
msgid ""
"The ``SSLCertificateKeyFile`` should be a PKCS#11 `URI <https://www.rfc-"
"editor.org/rfc/rfc7512>`__ pointing to the private key in the NetHSM."
msgstr ""
"SSLCertificateKeyFile`` 应是指向 NetHSM 中私钥的 PKCS#11 `URI <https://www.rfc-"
"editor.org/rfc/rfc7512>`__。"

#: ../components/nethsm/apache.rst:42
msgid ""
"You must generate the certificate separately and then upload it to the "
"NetHSM. If the certificate on disk and the key in the NetHSM don't match "
"httpd won't start."
msgstr "你必须单独生成证书，然后上传到 NetHSM。如果磁盘上的证书与 NetHSM 中的密钥不匹配，httpd 将无法启动。"

#: ../components/nethsm/apache.rst:45 ../components/nethsm/nginx.rst:70
msgid "libnethsm_pkcs11 Configuration"
msgstr "libnethsm_pkcs11 配置"

#: ../components/nethsm/apache.rst:57
msgid ""
"To secure the password you can provide it via an environment variable "
"(see `Passwords <pkcs11-setup.html#passwords>`__) or provide it in the "
"httpd configuration:"
msgstr ""
"要确保密码的安全，可以通过环境变量（参见 \"密码 <pkcs11-setup.html#passwords>`__\"）或在 httpd "
"配置中提供："

#: ../components/nethsm/apache.rst:65 ../components/nethsm/nginx.rst:90
#: ../components/nitrokey3/firmware-update.rst.inc:67
msgid "Example"
msgstr "示例"

#: ../components/nethsm/apache.rst:67
msgid ""
"If you want to experiment with the `given example "
"<https://github.com/Nitrokey/nethsm-pkcs11/tree/main/container/apache>`__"
" use git to clone the `nethsm-pkcs11 repository "
"<https://github.com/Nitrokey/nethsm-pkcs11>`__ and run the following "
"commands:"
msgstr ""
"如果你想用 \"给定示例 <https://github.com/Nitrokey/nethsm-"
"pkcs11/tree/main/container/apache>`__\" 进行实验，请使用 git 克隆 \"nethsm-pkcs11 "
"代码库 <https://github.com/Nitrokey/nethsm-pkcs11>`__\"，然后运行以下命令："

#: ../components/nethsm/apache.rst:71 ../components/nethsm/nginx.rst:96
msgid "Running the generate script deletes the ``webserver`` key and replaces it."
msgstr "运行生成脚本会删除并替换 ``webserver`` 密钥。"

#: ../components/nethsm/apache.rst:73 ../components/nethsm/nginx.rst:98
msgid ""
"Configure a NetHSM, either a real one or a container. See the `getting-"
"started guide <getting-started.html>`__ for more information. Besides an "
"administrator, you are going to need an operator account."
msgstr ""
"配置 NetHSM，可以是一个真正的 NetHSM，也可以是一个容器。更多信息，请参阅 \"启动指南\"<getting-"
"started.html>__。除了管理员，你还需要一个操作员账户。"

#: ../components/nethsm/apache.rst:74 ../components/nethsm/nginx.rst:99
msgid ""
"Download and install the latest version of the nethsm-pkcs11 driver "
"`available from here <https://github.com/Nitrokey/nethsm-"
"pkcs11/releases>`__."
msgstr ""
"下载并安装最新版本的 nethsm-pkcs11 驱动程序 `可从此处获取 <https://github.com/Nitrokey"
"/nethsm-pkcs11/releases>`___。"

#: ../components/nethsm/apache.rst:75 ../components/nethsm/nginx.rst:100
msgid ""
"Install the OpenSSL PKCS11 engine as described in the `OpenSSL Manual "
"<openssl.html>`__. You do not need to create a configuration file."
msgstr "按照 \"OpenSSL 手册 <openssl.html>`__\" 中的说明安装 OpenSSL PKCS11 引擎。您无需创建配置文件。"

#: ../components/nethsm/apache.rst:76
msgid ""
"Adjust the variables ``HOST``, ``ADMIN_ACCOUNT`` and "
"``ADMIN_ACCOUNT_PWD`` in ``container/apache/generate.sh`` such that "
"``HOST`` contains your NetHSMs URL and port, ``ADMIN_ACCOUNT`` contains "
"an administrator accounts username and ``ADMIN_ACCOUNT_PWD`` the "
"corresponding password. Further configure the absolute path of the "
"OpenSSL PKCS11 engine in ``OPENSSL_PKCS11_ENGINE_PATH`` and the absolute "
"path of the NetHSM PKCS11 library in ``NETHSM_PKCS11_LIBRARY_PATH``."
msgstr ""
"调整`container/apache/generate.sh``中的变量`HOST``、`ADMIN_ACCOUNT``和`ADMIN_ACCOUNT_PWD``，使`HOST``包含"
" NetHSM 的 URL 和端口，`ADMIN_ACCOUNT`包含管理员账户的用户名，`ADMIN_ACCOUNT_PWD`包含相应的密码。在"
" `OPENSSL_PKCS11_ENGINE_PATH`` 中进一步配置 OpenSSL PKCS11 引擎的绝对路径，在 "
"`NETHSM_PKCS11_LIBRARY_PATH`` 中配置 NetHSM PKCS11 库的绝对路径。"

#: ../components/nethsm/apache.rst:77 ../components/nethsm/nginx.rst:102
msgid ""
"Create a NetHSM PKCS11 configuration file in one of the `known locations "
"<pkcs11-setup.html#configuration>`__, e.g., "
"``/etc/nitrokey/p11nethsm.conf``. It must have configured an operator "
"account and use the same NetHSM instance specified in the generate script"
" before."
msgstr ""
"在其中一个 \"已知位置 "
"<pkcs11-setup.html#configuration>\"____________________________________________________________________中创建"
" NetHSM PKCS11 "
"配置文件，例如``/etc/nitrokey/p11nethsm.conf```。它必须已配置操作员账户，并使用之前在生成脚本中指定的相同 "
"NetHSM 实例。"

#: ../components/nethsm/apache.rst:78
msgid ""
"Update the PKCS11 configuration in ``container/apache/p11nethsm.conf`` "
"with your NetHSMs URL and valid operator credentials."
msgstr ""
"使用 NetHSMs URL 和有效的操作员凭据更新 ``container/apache/p11nethsm.conf`` 中的 PKCS11 "
"配置。"

#: ../components/nethsm/apache.rst:79 ../components/nethsm/nginx.rst:104
msgid "Generate the certificate and key."
msgstr "生成证书和密钥"

#: ../components/nethsm/apache.rst:85 ../components/nethsm/ejbca.rst:32
#: ../components/nethsm/nginx.rst:110
msgid "Build the container."
msgstr "建造集装箱"

#: ../components/nethsm/apache.rst:91 ../components/nethsm/ejbca.rst:38
#: ../components/nethsm/nginx.rst:116
msgid "Run the container."
msgstr "运行容器。"

#: ../components/nethsm/apache.rst:97
msgid ""
"The Apache test page will be available at `https://localhost:9443/ "
"<https://localhost:9443/>`__. Note that your browser, hopefully, will "
"warn you that the websites certificate is self-signed."
msgstr ""
"Apache 测试页面可在 `https://localhost:9443/ "
"<https://localhost:9443/>`__中找到。请注意，希望您的浏览器会警告您网站证书是自签名的。"

#: ../components/nethsm/ejbca.rst:2
msgid "EJBCA"
msgstr "EJBCA"

#: ../components/nethsm/ejbca.rst:4
msgid ""
"`EJBCA <https://www.ejbca.org/>`__ is a PKI Certificate Authority "
"software available as open source."
msgstr "`EJBCA <https://www.ejbca.org/>`__ 是一个 PKI 证书管理机构软件，开源。"

#: ../components/nethsm/ejbca.rst:6
msgid ""
"To be able to use NetHSM with EJBCA you need to `setup "
"<pkcs11-setup.html>`__ the NetHSM PKCS#11 module first."
msgstr "要在 EJBCA 中使用 NetHSM，首先需要`setup <pkcs11-setup.html>`__ NetHSM PKCS#11 模块。"

#: ../components/nethsm/ejbca.rst:8
msgid ""
"Then configure EJBCA to use the NetHSM PKCS#11 module by adding an entry "
"in the ``/etc/ejbca/conf/web.properties`` file:"
msgstr ""
"然后在 ``/etc/ejbca/conf/web.properties`` 文件中添加一个条目，配置 EJBCA 以使用 NetHSM "
"PKCS#11 模块："

#: ../components/nethsm/ejbca.rst:16
msgid ""
"The ``418`` in the name is an index that must be unique for each PKCS#11 "
"module in the configuration file."
msgstr "名称中的 ``418`` 是一个索引，对于配置文件中的每个 PKCS#11 模块都必须是唯一的。"

#: ../components/nethsm/ejbca.rst:18
msgid ""
"To be able to generate keys from the interface you need to set the "
"``enable_set_attribute_value`` option to true in the ``p11nethsm.conf`` "
"file."
msgstr ""
"要从接口生成密钥，需要在 ``p11nethsm.conf`` 文件中将 ``enable_set_attribute_value`` 选项设置为"
" true。"

#: ../components/nethsm/ejbca.rst:20
msgid ""
"Because of some integration problems with the Sun PKCS11 provider, keys "
"generated from EJBCA will have a random name instead of the name given in"
" the interface."
msgstr "由于与 Sun PKCS11 提供程序的集成问题，从 EJBCA 生成的密钥将使用随机名称，而不是接口中给出的名称。"

#: ../components/nethsm/ejbca.rst:22
msgid ""
"After restarting EJBCA you can add a new Crypto Token in the EJBCA Admin "
"GUI "
"``https://mycahostname/ejbca/adminweb/cryptotoken/cryptotokens.xhtml``. "
"The Crypto Token type is ``PKCS#11 Crypto Token`` and the Crypto Token "
"name is ``NetHSM``."
msgstr ""
"重新启动 EJBCA 后，你可以在 EJBCA 管理 GUI "
"``https://mycahostname/ejbca/adminweb/cryptotoken/cryptotokens.xhtml`` "
"中添加一个新的加密令牌。加密令牌类型是``PKCS#11 加密令牌``，加密令牌名称是``NetHSM``。"

#: ../components/nethsm/ejbca.rst:26
msgid "Executing The Example"
msgstr "执行示例"

#: ../components/nethsm/ejbca.rst:28
msgid ""
"If you want to experiment with the given example you can use git to clone"
" the `nethsm-pkcs11 repository <https://github.com/Nitrokey/nethsm-"
"pkcs11>`__ and run the following commands:"
msgstr ""
"如果您想使用给出的示例进行实验，可以使用 git 克隆 `nethsm-pkcs11 仓库 "
"<https://github.com/Nitrokey/nethsm-pkcs11>`__，然后运行以下命令："

#: ../components/nethsm/ejbca.rst:30
msgid ""
"Configure a NetHSM, either a real one or a container. See the `getting-"
"started guide <getting-started>`__ for more information."
msgstr ""
"配置 NetHSM，可以是一个真正的 NetHSM，也可以是一个容器。更多信息，请参阅 `getting-started guide "
"<getting-started>`__ 。"

#: ../components/nethsm/ejbca.rst:31
msgid ""
"Change the libnethsm_pkcs11 configuration to match your NetHSM in "
"``container/ejbca/p11nethsm.conf``."
msgstr "在 ``container/ejbca/p11nethsm.conf`` 中更改 libnethsm_pkcs11 配置以匹配 NetHSM。"

#: ../components/nethsm/ejbca.rst:44
msgid ""
"The container will be available at `https://localhost:9443/ "
"<https://localhost:9443/>`__."
msgstr "容器将在 `https://localhost:9443/ <https://localhost:9443/>`__ 上提供。"

#: ../components/nethsm/faq.rst:2
msgid "Frequently Asked Questions (FAQ)"
msgstr "常见问题（FAQ）"

#: ../components/nethsm/faq.rst:5
msgid "**Q:** Is NetHSM FIPS or Common Criteria certified?"
msgstr "**问：** NetHSM 是否通过了 FIPS 或通用标准认证？"

#: ../components/nethsm/faq.rst:5
msgid ""
"Not yet but we are aiming for certifications in the future. Please "
"contact us if you are interested in supporting these efforts."
msgstr "目前还没有，但我们的目标是在未来获得认证。如果您有兴趣支持我们的工作，请与我们联系。"

#: ../components/nethsm/faq.rst:8
msgid "**Q:** Which protections against physical tampering are in place?"
msgstr "**问：** 有哪些防止物理篡改的保护措施？"

#: ../components/nethsm/faq.rst:8
msgid ""
"NetHSM is sealed which allows to detect physical tampering. It contains a"
" TPM which is protected against physical tampering. The TPM is the root "
"of trust and securely stores cryptographic keys which are used to encrypt"
" and decrypt further data and keys in the NetHSM. This protects against "
"booting malicious firmware and software and decrypting data and keys "
"being stored. The current NetHSM doesn't contain additional sensors to "
"detect tampering."
msgstr ""
"NetHSM 是密封的，可以检测物理篡改。它包含一个 TPM，可防止物理篡改。TPM 是信任根，可安全地存储用于加密和解密 NetHSM "
"中其他数据和密钥的加密密钥。这可以防止启动恶意固件和软件，并对存储的数据和密钥进行解密。当前的 NetHSM 不包含用于检测篡改的额外传感器。"

#: ../components/nethsm/faq.rst:16
msgid ""
"**Q:** Where can I learn more about NetHMS's security architecture and "
"implementation?"
msgstr "**问：** 我在哪里可以了解更多有关 NetHMS 安全架构和实施的信息？"

#: ../components/nethsm/faq.rst:11
msgid ""
"Start with the chapters Getting Started, Administration and Operations. "
"Proceed with the following resources."
msgstr "从 \"入门\"、\"管理 \"和 \"操作 \"三章开始。继续阅读以下资源。"

#: ../components/nethsm/faq.rst:13
msgid ""
"`Overall system design <https://github.com/Nitrokey/nethsm/blob/main/docs"
"/system-design.md>`_"
msgstr ""
"`总体系统设计 <https://github.com/Nitrokey/nethsm/blob/main/docs/system-"
"design.md>`_"

#: ../components/nethsm/faq.rst:14
msgid ""
"`Security assessment report "
"<https://www.nitrokey.com/files/doc/Nitrokey_NetHSM_Security_Assessment_v1.0.pdf>`_"
msgstr ""
"安全评估报告 "
"<https://www.nitrokey.com/files/doc/Nitrokey_NetHSM_Security_Assessment_v1.0.pdf>`_"

#: ../components/nethsm/faq.rst:15
msgid "`Full source code <https://github.com/Nitrokey/nethsm/>`_"
msgstr "完整源代码 <https://github.com/Nitrokey/nethsm/>`_"

#: ../components/nethsm/faq.rst:16
msgid ""
"Physical random number generator (TRNG) of quality PTG.3 according to "
"AIS-20: `hardware <https://github.com/Nitrokey/nitrokey-trng-"
"rs232-hardware>`_, `firmware <https://github.com/Nitrokey/nitrokey-trng-"
"rs232-firmware>`_"
msgstr ""
"根据 AIS-20 质量 PTG.3 的物理随机数发生器 (TRNG)：`硬件 <https://github.com/Nitrokey"
"/nitrokey-trng-rs232-hardware>`_, `固件 <https://github.com/Nitrokey"
"/nitrokey-trng-rs232-firmware>`_"

#: ../components/nethsm/faq.rst:31
msgid "**Q:** Roadmap: Which features are planned?"
msgstr "**问：** 路线图：计划推出哪些功能？"

#: ../components/nethsm/faq.rst:19
msgid ""
"We plan the following developments in the loose order. Changes to this "
"prioritization based on customer requests are possible."
msgstr "我们计划按照松散的顺序进行以下开发。我们可能会根据客户的要求对优先顺序进行调整。"

#: ../components/nethsm/faq.rst:21
msgid "Productive usable software container"
msgstr "生产可用的软件容器"

#: ../components/nethsm/faq.rst:22
msgid "Additional ECC: ECDH (X25519, NIST), secpXk (Koblitz) , Brainpool"
msgstr "附加 ECC：ECDH (X25519, NIST)、secpXk (Koblitz) , Brainpool"

#: ../components/nethsm/faq.rst:23
msgid "Quorum: m-of-n access scheme and security domain management"
msgstr "法定人数：m-of-n 访问方案和安全域管理"

#: ../components/nethsm/faq.rst:24
msgid "Performance improvements"
msgstr "性能改进"

#: ../components/nethsm/faq.rst:25
msgid "Direct, dynamic cluster capability, possibly support for external database"
msgstr "直接动态集群功能，可能支持外部数据库"

#: ../components/nethsm/faq.rst:26
msgid "Remote attestation and cloud service"
msgstr "远程认证和云服务"

#: ../components/nethsm/faq.rst:27
msgid "User authentication via mTLS certificates or FIDO"
msgstr "通过 mTLS 证书或 FIDO 进行用户身份验证"

#: ../components/nethsm/faq.rst:28
msgid "More user rights management (e.g. additional roles, groups)"
msgstr "更多用户权限管理（如附加角色、组）"

#: ../components/nethsm/faq.rst:29
msgid "Further separations and hardenings"
msgstr "进一步分离和硬化"

#: ../components/nethsm/faq.rst:30
msgid "FIPS and/or Common Criteria certifications"
msgstr "FIPS 和/或通用标准认证"

#: ../components/nethsm/faq.rst:31
msgid "Redundant power supplies"
msgstr "冗余电源"

#: ../components/nethsm/getting-started.rst:2
#: ../components/nextbox/gettingstarted.rst:2
#: ../components/nitropad/qubes/index.rst:7
#: ../components/nitropad/ubuntu/index.rst:29
#: ../components/nitropc/debian/index.rst:14
#: ../components/nitropc/qubes/index.rst:14
#: ../components/nitropc/ubuntu/index.rst:14
#: ../components/nitrophone/index.rst:7 ../components/nitrowall/index.rst:5
#: ../components/nitrowall/nw750/index.rst:5
#: ../components/pro/windows/index.rst:14
msgid "Getting Started"
msgstr "入门"

#: ../components/nethsm/getting-started.rst:4
msgid ""
"This chapter describes the physical installation and provisioning of the "
"NetHSM."
msgstr "本章介绍 NetHSM 的物理安装和配置。"

#: ../components/nethsm/getting-started.rst:7
#: ../components/nitropad/sealed-hardware.rst.inc:2
#: ../components/nitropc/sealed-hardware.rst.inc:2
#: ../components/nitrowall/sealed-hardware.rst:2
msgid "Verify Sealed Hardware"
msgstr "验证密封硬件"

#: ../components/nethsm/getting-started.rst:9
msgid "Your NetHSM hardware has been delivered in a sealed packaging."
msgstr "您的 NetHSM 硬件已密封包装交付。"

#: ../components/nethsm/getting-started.rst:11
msgid ""
"Please follow the three step process closely to verify that it has "
"arrived safely."
msgstr "请严格按照三个步骤进行操作，以确保货物安全抵达。"

#: ../components/nethsm/getting-started.rst:13
msgid "Check the wrapping paper for any tears, cuts, holes or broken sealing."
msgstr "检查包装纸是否有破损、缺口、孔洞或封口处破损。"

#: ../components/nethsm/getting-started.rst
#: ../components/nethsm/getting-started.rst:19
msgid "Package front side"
msgstr "包装正面"

#: ../components/nethsm/getting-started.rst
#: ../components/nethsm/getting-started.rst:27
msgid "Package back side"
msgstr "包装背面"

#: ../components/nethsm/getting-started.rst
#: ../components/nethsm/getting-started.rst:35
msgid "Package bottom side"
msgstr "包装底面"

#: ../components/nethsm/getting-started.rst
#: ../components/nethsm/getting-started.rst:43
msgid "Package top side"
msgstr "包装顶面"

#: ../components/nethsm/getting-started.rst
#: ../components/nethsm/getting-started.rst:51
msgid "Package left side"
msgstr "包装左侧"

#: ../components/nethsm/getting-started.rst:53
msgid ""
"Check the unique handmade glitter seal on top of the wrapping paper. You "
"will receive a picture of it from us after wrapping via e-mail. Compare "
"the received picture with the seal. If you notice any changes, please "
"contact us to arrange further action."
msgstr "请查看包装纸顶部独特的手工闪光封条。包装完成后，您将通过电子邮件收到我们的图片。将收到的图片与封条进行对比。如果您发现有任何变化，请联系我们安排进一步行动。"

#: ../components/nethsm/getting-started.rst
#: ../components/nethsm/getting-started.rst:62
msgid "Package sealing"
msgstr "包装密封"

#: ../components/nethsm/getting-started.rst:64
msgid ""
"After verifying that the sealing of the wrapping paper is not broken, "
"remove the wrapping paper. Finally, check the four seals on the side of "
"the NetHSM hardware."
msgstr "确认包装纸的封口没有破损后，撕掉包装纸。最后，检查 NetHSM 硬件侧面的四个封条。"

#: ../components/nethsm/getting-started.rst
#: ../components/nethsm/getting-started.rst:71
msgid "Positions of the four seals"
msgstr "四个封印的位置"

#: ../components/nethsm/getting-started.rst
#: ../components/nethsm/getting-started.rst:79
msgid "Seal on the side of the chassis"
msgstr "机箱侧面的密封件"

#: ../components/nethsm/getting-started.rst:82
msgid "Hardware Installation"
msgstr "硬件安装"

#: ../components/nethsm/getting-started.rst:84
msgid ""
"The NetHSM hardware chassis is designed to be rack mounted. Please make "
"sure it is installed in a compatible rack. Please follow the two step "
"process closely to install the NetHSM hardware."
msgstr "NetHSM 硬件机箱设计为机架式安装。请确保将其安装在兼容的机架上。请严格按照两个步骤安装 NetHSM 硬件。"

#: ../components/nethsm/getting-started.rst:89
msgid ""
"Connect the power cable with the *Power Port*, and the network cable with"
" the *Network Port*. Further, press the *Power Switch* to turn on power."
msgstr "将电源线连接到*电源接口*，将网线连接到*网络接口*。然后，按*电源开关*接通电源。"

#: ../components/nethsm/getting-started.rst
#: ../components/nethsm/getting-started.rst:96
#: ../components/nethsm/system_recovery.rst:41
msgid "Back side of the server"
msgstr "服务器背面"

#: ../components/nethsm/getting-started.rst:98
msgid ""
"Press the *Power Button* to turn on the NetHSM hardware. The *Reset "
"Button* is only for a forced reboot of the NetHSM hardware. If the NetHSM"
" hardware is running, the *Power Indicator* on the front will light."
msgstr ""
"按下*电源按钮*打开 NetHSM 硬件。重置按钮*仅用于强制重启 NetHSM 硬件。如果 NetHSM "
"硬件正在运行，正面的*电源指示灯*会亮起。"

#: ../components/nethsm/getting-started.rst:104
msgid "Do not use the *BMC Network Port* because it allows wider system access."
msgstr "不要使用 *BMC 网络端口*，因为它允许更广泛的系统访问。"

#: ../components/nethsm/getting-started.rst
#: ../components/nethsm/getting-started.rst:110
msgid "Front side of the server"
msgstr "服务器正面"

#: ../components/nethsm/getting-started.rst:112
msgid ""
"In an unprovisioned state the NetHSM hardware factory default IP address "
"is ``192.168.1.1``."
msgstr "在未配置状态下，NetHSM 硬件出厂默认 IP 地址为 ``192.168.1.1``。"

#: ../components/nethsm/getting-started.rst:115
msgid "Provisioning"
msgstr "供应"

#: ../components/nethsm/getting-started.rst:117
msgid ""
"A new or otherwise *Unprovisioned* NetHSM needs to be provisioned first "
"with passphrases and the current time. The *Admin Passphrase* is for the "
"first user account, which is the superuser of the NetHSM. The *Unlock "
"Passphrase* is used to decrypt NetHSM's *User Data*."
msgstr ""
"新的或*未配置*的 NetHSM 需要先配置密码和当前时间。管理员密码*用于第一个用户账户，即 NetHSM 的超级用户。解锁密码*用于解密 "
"NetHSM 的*用户数据*。"

#: ../components/nethsm/getting-started.rst:123
msgid "The initial provisioning is executed as follows."
msgstr "初始配置执行如下。"

#: ../components/nethsm/getting-started.rst:136
msgid ""
"If the time is not passed manually, it will be derived from the system "
"*nitropy* is running on. If the time is passed manually, make sure to "
"pass the time in UTC timezone."
msgstr "如果未手动输入时间，则将从*nitropy*运行的系统中导出时间。如果手动传递时间，请确保以 UTC 时区传递时间。"

#: ../components/nethsm/getting-started.rst:154
msgid ""
"Information about the `/provision` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/POST_provision>`__."
msgstr ""
"有关 `/provision` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/POST_provision>`__。"

#: ../components/nethsm/getting-started.rst:157
msgid ""
"The default boot mode is *Attended Boot*. Please refer to chapter `Boot "
"Mode <administration.html#boot-mode>`__ to learn more."
msgstr ""
"默认启动模式为 *Attended Boot*。请参阅 \"启动模式 \"一章<administration.html#boot-"
"mode>___了解更多信息。"

#: ../components/nethsm/index.rst:2
msgid "NetHSM"
msgstr "NetHSM"

#: ../components/nethsm/index.rst:4
msgid "This documentation describes the NetHSM software and hardware."
msgstr "本文档介绍 NetHSM 软件和硬件。"

#: ../components/nethsm/index.rst:6
msgid ""
"The NetHSM software can be either used on the NetHSM hardware, or as a "
"Docker container. This documentation only covers the Docker container in "
"the `Integration <integration.html>`__ chapter."
msgstr ""
"NetHSM 软件既可以在 NetHSM 硬件上使用，也可以作为 Docker 容器使用。本文档仅在 \"集成 "
"<integration.html>`__ 章 \"中介绍 Docker 容器。"

#: ../components/nethsm/index.rst:9
msgid ""
"The NetHSM software features a REST API to perform installation, "
"administration and operational tasks. The recommended way to use the REST"
" API is through the `nitropy <../software/nitropy/index.html>`_ tool. "
"Alternatively `curl <https://curl.se>`_ can be used to send HTTP requests"
" to the REST API."
msgstr ""
"NetHSM 软件采用 REST API 来执行安装、管理和操作任务。使用 REST API 的推荐方式是通过 `nitropy "
"<../software/nitropy/index.html>`_ 工具。另外，也可使用 `curl <https://curl.se>`_ 向"
" REST API 发送 HTTP 请求。"

#: ../components/nethsm/index.rst:13
msgid ""
"If you obtained a new NetHSM hardware, please refer to the chapter "
"`Getting Started <getting-started.html#getting-started>`__ first. In case"
" you want to restore a backup of a NetHSM, please refer to the chapter "
"`Restore <administration.html#restore>`__."
msgstr ""
"如果您获得了新的 NetHSM 硬件，请首先参阅 \"开始<getting-started.html#getting-"
"started>`__\"一章。如果要还原 NetHSM 的备份，请参阅 \"还原 "
"<administration.html#restore>`__\" 章节。"

#: ../components/nethsm/index.rst:18
msgid ""
"If you use a NetHSM instance with a self-signed certificate, for example "
"using the Docker container, you will have to instruct *nitropy* or *curl*"
" to ignore the validity of the certificate. For *nitropy* use the option "
"``--no-verify-tls`` and for *curl* use the option ``--insecure/-k`` to "
"skip the certificate check."
msgstr ""
"如果使用带有自签名证书的 NetHSM 实例，例如使用 Docker 容器，则必须指示 *nitropy* 或 *curl* "
"忽略证书的有效性。对于*nitropy*，使用选项\"`--no-verify-"
"tls``\"；对于*curl*，使用选项\"`--insecure/-k``\"跳过证书检查。"

#: ../components/nethsm/index.rst:23
msgid ""
"The examples in this documentation use the environment variable "
"``NETHSM_HOST``, which contains the IP address or URL of the NetHSM. On a"
" Unix shell the variable can be set with the following command."
msgstr ""
"本文档中的示例使用环境变量 ``NETHSM_HOST``，其中包含 NetHSM 的 IP 地址或 URL。在 Unix shell "
"中，可以使用以下命令设置该变量。"

#: ../components/nethsm/integration.rst:2
msgid "Integration"
msgstr "整合"

#: ../components/nethsm/integration.rst:4
msgid ""
"The chapter describes processes for various tasks and aims at all user "
"groups."
msgstr "本章介绍了各种任务的流程，面向所有用户群体。"

#: ../components/nethsm/integration.rst:7
msgid "REST-API"
msgstr "REST-API"

#: ../components/nethsm/integration.rst:9
msgid ""
"NetHSM's primary interface is a modern REST-API that guarantees best "
"performance and functionality. The API specification is available in "
"`OpenAPI format <https://nethsmdemo.nitrokey.com/api_docs/nethsm-"
"api.yaml>`_, and can be inspected and tested in the `API browser "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html>`_."
msgstr ""
"NetHSM 的主要接口是一个现代 RESTAPI，可确保最佳性能和功能。API 规范以 \"OpenAPI 格式 "
"<https://nethsmdemo.nitrokey.com/api_docs/nethsm-api.yaml>`_\"提供，可在 \"API"
" 浏览器 <https://nethsmdemo.nitrokey.com/api_docs/index.html>`_\"中检查和测试。"

#: ../components/nethsm/integration.rst:14
msgid "PKCS#11"
msgstr "PKCS#11"

#: ../components/nethsm/integration.rst:16
msgid ""
"The NetHSM supports the PKCS#11 standard. The required driver is "
"available from the `repository <https://github.com/Nitrokey/nethsm-"
"pkcs11>`__. The repository containes the source code and libraries, for "
"different operating systems. The `PKCS#11 guide <pkcs11-setup.html>`_ "
"describes the usage in detail."
msgstr ""
"NetHSM 支持 PKCS#11 标准。所需驱动程序可从 \"资源库 <https://github.com/Nitrokey/nethsm-"
"pkcs11>`__\"获取。该资源库包含适用于不同操作系统的源代码和库。PKCS#11 指南 <pkcs11-setup.html>`__ "
"详细描述了使用方法。"

#: ../components/nethsm/integration.rst:22
msgid "Development and Testing"
msgstr "开发与测试"

#: ../components/nethsm/integration.rst:25
msgid "Demo Instance"
msgstr "演示实例"

#: ../components/nethsm/integration.rst:27
msgid ""
"A public NetHSM demo instance is available at `nethsmdemo.nitrokey.com "
"<https://nethsmdemo.nitrokey.com/api/v1/info>`_. It will be reset every "
"eight hours (CET 6:00, 14:00, 22:00). User \"admin\", password "
"\"adminadmin\", unlock password \"unlockunlock\"."
msgstr ""
"公共 NetHSM 演示实例位于 `nethsmdemo.nitrokey.com "
"<https://nethsmdemo.nitrokey.com/api/v1/info>`_。它将每八小时重置一次（欧洲中部时间 "
"6:00、14:00、22:00）。用户名为 \"admin\"，密码为 \"adminadmin\"，解锁密码为 "
"\"unlockunlock\"。"

#: ../components/nethsm/integration.rst:31
msgid "Container Image"
msgstr "集装箱图像"

#: ../components/nethsm/integration.rst:33
msgid ""
"The container image is distributed as an OCI image and can be obtained "
"from `Docker Hub <https://hub.docker.com/r/nitrokey/nethsm>`_. It can be "
"run locally with a compatible executor, e.g. Docker or Podman."
msgstr ""
"容器镜像作为 OCI 镜像发布，可从 `Docker Hub "
"<https://hub.docker.com/r/nitrokey/nethsm>`_ 获取。可使用兼容的执行器（如 Docker 或 "
"Podman）在本地运行。"

#: ../components/nethsm/integration.rst:36
msgid ""
"Compared to the NetHSM hardware the following functions are not "
"implemented at software container's REST API:"
msgstr "与 NetHSM 硬件相比，软件容器的 REST API 没有实现以下功能："

#: ../components/nethsm/integration.rst:38
msgid "network configuration"
msgstr "网络配置"

#: ../components/nethsm/integration.rst:39
msgid "factory reset"
msgstr "出厂重置"

#: ../components/nethsm/integration.rst:40
#: ../components/nitropad/factory-reset-heads2.rst.inc:-1
msgid "reboot"
msgstr "重新启动"

#: ../components/nethsm/integration.rst:41
msgid "software update"
msgstr "软件更新"

#: ../components/nethsm/integration.rst:43
#: ../components/nethsm/integration.rst:60
msgid "The container can be executed as follows."
msgstr "容器的执行方式如下"

#: ../components/nethsm/integration.rst:46
#: ../components/nethsm/integration.rst:63
#: ../components/nethsm/integration.rst:84
#: ../components/nethsm/integration.rst:97
msgid "Docker"
msgstr "Docker"

#: ../components/nethsm/integration.rst:51
#: ../components/nethsm/integration.rst:89
#: ../components/nethsm/integration.rst:102
msgid "Podman"
msgstr "波德曼"

#: ../components/nethsm/integration.rst:56
msgid ""
"This will run NetHSM as a Unix process inside the container and expose "
"the REST API on the port `8443` via the HTTPS protocol."
msgstr "这将在容器内以 Unix 进程的形式运行 NetHSM，并通过 HTTPS 协议在端口 `8443` 上公开 REST API。"

#: ../components/nethsm/integration.rst:58
msgid ""
"Additionaly to running the NetHSM as a Unix process it can be run as a "
"unikernel supported by KVM."
msgstr "除了作为 Unix 进程运行 NetHSM 外，它还可以作为 KVM 支持的单内核运行。"

#: ../components/nethsm/integration.rst:68
msgid ""
"This will run NetHSM as a unikernel inside a KVM virtual machine. The "
"container will expose the REST API, via the HTTPS protocol, on the "
"interface `tap200` with the IP address `192.168.1.100` and port `8443`."
msgstr ""
"这将在 KVM 虚拟机中以单内核方式运行 NetHSM。容器将通过 HTTPS 协议，在 IP 地址为 192.168.1.100、端口为 "
"8443 的接口 \"tap200 \"上公开 REST API。"

#: ../components/nethsm/integration.rst:72
msgid ""
"The container uses a self-signed TLS certificate. Make sure to use the "
"correct connection settings to establish a connection. Please refer to "
"chapter `NetHSM introduction <index.html>`__ to learn more."
msgstr ""
"容器使用自签名 TLS 证书。请确保使用正确的连接设置来建立连接。请参阅 \"NetHSM 简介 <index.html>`__\" "
"一章了解更多信息。"

#: ../components/nethsm/integration.rst:77
msgid "Integration Into Custom Application"
msgstr "集成到自定义应用程序中"

#: ../components/nethsm/integration.rst:79
msgid ""
"To integrate the NetHSM into own custom applications, client libraries "
"are available for almost all programming languages. Here are libraries "
"for `Python <https://github.com/Nitrokey/nethsm-sdk-py>`_ and `Rust "
"<https://github.com/Nitrokey/nethsm-sdk-rs>`_ as well as `this 3rd party "
"Rust crate <https://crates.io/crates/nethsm>`_. For all other programming"
" languages we recommend using `OpenAPI Generator "
"<https://github.com/OpenAPITools/openapi-generator>`_."
msgstr ""
"为了将 NetHSM 集成到自己的定制应用程序中，几乎所有编程语言都提供了客户端库。这里有用于 `Python "
"<https://github.com/Nitrokey/nethsm-sdk-py>`_ 和 `Rust "
"<https://github.com/Nitrokey/nethsm-sdk-rs>`_ 以及 `this 3rd party Rust "
"crate <https://crates.io/crates/nethsm>`_ 的库。对于所有其他编程语言，我们建议使用 `OpenAPI "
"生成器 <https://github.com/OpenAPITools/openapi-generator>`_。"

#: ../components/nethsm/integration.rst:81
msgid "The list of all available languages can be retrieved as follows."
msgstr "所有可用语言的列表如下所示。"

#: ../components/nethsm/integration.rst:94
msgid ""
"The NetHSM client can be generated for your programming language as "
"follows."
msgstr "NetHSM 客户端可按以下方式为您的编程语言生成。"

#: ../components/nethsm/integration.rst:107
msgid ""
"The generated client code, in this example JavaScript, will be created in"
" the ``./out/`` directory. This folder also contains the necessary "
"documentation how to use it."
msgstr "生成的客户端代码（本例中为 JavaScript）将创建在 ``./out/`` 目录中。该文件夹还包含必要的使用文档。"

#: ../components/nethsm/integration.rst:111
msgid ""
"If Podman is used with enforcing SELinux, a labeling to the volume mount "
"might be required. The mode of SELinux can be requested with ``sestatus "
"|grep \"Current mode\"``. If the mode is set to ``enforcing``, a change "
"to the context is required. In this case the volume mount must be "
"postfixed with ``:z``, resulting in ``-v \"${PWD}/out:/out:z\"``."
msgstr ""
"如果 Podman 用于执行 SELinux，则可能需要标记卷挂载。可以使用 ``sestatus |grep \"Current "
"mode\"``查询 SELinux 的模式。如果模式设置为 "
"\"强制\"，则需要更改上下文。在这种情况下，必须在卷挂载后加上``:z``，结果是``-v \"${PWD}/out:/out:z\"``。"

#: ../components/nethsm/integration.rst:117
msgid "Command-line interface"
msgstr "命令行界面"

#: ../components/nethsm/integration.rst:119
msgid ""
"Users may administrate and use a NetHSM using a dedicated command-line "
"interface (CLI). Nitrokey offers ``nitropy``, which is distributed in the"
" Python based `pynitrokey <https://pypi.org/project/pynitrokey/>`_. With "
"``nethsm`` an alternative third-party application exists, which is "
"developed in the Rust crate `nethsm-cli <https://crates.io/crates/nethsm-"
"cli/>`_."
msgstr ""
"用户可使用专用的命令行界面（CLI）管理和使用 NetHSM。Nitrokey 提供 \"nitropy\"，它发布在基于 Python 的 "
"\"pynitrokey <https://pypi.org/project/pynitrokey/>`_\"中。有了 ``nethsm`` "
"，就有了另一个第三方应用程序，它是在 Rust crate `nethsm-cli <https://crates.io/crates"
"/nethsm-cli/>`_ 中开发的。"

#: ../components/nethsm/knotdns.rst:2
msgid "Knot DNS"
msgstr "结点 DNS"

#: ../components/nethsm/knotdns.rst:4
msgid ""
"`Knot DNS <https://www.knot-dns.cz/>`__ is an open source authoritative "
"DNS server that can be used for DNSSEC. To use KnotDNS with the NetHSM "
"please install and configure the PKCS#11 module as `described here "
"<./pkcs11-setup.html>`__."
msgstr ""
"Knot DNS <https://www.knot-dns.cz/>`__ 是一个可用于 DNSSEC 的开源权威 DNS 服务器。要在 "
"NetHSM 中使用 KnotDNS，请安装并配置 PKCS#11 模块，详情请参见 <./pkcs11-setup.html>`__。"

#: ../components/nethsm/knotdns.rst:7
msgid "Manual Mode"
msgstr "手动模式"

#: ../components/nethsm/knotdns.rst:9
msgid "In manual mode the keys have to be generated and managed manually."
msgstr "在手动模式下，密钥必须手动生成和管理。"

#: ../components/nethsm/knotdns.rst:11
msgid ""
"Only the Operator user is needed in the PKCS#11 module configuration "
"file. The password can be specified using the ``pin-value`` in the "
"`PKCS#11 URI <https://www.rfc-editor.org/rfc/rfc7512>`__ in knot.conf."
msgstr ""
"在 PKCS#11 模块配置文件中只需要操作员用户。密码可使用 knot.conf 中 `PKCS#11 URI <https://www"
".rfc-editor.org/rfc/rfc7512>`__ 中的 ``pin-value`` 指定。"

#: ../components/nethsm/knotdns.rst:13
msgid ""
"Add the following lines to the KnotDNS configuration file "
"``/etc/knot/knot.conf``:"
msgstr "在 KnotDNS 配置文件 ``/etc/knot/knot.conf`` 中添加以下几行："

#: ../components/nethsm/knotdns.rst:34
msgid ""
"The ``token`` value in the PKCS#11 URI is the ``label`` from the "
"``p11nethsm.conf``. Adjust the path to the ``libnethsm_pkcs11.so`` as "
"needed."
msgstr ""
"PKCS#11 URI 中的 ``token`` 值是 ``p11nethsm.conf`` 中的 ``label``。根据需要调整 "
"``libnethsm_pkcs11.so`` 的路径。"

#: ../components/nethsm/knotdns.rst:37
msgid "To generate the keys run the following commands:"
msgstr "要生成密钥，请运行以下命令："

#: ../components/nethsm/knotdns.rst:60
msgid "Automatic Mode"
msgstr "自动模式"

#: ../components/nethsm/knotdns.rst:62
msgid ""
"In automatic mode the keys are generated by Knot DNS and stored in the "
"NetHSM."
msgstr "在自动模式下，密钥由 Knot DNS 生成并存储在 NetHSM 中。"

#: ../components/nethsm/knotdns.rst:64
msgid ""
"An Administrator and an Operator user are needed in the PKCS#11 module "
"configuration."
msgstr "在 PKCS#11 模块配置中需要一个管理员用户和一个操作员用户。"

#: ../components/nethsm/knotdns.rst:66
msgid ""
"Add the following lines to the Knot DNS configuration file "
"``/etc/knot/knot.conf``:"
msgstr "在 Knot DNS 配置文件 ``/etc/knot/knot.conf`` 中添加以下几行："

#: ../components/nethsm/knotdns.rst:92
msgid ""
"Setting ``key-label`` to ``on`` doesn't change anything and the pkcs11 "
"module ignores the given label and always returns the hexadecimal key id "
"as label. The policy uses very short key lifetimes and TTL's for testing "
"purposes."
msgstr ""
"将 ``key-label`` 设为 ``on`` 不会改变任何内容，pkcs11 模块会忽略给定的标签，并始终将十六进制密钥 id "
"作为标签返回。出于测试目的，该策略使用非常短的密钥生命周期和 TTL。"

#: ../components/nethsm/metrics.rst:7
msgid "Metric"
msgstr "公制"

#: ../components/nethsm/metrics.rst:9
msgid "client connections"
msgstr "客户连接"

#: ../components/nethsm/metrics.rst:11
msgid "established state"
msgstr "建国"

#: ../components/nethsm/metrics.rst:13
msgid "external.received bytes"
msgstr "外部接收字节"

#: ../components/nethsm/metrics.rst:15
msgid "external.received packets"
msgstr "外部.收到的数据包"

#: ../components/nethsm/metrics.rst:17
msgid "external.transmitted bytes"
msgstr "外部传输字节"

#: ../components/nethsm/metrics.rst:19
msgid "external.transmitted packets"
msgstr "外部传输的数据包"

#: ../components/nethsm/metrics.rst:21
msgid "free chunk count"
msgstr "空闲块计数"

#: ../components/nethsm/metrics.rst:23
msgid "gc compactions"
msgstr "gc 压缩"

#: ../components/nethsm/metrics.rst:25
msgid "gc major bytes"
msgstr "gc 主要字节"

#: ../components/nethsm/metrics.rst:27
msgid "gc major collections"
msgstr "GC 主要系列"

#: ../components/nethsm/metrics.rst:29
msgid "gc minor collections"
msgstr "GC 未成年人收藏品"

#: ../components/nethsm/metrics.rst:31
msgid "http response 200"
msgstr "http 响应 200"

#: ../components/nethsm/metrics.rst:31
msgid "REST API responses with HTTP code 200, i.e. “OK”."
msgstr "REST API 响应的 HTTP 代码为 200，即 \"OK\"。"

#: ../components/nethsm/metrics.rst:33
msgid "http response 201"
msgstr "http 响应 201"

#: ../components/nethsm/metrics.rst:33
msgid "REST API responses with HTTP code 201, i.e. “Created”."
msgstr "REST API 响应的 HTTP 代码为 201，即 \"已创建\"。"

#: ../components/nethsm/metrics.rst:35
msgid "http response 204"
msgstr "http 响应 204"

#: ../components/nethsm/metrics.rst:35
msgid "REST API responses with HTTP code 204, i.e. “No Content”."
msgstr "REST API 响应的 HTTP 代码为 204，即 \"无内容\"。"

#: ../components/nethsm/metrics.rst:37
msgid "http response 403"
msgstr "http 响应 403"

#: ../components/nethsm/metrics.rst:37
msgid "REST API responses with HTTP code 403, i.e. “Forbidden”."
msgstr "REST API 响应的 HTTP 代码为 403，即 \"禁止\"。"

#: ../components/nethsm/metrics.rst:39
msgid "http response 404"
msgstr "http 响应 404"

#: ../components/nethsm/metrics.rst:39
msgid "REST API responses with HTTP code 404, i.e. “Not Found”."
msgstr "REST API 响应的 HTTP 代码为 404，即 \"未找到\"。"

#: ../components/nethsm/metrics.rst:41
msgid "http response time"
msgstr "http 响应时间"

#: ../components/nethsm/metrics.rst:41
msgid "Average (mean) response time of the REST API in seconds."
msgstr "REST API 的平均（平均）响应时间（秒）。"

#: ../components/nethsm/metrics.rst:43
msgid "http response total"
msgstr "http 响应总数"

#: ../components/nethsm/metrics.rst:43
msgid "Total number of REST API responses."
msgstr "REST API 响应总数。"

#: ../components/nethsm/metrics.rst:45
msgid "internal.received bytes"
msgstr "内部.接收字节"

#: ../components/nethsm/metrics.rst:47
msgid "internal.received packets"
msgstr "内部.收到的数据包"

#: ../components/nethsm/metrics.rst:49
msgid "internal.transmitted bytes"
msgstr "内部传输字节"

#: ../components/nethsm/metrics.rst:51
msgid "internal.transmitted packets"
msgstr "内部.传输的数据包"

#: ../components/nethsm/metrics.rst:53
msgid "kv write"
msgstr "kv 写道"

#: ../components/nethsm/metrics.rst:53
msgid "Total number of writes to the Key-Value-Store."
msgstr "写入键值存储的总次数。"

#: ../components/nethsm/metrics.rst:55
msgid "log errors"
msgstr "日志错误"

#: ../components/nethsm/metrics.rst:55
msgid "Total number of logged errors."
msgstr "记录的错误总数。"

#: ../components/nethsm/metrics.rst:57
msgid "log warnings"
msgstr "日志警告"

#: ../components/nethsm/metrics.rst:57
msgid "Total number of logged warnings."
msgstr "记录的警告总数。"

#: ../components/nethsm/metrics.rst:59
msgid "maximum allocated space"
msgstr "最大分配空间"

#: ../components/nethsm/metrics.rst:61
msgid "maximum releasable bytes"
msgstr "最大可释放字节数"

#: ../components/nethsm/metrics.rst:63
msgid "mmapped region count"
msgstr "毫米映射区域计数"

#: ../components/nethsm/metrics.rst:65
msgid "new sleeper size"
msgstr "新卧铺尺寸"

#: ../components/nethsm/metrics.rst:67
msgid "non-mmapped allocated bytes"
msgstr "非映射分配字节"

#: ../components/nethsm/metrics.rst:69
msgid "sleep queue size"
msgstr "睡眠队列大小"

#: ../components/nethsm/metrics.rst:71
msgid "syn-rcvd state"
msgstr "同步传回状态"

#: ../components/nethsm/metrics.rst:73
msgid "timers"
msgstr "计时器"

#: ../components/nethsm/metrics.rst:75
msgid "total allocated space"
msgstr "总分配空间"

#: ../components/nethsm/metrics.rst:77
msgid "total client"
msgstr "客户总数"

#: ../components/nethsm/metrics.rst:77
msgid "Total number of clients connected with."
msgstr "连接的客户总数。"

#: ../components/nethsm/metrics.rst:79
msgid "total established"
msgstr "总计"

#: ../components/nethsm/metrics.rst:81
msgid "total free space"
msgstr "总自由空间"

#: ../components/nethsm/metrics.rst:83
msgid "total sleeper size"
msgstr "卧铺总尺寸"

#: ../components/nethsm/metrics.rst:85
msgid "total syn-rcvd"
msgstr "同步返回总数"

#: ../components/nethsm/metrics.rst:87
msgid "total timers"
msgstr "总计时器"

#: ../components/nethsm/metrics.rst:89
msgid "uptime"
msgstr "正常运行时间"

#: ../components/nethsm/metrics.rst:89
msgid "Uptime in seconds."
msgstr "正常运行时间（秒）。"

#: ../components/nethsm/nginx.rst:2
msgid "Nginx"
msgstr "Nginx"

#: ../components/nethsm/nginx.rst:4
msgid ""
"You can configure `nginx <https://nginx.org/>`__ to use NetHSM via the "
"OpenSSL engine which then uses NetHSM's PKCS#11 module."
msgstr ""
"您可以配置 `nginx <https://nginx.org/>`__ 通过 OpenSSL 引擎使用 NetHSM，然后使用 NetHSM 的"
" PKCS#11 模块。"

#: ../components/nethsm/nginx.rst:13
msgid ""
"Set up the OpenSSL engine by following the `OpenSSL Engine  setup guide "
"<openssl.html#engine>`__."
msgstr "按照 \"OpenSSL 引擎设置指南 <openssl.html#engine>`__\" 设置 OpenSSL 引擎。"

#: ../components/nethsm/nginx.rst:15
msgid "Providers aren't supported yet by Nginx."
msgstr "Nginx 尚不支持提供程序。"

#: ../components/nethsm/nginx.rst:18
msgid ""
"Using the libp11 OpenSSL engine version 0.4.12 or older and a NetHSM with"
" a lot of key will make the initial loading of Nginx slow (more than a "
"minute for 1 thousand keys). It is recommended to use version 0.4.13 or "
"newer or to build the engine from `source "
"<https://github.com/OpenSC/libp11>`__."
msgstr ""
"使用 0.4.12 或更旧版本的 libp11 OpenSSL 引擎和带有大量密钥的 NetHSM 会导致 Nginx 的初始加载速度变慢（1 "
"000 个密钥需要 1 分钟以上）。建议使用 0.4.13 或更新版本，或从 `source "
"<https://github.com/OpenSC/libp11>`__ 生成引擎。"

#: ../components/nethsm/nginx.rst:21
msgid "Nginx Configuration"
msgstr "Nginx 配置"

#: ../components/nethsm/nginx.rst:60
msgid "The ``ssl_certificate`` must point to a certificate file on the disk."
msgstr "ssl_certificate \"必须指向磁盘上的证书文件。"

#: ../components/nethsm/nginx.rst:62
msgid ""
"The ``ssl_certificate_key`` can be an OpenSSL configuration. Here we use "
"the OpenSSL engine with the PKCS#11 module and select the private key "
"with the label/ID ``webserver`` and the key type ``private``."
msgstr ""
"ssl_certificate_key \"可以是 OpenSSL 配置。这里我们使用带有 PKCS#11 模块的 OpenSSL "
"引擎，并选择带有标签/ID ``webserver`` 和密钥类型 ``private`` 的私钥。"

#: ../components/nethsm/nginx.rst:64
msgid ""
"``ssl_certificate_key "
"\"engine:pkcs11:pkcs11:object=webserver;type=private\";``"
msgstr ""
"`ssl_certificate_key "
"\"engine:pkcs11:pkcs11:object=webserver;type=private\";``"

#: ../components/nethsm/nginx.rst:67
msgid ""
"You must generate the certificate separately and then upload it to the "
"NetHSM. If the certificate on disk and the key in the NetHSM don't match "
"nginx won't start."
msgstr "你必须单独生成证书，然后上传到NetHSM。如果磁盘上的证书和NetHSM中的密钥不匹配，nginx将无法启动。"

#: ../components/nethsm/nginx.rst:82
msgid ""
"To secure the password you can provide it via an `environment variable "
"<pkcs11-setup.html#passwords>`__) or provide it in the nginx "
"configuration:"
msgstr "要确保密码安全，可以通过 \"环境变量 <pkcs11-setup.html#passwords>\"___)或在 nginx 配置中提供密码："

#: ../components/nethsm/nginx.rst:92
msgid ""
"If you want to experiment with the `given example "
"<https://github.com/Nitrokey/nethsm-pkcs11/tree/main/container/nginx>`__ "
"use git to clone the `nethsm-pkcs11 repository "
"<https://github.com/Nitrokey/nethsm-pkcs11>`__ and run the following "
"commands:"
msgstr ""
"如果你想用 \"给定示例 <https://github.com/Nitrokey/nethsm-"
"pkcs11/tree/main/container/nginx>`__\" 进行实验，请使用 git 克隆 \"nethsm-pkcs11 "
"代码库 <https://github.com/Nitrokey/nethsm-pkcs11>`__\"，然后运行以下命令："

#: ../components/nethsm/nginx.rst:101
msgid ""
"Adjust the variables ``HOST``, ``ADMIN_ACCOUNT`` and "
"``ADMIN_ACCOUNT_PWD`` in ``container/nginx/generate.sh`` such that "
"``HOST`` contains your NetHSMs URL and port, ``ADMIN_ACCOUNT`` contains "
"an administrator accounts username and ``ADMIN_ACCOUNT_PWD`` the "
"corresponding password. Further configure the absolute path of the "
"OpenSSL PKCS11 engine in ``OPENSSL_PKCS11_ENGINE_PATH`` and the absolute "
"path of the NetHSM PKCS11 library in ``NETHSM_PKCS11_LIBRARY_PATH``."
msgstr ""
"调整 `container/nginx/generate.sh`` 中的 ``HOST``、``ADMIN_ACCOUNT`` 和 "
"``ADMIN_ACCOUNT_PWD`` 变量，使``HOST``包含 NetHSM 的 URL "
"和端口，``ADMIN_ACCOUNT`包含管理员账户的用户名，``ADMIN_ACCOUNT_PWD`包含相应的密码。在 "
"`OPENSSL_PKCS11_ENGINE_PATH`` 中进一步配置 OpenSSL PKCS11 引擎的绝对路径，在 "
"`NETHSM_PKCS11_LIBRARY_PATH`` 中配置 NetHSM PKCS11 库的绝对路径。"

#: ../components/nethsm/nginx.rst:103
msgid ""
"Update the PKCS11 configuration in ``container/nginx/p11nethsm.conf`` "
"with your NetHSMs URL and valid operator credentials."
msgstr ""
"使用 NetHSMs URL 和有效的操作员凭据更新 ``container/nginx/p11nethsm.conf`` 中的 PKCS11 "
"配置。"

#: ../components/nethsm/nginx.rst:122
msgid ""
"The NGINX test page will be available at `https://localhost:9443/ "
"<https://localhost:9443/>`__. Note that your browser, hopefully, will "
"warn you that the websites certificate is self-signed."
msgstr ""
"NGINX 测试页面将在 `https://localhost:9443/ "
"<https://localhost:9443/>`__中提供。请注意，希望您的浏览器会警告您网站证书是自签名的。"

#: ../components/nethsm/opendnssec.rst:2
msgid "OpenDNSSEC"
msgstr "OpenDNSSEC"

#: ../components/nethsm/opendnssec.rst:4
msgid ""
"`OpenDNSSEC <https://www.opendnssec.org/>`__ is a tool suite for managing"
" the security of domain names. It can directly load a PKCS#11 module and "
"manage the keys."
msgstr ""
"`OpenDNSSEC <https://www.opendnssec.org/>`__ 是一个管理域名安全的工具套件。它可以直接加载 "
"PKCS#11 模块并管理密钥。"

#: ../components/nethsm/opendnssec.rst:6
msgid ""
"To install and setup OpenDNSSEC, you can follow the `OpenDNSSEC Quick "
"Start Guide "
"<https://wiki.opendnssec.org/display/DOCS20/Quick+start+guide>`__. You "
"don't need to install ``SoftHSM``, the NetHSM PKCS#11 module will be used"
" instead."
msgstr ""
"要安装和设置 OpenDNSSEC，可以按照 `OpenDNSSEC 快速入门指南 "
"<https://wiki.opendnssec.org/display/DOCS20/Quick+start+guide>`__ "
"进行。您不需要安装 ``SoftHSM`` ，而是使用 NetHSM PKCS#11 模块。"

#: ../components/nethsm/opendnssec.rst:8
msgid ""
"As OpenDNSSEC needs access to manage the keys and then use them, you will"
" need to configure both administrator and operator account in the PKCS#11"
" module configuration file."
msgstr "由于 OpenDNSSEC 需要访问权限来管理和使用密钥，因此需要在 PKCS#11 模块配置文件中配置管理员和操作员账户。"

#: ../components/nethsm/opendnssec.rst:10
msgid ""
"You can configure OpenDNSSEC to load the libnethsm_pkcs11.so module by "
"editing the ``/etc/opendnssec/conf.xml`` file. You will need to add the "
"following lines:"
msgstr ""
"您可以通过编辑 ``/etc/opendnssec/conf.xml`` 文件来配置 OpenDNSSEC 以加载 "
"libnethsm_pkcs11.so 模块。您需要添加以下行："

#: ../components/nethsm/opendnssec.rst:35
msgid ""
"Replace ``/root/libnethsm_pkcs11.so`` with the path to the "
"libnethsm_pkcs11.so module. You need to match the ``<TokenLabel>`` with "
"the label you set in the ``p11nethsm.conf`` configuration file. The "
"``<PIN>`` is the operator PIN, you can either set it in plain text in the"
" ``conf.xml`` file or use ``ods-hsmutil login``. OpenDNSSEC need to have "
"a pin provided or it will refuse to start."
msgstr ""
"将 ``/root/libnethsm_pkcs11.so`` 替换为 libnethsm_pkcs11.so 模块的路径。您需要将 "
"``<TokenLabel>`` 与您在配置文件 ``p11nethsm.conf`` 中设置的标签相匹配。<PIN>`` 是操作员 PIN "
"码，可以在 `conf.xml`` 文件中以纯文本方式设置，或使用 `ods-hsmutil login``。OpenDNSSEC 需要提供一个 "
"PIN，否则将拒绝启动。"

#: ../components/nethsm/opendnssec.rst:39
msgid ""
"You also need to update the ``<Repository>`` fields in "
"``/etc/opendnssec/kasp.xml`` to ``NetHSM`` instead of the default "
"``SoftHSM`` :"
msgstr ""
"您还需要将 ``/etc/opendnssec/kasp.xml`` 中的 ``<Repository>`` 字段更新为 ``NetHSM`` "
"而不是默认的 ``SoftHSM`` ："

#: ../components/nethsm/openssl.rst:2
msgid "OpenSSL"
msgstr "OpenSSL"

#: ../components/nethsm/openssl.rst:6
msgid ""
"Trying to retrieve the private key will crash OpenSSL. This is normal "
"because private keys cannot be extracted from a NetHSM. You may want to "
"retrieve the public key instead (see example below)."
msgstr "尝试检索私钥将导致 OpenSSL 崩溃。这是正常现象，因为私钥无法从 NetHSM 中提取。您可能需要检索公钥（见下面的示例）。"

#: ../components/nethsm/openssl.rst:9
msgid "Engine"
msgstr "发动机"

#: ../components/nethsm/openssl.rst:12
msgid ""
"When using an engine (libp11) version of 0.4.12 or older, having an EdDSA"
" key on the NetHSM will cause OpenSSL to not find any key. On version "
"0.4.12 and older, the engine lists all the keys on the NetHSM when a key "
"is requested. When searching a key by label or id, it is recommended to "
"use version 0.4.13 or newer, or build `libp11 "
"<https://github.com/OpenSC/libp11>`__ from source. The engine binary will"
" be in ``src/.libs/pkcs11.so``."
msgstr ""
"在使用 0.4.12 或更旧版本的引擎（libp11）时，NetHSM 上的 EdDSA 密钥会导致 OpenSSL 找不到任何密钥。在 "
"0.4.12 及更高版本中，当请求一个密钥时，引擎会列出 NetHSM 上的所有密钥。通过标签或 ID 搜索密钥时，建议使用 0.4.13 "
"或更新版本，或从源代码构建 `libp11 <https://github.com/OpenSC/libp11>`__。引擎二进制文件将位于 "
"``src/.libs/pkcs11.so`` 中。"

#: ../components/nethsm/openssl.rst:15
msgid ""
"The OpenSSL engine interface is the old way to implement custom backends "
"for OpenSSL and it is deprecated in OpenSSL 3. This is still the most "
"stable way to use the NetHSM with OpenSSL."
msgstr "OpenSSL 引擎接口是为 OpenSSL 实现自定义后端的旧方法，在 OpenSSL 3 中已被弃用。"

#: ../components/nethsm/openssl.rst:17 ../components/nethsm/openssl.rst:98
msgid ""
"You will need to setup the PKCS#11 module, following `these instructions "
"<pkcs11-setup.html>`__."
msgstr "您需要按照 \"这些说明 <pkcs11-setup.html>\"____设置 PKCS#11 模块。"

#: ../components/nethsm/openssl.rst:19
msgid "Install the engine:"
msgstr "安装发动机："

#: ../components/nethsm/openssl.rst:22
msgid "Debian/Ubuntu"
msgstr "Debian/Ubuntu"

#: ../components/nethsm/openssl.rst:28
msgid "Fedora"
msgstr "Fedora"

#: ../components/nethsm/openssl.rst:34
msgid "Arch Linux"
msgstr "Arch Linux"

#: ../components/nethsm/openssl.rst:40
msgid ""
"Next you need to configure OpenSSL to use the engine. This is done by "
"adding the following lines to your ``openssl.cnf`` file:"
msgstr "接下来需要配置 OpenSSL 以使用该引擎。只需在 ``openssl.cnf`` 文件中添加以下几行即可："

#: ../components/nethsm/openssl.rst:59 ../components/nethsm/openssl.rst:124
msgid ""
"You can specify to OpenSSL the path of the OpenSSL configuration file "
"using the ``OPENSSL_CONF`` environment variable."
msgstr "您可以使用 ``OPENSSL_CONF`` 环境变量向 OpenSSL 指定 OpenSSL 配置文件的路径。"

#: ../components/nethsm/openssl.rst:62
msgid ""
"If the main OpenSSL configuration file is modified to contain only these "
"lines, it could break other programs using OpenSSL. Thus, you may want to"
" create a separate configuration file for the engine."
msgstr "如果修改 OpenSSL 主配置文件，使其仅包含这些行，则可能会破坏使用 OpenSSL 的其他程序。因此，你可能需要为引擎创建一个单独的配置文件。"

#: ../components/nethsm/openssl.rst:64
msgid ""
"Replace ``/usr/lib/x86_64-linux-gnu/pkcs11/libnethsm_pkcs11.so`` with the"
" path to the PKCS#11 module you installed earlier."
msgstr ""
"将 ``/usr/lib/x86_64-linux-gnu/pkcs11/libnethsm_pkcs11.so`` 替换为之前安装的 "
"PKCS#11 模块的路径。"

#: ../components/nethsm/openssl.rst:66
msgid ""
"Replace ``/usr/lib/x86_64-linux-gnu/engines-3/libpkcs11.so`` with the "
"path to the OpenSSL engine you installed. The path varies depending on "
"your distribution. The number in ``engines-3`` corresponds to your "
"OpenSSL version. On Debian the path for the OpenSSL 3 engine is "
"``/usr/lib/x86_64-linux-gnu/engines-3/libpkcs11.so``; for Fedora it's "
"``/usr/lib64/engines-3/libpkcs11.so``."
msgstr ""
"将 ``/usr/lib/x86_64-linux-gnu/engines-3/libpkcs11.so`` 替换为您安装的 OpenSSL "
"引擎的路径。路径因发行版而异。engines-3 \"中的数字与 OpenSSL 版本相对应。在 Debian 上，OpenSSL 3 "
"引擎的路径是 ``/usr/lib/x86_64-linux-gnu/engines-3/libpkcs11.so``；在 Fedora "
"上，路径是 ``/usr/lib64/engines-3/libpkcs11.so``。"

#: ../components/nethsm/openssl.rst:68
msgid ""
"Now you can use keys on the NetHSM by using `PKCS#11 URIs <https://www"
".rfc-editor.org/rfc/rfc7512>`__, example:"
msgstr ""
"现在，您可以通过使用 `PKCS#11 URIs <https://www.rfc-editor.org/rfc/rfc7512>`___，在 "
"NetHSM 上使用密钥："

#: ../components/nethsm/openssl.rst:74
msgid "This will use the key ``webserver``."
msgstr "这将使用 ``webserver`` 密钥。"

#: ../components/nethsm/openssl.rst:77
msgid ""
"You can use the ``p11tool`` command from `GnuTLS <https://gnutls.org/>` "
"get the full URI of the keys:"
msgstr "你可以使用 `GnuTLS <https://gnutls.org/>` 中的 `p11tool`` 命令获取密钥的完整 URI："

#: ../components/nethsm/openssl.rst:84
msgid "Example Command"
msgstr "命令示例"

#: ../components/nethsm/openssl.rst:86
msgid "Retrieve the public key of an asymmetric key pair on the NetHSM :"
msgstr "读取 NetHSM 上非对称密钥对的公开密钥："

#: ../components/nethsm/openssl.rst:94
msgid "Provider"
msgstr "提供商"

#: ../components/nethsm/openssl.rst:96
msgid ""
"The OpenSSL provider interface is the new way to implement custom "
"backends for OpenSSL. The `pkcs11-provider backend "
"<https://github.com/latchset/pkcs11-provider>`__ is still in an early "
"stage of development."
msgstr ""
"OpenSSL 提供者接口是为 OpenSSL 实现自定义后端的新方法。pkcs11-provider 后端 "
"<https://github.com/latchset/pkcs11-provider>`__ 仍处于早期开发阶段。"

#: ../components/nethsm/openssl.rst:100
msgid ""
"Install the provider. For Fedora a package named ``pkcs11-provider`` "
"exists. For other Linux distributions you will need to `build it from "
"source "
"<https://github.com/latchset/pkcs11-provider/blob/main/BUILD.md>`__."
msgstr ""
"安装提供程序。Fedora 存在一个名为 ``pkcs11-provider`` 的软件包。对于其他 Linux 发行版，您需要 \"从源代码 "
"<https://github.com/latchset/pkcs11-provider/blob/main/BUILD.md>`__ 生成\"。"

#: ../components/nethsm/openssl.rst:102
msgid ""
"Then you need to configure OpenSSL to use the provider. This is done by "
"adding the following lines to your ``openssl.cnf`` file:"
msgstr "然后，您需要配置 OpenSSL 以使用该提供程序。只需在 ``openssl.cnf`` 文件中添加以下几行即可："

#: ../components/nethsm/openssl.rst:119
msgid ""
"Set ``module`` to the path of the provider you installed and ``pkcs11"
"-module-path`` to the path of the PKCS#11 module you installed."
msgstr "将 ``module`` 设为已安装的提供程序的路径，将 ``pkcs11-module-path`` 设为已安装的 PKCS#11 模块的路径。"

#: ../components/nethsm/openssl.rst:121
msgid ""
"If you want to set NetHSM as the default provider, you can add ``default "
"= pkcs11`` to the ``provider_sect`` section."
msgstr "如果要将 NetHSM 设置为默认提供程序，可在 \"provider_sect \"部分添加 \"default = pkcs11\"。"

#: ../components/nethsm/openssl.rst:128
msgid ""
"If the main OpenSSL configuration file is modified to contain only these "
"lines, it could break other programs using OpenSSL. Thus, you may want to"
" create a separate configuration file for the provider."
msgstr ""
"如果修改 OpenSSL 主配置文件，使其仅包含这些行，则可能会破坏使用 OpenSSL "
"的其他程序。因此，你可能需要为提供程序创建一个单独的配置文件。"

#: ../components/nethsm/openssl.rst:130
msgid ""
"Then you can use keys on the NetHSM by using `PKCS#11 URIs <https://www"
".rfc-editor.org/rfc/rfc7512>`__, example:"
msgstr ""
"然后，您就可以通过使用 `PKCS#11 URIs <https://www.rfc-editor.org/rfc/rfc7512>`___，在 "
"NetHSM 上使用密钥："

#: ../components/nethsm/openssl.rst:136
msgid ""
"If you set NetHSM as the default provider, you can omit the ``-provider "
"pkcs11`` argument."
msgstr "如果将 NetHSM 设置为默认提供程序，则可以省略 ``-provider pkcs11`` 参数。"

#: ../components/nethsm/openssl.rst:139
msgid ""
"Currently when manually setting a key type in the URI the provider will "
"not be able to find the key. You can omit the ``;type=private`` or "
"``;type=public`` part of the URI to make it work."
msgstr ""
"目前，在 URI 中手动设置密钥类型时，提供程序将无法找到密钥。您可以省略 URI 中的 ``;type=private`` 或 "
"``;type=public`` 部分，使其正常工作。"

#: ../components/nethsm/operation.rst:2
#: ../components/nitrokey3/windows/piv/access_control.rst:7
msgid "Operation"
msgstr "运行"

#: ../components/nethsm/operation.rst:4
msgid ""
"This chapter describes operational tasks for users with the "
"*Administrator* and *Operator* role. Please refer to chapter `Roles "
"<administration.html#roles>`__ to learn more about the role."
msgstr ""
"本章介绍具有 *Administrator* 和 *Operator* 角色的用户的操作任务。请参阅 \"角色 \"一章 "
"<administration.html#roles>`__ 以了解有关角色的更多信息。"

#: ../components/nethsm/operation.rst:11
#: ../components/nitrokey3/windows/piv/key_management.rst:2
#: ../components/nitrokey3/windows/piv/key_management.rst:23
msgid "Key Management"
msgstr "关键管理"

#: ../components/nethsm/operation.rst:14
#: ../components/nitrokey3/windows/piv/key_management.rst:52
msgid "Generate Key"
msgstr "生成密钥"

#: ../components/nethsm/operation.rst:16
msgid ""
"The NetHSM can generate key pairs. It is recommended to specify the key "
"ID option to give it an expressive name."
msgstr "NetHSM 可以生成密钥对。建议指定密钥 ID 选项，以便为其命名。"

#: ../components/nethsm/operation.rst:18 ../components/nethsm/operation.rst:104
msgid ""
"The supported key types and their corresponding mechanisms are the "
"following."
msgstr "支持的密钥类型及其相应机制如下。"

#: ../components/nethsm/operation.rst:21 ../components/nethsm/operation.rst:107
msgid "Key Type"
msgstr "钥匙类型"

#: ../components/nethsm/operation.rst:21 ../components/nethsm/operation.rst:107
msgid "Mechanisms"
msgstr "机制"

#: ../components/nethsm/operation.rst:23 ../components/nethsm/operation.rst:109
msgid "``RSA``"
msgstr "`RSA``"

#: ../components/nethsm/operation.rst:23 ../components/nethsm/operation.rst:109
msgid ""
"``RSA_Decryption_RAW`` ``RSA_Decryption_PKCS1`` "
"``RSA_Decryption_OAEP_MD5`` ``RSA_Decryption_OAEP_SHA1`` "
"``RSA_Decryption_OAEP_SHA224`` ``RSA_Decryption_OAEP_SHA256`` "
"``RSA_Decryption_OAEP_SHA384`` ``RSA_Decryption_OAEP_SHA512`` "
"``RSA_Signature_PKCS1`` ``RSA_Signature_PSS_MD5`` "
"``RSA_Signature_PSS_SHA1`` ``RSA_Signature_PSS_SHA224`` "
"``RSA_Signature_PSS_SHA256`` ``RSA_Signature_PSS_SHA384`` "
"``RSA_Signature_PSS_SHA512``"
msgstr ""
"`RSA_Decryption_RAW`` `RSA_Decryption_PKCS1`` `RSA_Decryption_OAEP_MD5`` "
"`RSA_Decryption_OAEP_SHA1`` `RSA_Decryption_OAEP_SHA224`` "
"`RSA_Decryption_OAEP_SHA256`` "
"`RSA_Decryption_OAEP_SHA384```RSA_Decryption_OAEP_SHA512`` "
"`RSA_Signature_PKCS1`` `RSA_Signature_PSS_MD5`` `RSA_Signature_PSS_SHA1``"
" `RSA_Signature_PSS_SHA224`` `RSA_Signature_PSS_SHA256`` "
"`RSA_Signature_PSS_SHA384`` `RSA_Signature_PSS_SHA512``"

#: ../components/nethsm/operation.rst:39 ../components/nethsm/operation.rst:125
msgid "``Curve25519``"
msgstr "``Curve25519``"

#: ../components/nethsm/operation.rst:39 ../components/nethsm/operation.rst:125
msgid "``EdDSA_Signature``"
msgstr "``EdDSA_Signature``"

#: ../components/nethsm/operation.rst:41 ../components/nethsm/operation.rst:127
msgid "``EC_P224``"
msgstr "``EC_P224``"

#: ../components/nethsm/operation.rst:41 ../components/nethsm/operation.rst:43
#: ../components/nethsm/operation.rst:45 ../components/nethsm/operation.rst:47
#: ../components/nethsm/operation.rst:127
#: ../components/nethsm/operation.rst:129
#: ../components/nethsm/operation.rst:131
#: ../components/nethsm/operation.rst:133
msgid "``ECDSA_Signature``"
msgstr "``ECDSA_Signature``"

#: ../components/nethsm/operation.rst:43 ../components/nethsm/operation.rst:129
msgid "``EC_P256``"
msgstr "``EC_P256``"

#: ../components/nethsm/operation.rst:45 ../components/nethsm/operation.rst:131
msgid "``EC_P384``"
msgstr "``EC_P384``"

#: ../components/nethsm/operation.rst:47 ../components/nethsm/operation.rst:133
msgid "``EC_P521``"
msgstr "``EC_P521``"

#: ../components/nethsm/operation.rst:49 ../components/nethsm/operation.rst:135
msgid "``Generic``"
msgstr "通用"

#: ../components/nethsm/operation.rst:49 ../components/nethsm/operation.rst:135
msgid "``AES_Encryption_CBC`` ``AES_Decryption_CBC``"
msgstr "``AES_Encryption_CBC`` ``AES_Decryption_CBC``"

#: ../components/nethsm/operation.rst:53
msgid ""
"Keys are assigned to the `Namespace <administration.html#namespaces>`__ "
"of the user that generates the key."
msgstr "密钥分配给生成密钥的用户的 \"名称空间 <administration.html#namespaces>`__\" 。"

#: ../components/nethsm/operation.rst:55
msgid "The key can be generated as follows."
msgstr "密钥的生成方法如下"

#: ../components/nethsm/operation.rst:61 ../components/nethsm/operation.rst:147
#: ../components/nethsm/operation.rst:193
#: ../components/nethsm/operation.rst:258
#: ../components/nethsm/operation.rst:443
#: ../components/nethsm/operation.rst:473
#: ../components/nethsm/operation.rst:514
msgid "This operation requires an authentication with the *Administrator* role."
msgstr "此操作要求使用 *Administrator* 角色进行身份验证。"

#: ../components/nethsm/operation.rst:68 ../components/nethsm/operation.rst:200
msgid "``-t``, ``--type`` ``KEYTYPE``"
msgstr "``-t``, ``--type`` ``KEYTYPE``"

#: ../components/nethsm/operation.rst:68 ../components/nethsm/operation.rst:200
msgid ""
"The type for the generated key. Possible values for the ``KEYTYPE`` "
"argument can be found in the table above."
msgstr "生成密钥的类型。KEYTYPE \"参数的可能值见上表。"

#: ../components/nethsm/operation.rst:72 ../components/nethsm/operation.rst:162
#: ../components/nethsm/operation.rst:204
msgid "``-m``, ``--mechanism`` ``MECHANISM``"
msgstr "``-m``, ``--mechanism`` ``MECHANISM`` 机械装置"

#: ../components/nethsm/operation.rst:72 ../components/nethsm/operation.rst:162
#: ../components/nethsm/operation.rst:204
msgid ""
"The mechanisms for the generated key. Possible values for the "
"``MECHANISM`` argument can be found in the table above."
msgstr "生成密钥的机制。参数 ``MECHANISM`` 的可能值见上表。"

#: ../components/nethsm/operation.rst:84 ../components/nethsm/operation.rst:166
#: ../components/nethsm/operation.rst:224
#: ../components/nethsm/operation.rst:521
#: ../components/nethsm/operation.rst:566
#: ../components/nethsm/operation.rst:612
#: ../components/nethsm/operation.rst:675
#: ../components/nethsm/operation.rst:739
#: ../components/nethsm/operation.rst:801
msgid "``-k``, ``--key-id`` ``TEXT``"
msgstr "``-k``, ``--key-id`` ``TEXT``"

#: ../components/nethsm/operation.rst:84
msgid "The ID of the generated key"
msgstr "生成密钥的 ID"

#: ../components/nethsm/operation.rst:97
msgid ""
"Information about the `/keys/generate` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_keys_generate>`__."
msgstr ""
"有关 `/keys/generate` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_keys_generate>`__。"

#: ../components/nethsm/operation.rst:100
msgid "Import Key"
msgstr "导入密钥"

#: ../components/nethsm/operation.rst:102
msgid "The NetHSM can import existing private keys to the *Key Store*."
msgstr "NetHSM 可以将现有私钥导入 *Key Store*。"

#: ../components/nethsm/operation.rst:139
msgid ""
"Keys are assigned to the `Namespace <administration.html#namespaces>`__ "
"of the user that imports the key."
msgstr "密钥会分配给导入密钥的用户的 \"名称空间 <administration.html#namespaces>`__\" 。"

#: ../components/nethsm/operation.rst:141
msgid "Import a private key from a PEM file into NetHSM as follows."
msgstr "将私钥从 PEM 文件导入 NetHSM 的步骤如下。"

#: ../components/nethsm/operation.rst:154
msgid "Private key file in PEM format"
msgstr "PEM 格式的私钥文件"

#: ../components/nethsm/operation.rst:166
#: ../components/nethsm/operation.rst:224
msgid "The ID of the new key"
msgstr "新密钥的 ID"

#: ../components/nethsm/operation.rst:168
#: ../components/nethsm/operation.rst:226
msgid "``--tags`` ``TEXT``"
msgstr "``--tags`` ``TEXT``"

#: ../components/nethsm/operation.rst:168
#: ../components/nethsm/operation.rst:226
msgid "The Tag for the new key"
msgstr "新密钥的标签"

#: ../components/nethsm/operation.rst:185
#: ../components/nethsm/operation.rst:246
msgid ""
"Information about the `/keys` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_keys>`__."
msgstr ""
"有关 `/keys` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_keys>`__。"

#: ../components/nethsm/operation.rst:187
msgid "Private keys in raw format can be imported as follows."
msgstr "原始格式的私钥可按如下方式导入。"

#: ../components/nethsm/operation.rst:208
msgid "``-p``, ``--prime-p`` ``TEXT``"
msgstr "``-p``, ``--prime-p`` ``TEXT``"

#: ../components/nethsm/operation.rst:208
msgid "The prime p for RSA keys, base64-encoded"
msgstr "RSA 密钥的质数 p，base64 编码"

#: ../components/nethsm/operation.rst:210
msgid "``-q``, ``--prime-q`` ``TEXT``"
msgstr "``-q``, ``--prime-q`` ``TEXT``"

#: ../components/nethsm/operation.rst:210
msgid "The prime q for RSA keys, base64-encoded"
msgstr "基 64 编码的 RSA 密钥质数 q"

#: ../components/nethsm/operation.rst:212
msgid "``-e``, ``--public-exponent`` ``TEXT``"
msgstr "``-e``, ``--public-exponent`` ``TEXT``"

#: ../components/nethsm/operation.rst:212
msgid "The public exponent for RSA keys, base64 encoded"
msgstr "RSA 密钥的公共指数，base64 编码"

#: ../components/nethsm/operation.rst:215
#: ../components/nethsm/operation.rst:677
#: ../components/nethsm/operation.rst:741
#: ../components/nethsm/operation.rst:803
msgid "``-d``, ``--data`` ``TEXT``"
msgstr "``-d``, ``--data`` ``TEXT``"

#: ../components/nethsm/operation.rst:215
msgid "The key data for ED25519 or ECDSA_* keys, base64-encoded"
msgstr "ED25519 或 ECDSA_* 密钥的基 64 编码密钥数据"

#: ../components/nethsm/operation.rst:249
msgid "Delete Key"
msgstr "删除键"

#: ../components/nethsm/operation.rst:251
msgid ""
"The NetHSM can delete keys from the *Key Store*. Users can only delete "
"keys in their `Namespace <administration.html#namespaces>`__."
msgstr ""
"NetHSM 可以删除 *Key Store* 中的密钥。用户只能删除其 \"名称空间 "
"<administration.html#namespaces>`__\" 中的密钥。"

#: ../components/nethsm/operation.rst:265
#: ../components/nethsm/operation.rst:450
#: ../components/nethsm/operation.rst:480
msgid "``KEY_ID``"
msgstr "`KEY_ID``"

#: ../components/nethsm/operation.rst:265
msgid "The key ID of the key to delete"
msgstr "要删除的键的键 ID"

#: ../components/nethsm/operation.rst:278
msgid ""
"Information about the `/keys/{KeyID}` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/delete_keys__KeyID_>`__."
msgstr ""
"有关 `/keys/{KeyID}` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/delete_keys__KeyID_>`__。"

#: ../components/nethsm/operation.rst:281
#: ../components/nethsm/pkcs11-tool.rst:102
msgid "List Keys"
msgstr "列表密钥"

#: ../components/nethsm/operation.rst:283
msgid ""
"The NetHSM can list all keys in the *Key Store* that are in the "
"`Namespace <administration.html#namespaces>`__ of the current user."
msgstr ""
"NetHSM 可以列出 *Key Store* 中位于当前用户的 \"名称空间 "
"<administration.html#namespaces>`__\" 中的所有键。"

#: ../components/nethsm/operation.rst:291
#: ../components/nethsm/operation.rst:329
#: ../components/nethsm/operation.rst:354
#: ../components/nethsm/operation.rst:382
#: ../components/nethsm/operation.rst:559
#: ../components/nethsm/operation.rst:605
msgid ""
"This operation requires an authentication with the *Administrator* or "
"*Operator* role."
msgstr "此操作要求使用 *Administrator* 或 *Operator* 角色进行身份验证。"

#: ../components/nethsm/operation.rst:298
msgid "``-f``, ``--filter`` ``TEXT``"
msgstr "``-f``, ``--filter`` ``TEXT``"

#: ../components/nethsm/operation.rst:298
msgid "The Tag to search for"
msgstr "要搜索的标签"

#: ../components/nethsm/operation.rst:315
msgid ""
"Information about the `/keys` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/get_keys>`__."
msgstr ""
"有关 `/keys` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/get_keys>`__。"

#: ../components/nethsm/operation.rst:318
msgid "Show Key Details"
msgstr "显示按键详细信息"

#: ../components/nethsm/operation.rst:320
msgid ""
"The NetHSM can output more detailed information about a stored key. Users"
" can only access keys in their `Namespace "
"<administration.html#namespaces>`__."
msgstr ""
"NetHSM 可以输出有关已存储密钥的更详细信息。用户只能访问其 \"名称空间 "
"<administration.html#namespaces>`__\" 中的密钥。"

#: ../components/nethsm/operation.rst:323
msgid "The detailed information can be retrieved as follows."
msgstr "详细信息的检索方式如下。"

#: ../components/nethsm/operation.rst:346
msgid ""
"Information about the `/keys/{KeyID}` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/get_keys__KeyID_>`__."
msgstr ""
"有关 `/keys/{KeyID}` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/get_keys__KeyID_>`__。"

#: ../components/nethsm/operation.rst:348
msgid ""
"The public key of a key can be retrieved as follows. It's in PKCS#8 "
"format."
msgstr "密钥的公钥可按如下方式获取。它采用 PKCS#8 格式。"

#: ../components/nethsm/operation.rst:374
#: ../components/nethsm/operation.rst:424
msgid ""
"Information about the `/keys/{KeyID}/public.pem` endpoint can be found in"
" the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/get_keys__KeyID__public_pem>`__."
msgstr ""
"有关 `/keys/{KeyID}/public.pem` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/get_keys__KeyID__public_pem>`__。"

#: ../components/nethsm/operation.rst:376
msgid "The public key can be inspected for example with OpenSSL as follows."
msgstr "例如，可以使用 OpenSSL 对公钥进行如下检查。"

#: ../components/nethsm/operation.rst:427
msgid "Tags for Keys"
msgstr "钥匙的标签"

#: ../components/nethsm/operation.rst:429
msgid ""
"*Tags* can be used to set fine-grained access restrictions on keys, and "
"are an optional feature. One or more *Tags* can be assigned to a key. The"
" *Operator* users can see all keys, but only use those with at least one "
"corresponding *Tag*. If a key has no *Tag* it can be used by all "
"*Operator* users. A *Tag* can not be modified by an *Operator* user."
msgstr ""
"*标记*可用于对按键设置精细的访问限制，是一项可选功能。一个按键可分配一个或多个 "
"*Tag*。操作员*用户可以查看所有按键，但只能使用至少有一个相应*标签*的按键。如果一个按键没有*标签*，则所有*操作员*用户都可以使用。操作员*用户不能修改*标签*。"

#: ../components/nethsm/operation.rst:431
msgid ""
"To learn about how to use *Tags* on *Operator* accounts, please refer to "
"chapter `Tags for Users <administration.html#tags-for-users>`__."
msgstr ""
"要了解如何在*操作员*账户上使用*标签*，请参阅 \"用户标签 \"一章 <administration.html#tags-for-"
"users>`__ 。"

#: ../components/nethsm/operation.rst:434
msgid ""
"*Tags* are managed without restrictions by users with the *Administrator*"
" role."
msgstr "拥有*管理员*角色的用户可以不受限制地管理*标签*。"

#: ../components/nethsm/operation.rst:437
msgid "The *Tag* can be added as follows."
msgstr "标签*的添加方法如下。"

#: ../components/nethsm/operation.rst:450
msgid "The key ID to set the tag on"
msgstr "要设置标签的密钥 ID"

#: ../components/nethsm/operation.rst:452
msgid "The tag to set on the key"
msgstr "在键上设置的标记"

#: ../components/nethsm/operation.rst:465
msgid ""
"Information about the `/keys/{KeyID}/restrictions/tags/{Tag}` endpoint "
"can be found in the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/put_keys__KeyID__restrictions_tags__Tag_>`__."
msgstr ""
"有关 `/keys/{KeyID}/restrictions/tags/{Tag}` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/put_keys__KeyID__restrictions_tags__Tag_>`__。"

#: ../components/nethsm/operation.rst:480
msgid "The key ID to set the tag on."
msgstr "用于设置标签的密钥 ID。"

#: ../components/nethsm/operation.rst:482
msgid "The tag to set on the key."
msgstr "要设置在钥匙上的标签。"

#: ../components/nethsm/operation.rst:495
msgid ""
"Information about the `/keys/{KeyID}/restrictions/tags/{Tag}` endpoint "
"can be found in the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/delete_keys__KeyID__restrictions_tags__Tag_>`__."
msgstr ""
"有关 `/keys/{KeyID}/restrictions/tags/{Tag}` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/delete_keys__KeyID__restrictions_tags__Tag_>`__。"

#: ../components/nethsm/operation.rst:498
msgid "Key Certificates"
msgstr "关键证书"

#: ../components/nethsm/operation.rst:500
msgid ""
"It is possible to set and query certificates for the keys stored on a "
"NetHSM."
msgstr "可以为存储在 NetHSM 上的密钥设置和查询证书。"

#: ../components/nethsm/operation.rst:502
msgid "The supported MIME types are as follows."
msgstr "支持的 MIME 类型如下。"

#: ../components/nethsm/operation.rst:504
msgid "``application/x-pem-file``"
msgstr "应用程序/x-pem 文件"

#: ../components/nethsm/operation.rst:505
msgid "``application/x-x509-ca-cert``"
msgstr "应用程序/x-x509-ca-证书"

#: ../components/nethsm/operation.rst:506
msgid "``application/pgp-keys``"
msgstr "应用程序/pgp-密钥"

#: ../components/nethsm/operation.rst:508
msgid "The certificate can be set as follows."
msgstr "证书设置如下"

#: ../components/nethsm/operation.rst:521
msgid "The ID of the key to set the certificate for"
msgstr "要为其设置证书的密钥 ID"

#: ../components/nethsm/operation.rst:529
msgid "``-m``, ``--mime-type`` ``MIME_TYPE``"
msgstr "``-m``, ``--mIME-type`` ``MIME_TYPE``"

#: ../components/nethsm/operation.rst:529
msgid ""
"The MIME type of the certificate. The available MIME types are listed "
"above."
msgstr "证书的 MIME 类型。可用的 MIME 类型如上。"

#: ../components/nethsm/operation.rst:551
msgid ""
"Information about the `/keys/{KeyID}/cert` endpoint can be found in the "
"`API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/put_keys__KeyID__cert>`__."
msgstr ""
"有关 `/keys/{KeyID}/cert` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/put_keys__KeyID__cert>`__。"

#: ../components/nethsm/operation.rst:553
#: ../components/nitrokey3/windows/piv/certificate_management.rst:13
msgid "The certificate can be retrieved as follows."
msgstr "证书的检索方式如下。"

#: ../components/nethsm/operation.rst:566
msgid "The ID of the key to get the certificate for"
msgstr "获取证书的密钥 ID"

#: ../components/nethsm/operation.rst:594
msgid ""
"Information about the `/keys/{KeyID}/cert` endpoint can be found in the "
"`API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/get_keys__KeyID__cert>`__."
msgstr ""
"有关 `/keys/{KeyID}/cert` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/get_keys__KeyID__cert>`__。"

#: ../components/nethsm/operation.rst:597
msgid "Key Certificate Signing Requests"
msgstr "密钥证书签名请求"

#: ../components/nethsm/operation.rst:599
msgid ""
"The NetHSM supports generating CSR (Certificate Signing Requests) for the"
" stored keys."
msgstr "NetHSM 支持为存储的密钥生成 CSR（证书签名请求）。"

#: ../components/nethsm/operation.rst:612
msgid "The ID of the key to generate the CSR for"
msgstr "为其生成 CSR 的密钥 ID"

#: ../components/nethsm/operation.rst:646
msgid ""
"Information about the `/keys/{KeyID}/csr.pem` endpoint can be found in "
"the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_keys__KeyID__csr_pem>`__."
msgstr ""
"有关 `/keys/{KeyID}/csr.pem` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_keys__KeyID__csr_pem>`__。"

#: ../components/nethsm/operation.rst:649
msgid "Key Operations"
msgstr "主要业务"

#: ../components/nethsm/operation.rst:651
msgid ""
"All operations described in this chapter can only be executed for keys "
"that are in the `Namespace <administration.html#namespaces>`__ of the "
"current user."
msgstr "本章所述的所有操作只能对当前用户的 \"名称空间 <administration.html#namespaces>`__\" 中的键执行。"

#: ../components/nethsm/operation.rst:654
#: ../components/nethsm/pkcs11-tool.rst:157
msgid "Encrypt"
msgstr "加密"

#: ../components/nethsm/operation.rst:656
msgid ""
"The NetHSM can encrypt data for symmetric keys, stored in the *Key "
"Store*. In contrast encrypting data with asymmetric keys can not be done "
"on the NetHSM, because of the concept in public-key cryptography to make "
"the public key available to everybody. For asymmetric keys the NetHSM "
"provides the public key, which can be used for encryption with an "
"external tool. Please refer to the `Show Key Details <operation.html"
"#show-key-details>`__ to learn more about how to retrieve the public key "
"of a key in the *Key Store*."
msgstr ""
"NetHSM 可以为存储在 *Key Store* 中的对称密钥加密数据。相反，使用非对称密钥加密数据则不能在 NetHSM "
"上进行，因为公钥加密的概念是让所有人都能使用公钥。对于非对称密钥，NetHSM 提供公钥，可用于使用外部工具进行加密。Please refer "
"to the `Show Key Details <operation.html#show-key-details>`__ to learn "
"more about how to retrieve the public key of a key in the *Key Store*."

#: ../components/nethsm/operation.rst:662
msgid "Data can be encrypted for a symmetric key as follows."
msgstr "对称密钥的数据加密方法如下。"

#: ../components/nethsm/operation.rst:668
#: ../components/nethsm/operation.rst:732
#: ../components/nethsm/operation.rst:794
#: ../components/nethsm/operation.rst:835
msgid "This operation requires an authentication with the *Operator* role."
msgstr "该操作要求使用 * 操作员* 角色进行身份验证。"

#: ../components/nethsm/operation.rst:675
msgid "The ID of the key to encrypt the data with"
msgstr "用于加密数据的密钥 ID"

#: ../components/nethsm/operation.rst:677
msgid "The data in Base64 encoding"
msgstr "Base64 编码的数据"

#: ../components/nethsm/operation.rst:679
msgid "``-m``, ``--mode`` ``[AES_CBC]``"
msgstr "``-m``, ``--mode`` ``[AES_CBC]``"

#: ../components/nethsm/operation.rst:679
msgid "The encrypt mode"
msgstr "加密模式"

#: ../components/nethsm/operation.rst:681
msgid "``-iv``, ``--initialization-vector`` ``TEXT``"
msgstr "``-iv``, ``--initialization-vector`` ``TEXT``"

#: ../components/nethsm/operation.rst:681
msgid "The initialization vector in Base64 encoding"
msgstr "Base64 编码的初始化向量"

#: ../components/nethsm/operation.rst:696
msgid ""
"Information about the `/keys/{KeyID}/encrypt` endpoint can be found in "
"the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_keys__KeyID__encrypt>`__."
msgstr ""
"有关 `/keys/{KeyID}/encrypt` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_keys__KeyID__encrypt>`__。"

#: ../components/nethsm/operation.rst:698
msgid ""
"This prints the encrypted and base64 encoded message ``NetHSM "
"rulezzzzzzzzzzzzzzzzzzz!``, and the initialization vector."
msgstr "这将打印经过加密和 base64 编码的信息 ``NetHSM rulezzzzzzzzzzzzzzzzzzzzzzzzz!`` 和初始化向量。"

#: ../components/nethsm/operation.rst:700
msgid "Data can be encrypted for asymmetric keys with OpenSSL as follows."
msgstr "使用 OpenSSL 对非对称密钥进行数据加密的方法如下。"

#: ../components/nethsm/operation.rst:706
msgid ""
"This writes the encrypted and base64 encoded message ``NetHSM rulez!`` "
"into the file ``data.crypt``, using the public key from ``public.pem``."
msgstr ""
"这将使用来自 `public.pem`` 的公钥，把经过加密和 base64 编码的信息 ``NetHSM rulez!`` 写入文件 "
"``data.crypt``。"

#: ../components/nethsm/operation.rst:709
#: ../components/nethsm/pkcs11-tool.rst:169
msgid "Decrypt"
msgstr "解密"

#: ../components/nethsm/operation.rst:711
msgid ""
"The NetHSM can decrypt data for an private key stored in the *Key Store* "
"on the NetHSM. This example uses the encrypted message from the previous "
"chapter `Encrypt <operation.html#encrypt>`__."
msgstr ""
"NetHSM 可以为存储在 NetHSM 的 *Key Store* 中的私人密钥解密数据。本例使用上一章 \"加密 "
"<operation.html#encrypt>`__\" 中的加密信息。"

#: ../components/nethsm/operation.rst:714
msgid "The supported decrypt modes are as follows."
msgstr "支持的解密模式如下。"

#: ../components/nethsm/operation.rst:716
msgid "``RAW``"
msgstr "``RAW``"

#: ../components/nethsm/operation.rst:717
#: ../components/nethsm/operation.rst:778
msgid "``PKCS1``"
msgstr "PKCS1"

#: ../components/nethsm/operation.rst:718
msgid "``OAEP_MD5``"
msgstr "``OAEP_MD5``"

#: ../components/nethsm/operation.rst:719
msgid "``OAEP_SHA1``"
msgstr "``OAEP_SHA1``"

#: ../components/nethsm/operation.rst:720
msgid "``OAEP_SHA224``"
msgstr "``oaep_sha224``"

#: ../components/nethsm/operation.rst:721
msgid "``OAEP_SHA256``"
msgstr "`oaep_sha256``"

#: ../components/nethsm/operation.rst:722
msgid "``OAEP_SHA384``"
msgstr "`oaep_sha384``"

#: ../components/nethsm/operation.rst:723
msgid "``OAEP_SHA512``"
msgstr "``oaep_sha512``"

#: ../components/nethsm/operation.rst:724
msgid "``AES_CBC``"
msgstr "AES_CBC"

#: ../components/nethsm/operation.rst:726
msgid "The data can be decrypted as follows."
msgstr "数据的解密过程如下。"

#: ../components/nethsm/operation.rst:739
msgid "The ID of the key to decrypt the data width"
msgstr "用于解密数据宽度的密钥 ID"

#: ../components/nethsm/operation.rst:741
msgid "The encrypted data in Base64 encoding"
msgstr "Base64 编码的加密数据"

#: ../components/nethsm/operation.rst:743
#: ../components/nethsm/operation.rst:805
msgid "``-m``, ``--mode`` ``MODE``"
msgstr "``-m``, ``--mode`` ``MODE``"

#: ../components/nethsm/operation.rst:743
msgid "The decrypt mode. Available modes are listed above."
msgstr "解密模式。可用模式如上。"

#: ../components/nethsm/operation.rst:756
msgid ""
"Information about the `/keys/{KeyID}/decrypt` endpoint can be found in "
"the `API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_keys__KeyID__decrypt>`__."
msgstr ""
"有关 `/keys/{KeyID}/decrypt` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_keys__KeyID__decrypt>`__。"

#: ../components/nethsm/operation.rst:759
#: ../components/nethsm/pkcs11-tool.rst:196
msgid "Sign"
msgstr "标志"

#: ../components/nethsm/operation.rst:761
msgid ""
"The NetHSM can sign data for a private key stored in the *Key Store* on "
"the NetHSM. For signatures with a RSA and ECDSA key, a digest must be "
"calculate first."
msgstr "NetHSM 可以为存储在 NetHSM 的*密钥存储*中的私人密钥签署数据。使用 RSA 和 ECDSA 密钥签名时，必须先计算摘要。"

#: ../components/nethsm/operation.rst:764
msgid ""
"To calculate a digest the data is required first. A message is created as"
" follows."
msgstr "要计算摘要，首先需要数据。信息的创建过程如下"

#: ../components/nethsm/operation.rst:770
msgid "The digest is calculated with OpenSSL as follows."
msgstr "使用 OpenSSL 计算摘要的过程如下。"

#: ../components/nethsm/operation.rst:776
msgid "The supported signing modes are as follows."
msgstr "支持的签名模式如下。"

#: ../components/nethsm/operation.rst:779
msgid "``PSS_MD5``"
msgstr "``PSS_MD5``"

#: ../components/nethsm/operation.rst:780
msgid "``PSS_SHA1``"
msgstr "``PSS_SHA1``"

#: ../components/nethsm/operation.rst:781
msgid "``PSS_SHA224``"
msgstr "``PSS_SHA224``"

#: ../components/nethsm/operation.rst:782
msgid "``PSS_SHA256``"
msgstr "``PSS_SHA256``"

#: ../components/nethsm/operation.rst:783
msgid "``PSS_SHA384``"
msgstr "``PSS_SHA384``"

#: ../components/nethsm/operation.rst:784
msgid "``PSS_SHA512``"
msgstr "``PSS_SHA512``"

#: ../components/nethsm/operation.rst:785
msgid "``EdDSA``"
msgstr "``EdDSA``"

#: ../components/nethsm/operation.rst:786
msgid "``ECDSA``"
msgstr "`ECDSA``"

#: ../components/nethsm/operation.rst:788
msgid "From the digest a signature can be created as follows."
msgstr "根据摘要可以创建如下签名。"

#: ../components/nethsm/operation.rst:801
msgid "The ID of the key to sign the data width"
msgstr "签署数据宽度的密钥 ID"

#: ../components/nethsm/operation.rst:803
msgid "The data to sign encoded using Base64"
msgstr "使用 Base64 编码的要签名的数据"

#: ../components/nethsm/operation.rst:805
msgid "The sign mode"
msgstr "标志模式"

#: ../components/nethsm/operation.rst:814
msgid ""
"Information about the `/keys/{KeyID}/sign` endpoint can be found in the "
"`API documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_keys__KeyID__sign>`__."
msgstr ""
"有关 `/keys/{KeyID}/sign` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_keys__KeyID__sign>`__。"

#: ../components/nethsm/operation.rst:816
msgid "The created signature can be verified with OpenSSL as follows."
msgstr "创建的签名可通过 OpenSSL 进行验证，如下所示。"

#: ../components/nethsm/operation.rst:827
msgid "Random"
msgstr "随机"

#: ../components/nethsm/operation.rst:829
msgid "The NetHSM can provide random bytes as a Base64 string."
msgstr "NetHSM 可以提供 Base64 字符串形式的随机字节。"

#: ../components/nethsm/operation.rst:842
msgid "``LENGTH``"
msgstr "长度"

#: ../components/nethsm/operation.rst:842
msgid "Bytes to retrieve"
msgstr "要检索的字节数"

#: ../components/nethsm/operation.rst:855
msgid ""
"Information about the `/random` endpoint can be found in the `API "
"documentation "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_random>`__."
msgstr ""
"有关 `/random` 端点的信息，请参阅 `API 文档 "
"<https://nethsmdemo.nitrokey.com/api_docs/index.html#/default/post_random>`__。"

#: ../components/nethsm/pkcs11-setup.rst:2
msgid "PKCS#11 Setup"
msgstr "PKCS#11 设置"

#: ../components/nethsm/pkcs11-setup.rst:6
#: ../components/nitrokey3/shared/nitropy.rst:9
#: ../components/pro/openpgp-thunderbird.rst.inc:26
#: ../components/software/nitropy/all-platforms/installation.rst:66
#: ../components/software/nk-app2/index.rst:6
msgid "Installation"
msgstr "安装"

#: ../components/nethsm/pkcs11-setup.rst:8
msgid ""
"You can either get the NetHSM PKCS#11 module as a precompiled binary or "
"compile it from source."
msgstr "您可以获取 NetHSM PKCS#11 模块的预编译二进制文件，也可以从源代码中编译它。"

#: ../components/nethsm/pkcs11-setup.rst:11
msgid "Precompiled Binaries"
msgstr "预编译二进制文件"

#: ../components/nethsm/pkcs11-setup.rst:13
msgid ""
"Download the module file corresponding to your system from the `releases "
"page <https://github.com/Nitrokey/nethsm-pkcs11/releases>`__ of the "
"repository."
msgstr ""
"从版本库的 \"releases \"页面 <https://github.com/Nitrokey/nethsm-"
"pkcs11/releases>`__ 下载与你的系统相对应的模块文件。"

#: ../components/nethsm/pkcs11-setup.rst:14
msgid ""
"Copy the module file to the directory where your PKCS#11 applications "
"expect to find it."
msgstr "将模块文件复制到 PKCS#11 应用程序希望找到它的目录。"

#: ../components/nethsm/pkcs11-setup.rst:17
msgid "Compile From Source"
msgstr "从源代码编译"

#: ../components/nethsm/pkcs11-setup.rst:19
msgid "Install the `Rust toolchain <https://www.rust-lang.org/tools/install>`__."
msgstr "安装 `Rust 工具链 <https://www.rust-lang.org/tools/install>`__。"

#: ../components/nethsm/pkcs11-setup.rst:20
msgid ""
"Download and extract the source from the `releases page "
"<https://github.com/Nitrokey/nethsm-pkcs11/releases>`__ or clone the "
"`repository <https://github.com/Nitrokey/nethsm-pkcs11>`__."
msgstr ""
"从 `releases 页面 <https://github.com/Nitrokey/nethsm-pkcs11/releases>`__ "
"或克隆 `repository <https://github.com/Nitrokey/nethsm-pkcs11>`__，下载并提取源代码。"

#: ../components/nethsm/pkcs11-setup.rst:21
msgid "Run ``cargo build --release`` in the source directory."
msgstr "在源代码目录下运行 ``cargo build --release`."

#: ../components/nethsm/pkcs11-setup.rst:27
msgid "By default the module searches for configuration files in:"
msgstr "默认情况下，模块会在以下位置搜索配置文件："

#: ../components/nethsm/pkcs11-setup.rst:29
msgid "``/etc/nitrokey/p11nethsm.conf``"
msgstr "``/etc/nitrokey/p11nethsm.conf``"

#: ../components/nethsm/pkcs11-setup.rst:30
msgid "``/usr/local/etc/nitrokey/p11nethsm.conf``"
msgstr "``/usr/local/etc/nitrokey/p11nethsm.conf``"

#: ../components/nethsm/pkcs11-setup.rst:31
msgid "``$HOME/.config/nitrokey/p11nethsm.conf``"
msgstr "`$HOME/.config/nitrokey/p11nethsm.conf``"

#: ../components/nethsm/pkcs11-setup.rst:33
msgid ""
"If multiple files are present the configurations will be merged so that "
"the slots of all the config files will be used by the module."
msgstr "如果存在多个文件，配置将被合并，以便模块使用所有配置文件的插槽。"

#: ../components/nethsm/pkcs11-setup.rst:35
msgid ""
"You can manually set the config file location (only this one will be "
"read) with the env variable ``P11NETHSM_CONFIG_FILE`` (e.g. "
"``P11NETHSM_CONFIG_FILE=./p11nethsm.conf``)."
msgstr ""
"您可以使用环境变量 ``P11NETHSM_CONFIG_FILE`` 手动设置配置文件的位置（只读取该文件）（例如 "
"``P11NETHSM_CONFIG_FILE=./p11nethsm.conf``）。"

#: ../components/nethsm/pkcs11-setup.rst:38
msgid "Configuration File Format"
msgstr "配置文件格式"

#: ../components/nethsm/pkcs11-setup.rst:40
msgid "The configuration is yaml-formatted:"
msgstr "配置采用 yaml 格式："

#: ../components/nethsm/pkcs11-setup.rst:43
msgid "All platforms"
msgstr "所有平台"

#: ../components/nethsm/pkcs11-setup.rst:131
msgid "Instances"
msgstr "实例"

#: ../components/nethsm/pkcs11-setup.rst:133
msgid ""
"If multiple NetHSM instances are listed in the same slot, these instances"
" must be configured in a cluster. The credentials of the users and the "
"keys must be the same on all instances."
msgstr "如果同一插槽中列出多个 NetHSM 实例，则必须将这些实例配置为一个群集。所有实例上的用户证书和密钥必须相同。"

#: ../components/nethsm/pkcs11-setup.rst:135
msgid ""
"The module will use the instances in a round-robin fashion, trying "
"another instance if one fails."
msgstr "模块将以循环方式使用实例，如果一个实例失败，就会尝试另一个实例。"

#: ../components/nethsm/pkcs11-setup.rst:139
msgid "Network reliability"
msgstr "网络可靠性"

#: ../components/nethsm/pkcs11-setup.rst:141
msgid ""
"To improve the reliability of the PKCS#11 module, it is possible to "
"configure timeouts, retries, instance redundancy and TCP keepalives."
msgstr "为提高 PKCS#11 模块的可靠性，可以配置超时、重试、实例冗余和 TCP 保持。"

#: ../components/nethsm/pkcs11-setup.rst:144
msgid "Retries"
msgstr "重试"

#: ../components/nethsm/pkcs11-setup.rst:146
msgid ""
"If a NetHSM instance is unreachable, the PKCS#11 module is capable of "
"retrying sending the request to other instances, or to the same instance "
"(if other instances are also unreachable). It is possible to introduce a "
"delay between retries."
msgstr "如果 NetHSM 实例无法访问，PKCS#11 模块可以重试向其他实例或同一实例（如果其他实例也无法访问）发送请求。可以在重试之间引入延迟。"

#: ../components/nethsm/pkcs11-setup.rst:149
msgid ""
"Failing instances are marked as unreachable and retried in a background "
"thread, so they won't be tried unless all instances are unreachable"
msgstr "失败的实例会被标记为不可达，并在后台线程中重试，因此除非所有实例都不可达，否则不会对它们进行尝试"

#: ../components/nethsm/pkcs11-setup.rst:150
msgid ""
"If no background thread can be spawned "
"(`CKF_LIBRARY_CANT_CREATE_OS_THREADS`), failed instances will be tried "
"during normal operations, slowing down the requests. To minimise this, "
"such \"inline\" health checks are limited to 1 second timeouts, and only "
"3 health checks can be attempted per request (this is a worst case "
"situation that can only be reached if a large number of instances "
"failed)."
msgstr ""
"如果无法生成后台线程（`CKF_LIBRARY_CANT_CREATE_OS_THREADS`），则会在正常运行期间尝试失败的实例，从而降低请求速度。为尽量减少这种情况，此类"
" \"内联 \"健康检查的超时时间限制为 1 秒，且每次请求只能尝试 3 次健康检查（这是最糟糕的情况，只有在大量实例失败时才能达到）。"

#: ../components/nethsm/pkcs11-setup.rst:152
msgid "Therefore:"
msgstr "因此"

#: ../components/nethsm/pkcs11-setup.rst:154
msgid ""
"The maximum number of requests sent for one API call is: "
"``retries.count`` + 1 + 3"
msgstr "一次 API 调用发送的最大请求数为``retries.count`` + 1 + 3"

#: ../components/nethsm/pkcs11-setup.rst:155
msgid ""
"The maximum (worst case) duration before reaching the timeout for one API"
" call is: (``retries.count`` + 1) * ``timeout_seconds`` + 3"
msgstr "一次 API 调用超时前的最长（最差）持续时间为：（``retries.count`` + 1）* ``timeout_seconds` + 3"

#: ../components/nethsm/pkcs11-setup.rst:156
msgid ""
"The maximum timeout for one PKCS#11 function call will vary because some "
"functions will lead to multiple API calls in the NetHSM."
msgstr "一次 PKCS#11 函数调用的最长超时时间会有所不同，因为有些函数会导致 NetHSM 调用多个 API。"

#: ../components/nethsm/pkcs11-setup.rst:159
msgid "TCP keepalive"
msgstr "TCP 保持"

#: ../components/nethsm/pkcs11-setup.rst:161
msgid ""
"To improve performance, connections are kept open with the NetHSM "
"instances to avoid the need for re-opening them. It is possible that in a"
" network with a firewall, these idle connection could be closed, leading "
"to the next connection attempt to timeout. To prevent slow timeouts from "
"happening, and to detect earlier if it does, it is possible to configure "
"TCP keepalives for these."
msgstr ""
"为提高性能，NetHSM "
"实例会保持连接畅通，以避免重新打开连接。在有防火墙的网络中，这些空闲连接有可能被关闭，导致下一次连接尝试超时。为了防止慢速超时的发生，并在发生超时时提前检测，可以为这些连接配置"
" TCP keepalives。"

#: ../components/nethsm/pkcs11-setup.rst:166
msgid "Users"
msgstr "用户"

#: ../components/nethsm/pkcs11-setup.rst:168
msgid ""
"The operator and administrator users are both optional but the module "
"won't start if no user is configured. This is so you can configure the "
"module with only an administrator user, only an operator user or both at "
"the same time."
msgstr "操作员和管理员用户都是可选的，但如果没有配置用户，模块将无法启动。因此，您可以只配置管理员用户、操作员用户或同时配置这两个用户。"

#: ../components/nethsm/pkcs11-setup.rst:170
msgid ""
"When the two users are set the module will use the operator by default "
"and only use the administrator user when the action needs it."
msgstr "设置两个用户后，模块将默认使用操作员用户，只有在操作需要时才使用管理员用户。"

#: ../components/nethsm/pkcs11-setup.rst:172
msgid ""
"The regular PKCS#11 user is mapped to the NetHSM operator and the PKCS#11"
" SO is mapped to the NetHSM administrator."
msgstr "常规 PKCS#11 用户映射为 NetHSM 操作员，PKCS#11 SO 映射为 NetHSM 管理员。"

#: ../components/nethsm/pkcs11-setup.rst:175
#: ../components/nitrokey3/shared/reset.rst.inc:17
#: ../components/software/nk-app2/passwords.rst:2
msgid "Passwords"
msgstr "密码"

#: ../components/nethsm/pkcs11-setup.rst:177
msgid "The password can be provided by multiple means:"
msgstr "密码可以通过多种方式提供："

#: ../components/nethsm/pkcs11-setup.rst:179
msgid "In plain text in the configuration ``password: \"mypassword\"``"
msgstr "配置中的纯文本``密码: \"mypassword\"``"

#: ../components/nethsm/pkcs11-setup.rst:180
msgid ""
"In an environment variable read by the module with the ``env:`` prefix: "
"``env:ENV_STORING_THE_PASSWORD``"
msgstr "在模块读取的环境变量中，以 ``env:`` 为前缀： ``env:ENV_STORING_THE_PASSWORD``"

#: ../components/nethsm/pkcs11-setup.rst:181
msgid ""
"Via the login function of pkcs11, example for pcks11-tool: ``pkcs11-tool "
"--module libnethsm_pkcs11.so -p opPassphrase`` To provide the the admin "
"password you need to use ``--so-pin`` instead: ``pkcs11-tool --module "
"libnethsm_pkcs11.so --login --login-type so --so-pin Administrator``"
msgstr ""
"通过 pkcs11 的登录功能，以 pcks11-tool 为例：``pkcs11-tool --module "
"libnethsm_pkcs11.so -p opPassphrase`` 要提供管理员密码，需要使用 ``--so-pin`` "
"代替：`pkcs11-tool --module libnethsm_pkcs11.so --login --login-type so "
"--so-pin Administrator``"

#: ../components/nethsm/pkcs11-setup.rst:184
msgid ""
"If the password of an user is not set in the configuration file a login "
"will be required to provide the password (3rd method)."
msgstr "如果配置文件中未设置用户密码，则需要登录以提供密码（第 3 种方法）。"

#: ../components/nethsm/pkcs11-setup.rst:186
msgid ""
"A NetHSM that is not operational is considered as a slot with the token "
"not present."
msgstr "未运行的 NetHSM 被视为不存在令牌的插槽。"

#: ../components/nethsm/pkcs11-tool.rst:2
msgid "pkcs11-tool"
msgstr "pkcs11 工具"

#: ../components/nethsm/pkcs11-tool.rst:4
msgid ""
"`pkcs11-tool <https://github.com/OpenSC/OpenSC/wiki/Using-pkcs11-tool-"
"and-OpenSSL>`__ is a tool part of the `OpenSC "
"<https://github.com/OpenSC/OpenSC>`__ project that can be used to manage "
"keys on a PKCS#11 device."
msgstr ""
"`pkcs11-tool <https://github.com/OpenSC/OpenSC/wiki/Using-pkcs11-tool-"
"and-OpenSSL>`__ 是 `OpenSC <https://github.com/OpenSC/OpenSC>`__ "
"项目的一个工具，可用于管理 PKCS#11 设备上的密钥。"

#: ../components/nethsm/pkcs11-tool.rst:6
msgid ""
"You need to pass the location of the PKCS#11 module to use with the "
"``--module`` option:"
msgstr "您需要通过 ``--module`` 选项传递要使用的 PKCS#11 模块的位置："

#: ../components/nethsm/pkcs11-tool.rst:12
msgid ""
"Replace ``/usr/lib/nitrokey/libnethsm_pkcs11.so`` with the path where the"
" NetHSM PKCS#11 module is located."
msgstr "将 ``/usr/lib/nitrokey/libnethsm_pkcs11.so`` 替换为 NetHSM PKCS#11 模块所在的路径。"

#: ../components/nethsm/pkcs11-tool.rst:14
msgid "You can test if the module is working with the next command:"
msgstr "您可以使用下一条命令测试模块是否正常工作："

#: ../components/nethsm/pkcs11-tool.rst:20
msgid "You should see something like this:"
msgstr "你应该看到这样的内容："

#: ../components/nethsm/pkcs11-tool.rst:30
msgid "List Slots"
msgstr "列表插槽"

#: ../components/nethsm/pkcs11-tool.rst:32
msgid ""
"The information about the available slots. The listed slots depend on the"
" configuration of the slots array in the `p11nethsm.conf` configuration "
"file. To learn more about the configuration of slots, please refer to "
"chapter `Configuration <pkcs11-setup.html#Configuration>`_."
msgstr ""
"有关可用插槽的信息。列出的插槽取决于配置文件 `p11nethsm.conf` 中插槽数组的配置。要了解有关插槽配置的更多信息，请参阅 \"配置 "
"<pkcs11-setup.html#Configuration>`_\"一章。"

#: ../components/nethsm/pkcs11-tool.rst:53
msgid ""
"If your configuration supports more than one slot, you may have to add "
"the ``--slot <arg>`` option in pkcs11-tool commands to use the right one."
msgstr "如果您的配置支持多个插槽，可能需要在 pkcs11-tool 命令中添加 ``--slot <arg>`` 选项，以使用正确的插槽。"

#: ../components/nethsm/pkcs11-tool.rst:56
msgid "Key IDs"
msgstr "关键 ID"

#: ../components/nethsm/pkcs11-tool.rst:58
msgid ""
"pkcs11-tool uses an hexadecimal key ID to identify keys. NetHSM uses "
"alphanumerical strings as key ID. NetHSM's PKCS#11 module uses the raw "
"byte values of the string to form the PKCS#11 ID. You can get the "
"hexadecimal version of a NetHSM key with ``xxd``:"
msgstr ""
"pkcs11-tool 使用十六进制密钥 ID 来识别密钥。NetHSM 使用字母数字字符串作为密钥 ID。NetHSM 的 PKCS#11 "
"模块使用字符串的原始字节值来形成 PKCS#11 ID。你可以用 ``xxd`` 获取 NetHSM 密钥的十六进制版本："

#: ../components/nethsm/pkcs11-tool.rst:69
msgid "You can then pass this hex value to pkcs11-tool with the ``--id`` option."
msgstr "然后，您可以使用 ``--id`` 选项将此十六进制值传递给 pkcs11-tool。"

#: ../components/nethsm/pkcs11-tool.rst:72
msgid "Generate a Key"
msgstr "生成密钥"

#: ../components/nethsm/pkcs11-tool.rst:74
msgid "Generate a key-pair and store it on the NetHSM."
msgstr "生成密钥对并存储在 NetHSM 上。"

#: ../components/nethsm/pkcs11-tool.rst:77
msgid ""
"The slot you want to use needs to have an andministrator user in the "
"configuration file. Otherwise you will get a `CKR_USER_NOT_LOGGED_IN` "
"error."
msgstr "您要使用的插槽必须在配置文件中有一个 andministrator 用户。否则会出现 `CKR_USER_NOT_LOGGED_IN` 错误。"

#: ../components/nethsm/pkcs11-tool.rst:80
#: ../components/nethsm/pkcs11-tool.rst:179
msgid "RSA"
msgstr "RSA"

#: ../components/nethsm/pkcs11-tool.rst:87
msgid "ECDSA"
msgstr "ECDSA"

#: ../components/nethsm/pkcs11-tool.rst:95
msgid "AES/Generic"
msgstr "AES/通用"

#: ../components/nethsm/pkcs11-tool.rst:104
msgid "List the keys stored on the NetHSM."
msgstr "列出存储在 NetHSM 中的密钥。"

#: ../components/nethsm/pkcs11-tool.rst:125
msgid "Read Keys"
msgstr "阅读键"

#: ../components/nethsm/pkcs11-tool.rst:127
msgid ""
"Read the public key of a key-pair stored on the NetHSM. It is not "
"possible to read private keys from the NetHSM."
msgstr "读取存储在 NetHSM 上的密钥对的公钥。无法从 NetHSM 中读取私钥。"

#: ../components/nethsm/pkcs11-tool.rst:134
msgid ""
"The certificate of the key-pair can be read with the same command by "
"changing the ``--type`` option to ``cert``."
msgstr "将 ``--type`` 选项改为 ``cert`` 后，可使用同一命令读取密钥对的证书。"

#: ../components/nethsm/pkcs11-tool.rst:138
msgid "The output is in DER format."
msgstr "输出为 DER 格式。"

#: ../components/nethsm/pkcs11-tool.rst:141
msgid "Write Keys"
msgstr "书写键"

#: ../components/nethsm/pkcs11-tool.rst:143
msgid ""
"Write a private key on the NetHSM. The public key is automatically "
"derived from the private key."
msgstr "在 NetHSM 上写入私钥。公钥由私钥自动生成。"

#: ../components/nethsm/pkcs11-tool.rst:149
msgid ""
"The certificate of the key-pair can be written with the same command by "
"changing the ``--type`` option to ``cert``."
msgstr "将 ``--type`` 选项改为 ``cert`` 后，可使用同一命令写入密钥对的证书。"

#: ../components/nethsm/pkcs11-tool.rst:159
msgid "Encryption of data is only supported for AES keys."
msgstr "数据加密仅支持 AES 密钥。"

#: ../components/nethsm/pkcs11-tool.rst:166
msgid "You have to manually pad the input data to the block size of the AES key."
msgstr "您必须根据 AES 密钥的块大小手动填充输入数据。"

#: ../components/nethsm/pkcs11-tool.rst:172
msgid "AES"
msgstr "AES"

#: ../components/nethsm/pkcs11-tool.rst:181
msgid ""
"You can encrypt data with the public key and decrypt it with the private "
"key."
msgstr "您可以用公钥加密数据，用私钥解密数据。"

#: ../components/nethsm/pkcs11-tool.rst:202
msgid "To verify the signature with OpenSSL:"
msgstr "使用 OpenSSL 验证签名："

#: ../components/nethsm/ssh.rst:2
msgid "SSH"
msgstr "SSH"

#: ../components/nethsm/ssh.rst:4
msgid ""
"You can use NetHSM for SSH authentication. You need to pass the PKCS#11 "
"module path in the command line or the SSH configuration."
msgstr "您可以使用 NetHSM 进行 SSH 验证。您需要在命令行或 SSH 配置中传递 PKCS#11 模块路径。"

#: ../components/nethsm/ssh.rst:7
msgid "Command line"
msgstr "命令行"

#: ../components/nethsm/ssh.rst:12
msgid "SSH config"
msgstr "SSH 配置"

#: ../components/nethsm/ssh.rst:19
msgid ""
"You can also set up SSH to use the NetHSM by default. To do so, add the "
"following lines to your ``~/.ssh/config`` file:"
msgstr "您也可以设置 SSH 默认使用 NetHSM。为此，请在``~/.ssh/config``文件中添加以下几行："

#: ../components/nethsm/ssh.rst:27
msgid "SSH will search for a key on the NetHSM that is accepted by the server."
msgstr "SSH 将在 NetHSM 上搜索服务器接受的密钥。"

#: ../components/nethsm/ssh.rst:29
msgid ""
"To list the keys of a NetHSM in a SSH ``authorized_keys`` format, use the"
" following command:"
msgstr "要以 SSH ``authorized_keys`` 格式列出 NetHSM 的密钥，请使用以下命令："

#: ../components/nethsm/system_recovery.rst:2
msgid "System Recovery"
msgstr "系统恢复"

#: ../components/nethsm/system_recovery.rst:4
msgid ""
"The following describes the recovery process for the NetHSM system "
"software. These instructions are only applicable if the API is "
"inoperable, e.g. not responding to API requests. In the case of an "
"operable API perform a `factory reset <administration.html#reset-to-"
"factory-defaults>`__ instead. Follow the instructions precicsely to "
"prevent any accidential deletion of data."
msgstr ""
"下面介绍 NetHSM 系统软件的恢复过程。这些说明仅适用于 API 无法运行的情况，如不响应 API 请求。如果 API 可操作，请执行 "
"\"出厂重置\"<administration.html#reset-to-factory-"
"defaults>___。请严格按照说明操作，以防意外删除数据。"

#: ../components/nethsm/system_recovery.rst:10
msgid ""
"The system recovery only works if the GUID partition table (GPT) and the "
"partitions itself on the disk are not corrupted. A corruption could be "
"indicated by the following message during boot."
msgstr "只有当磁盘上的 GUID 分区表 (GPT) 和分区本身未损坏时，系统恢复才会起作用。启动过程中出现的以下信息可能表明分区已损坏。"

#: ../components/nethsm/system_recovery.rst:22
msgid ""
"If they are corrupted this instructions will result in a factory "
"installation of the NetHSM system software."
msgstr "如果它们已损坏，本说明将导致 NetHSM 系统软件的出厂安装。"

#: ../components/nethsm/system_recovery.rst:24
msgid "The system recovery can be performed as follows."
msgstr "系统恢复的步骤如下。"

#: ../components/nethsm/system_recovery.rst:26
msgid ""
"Download the installer image from the `releases page "
"<https://github.com/nitrokey/nethsm/releases>`__."
msgstr "从 `releases 页面 <https://github.com/nitrokey/nethsm/releases>`__ 下载安装镜像文件。"

#: ../components/nethsm/system_recovery.rst:29
msgid ""
"Download the installer image of the same version which was installed at "
"the time of corruption. A downgrade, or upgrade skipping versions, is not"
" supported."
msgstr "下载损坏时安装的同一版本的安装程序镜像。不支持降级或跳版本升级。"

#: ../components/nethsm/system_recovery.rst:32
msgid ""
"Make sure the system is turned off, but connected to power, and the power"
" button on the back turned on."
msgstr "确保系统已关闭，但已连接电源，并已打开背面的电源按钮。"

#: ../components/nethsm/system_recovery.rst:33
msgid "Connect the BMC network port with a network cable."
msgstr "用网线连接 BMC 网络端口。"

#: ../components/nethsm/system_recovery.rst:35
msgid "See the image below to identify the BMC network port."
msgstr "请参见下图识别 BMC 网络端口。"

#: ../components/nethsm/system_recovery.rst:43
msgid ""
"Per default the BMC will wait for an address assignment with DHCP. If "
"DHCP is not available the link-local address can be determined with Nmap."
" The command ``nmap <network-in-cidr-notation> -p 80 --open`` will return"
" a list of hosts with open port 80."
msgstr ""
"默认情况下，BMC 将通过 DHCP 等待地址分配。如果 DHCP 不可用，则可使用 Nmap 确定链路本地地址。命令 `nmap "
"<network-in-cidr-notation> -p 80 --open`` 将返回 80 端口开放的主机列表。"

#: ../components/nethsm/system_recovery.rst:46
msgid ""
"Open the BMC website in a web browser, using the determined IP address "
"from the previous step. To login, the default credentials are username "
"``bmc_admin``, and password ``8mCU$3r0nE``."
msgstr ""
"使用上一步确定的 IP 地址，在网络浏览器中打开 BMC 网站。要登录，默认凭据为用户名 ``bmc_admin``和密码 "
"``8mCU$3r0nE``。"

#: ../components/nethsm/system_recovery.rst:50
msgid ""
"In case you encounter an unauthorized login error on the BMC web "
"interface it can be three of the following issues."
msgstr "如果您在 BMC 网络界面上遇到未经授权的登录错误，可能是以下三种问题。"

#: ../components/nethsm/system_recovery.rst:52
msgid "Username or password wrong."
msgstr "用户名或密码错误。"

#: ../components/nethsm/system_recovery.rst:53
msgid ""
"During factory reset the BMC generates a new TLS certificate. Some web "
"browsers fail with connection errors when the certificate changes while "
"the same window stays open. Close the web browser window and open a new "
"one."
msgstr "出厂重置时，BMC 会生成新的 TLS 证书。当证书发生变化而同一窗口仍然打开时，某些网络浏览器会出现连接错误。关闭网络浏览器窗口并打开一个新窗口。"

#: ../components/nethsm/system_recovery.rst:56
msgid ""
"The BMC software sometimes shows the issue that it doesn't accept an "
"older session cookie which are still in the cache of the web browser. "
"Clear the web browsers cache and try again."
msgstr "BMC 软件有时会出现不接受旧会话 cookie 的问题，这些 cookie 仍在网络浏览器的缓存中。清除浏览器缓存后再试一次。"

#: ../components/nethsm/system_recovery.rst:59
msgid ""
"Mount the downloaded installer image by clicking in the menu on the left "
"on *FRU: Hermes CFL (with TPM) Nitrokey Config* followed by *Virtual "
"media* in the submenu. In the middle open the tab *usb0*, and click the "
"button *Attach media*."
msgstr ""
"在左侧菜单中点击 *FRU: Hermes CFL (with TPM) Nitrokey Config*，然后在子菜单中点击 *Virtual "
"media*，安装下载的安装程序映像。在中间打开选项卡 *usb0*，然后单击按钮 *Attach media*。"

#: ../components/nethsm/system_recovery.rst
#: ../components/nethsm/system_recovery.rst:65
msgid "BMC menu to attach USB device"
msgstr "连接 USB 设备的 BMC 菜单"

#: ../components/nethsm/system_recovery.rst:67
msgid ""
"In the opening dialog choose *Stream local file via browser* as the "
"*Transfer method*. Click the button *Browse...* and choose the downloaded"
" installer image. Confirm the operation with the *Submit* button."
msgstr ""
"在打开的对话框中选择 *通过浏览器流本地文件* 作为 *传输方式*。单击*浏览...*按钮，选择下载的安装程序映像。使用 *Submit* "
"按钮确认操作。"

#: ../components/nethsm/system_recovery.rst
#: ../components/nethsm/system_recovery.rst:74
msgid "BMC menu to select USB image"
msgstr "BMC 菜单选择 USB 映像"

#: ../components/nethsm/system_recovery.rst:76
msgid ""
"In the menu on the left select *FRU: Hermes CFL (with TPM) Nitrokey "
"Config*, and then *Remote KVM*."
msgstr "在左侧菜单中选择 *FRU: Hermes CFL (with TPM) Nitrokey Config*，然后选择 *Remote KVM*。"

#: ../components/nethsm/system_recovery.rst:77
msgid ""
"In the middle click the *Open a floating Remote KVM window* button, in "
"the top right corner of the VGA output box."
msgstr "在中间点击 VGA 输出框右上角的*打开浮动远程 KVM 窗口*按钮。"

#: ../components/nethsm/system_recovery.rst
#: ../components/nethsm/system_recovery.rst:82
msgid "BMC KVM console view"
msgstr "BMC KVM 控制台视图"

#: ../components/nethsm/system_recovery.rst:84
msgid ""
"This window will show you the graphical output of the NetHSM installer. "
"Keep this second window open together with the main window from the BMC."
msgstr "该窗口将显示 NetHSM 安装程序的图形输出。请将第二个窗口与 BMC 的主窗口一起打开。"

#: ../components/nethsm/system_recovery.rst:86
msgid "Change to the view *Overview* from the top of the menu on the left."
msgstr "从左侧菜单顶部切换到 *Overview* 视图。"

#: ../components/nethsm/system_recovery.rst:87
msgid ""
"In the box *Override Boot Device*, select *USB_BMC-virtual_media* from "
"the drop-down next to *Select a Boot Device*."
msgstr "在*覆盖启动设备*框中，从*选择启动设备*旁边的下拉菜单中选择*USB_BMC-virtual_media*。"

#: ../components/nethsm/system_recovery.rst
#: ../components/nethsm/system_recovery.rst:92
msgid "BMC boot device setting"
msgstr "BMC 启动设备设置"

#: ../components/nethsm/system_recovery.rst:94
msgid ""
"In the box with the title *FRU: Hermes CFL (with TPM) Nitrokey Config*, "
"select *On* from the drop-down menu next to *Power*. Confirm with the "
"*Apply* button."
msgstr ""
"在标题为 *FRU: Hermes CFL (with TPM) Nitrokey Config* 的框中，从 *Power* "
"旁边的下拉菜单中选择 *On*。用 *Apply* 按钮确认。"

#: ../components/nethsm/system_recovery.rst
#: ../components/nethsm/system_recovery.rst:100
msgid "BMC power up setting"
msgstr "BMC 开机设置"

#: ../components/nethsm/system_recovery.rst:102
msgid ""
"In the previously opened *Remote KVM* window you can now see the "
"installation wizard."
msgstr "在之前打开的 *Remote KVM* 窗口中，现在可以看到安装向导。"

#: ../components/nethsm/system_recovery.rst:103
msgid ""
"The KVM window now shows the boot dialog. Confirm the selection of "
"``NetHSM automatic boot (USB or primary system)`` with the *Enter* key."
msgstr "KVM 窗口现在显示启动对话框。按*Enter*键确认选择 \"NetHSM 自动启动（USB 或主系统）\"。"

#: ../components/nethsm/system_recovery.rst
#: ../components/nethsm/system_recovery.rst:109
msgid "NetHSM boot selection in the BMC KVM console"
msgstr "BMC KVM 控制台中的 NetHSM 启动选择"

#: ../components/nethsm/system_recovery.rst:111
msgid ""
"In the following dialog confirm the selection of ``NetHSM Software "
"Installer`` with the *Enter* key."
msgstr "在以下对话框中，按 *Enter* 键确认选择 \"NetHSM 软件安装程序\"。"

#: ../components/nethsm/system_recovery.rst
#: ../components/nethsm/system_recovery.rst:116
msgid "NetHSM installer selection in the BMC KVM console"
msgstr "在 BMC KVM 控制台中选择 NetHSM 安装程序"

#: ../components/nethsm/system_recovery.rst:119
msgid ""
"Do NOT select ``NetHSM Factory Reset - DELETES ALL DATA!`` from the menu."
" This will unrecoverable wipe the data on the disk."
msgstr "请勿从菜单中选择 ``NetHSM Factory Reset - DELETES ALL DATA!``。这将无法恢复磁盘上的数据。"

#: ../components/nethsm/system_recovery.rst:121
msgid "The NetHSM Installer will install the system software and shutdown."
msgstr "NetHSM 安装程序将安装系统软件并关闭。"

#: ../components/nextbox/backup-restore.rst:2
msgid "Backup and Restore"
msgstr "备份和恢复"

#: ../components/nextbox/backup-restore.rst:7
msgid ""
"The NextBox can be backupped and restored from within the NextBox "
"Nextcloud App. In order to execute a backup or restore operation you need"
" to have a storage device attached to your NextBox."
msgstr "NextBox 可通过 NextBox Nextcloud 应用程序进行备份和还原。要执行备份或还原操作，您需要将存储设备连接到 NextBox。"

#: ../components/nextbox/backup-restore.rst:10
msgid ""
"To enable backup and restore onto a storage device please follow these "
"steps:"
msgstr "要在存储设备上启用备份和还原功能，请按照以下步骤操作："

#: ../components/nextbox/backup-restore.rst:12
msgid ""
"Make sure your storage device contains at least one partition formatted "
"with a supported file-system (currently *ext* and *xfs* are supported)."
msgstr "确保存储设备中至少有一个分区是用支持的文件系统格式化的（目前支持 *ext* 和 *xfs*）。"

#: ../components/nextbox/backup-restore.rst:15
msgid ""
"Attach the storage device to your NextBox to any of the USB ports and "
"*remember to use an external power supply* `more information "
"<faq/hardware.html#why-must-i-not-connect-external-hard-drives-without-"
"an-external-power-supply-to-my-nextbox>`_"
msgstr ""
"将存储设备连接到 NextBox 的任意 USB 端口，*切记使用外接电源* `更多信息 <faq/hardware.html#why-"
"must-i-not-connect-external-hard-drives-without-an-external-power-supply-"
"to-my-nextbox>``_"

#: ../components/nextbox/backup-restore.rst:18
msgid ""
"Once attached you will see the storage(s) inside \"Storage Management\" "
"below \"Available Storages\""
msgstr "连接后，您将在 \"可用存储空间 \"下方的 \"存储管理 \"中看到存储空间。"

#: ../components/nextbox/backup-restore.rst:20
msgid ""
"Click on the plus-symbol on the right side to *mount* your storage and "
"make it available for backup and restore operations. The added storage is"
" now listed inside \"Mounted Storages\"."
msgstr "单击右侧的加号符号即可*挂载*存储，使其可用于备份和还原操作。添加的存储现在会列在 \"已挂载存储 \"中。"

#: ../components/nextbox/backup-restore.rst:27
msgid ""
"To backup your NextBox including all Nextcloud settings apps and data "
"please follow these steps:"
msgstr "要备份 NextBox（包括所有 Nextcloud 设置应用程序和数据），请按照以下步骤操作："

#: ../components/nextbox/backup-restore.rst:29
msgid "Make sure you have a storage mounted as described above"
msgstr "确保已安装上述存储设备"

#: ../components/nextbox/backup-restore.rst:31
msgid ""
"Inside \"Backup / Restore\" below \"Full System Backup\" select the "
"storage device for backup from the drop-down menu named: \"Select Backup "
"Device\""
msgstr "在 \"完整系统备份 \"下方的 \"备份/还原 \"中，从名为 \"选择备份设备 \"的下拉菜单中选择要备份的存储设备"

#: ../components/nextbox/backup-restore.rst:34
msgid ""
"Now you have the option to incrementally update an existing backup from "
"the drop-down menu named: \"Select Backup Location\" **or** create a "
"entirely new backup by entering a name into the \"Name of the new "
"backup\" entry field."
msgstr "现在，您可以选择从名为 \"选择备份位置 \"的下拉菜单中增量更新现有备份，或***在 \"新备份名称 \"输入字段中输入名称，创建一个全新的备份。"

#: ../components/nextbox/backup-restore.rst:38
msgid "Click \"Start Backup now\", the backup process will begin immediately."
msgstr "单击 \"立即开始备份\"，备份过程将立即开始。"

#: ../components/nextbox/backup-restore.rst:40
msgid ""
"The resulting backup is not encrypted so take care who has access to the "
"used storage."
msgstr "生成的备份没有加密，因此要注意谁可以访问使用过的存储。"

#: ../components/nextbox/backup-restore.rst:46
msgid ""
"The restore operation replaces the Nextcloud internals entirely and "
"depending on the version combination this might lead to undefined "
"behavior of the Nextcloud frontend. If this happens, please be patient "
"and reload the page using ``F5`` or ``ctrl-r`` and check, if the restore "
"operation was successful."
msgstr ""
"还原操作会完全替换 Nextcloud 内部结构，根据版本组合，这可能会导致 Nextcloud "
"前端出现未定义的行为。如果出现这种情况，请耐心等待，并使用 ``F5`` 或 ``ctrl-r`` 重新加载页面，检查还原操作是否成功。"

#: ../components/nextbox/backup-restore.rst:51
msgid ""
"Make sure your have a storage mounted as described above and it contains "
"a backup to be restored"
msgstr "确保如上所述安装了存储设备，且其中包含要恢复的备份"

#: ../components/nextbox/backup-restore.rst:53
msgid ""
"Inside \"Backup / Restore\" below \"Restore System from Backup\" use the "
"\"Select Backup to Restore\" drop-down menu to select a backup to be "
"restored"
msgstr "在 \"从备份还原系统 \"下面的 \"备份/还原 \"中，使用 \"选择要还原的备份 \"下拉菜单选择要还原的备份"

#: ../components/nextbox/backup-restore.rst:56
msgid "Click \"Start Restoring now\", the restore process will begin immediately."
msgstr "点击 \"立即开始还原\"，还原过程将立即开始。"

#: ../components/nextbox/backup-restore.rst:58
msgid ""
"Depending on the backupped Nextcloud version after the restore process "
"you will be asked to run the upgrade process for Nextcloud."
msgstr "还原过程结束后，会要求您运行 Nextcloud 的升级过程，具体取决于备份的 Nextcloud 版本。"

#: ../components/nextbox/backup-restore.rst:63
msgid ""
"All configurations and settings of the NextBox and the Nextcloud instance"
" will be restored, thus there might be changes on how you access your "
"NextBox, if the restored Remote Access configuration is not identical to "
"the current one."
msgstr ""
"NextBox 和 Nextcloud 实例的所有配置和设置都将恢复，因此，如果恢复的远程访问配置与当前配置不一致，您访问 NextBox "
"的方式可能会发生变化。"

#: ../components/nextbox/clients/android.rst:2
msgid "Connect Your Android or iOS Smartphone"
msgstr "连接安卓或 iOS 智能手机"

#: ../components/nextbox/clients/android.rst:6
msgid "Connect the NextBox with your smartphone"
msgstr "用智能手机连接 NextBox"

#: ../components/nextbox/clients/android.rst:8
msgid "Download the Nextcloud app from the app store or play store."
msgstr "从 app store 或 play store 下载 Nextcloud app。"

#: ../components/nextbox/clients/android.rst
#: ../components/nextbox/clients/macosx.rst
#: ../components/nextbox/clients/windows.rst
msgid "imgsp1"
msgstr "imgsp1"

#: ../components/nextbox/clients/android.rst:14
msgid "Cick on \"Sign in\"."
msgstr "点击 \"登录\"。"

#: ../components/nextbox/clients/android.rst
msgid "imgsp2"
msgstr "imgsp2"

#: ../components/nextbox/clients/android.rst:20
msgid "Enter your domain."
msgstr "输入您的域名。"

#: ../components/nextbox/clients/android.rst
msgid "imgsp3"
msgstr "imgsp3"

#: ../components/nextbox/clients/android.rst:26
msgid "Enter your username and password and click \"Log in\"."
msgstr "输入用户名和密码，然后点击 \"登录\"。"

#: ../components/nextbox/clients/android.rst
msgid "imgsp4"
msgstr "imgsp4"

#: ../components/nextbox/clients/android.rst:32
msgid "Now you have access to your NextBox with your smartphone!"
msgstr "现在，您可以用智能手机访问您的 NextBox！"

#: ../components/nextbox/clients/android.rst
msgid "imgsp5"
msgstr "imgsp5"

#: ../components/nextbox/clients/index.rst:8
msgid "Android/iOS"
msgstr "安卓/iOS"

#: ../components/nextbox/clients/index.rst:8
msgid "Mac OS X"
msgstr "Mac OS X"

#: ../components/nextbox/clients/index.rst:2
msgid "Desktop And Mobile Synchronization"
msgstr "桌面和移动同步"

#: ../components/nextbox/clients/index.rst:6
msgid "Choose your operating system or device:"
msgstr "选择操作系统或设备："

#: ../components/nextbox/clients/linux.rst:2
msgid "Connect Your Linux Computer"
msgstr "连接 Linux 计算机"

#: ../components/nextbox/clients/linux.rst:7
#: ../components/nextbox/clients/macosx.rst:7
#: ../components/nextbox/clients/windows.rst:7
msgid "Connect using the Nextcloud App"
msgstr "使用 Nextcloud 应用程序连接"

#: ../components/nextbox/clients/linux.rst:9
msgid "Download the client application from: https://nextcloud.com/install/"
msgstr "从以下网址下载客户端应用程序： https://nextcloud.com/install/"

#: ../components/nextbox/clients/linux.rst:11
msgid ""
"Most distributions do provide the Nextcloud client via their package "
"managers. (e.g., Ubuntu, Arch Linux, Mint, ...)"
msgstr "大多数发行版都会通过软件包管理器提供 Nextcloud 客户端。(例如 Ubuntu、Arch Linux、Mint......）。"

#: ../components/nextbox/clients/linux.rst:14
msgid ""
"After starting the ``nextcloud`` application, you will find it as a tray "
"icon."
msgstr "启动 \"nextcloud \"应用程序后，你会发现它出现在托盘图标上。"

#: ../components/nextbox/clients/linux.rst:17
msgid ""
"Add an account using your public server url, username and password. "
"Further you can choose the target directory the files should be synced "
"to."
msgstr "使用公共服务器网址、用户名和密码添加一个账户。此外，你还可以选择要同步文件的目标目录。"

#: ../components/nextbox/clients/linux.rst:23
#: ../components/nextbox/clients/macosx.rst:48
#: ../components/nextbox/clients/windows.rst:48
msgid "Connect using WebDAV"
msgstr "使用 WebDAV 连接"

#: ../components/nextbox/clients/linux.rst:25
msgid ""
"Mounting Nextcloud using WebDAV can be done directly via most file "
"managers, by adding a \"remote server\"."
msgstr "通过添加 \"远程服务器\"，可直接通过大多数文件管理器使用 WebDAV 安装 Nextcloud。"

#: ../components/nextbox/clients/linux.rst:28
msgid ""
"Additionally you can mount your Nextcloud files using WebDAV via "
"commandline and `/etc/fstab` by installing the `davfs2` package."
msgstr "此外，您还可以通过命令行和 `/etc/fstab`，安装 `davfs2` 软件包，使用 WebDAV 挂载 Nextcloud 文件。"

#: ../components/nextbox/clients/linux.rst:31
msgid "To mount use:"
msgstr "安装使用："

#: ../components/nextbox/clients/macosx.rst:2
#: ../components/nextbox/clients/windows.rst:2
msgid "Connect your Mac Commputer"
msgstr "连接 Mac 电脑"

#: ../components/nextbox/clients/macosx.rst:10
#: ../components/nextbox/clients/windows.rst:10
msgid "Download the Nextcloud client application: https://nextcloud.com/install/"
msgstr "下载 Nextcloud 客户端程序：https://nextcloud.com/install/"

#: ../components/nextbox/clients/macosx.rst:17
#: ../components/nextbox/clients/windows.rst:17
msgid ""
"After installation, click \"Log in to your Nextcloud\". Afterwards please"
" provide your Nextcloud's domain."
msgstr "安装完成后，点击 \"登录到您的 Nextcloud\"。然后请提供您的 Nextcloud 域名。"

#: ../components/nextbox/clients/macosx.rst:25
#: ../components/nextbox/clients/windows.rst:26
msgid "Provide your username and password and click \"Log in\"."
msgstr "提供用户名和密码，然后点击 \"登录\"。"

#: ../components/nextbox/clients/macosx.rst:32
msgid ""
"Inside the menu bar there will be a Nextcloud icon to open the Nextcloud "
"application settings."
msgstr "菜单栏中会有一个 Nextcloud 图标，用于打开 Nextcloud 应用程序设置。"

#: ../components/nextbox/clients/macosx.rst:40
msgid ""
"Inside *Finder* below \"favorites\" you will find a \"Nextcloud\" "
"directory with the user's files."
msgstr "在 \"收藏夹 \"下方的*Finder*中，你会发现一个包含用户文件的 \"Nextcloud \"目录。"

#: ../components/nextbox/clients/macosx.rst:50
msgid "Inside *Finder*, open *Go* and choose *Connect to Server*"
msgstr "在*Finder*中，打开*Go*，选择*连接到服务器*。"

#: ../components/nextbox/clients/macosx.rst:56
msgid "Provide the WebDAV URL `https://yourdomain.xyz/remote.php/webdav`"
msgstr "提供 WebDAV URL `https://yourdomain.xyz/remote.php/webdav`"

#: ../components/nextbox/clients/macosx.rst:62
msgid ""
"In the next step, provide the username and password to login to your "
"Nextcloud instance."
msgstr "下一步，提供登录 Nextcloud 实例的用户名和密码。"

#: ../components/nextbox/clients/macosx.rst:68
msgid "Once finished you can find your Nextcloud files in *Locations*."
msgstr "完成后，您可以在 *Locations* 中找到您的 Nextcloud 文件。"

#: ../components/nextbox/clients/windows.rst:33
msgid ""
"Inside the tray there will be a Nextcloud icon to open the Nextcloud "
"application settings."
msgstr "托盘中会有一个 Nextcloud 图标，用于打开 Nextcloud 应用程序设置。"

#: ../components/nextbox/clients/windows.rst:40
msgid "Inside the file-explorer you can now find your Nextcloud instance files."
msgstr "现在，您可以在文件浏览器中找到 Nextcloud 实例文件。"

#: ../components/nextbox/clients/windows.rst:52
msgid ""
"There have been reports that the native WebDAV support in Windows is not "
"performing well. We recommend using the Nextcloud App (as described "
"above) for the best user experience. Additionally please read "
"`Nextcloud's Windows WebDAV Known Problems`_."
msgstr ""
"有报告称 Windows 本机 WebDAV 支持性能不佳。我们建议使用 Nextcloud 应用程序（如上所述）以获得最佳用户体验。此外，请阅读"
" \"Nextcloud 的 Windows WebDAV 已知问题\"。"

#: ../components/nextbox/clients/windows.rst:56
msgid ""
"Add a WebDAV drive using the file explorer's \"Add a network location\" "
"icon. (You can also use \"Map network drive\" to bind your Nextcloud to a"
" drive, like *Z:*)."
msgstr ""
"使用文件资源管理器的 \"添加网络位置 \"图标添加 WebDAV 驱动器。(也可以使用 \"映射网络驱动器 \"将 Nextcloud "
"与驱动器绑定，如 *Z:*）。"

#: ../components/nextbox/clients/windows.rst:63
msgid ""
"In the following dialog please enter the full WebDAV address of your "
"NextBox: ``https://my.domain.tld/remote.php/dav/files/USERNAME``. Replace"
" *my.domain.tld* with your NextBox's public domain and *USERNAME* with "
"the username you would like to connect."
msgstr ""
"请在以下对话框中输入 NextBox 的完整 WebDAV "
"地址：https://my.domain.tld/remote.php/dav/files/USERNAME。将 *my.domain.tld* "
"替换为 NextBox 的公共域，将 *USERNAME* 替换为您要连接的用户名。"

#: ../components/nextbox/clients/windows.rst:67
msgid ""
"In the following window insert your full Nextcloud credentials, means "
"your username and password you use to login into your Nextcloud."
msgstr "在下面的窗口中输入完整的 Nextcloud 凭据，即登录 Nextcloud 时使用的用户名和密码。"

#: ../components/nextbox/clients/windows.rst:74
msgid ""
"Now your files from your Nextcloud instance are accessible via the file-"
"explorer."
msgstr "现在，您可以通过文件资源管理器访问 Nextcloud 实例中的文件。"

#: ../components/nextbox/external-storage.rst:2
msgid "Connect External Storage"
msgstr "连接外部存储器"

#: ../components/nextbox/external-storage.rst:6
#: ../components/nextbox/gettingstarted.rst:20
msgid ""
"External storage drives without an external power supply must NOT be "
"connected to the USB sockets. Otherwise, this can lead to data loss on "
"the internal hard disk. **Always use external storage drives with a "
"separate power supply together with the NextBox.**"
msgstr ""
"没有外接电源的外置存储驱动器不得连接到 USB 插座。否则会导致内部硬盘上的数据丢失。**在使用 NextBox "
"时，请始终使用带有独立电源的外置存储驱动器。"

#: ../components/nextbox/external-storage.rst:14
msgid "an external storage drive with a separate power supply"
msgstr "带独立电源的外置存储硬盘"

#: ../components/nextbox/external-storage.rst:15
msgid ""
"the external storage must be formatted with a supported filesystem (e.g. "
"ext3, ext4 or XFS)"
msgstr "外部存储器必须使用支持的文件系统（如 ext3、ext4 或 XFS）进行格式化"

#: ../components/nextbox/external-storage.rst:20
msgid "Connect your external storage to your NextBox"
msgstr "将外置存储设备连接到 NextBox"

#: ../components/nextbox/external-storage.rst:21
msgid "Switch to the NextBox Administration App"
msgstr "切换到 NextBox 管理应用程序"

#: ../components/nextbox/external-storage.rst:22
msgid "Select \"Storage Management\""
msgstr "选择 \"存储管理"

#: ../components/nextbox/external-storage.rst:23
msgid "Click onto the plus sign to mount the storage"
msgstr "单击加号加载存储"

#: ../components/nextbox/external-storage.rst:27
msgid ""
"If you want to share directories with multiple users you have to install "
"the \"Group folders app\" and click onto the three dotted symbol and "
"\"Share\" to make it available for other users. (As the last image shows)"
msgstr "如果你想与多个用户共享目录，就必须安装 \"组文件夹应用程序\"，然后点击三点符号和 \"共享\"，让其他用户也能使用。(如上图所示）"

#: ../components/nextbox/external-storage.rst:-1
msgid "Storage Configuration"
msgstr "存储配置"

#: ../components/nextbox/external-storage.rst:-1
msgid "Storage Mount"
msgstr "存储安装"

#: ../components/nextbox/external-storage.rst:38
msgid "Allow Access From Files App"
msgstr "允许从文件应用程序访问"

#: ../components/nextbox/external-storage.rst:40
msgid ""
"As an additional requirement the hard-disk must have its mounted "
"directory access permissions be set to ``777`` or owned by user and group"
" id ``32``. If the hard-disk is mounted on your host locally the easiest "
"way is just to do ``chmod 777 /path/to/mounted/hard-disk`` as root."
msgstr ""
"另外，硬盘的挂载目录访问权限必须设置为 ``777`` 或由用户和组 id ``32`` "
"拥有。如果硬盘挂载在本地主机上，最简单的方法就是以根用户身份执行 ``chmod 777 /path/to/mounted/hard-disk``"
" 操作。"

#: ../components/nextbox/external-storage.rst:45
msgid ""
"To allow direct access to the mounted external storage through the "
"Nextcloud \"Files\" App, the **External storage support** app has to be "
"installed from the Nextcloud App Store. There the correct mount point "
"listed inside \"Storage Management\" inside the NextBox App has to be "
"made available. As shown in this screenshot:"
msgstr ""
"要通过 Nextcloud \"文件 \"应用程序直接访问已挂载的外部存储，必须从 Nextcloud "
"应用程序商店安装**外部存储支持**应用程序。在此，必须提供 NextBox 应用程序内 \"存储管理 \"中列出的正确挂载点。如截图所示："

#: ../components/nextbox/external-storage.rst:-1
msgid "External Storage Support Settings"
msgstr "外部存储支持设置"

#: ../components/nextbox/external-storage.rst:53
msgid ""
"Replace ``/media/extra-1`` with the mountpoint found in \"Storage "
"Management\". Given the configuration above the external hard-disk shall "
"be available as \"Local\" within the Files App now."
msgstr ""
"将 ``/media/extra-1`` 替换为在 \"存储管理 \"中找到的挂载点。根据上述配置，外置硬盘现在可以在文件应用程序中作为 \"本地"
" \"使用。"

#: ../components/nextbox/faq/generic.rst:2
msgid "Generic FAQ"
msgstr "通用常见问题"

#: ../components/nextbox/faq/generic.rst:15
msgid "**Q:** What to do if my NextBox doesn't start?"
msgstr "**问：** 如果我的 NextBox 无法启动，该怎么办？"

#: ../components/nextbox/faq/generic.rst:5
msgid ""
"If your NextBox doesn't start correctly or you have some other problem "
"using it, chances are a soft reset can fix it: :doc:`../technical/soft-"
"reset`. To press the button use a thin (~1mm) pin like a smartphone sim-"
"card tray removal device. If this doesn't help, please make sure you have"
" connected the NextBox correctly as described in Quickstart: "
":doc:`../gettingstarted`. Otherwise you can try a factory reset: "
":doc:`../technical/factory-reset` as long as your NextBox doesn't contain"
" any data you care about losing. If everything fails, please contact our "
"customer support. Do note that our ability to help you might be limited "
"if you changed your system configuration using for example ssh."
msgstr ""
"如果您的 NextBox 无法正常启动或在使用中遇到其他问题，软重置很可能可以解决： :doc:`.../technical/soft-"
"reset`。要按下按钮，请使用一根细针（约 1 毫米），就像智能手机 sim "
"卡托盘移除装置一样。如果这样做没有用，请确保您已经按照快速启动中的说明正确连接了 NextBox： "
":doc:`../gettingstarted`.否则，您可以尝试出厂重置： :doc:`../technical/factory-reset` "
"只要您的 NextBox 中没有您担心丢失的任何数据。如果一切失败，请联系我们的客户支持。请注意，如果您使用 ssh "
"等方式更改了系统配置，我们为您提供帮助的能力可能会受到限制。"

#: ../components/nextbox/faq/generic.rst:20
msgid "**Q:** How can I factory-reset my NextBox?"
msgstr "**问：** 如何在工厂重置我的 NextBox？"

#: ../components/nextbox/faq/generic.rst:18
msgid ""
"Press the hardware button for 5 seconds, see :doc:`../technical/factory-"
"reset`. To press the button use a thin (~1mm) pin like a smartphone sim-"
"card tray removal device."
msgstr ""
"按下硬件按钮 5 秒钟，参见 :doc:`.../technical/factory-reset`。要按下按钮，请使用类似智能手机 sim "
"卡托盘移除装置的细针（约 1 毫米）。"

#: ../components/nextbox/faq/generic.rst:23
msgid "**Q:** What do the different LED colors mean?"
msgstr "**问：** 不同的 LED 颜色代表什么意思？"

#: ../components/nextbox/faq/generic.rst:23
msgid "The detailed document can be found here: :doc:`../technical/led-colors`"
msgstr "详细文件可在此处找到： :doc:`../technical/led-colors`..."

#: ../components/nextbox/faq/generic.rst:28
msgid "**Q:** Can the inital setup be done using a monitor & keyboard?"
msgstr "**问：** 能否使用显示器和键盘进行初始设置？"

#: ../components/nextbox/faq/generic.rst:26
msgid ""
"No, this is not possible as the regular login is disabled on delivery. "
"Please connect the the NextBox to a network and access the NextBox using "
"`nextbox.local`_ or the IP directly."
msgstr ""
"不，这是不可能的，因为交货时常规登录已被禁用。请将 NextBox 连接到网络，然后使用 `nextbox.local`_ 或 IP 直接访问 "
"NextBox。"

#: ../components/nextbox/faq/generic.rst:32
msgid "**Q:** What is the typical power consumption?"
msgstr "**问：** 典型功耗是多少？"

#: ../components/nextbox/faq/generic.rst:31
msgid ""
"The minimum of 0,6A (3W) is rarely reached, in idle mostly around 1A (5W)"
" and more than 2A (10W) under higher loads."
msgstr "很少达到 0.6A (3W) 的最小值，空闲时大多为 1A (5W)左右，负载较高时超过 2A (10W)。"

#: ../components/nextbox/faq/generic.rst:40
msgid "**Q:** How secure is the NextBox?"
msgstr "**问：** NextBox 的安全性如何？"

#: ../components/nextbox/faq/generic.rst:35
msgid ""
"Debian with frequent `unattended-upgrades` based security updates, a "
"minimal attack surface by ensuring that not a single unneccessary port is"
" open are the main contributors to system security. **Make sure your "
"Nextcloud users and passwords are on a high level, either with long-"
"random passwords or a 2-Factor-Authentification supported login method "
"with e.g., a Nitrokey FIDO2.**"
msgstr ""
"Debian 频繁的 \"无人值守升级\"、基于安全更新的 "
"\"无人值守升级\"、通过确保不开放任何一个非必要端口将攻击面降至最低，这些都是确保系统安全的主要因素。**确保您的 Nextcloud "
"用户和密码处于较高水平，要么使用长随机密码，要么使用 Nitrokey FIDO2 等支持双因素身份验证的登录方法**。"

#: ../components/nextbox/faq/generic.rst:46
msgid "**Q:** What do all the ssh-related \"warnings\" mean?"
msgstr "**问：** 所有与 ssh 相关的 \"警告 \"是什么意思？"

#: ../components/nextbox/faq/generic.rst:43
msgid ""
"Once you set up your ssh-access, you make yourself technically "
"responsible for your NextBox. We do provide help as good as we can as "
"goodwill, but under the line we cannot provide generic Linux-"
"administration support outside of the intended NextBox use-cases."
msgstr ""
"一旦您设置了 ssh 访问权限，您就必须对自己的 NextBox 负技术责任。我们会尽力提供善意的帮助，但我们不能提供超出 NextBox "
"使用范围的通用 Linux 管理支持。"

#: ../components/nextbox/faq/generic.rst:52
msgid "**Q:** Can I mirror my NextBox onto another NextBox?"
msgstr "**问：** 我可以将我的 NextBox 镜像到另一个 NextBox 上吗？"

#: ../components/nextbox/faq/generic.rst:49
msgid ""
"This translates to a cluster setup, which is considered an (paid) "
"enterprise solution by Nextcloud. The details, especially data "
"consistency and collision handling, are far from trivial to realize. "
"Nevertheless, we also see demand for more sophisticated backup solutions "
"and will address this issue."
msgstr ""
"这就是集群设置，Nextcloud "
"将其视为企业解决方案（付费）。要实现这些细节，尤其是数据一致性和碰撞处理，绝非易事。不过，我们也看到了对更复杂的备份解决方案的需求，并将解决这一问题。"

#: ../components/nextbox/faq/generic.rst:58
#: ../components/nextbox/faq/nextcloud.rst:8
msgid ""
"**Q:** What to do to run/install/fix Nextcloud App \"XYZ\"? Why does "
"Nextcloud feature XYZ not work?"
msgstr "**问：** 如何运行/安装/修复 Nextcloud 应用程序 \"XYZ\"？为什么 Nextcloud 功能 XYZ 无法运行？"

#: ../components/nextbox/faq/generic.rst:55
#: ../components/nextbox/faq/nextcloud.rst:5
msgid ""
"Generally we cannot help in detail for these topics. Nextcloud internals "
"and apps are out-of-scope for the NextBox development as we use the stock"
" Docker images provided by Nextcloud. Ultimately, if some NextBox/OS "
"configuration is blocking an app to run properly we for sure will look "
"into fixing it."
msgstr ""
"一般来说，我们无法为这些主题提供详细帮助。Nextcloud 内部和应用程序不属于 NextBox 开发的范围，因为我们使用的是 "
"Nextcloud 提供的库存 Docker 镜像。最终，如果某些 NextBox/OS 配置阻碍了应用程序的正常运行，我们肯定会进行修复。"

#: ../components/nextbox/faq/generic.rst:62
msgid "**Q:** Can I connect/use the NextBox using WiFi?"
msgstr "**问：** 我可以使用 WiFi 连接/使用 NextBox 吗？"

#: ../components/nextbox/faq/generic.rst:61
msgid ""
"No, currently this is not (easily) possible, only wired ethernet using "
"RJ-45 is available."
msgstr "目前还不能（轻松）实现，只能使用 RJ-45 有线以太网。"

#: ../components/nextbox/faq/generic.rst:69
msgid ""
"**Q:** Is the WiFi on the Raspberry PI 4B physically available and "
"working?"
msgstr "**问：** Raspberry PI 4B 上的 WiFi 是否可用？"

#: ../components/nextbox/faq/generic.rst:65
msgid ""
"Yes, physically the WiFi is available and working, but not used/managed "
"by the NextBox App. If you know what you are doing you can configure and "
"use it, if works although being inside the NextBox casing."
msgstr ""
"是的，从物理上讲，WiFi 是可用的，也可以工作，但不能由 NextBox "
"应用程序使用或管理。如果你知道自己在做什么，就可以配置和使用它，尽管它是在 NextBox 外壳内。"

#: ../components/nextbox/faq/hardware.rst:2
msgid "Hardware FAQ"
msgstr "硬件常见问题"

#: ../components/nextbox/faq/hardware.rst:12
msgid ""
"**Q:** Why must I not connect external hard-drives without an external "
"power-supply to my NextBox?"
msgstr "**问：** 为什么我不能在没有外接电源的情况下将外置硬盘连接到 NextBox？"

#: ../components/nextbox/faq/hardware.rst:8
msgid ""
"The Raspberry Pi 4 Model B can only supply 1.2A of power through USB (see"
" `RPi Power Supply`_). The internal hard-drive is already connected and "
"powered via USB and pulls ~1.0A. Thus connecting another hard-drive "
"without an external power supply can lead to an unreliable power supply "
"for the internal hard-drive, thus potential data loss."
msgstr ""
"Raspberry Pi 4 Model B 通过 USB 只能提供 1.2A 的电流（请参阅 \"RPi 电源\"）。内部硬盘已通过 USB "
"连接并供电，电流约为 1.0A。因此，在没有外部电源的情况下连接另一个硬盘可能会导致内部硬盘供电不可靠，从而可能丢失数据。"

#: ../components/nextbox/faq/hardware.rst:20
msgid "**Q:** Where can I find an external hard-drive with its own power supply?"
msgstr "**问：** 在哪里可以找到自带电源的外置硬盘？"

#: ../components/nextbox/faq/hardware.rst:15
#, python-format
msgid ""
"The smaller form factors (2.5'' and smaller) for external hard-drives "
"mostly come without an additional power supply. For these, *a USB Hub "
"with an additional power supply can be considered the \"external power-"
"supply\"* for the hard-drive. Although the latter is it not 100% sure for"
" powered USB hubs, thus we recommend external 3.5'' hard-drives, which "
"are nearly always externally powered."
msgstr ""
"外形尺寸较小（2.5''或更小）的外置硬盘大多不带额外电源。对于这些硬盘，*带有额外电源的 USB 集线器可视为硬盘的 \"外部电源 "
"\"*。虽然后者并非供电 USB 集线器的 100% sure，但我们推荐外置 3.5'' 硬盘，它们几乎总是由外部供电。"

#: ../components/nextbox/faq/hardware.rst:26
msgid "**Q:** Why does my USB device / hub not work, if connected to the NextBox?"
msgstr "**问：** 为什么我的 USB 设备/集线器与 NextBox 连接后不起作用？"

#: ../components/nextbox/faq/hardware.rst:23
msgid ""
"There are some devices and especially USB3 hubs that are known to not "
"work properly with the Raspberry PI 4B, please see this `USB "
"Documentation`_ from Raspberry. On top of that also make sure the USB "
"device is working in general by connecting it to another computer (best "
"case: Linux) and verify that it works."
msgstr ""
"有些设备，尤其是 USB3 集线器无法与 Raspberry PI 4B 正常工作，请参阅 Raspberry 提供的 \"USB "
"文档\"。此外，还请将 USB 设备连接到另一台计算机（最佳情况：Linux）并验证其是否正常工作，以确保 USB 设备正常工作。"

#: ../components/nextbox/faq/hardware.rst:30
msgid "**Q:** Why does my hard-drive not show up after plugging it in?"
msgstr "**问：** 为什么我的硬盘在插入后没有显示？"

#: ../components/nextbox/faq/hardware.rst:29
msgid ""
"Please make sure that you are using one of the supported filesystems "
"(e.g., ext, xfs) and you have mounted your hard-drive within *Storage "
"Management*."
msgstr "请确保您使用的是受支持的文件系统之一（如 ext、xfs），并已在*存储管理*中加载硬盘。"

#: ../components/nextbox/faq/hardware.rst:36
msgid "**Q:** Can I generally extend the NextBox using a USB hard-drive?"
msgstr "**问：** 一般来说，我可以使用 USB 硬盘扩展 NextBox 吗？"

#: ../components/nextbox/faq/hardware.rst:33
msgid ""
"Yes, this is possible, please make sure you are using a hard-drive, which"
" has an external power supply. Once connected you can mount the hard-"
"drive using the NextBox *Storage Management* and include it into "
"Nextcloud file-management using the `External storage support`_ app."
msgstr ""
"是的，这是有可能的，请确保您使用的硬盘有外置电源。连接后，您可以使用 NextBox * 存储管理*挂载硬盘，并使用 \"外部存储支持 "
"\"应用程序将其纳入 Nextcloud 文件管理。"

#: ../components/nextbox/faq/hardware.rst:41
msgid "**Q:** What functions does the additional \"shield\" provide?"
msgstr "**问：** 附加的 \"防护罩 \"有什么功能？"

#: ../components/nextbox/faq/hardware.rst:39
msgid ""
"As of now the shield does provide a :doc:`status LED <../technical/led-"
"colors>`, a hardware button to :doc:`factory reset <../technical/factory-"
"reset>` and an additional USB Type-C connector on the same side as the "
"Ethernet port for power supply exclusively."
msgstr ""
"目前，该屏蔽确实提供了一个 :doc:`status LED <.../technical/led-colors>`、一个用于 "
":doc:`factory reset <.../technical/factory-reset>`的硬件按钮，以及一个额外的 USB "
"Type-C 连接器，位于以太网端口的同一侧，专门用于供电。"

#: ../components/nextbox/faq/hardware.rst:46
msgid "**Q:** Is the NextBox hardware extendable/replaceable?"
msgstr "**问：** NextBox 硬件可以扩展/更换吗？"

#: ../components/nextbox/faq/hardware.rst:44
msgid ""
"Yes, all NextBox components can be easily replaced. None of the "
"components are glued or somehow permanently assembled. Using a Phillips "
"screwdriver you can disassemble and re-assemble the NextBox easily. Keep "
"in mind that you are doing this at your own risk."
msgstr ""
"是的，NextBox 的所有组件都可以轻松更换。没有任何组件是用胶水粘合或以某种方式永久装配的。使用十字螺丝刀可以轻松拆卸和重新组装 "
"NextBox。请记住，这样做的风险由您自己承担。"

#: ../components/nextbox/faq/hardware.rst:50
msgid "**Q:** What are the two USB Type-C ports used for?"
msgstr "**问：** 两个 USB Type-C 端口的用途是什么？"

#: ../components/nextbox/faq/hardware.rst:49
msgid ""
"Both USB Type-C ports are exclusively for power supply and can not be "
"used for data transfer. Do not connect two power supplies, please just "
"use one of both to power your NextBox."
msgstr "两个 USB Type-C 端口仅用于供电，不能用于数据传输。请勿连接两个电源，只需使用其中一个为 NextBox 供电即可。"

#: ../components/nextbox/faq/hardware.rst:58
msgid "**Q:** Which fan should I install?"
msgstr "**问：** 我应该安装哪种风扇？"

#: ../components/nextbox/faq/hardware.rst:53
msgid ""
"**There is absolutely no need for a fan, the NextBox is designed to work "
"without an active cooling**. Although if the NextBox is used for "
"additional tasks (it's still a Linux), we have prepared a fan mount for a"
" 30mm x 12mm fan at 5V connected to the shield. More details (connector, "
"used pins) can be taken from `NextBox' GitHub`_. Currently we *do not* "
"recommend adding a fan as the outputs are not controlled yet by the "
"NextBox daemon, so this is also something you would have to do by "
"yourself."
msgstr ""
"**完全不需要风扇，NextBox 的设计无需主动散热**。不过，如果 NextBox 被用于其他任务（它仍然是 "
"Linux），我们准备了一个风扇支架，可将 30mm x 12mm 的风扇以 5V 电压连接到屏蔽罩上。更多详情（连接器、使用的引脚）请参阅 "
"GitHub 上的 \"NextBox\"。目前，我们*不*建议添加风扇，因为 NextBox "
"守护进程尚未控制输出，所以这也是您必须自己完成的事情。"

#: ../components/nextbox/faq/hardware.rst:62
msgid "**Q:**: Can I upgrade the NextBox' RAM size?"
msgstr "**Q:**:我可以升级 NextBox 的内存大小吗？"

#: ../components/nextbox/faq/hardware.rst:61
msgid ""
"No, the Raspberry PI 4B has the RAM component soldered onto the "
"mainboard, thus it cannot be replaced/extended."
msgstr "不，Raspberry PI 4B 的 RAM 组件焊接在主板上，因此无法更换/扩展。"

#: ../components/nextbox/faq/index.rst:4
msgid "Generic"
msgstr "通用型"

#: ../components/nextbox/faq/index.rst:4
msgid "Hardware"
msgstr "硬件"

#: ../components/nextbox/faq/index.rst:4 ../components/software/index.rst:2
msgid "Software"
msgstr "软件"

#: ../components/nextbox/faq/index.rst:4
msgid "Nextcloud"
msgstr "Nextcloud"

#: ../components/nextbox/faq/index.rst:4
msgid "Remote Access"
msgstr "远程访问"

#: ../components/nextbox/faq/index.rst:2
msgid "NextBox FAQ"
msgstr "NextBox 常见问题"

#: ../components/nextbox/faq/nextcloud.rst:2
msgid "Nextcloud FAQ"
msgstr "Nextcloud 常见问题"

#: ../components/nextbox/faq/nextcloud.rst:12
msgid ""
"**Q:** Why does Nitrokey currently not recommend to use OnlyOffice or "
"Collabora Office on the NextBox?"
msgstr "**问：** 为什么 Nitrokey 目前不建议在 NextBox 上使用 OnlyOffice 或 Collabora Office？"

#: ../components/nextbox/faq/nextcloud.rst:11
msgid ""
"The state of these Nextcloud apps is not yet mature (for ARM platforms). "
"Although it is (partly) possible to install them we do not recommend "
"doing so currently."
msgstr "这些 Nextcloud 应用程序尚未成熟（针对 ARM 平台）。虽然（部分）可以安装，但我们目前不建议这样做。"

#: ../components/nextbox/faq/nextcloud.rst:16
msgid "**Q:** Why does updating Nextcloud from inside Nextcloud not work?"
msgstr "**问：** 从 Nextcloud 内部更新 Nextcloud 为什么不起作用？"

#: ../components/nextbox/faq/nextcloud.rst:15
msgid ""
"The Nextcloud version is rolled out by us. Thus the option to update from"
" inside Nextcloud is not working."
msgstr "Nextcloud 版本由我们推出。因此，从 Nextcloud 内部进行更新的选项无法使用。"

#: ../components/nextbox/faq/nextcloud.rst:20
msgid "**Q:** Can I add apps to the Nextcloud instance?"
msgstr "**问：** 我能在 Nextcloud 实例中添加应用程序吗？"

#: ../components/nextbox/faq/nextcloud.rst:19
msgid ""
"Yes, the Nextcloud app store is available and any app available there can"
" be installed through the Nextcloud web frontend."
msgstr "是的，Nextcloud 应用程序商店可用，任何可用的应用程序都可以通过 Nextcloud 网页前端安装。"

#: ../components/nextbox/faq/nextcloud.rst:24
msgid ""
"**Q:** My Nextcloud instance is stuck in \"Maintenance Mode\", how can I "
"switch it off?"
msgstr "**问：** 我的 Nextcloud 实例卡在 \"维护模式 \"中，如何才能将其关闭？"

#: ../components/nextbox/faq/nextcloud.rst:23
msgid ""
"To *force exit* the Nextcloud \"Maintenance Mode\", you can push the "
"hardware button **shortly, once**. The NextBox will then switch-off the "
"maintenance mode. Please avoid this, if possible."
msgstr "要**强制退出**Nextcloud \"维护模式\"，可以短按一次硬件按钮。然后，NextBox 将关闭维护模式。请尽可能避免这样做。"

#: ../components/nextbox/faq/nextcloud.rst:30
msgid ""
"**Q:** Why am I getting a permission warning for "
"``/var/www/html/custom_apps/nextbox`` inside the Nextcloud settings "
"overview?"
msgstr ""
"**问：** 为什么我在 Nextcloud 设置概览中的 ``/var/www/html/custom_apps/nextbox`` "
"收到权限警告？"

#: ../components/nextbox/faq/nextcloud.rst:27
msgid ""
"This is a \"feature\". The NextBox Nextcloud App is installed on the "
"system with the Debian nextbox package. To avoid an accidental deletion "
"of the NextBox Nextcloud App from within the Nextcloud app management, "
"the stated directory can not be written by Nextcloud, this is what "
"Nextcloud is complaining about here."
msgstr ""
"这是一项 \"功能\"。NextBox Nextcloud 应用程序是通过 Debian nextbox 软件包安装到系统中的。为了避免在 "
"Nextcloud 应用程序管理中意外删除 NextBox Nextcloud 应用程序，Nextcloud 无法写入所述目录，这就是 "
"Nextcloud 在此抱怨的原因。"

#: ../components/nextbox/faq/nextcloud.rst:34
msgid "**Q:** How can I run Nextcloud's `occ`?"
msgstr "**问：** 如何运行 Nextcloud 的 `occ`？"

#: ../components/nextbox/faq/nextcloud.rst:33
msgid ""
"As Nextcloud is running inside a Docker container, you need to be root "
"and execute the following: ``docker exec -it -u www-data nextbox-"
"compose_app_1 /var/www/html/occ``"
msgstr ""
"由于 Nextcloud 在 Docker 容器中运行，因此您需要以 root 身份执行以下操作：docker exec -it -u www-"
"data nextbox-compose_app_1 /var/www/html/occ```"

#: ../components/nextbox/faq/nextcloud.rst:39
msgid "**Q:** What to do about missing php-modules like `imagemagick`?"
msgstr "**问：** 如何处理丢失的 php 模块（如 `imagemagick`）？"

#: ../components/nextbox/faq/nextcloud.rst:37
msgid ""
"Similar to Apache, PHP is also provided by the Nextcloud container, "
"therefore as we are using the stock Nextcloud container this will also "
"only be resolved once this is resolved by the Nextcloud Team."
msgstr ""
"与 Apache 类似，PHP 也是由 Nextcloud 容器提供的，因此由于我们使用的是 Nextcloud 容器，只有在 Nextcloud"
" 团队解决这个问题后才能解决。"

#: ../components/nextbox/faq/nextcloud.rst:51
msgid ""
"**Q:** Why is my Nextcloud not loading properly, instead I get a white "
"page and a `.htaccess` error?"
msgstr "**问：** 为什么我的 Nextcloud 无法正常加载，而是出现白色页面和`.htaccess`错误？"

#: ../components/nextbox/faq/nextcloud.rst:42
msgid ""
"This usually is an indication that the OS has unmounted/detached the "
"internal hard-drive due to an low-power-incident. Please make sure you "
"read and understood `USB power <faq/hardware.html#why-must-i-not-connect-"
"external-hard-drives-without-an-external-power-supply-to-my-nextbox>`_. "
"In most cases doing a power-cycle (unplug the USB-C connector, wait 5secs"
" and plug it in again) should resolve this. **Make sure no additional USB"
" devices are connected during this procedure.**"
msgstr ""
"这通常表明操作系统因低电量事故而卸载/分离了内部硬盘。请确保您已阅读并理解 \"USB 电源 <faq/hardware.html#why-"
"must-i-not-connect-external-hard-drive-without-an-external-power-supply-"
"to-my-nextbox>`_\"。在大多数情况下，进行一次电源循环（拔下 USB-C 连接器，等待 5 "
"秒钟，然后重新插入）就可以解决这个问题。**确保在此过程中没有连接其他 USB 设备。"

#: ../components/nextbox/faq/remote-access.rst:2
msgid "Remote Access FAQ"
msgstr "远程访问常见问题"

#: ../components/nextbox/faq/remote-access.rst:9
msgid "**Q:** What is the correct WebDAV URL?"
msgstr "**问：** 什么是正确的 WebDAV URL？"

#: ../components/nextbox/faq/remote-access.rst:5
msgid ""
"The full URL to use for WebDAV is: "
"``https://my.domain.tld/remote.php/webdav/``, there have been reports "
"that for native Windows WebDAV you might need: "
"``https://my.domain.tld/remote.php/dav/files/USERNAME`` with *USERNAME* "
"being the username you would like to use."
msgstr ""
"WebDAV 要使用的完整 URL "
"是：``https://my.domain.tld/remote.php/webdav/``，但有报告称，对于本地 Windows "
"WebDAV，您可能需要``https://my.domain.tld/remote.php/webdav/``，其中 *USERNAME* "
"是您要使用的用户名：https://my.domain.tld/remote.php/dav/files/USERNAME\"，其中 "
"*USERNAME* 是您希望使用的用户名。"

#: ../components/nextbox/faq/remote-access.rst:16
msgid "**Q:** Can I access my Nextcloud instance using WebDAV?"
msgstr "**问：** 我能使用 WebDAV 访问我的 Nextcloud 实例吗？"

#: ../components/nextbox/faq/remote-access.rst:12
msgid ""
"Yes, please see `Nextcloud WebDAV documentation`_ for a complete "
"overview. A simple mount for unix-like systems might look like this: "
"``mount -t davfs https://my.domain.tld/remote.php/webdav/ "
"/mnt/target/path`` while making sure that the ``davfs2`` package is "
"installed. For Windows please additionally read these :doc:`docs "
"<../clients/windows>`."
msgstr ""
"是的，请参阅 \"Nextcloud WebDAV 文档 \"了解完整概述。类似 unix 系统的简单挂载可能如下所示：`mount -t "
"davfs https://my.domain.tld/remote.php/webdav/ /mnt/target/path`` 同时确保安装了"
" ``davfs2`` 软件包。对于 Windows，请另外阅读 :doc:`docs <../clients/windows>`。"

#: ../components/nextbox/faq/remote-access.rst:21
msgid ""
"**Q:**: Why does my Android smartphone's browser not open: "
"``http://nextbox.local``"
msgstr "**Q:**:为什么我的安卓智能手机的浏览器打不开：`http://nextbox.local``"

#: ../components/nextbox/faq/remote-access.rst:19
msgid ""
"As of today the technology needed to use ``.local`` URLs is not supported"
" by various (stock) Android browser(s). The mechanism is based on "
"``mDNS``. One possible workaround is to use a 3rd party app like "
"BonjourBrowser to discover all mDNS services in your network."
msgstr ""
"到目前为止，使用``.local```URL 所需的技术还不受各种（库存）安卓浏览器的支持。该机制基于 ``mDNS``。一种可能的变通方法是使用"
" BonjourBrowser 等第三方应用程序来发现网络中的所有 mDNS 服务。"

#: ../components/nextbox/faq/remote-access.rst:28
msgid ""
"**Q:**: Why does accessing my NextBox using: ``http://nextbox.local`` not"
" work?"
msgstr "**Q:**:为什么使用 ```` 访问我的 NextBoxhttp://nextbox.local \"不起作用？"

#: ../components/nextbox/faq/remote-access.rst:24
msgid ""
"There are several other reasons why the access using "
"``http://nextbox.local`` may not work, further known scenarios are:"
msgstr "使用 ``http://nextbox.local`` 访问可能无法正常工作还有其他一些原因，其中已知的情况有："

#: ../components/nextbox/faq/remote-access.rst:27
msgid ""
"Using a Fritz!Box with the NextBox being connected via a LAN port and the"
" client/browser is connected to the network via WiFI (WLAN), the "
"Fritz!Box will block mDNS."
msgstr ""
"在使用 Fritz!Box 时，如果 NextBox 通过 LAN 端口连接，而客户端/浏览器通过 WiFI (WLAN) 连接到网络，则 "
"Fritz!Box 将阻止 mDNS。"

#: ../components/nextbox/faq/remote-access.rst:38
msgid ""
"**Q:**: I followed all guides and still cannot acquire the TLS "
"certificate, what can I do?"
msgstr "**Q:**:我按照所有指南进行了操作，但仍然无法获得 TLS 证书，我该怎么办？"

#: ../components/nextbox/faq/remote-access.rst:31
msgid ""
"The reason a TLS certificate cannot be acquired is nearly always the fact"
" that your NextBox is not reachable from the internet. Make sure you have"
" followed the :doc:`../remote/walkthrough`. If you followed the step-by-"
"step instructions and it still does not work, very likely something is "
"blocking the connection, typical candidates are router web administration"
" features like: ``MyFritz!``, ``Fritz Web Services`` or similar services,"
" which are running on your router and thus blocking the traffic on "
"port(s) 80 and/or 443. Switch them off and retry acquiring your TLS "
"certificate."
msgstr ""
"无法获取 TLS 证书的原因几乎总是您的 NextBox 无法从互联网连接。请确保已按照 :doc:`../remote/walkthrough`"
" 进行操作。如果您按照步骤说明进行了操作，但仍然无法正常工作，那么很可能是有什么东西阻塞了连接，典型的可能是路由器的 Web "
"管理功能，如：``MyFritz'：MyFritz！\"、\"Fritz Web Services \"或类似服务，它们在路由器上运行，因此阻塞了"
" 80 和/或 443 端口的流量。关闭它们并重新尝试获取 TLS 证书。"

#: ../components/nextbox/faq/remote-access.rst:51
msgid "**Q:** Why is my reachability with IPv4 not working?"
msgstr "**问：** 为什么我的 IPv4 可及性不起作用？"

#: ../components/nextbox/faq/remote-access.rst:41
msgid ""
"If you have properly set up :doc:`port forwarding <../remote/port-"
"forwarding>` and IPv4 connections (reachability test) are still not "
"working there are good chances that your Internet-Service-Provider (ISP) "
"does not provide a proper (public) IPv4 address to you. There are several"
" (end-customer) internet technologies, which do not allow incoming "
"traffic for the IPv4, which was assigned to you. An incomplete list is: "
"*private IPv4 address*, *DS-Lite connection* or *CarrierGrade-NAT (CG-"
"NAT)*. All these essentially share one IPv4 address accross multiple "
"users, thus block (incoming) traffic from the internet to you. Some ISPs "
"allow upgrading to so-called **full-stack connections**, which should "
"enable full bi-directional traffic for IPv4 and IPv6."
msgstr ""
"如果您已经正确设置了 :doc:`port forwarding <../remote/port-forwarding>` ，但 IPv4 "
"连接（可达性测试）仍然无法正常工作，那么您的互联网服务提供商（ISP）很有可能没有为您提供正确的（公共）IPv4 "
"地址。有几种（终端客户）互联网技术不允许为您分配的 IPv4 输入流量。不完整的列表如下*私人 IPv4 地址*、*DS-Lite 连接* 或 "
"*CarrierGrade-NAT (CG-NAT)*。所有这些基本上都是多个用户共享一个 IPv4 "
"地址，因此会阻止从互联网传入你的流量。有些互联网服务提供商允许升级到所谓的 \"全栈连接\"（**full-stack "
"connection）**，这样可以实现 IPv4 和 IPv6 的完全双向通信。"

#: ../components/nextbox/faq/remote-access.rst:62
msgid "**Q:** Why do some devices fail to connect for my IPv6 configured NextBox?"
msgstr "**问：** 配置了 IPv6 的 NextBox 为什么有些设备无法连接？"

#: ../components/nextbox/faq/remote-access.rst:54
msgid ""
"Sadly, still not all ISPs and mobile-network providers (smartphones) do "
"have full IPv6 support activated. This means, if your NextBox is "
"configured for IPv6 only access, devices inside these networks will not "
"be able to connect. The **backwards-proxy does work as a workaround "
"here**, as it provides an IPv4 entrypoint to your NextBox independant of "
"your other remote access configuration."
msgstr ""
"遗憾的是，并非所有互联网服务提供商和移动网络提供商（智能手机）都已激活完整的 IPv6 支持。这意味着，如果你的 NextBox 仅配置为 "
"IPv6 访问，这些网络内的设备将无法连接。在这种情况下，** backwards-proxy 可以作为一种变通办法，** 因为它可以为 "
"NextBox 提供一个 IPv4 入口点，与其他远程访问配置无关。"

#: ../components/nextbox/faq/software.rst:2
msgid "Software FAQ"
msgstr "软件常见问题"

#: ../components/nextbox/faq/software.rst:7
msgid "**Q:** What kind of public key is expected for SSH access?"
msgstr "**问：** SSH 访问需要哪种公钥？"

#: ../components/nextbox/faq/software.rst:5
msgid ""
"An openssh style (public) key is expected. Depending on your operating "
"system there are different ways to determine your public key. One might "
"be ``ssh-add -L``, another might be ``cat ~/.ssh/id_rsa.pub``. If you are"
" using Putty, please see the `Putty documentation`_."
msgstr ""
"预计需要一个 openssh 样式的（公钥）密钥。根据操作系统的不同，确定公钥的方法也不同。一种可能是 `ssh-add -L```，另一种可能是"
" `cat ~/.ssh/id_rsa.pub``。如果使用的是 Putty，请参阅 `Putty 文档`_。"

#: ../components/nextbox/faq/software.rst:12
msgid "**Q:** Can the operating system be extended or configured manually?"
msgstr "**问：** 操作系统可以手动扩展或配置吗？"

#: ../components/nextbox/faq/software.rst:10
msgid ""
"Yes, you can set up ssh access through the NextBox Nextcloud app. "
"Afterwards you can access your NextBox using ssh and you can do with the "
"system whatever you want. Obviously we will only provide support for the "
"NextBox stock configuration."
msgstr ""
"是的，您可以通过 NextBox Nextcloud 应用程序设置 ssh 访问。之后，您就可以使用 ssh 访问 "
"NextBox，并对系统进行任何操作。显然，我们只支持 NextBox 的现有配置。"

#: ../components/nextbox/faq/software.rst:15
msgid "**Q:** Where can I see a changelog for the NextBox versions?"
msgstr "**问：** 在哪里可以看到 NextBox 版本的更新日志？"

#: ../components/nextbox/faq/software.rst:15
msgid "Currently only here: `Launchpad NextBox`_"
msgstr "目前仅在此处：Launchpad NextBox`_"

#: ../components/nextbox/faq/software.rst:21
msgid "**Q:** How can I update the Operating System?"
msgstr "**问：** 如何更新操作系统？"

#: ../components/nextbox/faq/software.rst:18
msgid ""
"There is no need to update the NextBox OS by hand. This is done using "
"``unattended-upgrades`` and on top the *nextbox-daemon* will check for "
"upgrades manually (as a redundant fallback solution) on every start. You "
"are free to update your OS by hand using ``apt``, if you know what you "
"are doing."
msgstr ""
"无需手动更新 NextBox 操作系统。升级是通过 ``unattended-upgrades`` 完成的，而且 *nextbox-daemon*"
" 会在每次启动时手动检查升级（作为多余的备用解决方案）。如果你知道自己在做什么，可以使用 ``apt`` 手动更新操作系统。"

#: ../components/nextbox/faq/software.rst:24
msgid "**Q:** Is the NextBox running a 32bit or 64bit operating system?"
msgstr "**问：** NextBox 运行的是 32 位还是 64 位操作系统？"

#: ../components/nextbox/faq/software.rst:24
msgid "The used OS is a 64bit system. The ``arch`` output: `aarch64`."
msgstr "使用的操作系统是 64 位系统。`arch`` 输出：`aarch64`."

#: ../components/nextbox/faq/software.rst:30
msgid ""
"**Q:** Which users and default passwords are created by default on the "
"NextBox's operating system?"
msgstr "**问：** NextBox 的操作系统默认创建哪些用户和默认密码？"

#: ../components/nextbox/faq/software.rst:27
msgid ""
"There is not one single default password set on any (system) user. The "
"only non-system user created is named ``nextuser``, without a default "
"password. The only way to access the NextBox is using ``ssh`` with a "
"public key, which can be set via the NextBox App."
msgstr ""
"没有为任何（系统）用户设置一个默认密码。唯一创建的非系统用户名为 ``nextuser``，没有默认密码。访问 NextBox "
"的唯一方法是使用带有公钥的 ``ssh``，公钥可通过 NextBox 应用程序设置。"

#: ../components/nextbox/gettingstarted.rst:7
msgid "Quickstart"
msgstr "快速入门"

#: ../components/nextbox/gettingstarted.rst:10
msgid "Connect NextBox to your Internet router via network cable."
msgstr "通过网线将 NextBox 连接到互联网路由器。"

#: ../components/nextbox/gettingstarted.rst:11
msgid ""
"Connect the power cable to the NextBox, you can use any of the two USB-C "
"ports."
msgstr "将电源线连接到 NextBox，您可以使用两个 USB-C 端口中的任意一个。"

#: ../components/nextbox/gettingstarted.rst:12
msgid "Once powered the NextBox will start"
msgstr "接通电源后，NextBox 将启动"

#: ../components/nextbox/gettingstarted.rst:13
msgid ""
"Wait approx. 5 minutes and open \"http://nextbox.local\" in your web "
"browser - this duration may vary. The NextBox is ready once the LED is "
"constantly green (see :doc:`LEDs <technical/led-colors>`)."
msgstr ""
"等待约 5 分钟，然后在浏览器中打开 \"http://nextbox.local\"--持续时间可能会有所不同。当 LED "
"指示灯常绿时，NextBox 就准备就绪（参见 :doc:`LEDs <technical/led-colors>`）。"

#: ../components/nextbox/gettingstarted.rst:26
msgid "Create Admin Account"
msgstr "创建管理员账户"

#: ../components/nextbox/gettingstarted.rst:28
msgid ""
"Enter your desired username and password. Remember to choose a strong "
"password for your admin account."
msgstr "输入所需的用户名和密码。请记住为您的管理员账户选择一个强大的密码。"

#: ../components/nextbox/gettingstarted.rst:36
msgid "An occurring warning can be ignored since you are on your local network."
msgstr "发生的警告可以忽略，因为您是在本地网络中。"

#: ../components/nextbox/gettingstarted.rst:38
msgid "Press \"Finish Setup\". This process may take a few minutes."
msgstr "按 \"完成设置\"。此过程可能需要几分钟。"

#: ../components/nextbox/gettingstarted.rst:44
msgid "Configure NextBox Related Features"
msgstr "配置 NextBox 相关功能"

#: ../components/nextbox/gettingstarted.rst:46
msgid ""
"The NextBox comes with Nextcloud App to realize various configurations "
"(e.g., :doc:`backup-restore` or :doc:`Remote Access<remote/index>`) and "
"operations for your NextBox."
msgstr ""
"NextBox 附带 Nextcloud 应用程序，用于为您的 NextBox 实现各种配置（例如 :doc:`backup-restore` 或"
" :doc:`Remote Access<remote/index>`）和操作。"

#: ../components/nextbox/gettingstarted.rst:49
msgid ""
"Your can find the NextBox-App in Nextcloud's top level navigation, as "
"shown in this figure:"
msgstr "如图所示，您可以在 Nextcloud 的顶层导航中找到 NextBox 应用程序："

#: ../components/nextbox/gettingstarted.rst:-1
msgid "nextbox-app"
msgstr "nextbox-app"

#: ../components/nextbox/gettingstarted.rst:55
msgid "Ready To Go"
msgstr "准备就绪"

#: ../components/nextbox/gettingstarted.rst:57
msgid ""
"This is all it takes to get started with your NextBox. From this point "
"you are free to choose how you would like to make the best use of your "
"personal Nextcloud-powered cloud. To get you started, here is a "
"collection of ideas to continue on:"
msgstr ""
"这就是开始使用 NextBox 的全部过程。从现在起，您可以自由选择如何充分利用由 Nextcloud "
"支持的个人云。为了帮助您开始使用，这里收集了一些可供继续使用的想法："

#: ../components/nextbox/gettingstarted.rst:62
msgid ""
"**Set up remote access for your NextBox** to allow access to your private"
" cloud from the internet. Our :doc:`guide <remote/index>` covers various "
"approaches."
msgstr ""
"**为您的 NextBox 设置远程访问**，允许从互联网访问您的私有云。我们的 :doc:`guide <remote/index>` "
"包含各种方法。"

#: ../components/nextbox/gettingstarted.rst:66
msgid ""
"We prepared a *one-click* remote access method, allowing you to set up "
"basic remote access in seconds."
msgstr "我们准备了*一键*远程访问方法，让您在几秒钟内就能设置基本的远程访问。"

#: ../components/nextbox/gettingstarted.rst:69
msgid ""
"**Connect your devices to your NextBox.** For smartphones the official "
"`Android App`_ and `iOS App`_ are both great additions for your personal "
"cloud. Apart from these there are also `Windows, macOS, Linux clients`_ "
"available, which integrate seamlessly into the OS of your choice. For "
"Android smartphones you might want to read our pictured :doc:`guide "
"<clients/android>`."
msgstr ""
"**将您的设备连接到 NextBox。** 对于智能手机，官方的 \"Android 应用程序 \"和 \"iOS 应用程序 "
"\"都是您个人云的重要补充。除此之外，还有 Windows、macOS 和 Linux "
"客户端可供选择，它们可以无缝集成到您选择的操作系统中。对于安卓智能手机，您可能需要阅读我们图片中的 :doc:`guide "
"<clients/android>`。"

#: ../components/nextbox/gettingstarted.rst:75
msgid ""
"**Browse the vast amount of apps** for your Nextcloud at the `official "
"store`_ for Nextcloud apps. Alternatively, just browse, find and install "
"directly from within your NextBox via the built-in app manager and "
"browser."
msgstr ""
"**在 Nextcloud 应用程序的 \"官方商店 \"浏览大量适用于 Nextcloud 的应用程序**。或者，直接在 NextBox "
"中通过内置的应用程序管理器和浏览器进行浏览、查找和安装。"

#: ../components/nextbox/gettingstarted.rst:79
msgid ""
"**Extend your Dashboard** using the various `Dashboard Integrations`_ to "
"create your personal information hub."
msgstr "**使用各种 \"仪表盘集成 \"扩展您的仪表盘**，创建您的个人信息中心。"

#: ../components/nextbox/gettingstarted.rst:82
msgid ""
"**Share photos, documents, any files, bookmarks and much more with your "
"family and friends**, or become part of a `Federation`_ and share, "
"communicate and collaborate with other Nextcloud users."
msgstr "**与您的家人和朋友**共享照片、文档、任何文件、书签等，或者成为 \"联盟 \"的一员，与其他 Nextcloud 用户共享、交流和协作。"

#: ../components/nextbox/gettingstarted.rst:86
msgid ""
"**Your communications under your control** - use Nextcloud's powerful "
"`groupware apps`_ like *Mail*, *Contacts*, *Calendar* or even *Deck* to "
"have all your personal data under your control or to organize and work "
"together with others."
msgstr ""
"**您的通信尽在掌握** - 使用 Nextcloud 功能强大的 \"群件应用程序\"，如 "
"*Mail*、*Contacts*、*Calendar* 或甚至 *Deck*，让您的所有个人数据尽在掌握，或与他人一起组织和工作。"

#: ../components/nextbox/gettingstarted.rst:91
msgid ""
"More interested in :doc:`technical details <technical/index>`? Or in "
"Open-Source in general? Then head over to the NextBox `repositories`_ at "
"GitHub, leave a star, contribute or discuss latest ideas and plans with "
"us."
msgstr ""
"对 :doc:` 技术细节 <technical/index>` 更感兴趣？或者对开源感兴趣？那就访问 GitHub 上的 NextBox "
"`repositories`` ，留下星星、贡献或与我们讨论最新的想法和计划。"

#: ../components/nextbox/hardware-overview.rst:2
msgid "Hardware Overview"
msgstr "硬件概述"

#: ../components/nextbox/hardware-overview.rst:7
msgid "Summary"
msgstr "摘要"

#: ../components/nextbox/hardware-overview.rst:9
msgid "A NextBox consists of the following hardware components:"
msgstr "NextBox 由以下硬件组件组成："

#: ../components/nextbox/hardware-overview.rst:11
msgid "Raspberry PI 4 Type B"
msgstr "树莓派 4 B 型"

#: ../components/nextbox/hardware-overview.rst:12
msgid "Nitrokey NextBox (aluminum) case"
msgstr "Nitrokey NextBox（铝质）外壳"

#: ../components/nextbox/hardware-overview.rst:13
msgid "Internal hard-drive (SSD or HDD)"
msgstr "内置硬盘（固态硬盘或移动硬盘）"

#: ../components/nextbox/hardware-overview.rst:14
msgid "NextBox Reset Shield"
msgstr "NextBox 复位屏蔽"

#: ../components/nextbox/hardware-overview.rst:15
msgid "Various smaller parts (internal wiring, connectors)"
msgstr "各种小型部件（内部接线、连接器）"

#: ../components/nextbox/hardware-overview.rst:17
msgid ""
"The casing is made out of aluminum and a passive thermal design. There "
"are no glued components and the case can easily be opened using a "
"Phillips screwdriver.  Please keep in mind that opening the case will "
"void your warranty and it is generally not recommended to open the case "
"for the non-professional user, especially as this might damage the "
"thermal conductivity and therefore the heat dissipating capabilities of "
"the NextBox might suffer."
msgstr ""
"外壳由铝制成，采用被动散热设计。机箱内没有粘合组件，使用十字螺丝刀即可轻松打开。  "
"请注意，打开机箱将导致保修失效，一般不建议非专业用户打开机箱，尤其是可能会损坏导热性能，从而影响 NextBox 的散热能力。"

#: ../components/nextbox/hardware-overview.rst:25
msgid "Connectors and Interfaces"
msgstr "连接器和接口"

#: ../components/nextbox/hardware-overview.rst:27
msgid ""
"In general the NextBox exposes all ports, which are available on the "
"Raspberry PI 4 and one additional USB Type C port for a better accessible"
" power supply connector. In the following a short description of the "
"different connectors and interfaces is given."
msgstr ""
"一般来说，NextBox 提供 Raspberry PI 4 上的所有端口和一个额外的 USB Type C "
"端口，以便更好地连接电源。下面将简要介绍不同的连接器和接口。"

#: ../components/nextbox/hardware-overview.rst:31
msgid "Hardware button for :doc:`Factory-Reset<technical/factory-reset>`"
msgstr "用于 :doc:`Factory-Reset<technical/factory-reset>` 的硬件按钮"

#: ../components/nextbox/hardware-overview.rst:32
msgid ":doc:`Status LED<technical/led-colors>`"
msgstr ":doc:`Status LED<technical/led-colors>`状态 LED<technical/led-colors"

#: ../components/nextbox/hardware-overview.rst
msgid "back view"
msgstr "后视图"

#: ../components/nextbox/hardware-overview.rst:38
msgid ""
"**USB Type-C / Power Supply** connector is designated as a replacement "
"for the stock connector on the front side and is exclusively for "
"supplying power to the NextBox and cannot transfer data."
msgstr "**USB Type-C / 电源**连接器被指定用于替换正面的原装连接器，专门用于为 NextBox 供电，不能传输数据。"

#: ../components/nextbox/hardware-overview.rst:43
msgid ""
"The right side of the NextBox is designed so that all mandatory "
"interfaces can be accessed from this side."
msgstr "NextBox 右侧的设计使所有必须的接口都可以从这一侧访问。"

#: ../components/nextbox/hardware-overview.rst
msgid "right view"
msgstr "右视图"

#: ../components/nextbox/hardware-overview.rst:50
msgid ""
"The **RJ45 - 1GbE Ethernet** connector connects your NextBox with your "
"home network and shall stay connected at all times."
msgstr "**RJ45 - 1GbE 以太网**连接器将 NextBox 与家庭网络相连，并始终保持连接。"

#: ../components/nextbox/hardware-overview.rst:52
msgid "**Free USB 3 - Type A Slot**, please see `Hardware FAQ`_"
msgstr "**免费 USB 3 - A 型插槽**，请参阅 \"硬件常见问题\"____。"

#: ../components/nextbox/hardware-overview.rst:53
msgid ""
"**Reserved USB 3 - Type A Slot**, used for the internal hard-disk. *Never"
" remove this connector!*"
msgstr "**预留 USB 3 - A 型插槽**，用于内部硬盘。*切勿移除此连接器"

#: ../components/nextbox/hardware-overview.rst:54
msgid "**2x Free USB 2 - Type A Slots**, please see `Hardware FAQ`_"
msgstr "**2个免费 USB 2 - A 型插槽**，请参阅 \"硬件常见问题\"_"

#: ../components/nextbox/hardware-overview.rst:56
msgid ""
"Using a hard-drive with an external power supply you can use any of the "
"available USB slots. Keep in mind that the data transfer bandwidth for "
"the USB 2 slots is less compared to the USB 3 slot."
msgstr "使用带有外接电源的硬盘，可以使用任何可用的 USB 插槽。请注意，USB 2 插槽的数据传输带宽低于 USB 3 插槽。"

#: ../components/nextbox/hardware-overview.rst:60
msgid "**USB Type-C / Power Supply** (stock) connector, can be used as **[3]**"
msgstr "**USB Type-C / 电源**（库存）连接器，可用作 **[3]**"

#: ../components/nextbox/hardware-overview.rst:61
msgid "**Micro HDMI 1 slot**, usable but not needed."
msgstr "**微型 HDMI 1 插槽**，可用但不需要。"

#: ../components/nextbox/hardware-overview.rst:62
msgid "**Micro HDMI 2 slot**, usable but not needed."
msgstr "**微型 HDMI 2 插槽**，可用但不需要。"

#: ../components/nextbox/hardware-overview.rst:63
msgid "**Headphone Jack**, usable but not needed."
msgstr "**耳机插孔**，可用但不需要。"

#: ../components/nextbox/hardware-overview.rst
msgid "front view"
msgstr "正面图"

#: ../components/nextbox/hardware-overview.rst:69
msgid ""
"The front interfaces are all optional and not necessary for NextBox usage"
" in general. While the **USB Type-C/Power Supply** may be used, the "
"alternative on the right side of the NextBox can be used to have all "
"wiring convenient on one side."
msgstr ""
"前面的接口都是可选的，对于 NextBox 的一般使用并非必要。虽然可以使用**USB Type-C 接口/电源**，但也可以使用 NextBox"
" 右侧的替代接口，以便在一侧方便布线。"

#: ../components/nextbox/index.rst:2
msgid "NextBox"
msgstr "下一个盒子"

#: ../components/nextbox/remote/dns-rebind.rst:2
msgid "DNS Rebind Protection"
msgstr "DNS 重绑定保护"

#: ../components/nextbox/remote/dns-rebind.rst:5
#: ../components/nextbox/remote/ipv6-settings.rst:5
#: ../components/nextbox/remote/port-forwarding.rst:5
msgid "Issue"
msgstr "问题"

#: ../components/nextbox/remote/dns-rebind.rst:7
msgid ""
"You have your dynamic DNS correctly set up, but IPv6 resolving does not "
"work for your domain."
msgstr "您已正确设置了动态 DNS，但 IPv6 解析对您的域名不起作用。"

#: ../components/nextbox/remote/dns-rebind.rst:11
#: ../components/nextbox/remote/ipv6-settings.rst:16
#: ../components/nextbox/remote/port-forwarding.rst:13
msgid "Details"
msgstr "详细信息"

#: ../components/nextbox/remote/dns-rebind.rst:13
msgid ""
"In general DNS Rebinding protection is a safety mechanism to avoid "
"attacks based on `DNS-Rebinding`_. Home routers include a protection "
"mechanism for this attack by never returning a local IP (v4 & v6) "
"address."
msgstr ""
"一般来说，DNS 重绑定保护是一种安全机制，可避免基于 \"DNS-重绑定 \"的攻击。家用路由器通过永不返回本地 IP（v4 和 "
"v6）地址来防止这种攻击。"

#: ../components/nextbox/remote/dns-rebind.rst:17
msgid ""
"In the context of the NextBox this means that, if you are using IPv6, the"
" IPv6 address of your NextBox is considered local by your router and thus"
" wiull not be returned during DNS resolving of your designated domain."
msgstr ""
"就 NextBox 而言，这意味着如果使用 IPv6，路由器会将 NextBox 的 IPv6 地址视为本地地址，因此在对指定域进行 DNS "
"解析时不会返回。"

#: ../components/nextbox/remote/dns-rebind.rst:21
msgid ""
"For IPv4 this is also applies, but not a problem. In the IPv4 world "
"(dynamic) DNS resolves to the router (WAN-IP) itself and the router will "
"forward the traffic to your NextBox. In contrast IPv6 will not resolve to"
" your router but to the IPv6 address of your NextBox directly and the "
"router just has to open its firewall for the traffic to pass."
msgstr ""
"对于 IPv4 也是如此，但问题不大。在 IPv4 世界（动态）中，DNS 会解析到路由器（WAN-IP）本身，路由器会将流量转发到 "
"NextBox。相反，IPv6 不会解析到路由器，而是直接解析到 NextBox 的 IPv6 地址，路由器只需打开防火墙，流量就会通过。"

#: ../components/nextbox/remote/dns-rebind.rst:29
#: ../components/nextbox/remote/ipv6-settings.rst:25
#: ../components/nextbox/remote/port-forwarding.rst:26
msgid "Solution"
msgstr "解决方案"

#: ../components/nextbox/remote/dns-rebind.rst:31
msgid ""
"Most routers, which implement this DNS-Rebind protection also allow you "
"to whitelist certain domains from this protection. **Generally, to solve "
"this issue you have to insert your (full) domain to the DNS-Rebind "
"Exceptions (or whitelist) of your router.**"
msgstr ""
"大多数实施 DNS-Rebind "
"保护的路由器也允许您将某些域名列入白名单，使其不受保护。**一般来说，要解决这个问题，您必须将您（完整）的域名添加到路由器的 DNS-Rebind"
" 例外（或白名单）中。"

#: ../components/nextbox/remote/dns-rebind.rst:35
msgid ""
"For instance, the setting inside a *Fritz!Box* is to be found in: \"Home "
"Network -> Network -> Network Settings -> More Settings -> DNS Rebind "
"Protection\". You need to ensure that you have the \"extended/expert "
"view\" activated."
msgstr ""
"例如，*Fritz！Box* 内的设置可在 \"家庭网络 -> 网络 -> 网络设置 -> 更多设置 -> DNS 重定向保护 "
"\"中找到。您需要确保激活了 \"扩展/专家视图\"。"

#: ../components/nextbox/remote/dynamic-dns.rst:2
msgid "Dynamic DNS Setup"
msgstr "动态 DNS 设置"

#: ../components/nextbox/remote/dynamic-dns.rst:6
msgid ""
"**There are two ways to configure a dynamic DNS provider to be used and "
"updated by your NextBox instance.**"
msgstr "**有两种方法可以配置动态 DNS 提供商，供 NextBox 实例使用和更新。"

#: ../components/nextbox/remote/dynamic-dns.rst:9
#: ../components/nextbox/remote/static.rst:7
msgid ""
"In contrast to the :doc:`backwards proxy <proxy>` remote access method, "
"this approach will ensure full end-to-end encryption using your very own "
"TLS certificate acquired from `Let's Encrypt`_."
msgstr ""
"与 :doc:`backwards proxy <proxy>` 远程访问方法不同的是，这种方法将确保使用从 `Let's Encrypt`_ "
"获取的您自己的 TLS 证书进行完全的端到端加密。"

#: ../components/nextbox/remote/dynamic-dns.rst:15
msgid "Guided Dynamic DNS"
msgstr "指导动态 DNS"

#: ../components/nextbox/remote/dynamic-dns.rst:17
msgid ""
"The guided setup will register an account at `desec.io`_ for you. Please "
"follow these steps to configure your NextBox using the Guided Dynamic DNS"
" method:"
msgstr "指导设置将为您在 `desec.io`_ 注册一个账户。请按照以下步骤使用指导动态 DNS 方法配置 NextBox："

#: ../components/nextbox/remote/dynamic-dns.rst:20
msgid ""
"In step one you need to provide an e-mail address and the domain you "
"would like to register.  Please make sure that you have access to this "
"e-mail account and the domain ends with **.dedyn.io**. *You can continue "
"to the next step by registering at `desec.io`_ or without (e.g., if you "
"have already registered this domain before)*"
msgstr ""
"第一步，您需要提供一个电子邮件地址和要注册的域名。  请确保您可以访问该电子邮件帐户，且域名以 **.dedyn.io** 结尾。*您可以通过在 "
"`desec.io`_ 注册或不注册（例如，如果您以前已经注册过该域名）* 继续下一步。"

#: ../components/nextbox/remote/dynamic-dns.rst:26
msgid ""
"After the registration at `desec.io`_ you will receive a verification "
"e-mail, which will guide you through the registration process at "
"`desec.io`_. Once completed you will be presented with a secret token, "
"which is needed in step two."
msgstr ""
"在 `desec.io`_注册后，您将收到一封验证电子邮件，该电子邮件将指导您完成 "
"`desec.io`_的注册过程。注册完成后，您将获得第二步所需的秘密令牌。"

#: ../components/nextbox/remote/dynamic-dns.rst:31
msgid ""
"If you do not receive a verification e-mail try `reset password`_ (using "
"the same e-mail address) at `desec.io`_ to set a password, which will "
"allow you to login into your account."
msgstr ""
"如果您没有收到验证电子邮件，请尝试在 `desec.io`_上的 `reset "
"password`_（使用相同的电子邮件地址）来设置密码，这样您就可以登录您的账户了。"

#: ../components/nextbox/remote/dynamic-dns.rst:35
msgid ""
"In step two the just acquired secret token shall be inserted into the "
"input field to complete your guided dynamic dns configuration."
msgstr "第二步，将刚刚获得的秘密令牌插入输入框，完成动态 dns 配置。"

#: ../components/nextbox/remote/dynamic-dns.rst:38
msgid ""
"Your token will only be presented once to you (after the verification "
"process).  If you need a new token, you need to create a new one inside "
"the `token management`_ inside your `desec.io`_ account settings."
msgstr "您的令牌只会显示一次（在验证过程之后）。  如果您需要新的令牌，请在您的 `desec.io` 账户设置中的 \"令牌管理 \"中创建一个新令牌。"

#: ../components/nextbox/remote/dynamic-dns.rst:42
msgid ""
"Once the 2nd step is completed you can *Continue to TLS activation* - see"
" below..."
msgstr "完成第二步后，您可以*继续激活 TLS* - 见下文..."

#: ../components/nextbox/remote/dynamic-dns.rst:45
msgid "Custom Dynamic DNS"
msgstr "自定义动态 DNS"

#: ../components/nextbox/remote/dynamic-dns.rst:47
msgid ""
"To update your dynamic DNS provider with your currently used IP(s), "
"NextBox is using `ddclient`_, which can be directly configured here or "
"via the *Guided DNS* method described before."
msgstr ""
"NextBox 使用 `ddclient`_ 来更新动态 DNS 服务提供商当前使用的 IP，您可以直接在此处或通过前面介绍的 *Guided "
"DNS* 方法进行配置。"

#: ../components/nextbox/remote/dynamic-dns.rst:51
msgid ""
"In this configuration you need the provide the *domain* this "
"configuration is enabling and the contents of the `ddclient.conf` used by"
" `ddclient`_. Various examples can be found at the `official "
"documentation`_, the one used for the guided DNS configuration uses the "
"following template:"
msgstr ""
"在此配置中，您需要提供启用此配置的*域*以及 `ddclient`_ 使用的 `ddclient.conf` 的内容。各种示例可在 \"官方文档 "
"\"中找到，用于指导 DNS 配置的示例使用了以下模板："

#: ../components/nextbox/remote/dynamic-dns.rst:67
msgid ""
"Once you actiavted this configuration, you can *Continue to TLS "
"activation* - see below"
msgstr "完成配置后，您可以*继续激活 TLS* - 参见下文"

#: ../components/nextbox/remote/dynamic-dns.rst:73
msgid "Enable TLS"
msgstr "启用 TLS"

#: ../components/nextbox/remote/dynamic-dns.rst:74
msgid ""
"On this page first wait for the status-bars to settle and mainly ensure "
"that *reachability* of your NextBox is tested successfully. If this is "
"the case, just click **Enable TLS** to acquire your TLS certificate."
msgstr ""
"在此页面上，首先要等待状态栏显示完毕，主要是确保您的 NextBox 的*可达性*测试成功。如果是这样，只需点击**启用 TLS** 获取 TLS"
" 证书。"

#: ../components/nextbox/remote/dynamic-dns.rst:78
msgid ""
"If the reachibility test fails, make sure your :doc:`port forwarding "
"<port-forwarding>` is configured properly."
msgstr "如果可达性测试失败，请确保您的 :doc:`port forwarding <port-forwarding>` 配置正确。"

#: ../components/nextbox/remote/index.rst:10
msgid "Walkthrough"
msgstr "演练"

#: ../components/nextbox/remote/index.rst:27
msgid "Method comparison"
msgstr "方法比较"

#: ../components/nextbox/remote/index.rst:36
msgid "Backwards Proxy"
msgstr "向后代理"

#: ../components/nextbox/remote/index.rst:36
msgid "Dynamic DNS"
msgstr "动态 DNS"

#: ../components/nextbox/remote/index.rst:36
msgid "Static Domain"
msgstr "静态域"

#: ../components/nextbox/remote/index.rst:47
msgid "DNS Rebind"
msgstr "DNS 重新绑定"

#: ../components/nextbox/remote/index.rst:47
msgid "Port Forwarding"
msgstr "端口转发"

#: ../components/nextbox/remote/index.rst:47
msgid "IPv6 Settings"
msgstr "IPv6 设置"

#: ../components/nextbox/remote/index.rst:2
msgid "Managing Remote Access"
msgstr "管理远程访问"

#: ../components/nextbox/remote/index.rst:4
msgid ""
"Your NextBox comes with different options on how to enable access to your"
" NextBox from any remote location as long as you have an internet "
"connection available."
msgstr "只要有互联网连接，您的 NextBox 就会提供不同的选项，让您可以从任何远程位置访问您的 NextBox。"

#: ../components/nextbox/remote/index.rst:8
msgid "If you struggle with the overall topic, please read:"
msgstr "如果您对整个主题有困难，请阅读："

#: ../components/nextbox/remote/index.rst:16
msgid ""
"Even though the *Backwards Proxy* remote access method is a quick way to "
"realize remote access, we **strongly recommend** to use a :doc:`dynamic "
"DNS setup<dynamic-dns>` or :doc:`static DNS setup<static>` to maintain "
"the best security level for your NextBox. *In most usage scenarios the "
"latter will also provide a better data bandwidth and user experience*"
msgstr ""
"尽管 *Backward Proxy* 远程访问方法是实现远程访问的快捷方式，我们**强烈建议**使用 :doc:`dynamic DNS "
"setup<dynamic-dns>` 或 :doc:`static DNS setup<static>` 来为您的 NextBox "
"保持最佳的安全级别。*在大多数使用情况下，后者还将提供更好的数据带宽和用户体验*。"

#: ../components/nextbox/remote/index.rst:23
msgid ""
"Before you set up a remote access method you might want to read the "
":doc:`comparison<method-comparison>` in order to understand the trade-"
"offs and capabilities of the different approaches:"
msgstr "在设置远程访问方法之前，您可能需要阅读 :doc:`comparison<method-comparison>` 以了解不同方法的利弊和功能："

#: ../components/nextbox/remote/index.rst:34
msgid "There are different ways to make your NextBox available for remote access."
msgstr "有多种方法可以让您的 NextBox 实现远程访问。"

#: ../components/nextbox/remote/index.rst:44
msgid ""
"The following topics might be of interest for you, depending on your "
"internet service provider and the type of your internet connection:"
msgstr "根据您的网络服务提供商和网络连接类型，您可能会对以下主题感兴趣："

#: ../components/nextbox/remote/ipv6-settings.rst:2
msgid "IPv6-related Settings"
msgstr "IPv6 相关设置"

#: ../components/nextbox/remote/ipv6-settings.rst:7
msgid ""
"You have properly set up one of the DNS configurations, :doc:`port-"
"forwarding` and :doc:`dns-rebind` and still your NextBox is not available"
" / reachable."
msgstr ""
"您已经正确设置了其中一个 DNS 配置、:doc:`port-forwarding` 和 :doc:`dns-rebind` 但您的 "
"NextBox 仍然不可用/不可达。"

#: ../components/nextbox/remote/ipv6-settings.rst:11
msgid ""
"This is in particular important for Fritz!Box owners and/or DS-Lite "
"internet connections."
msgstr "这对于 Fritz!Box 用户和/或 DS-Lite 互联网连接尤为重要。"

#: ../components/nextbox/remote/ipv6-settings.rst:18
msgid ""
"First test your (sub-)domain using a 3rd party service like `IPv6 Test`_ "
"to test your NextBox' IPv6 reachability. If this fails this is another "
"indicator that your IPv6 settings are not correct."
msgstr ""
"首先使用第三方服务（如 \"IPv6 Test\"）测试您的（子）域，以测试 NextBox 的 IPv6 可及性。如果测试失败，则表明您的 "
"IPv6 设置不正确。"

#: ../components/nextbox/remote/ipv6-settings.rst:27
msgid ""
"Some routers might have a bad default configuration for IPv6. Therefore "
"please ensure that your router is configured to pass IPv6 addresses to "
"your network clients (called ``IA_NA``), if this not done, no IPv6 "
"connection can be established to your NextBox from the outside, thus your"
" NextBox is not reachable."
msgstr ""
"某些路由器的 IPv6 默认配置可能不正确。因此，请确保您的路由器已配置为向网络客户端传递 IPv6 地址（称为 "
"``IA_NA``），否则将无法从外部与您的 NextBox 建立 IPv6 连接，从而无法连接到您的 NextBox。"

#: ../components/nextbox/remote/ipv6-settings.rst:32
msgid ""
"On a recent *Fritz!Box* you will find this configuration inside: \"Home "
"Network -> \"Network\" -> \"Network Settings\" -> \"IPv6 Configuration\" "
"Inside this view inside the section: \"DHCPv6 Server in the Home "
"Network\" activate: \"Enable DHCPv6 server in the FRITZ!Box for the home "
"network:\" and below this the last radio button has to be active: "
"\"Assign DNS server, prefix (IA_PD) and IPv6 address (IA_NA)\" instead of"
" the default, which is the 1st radio button."
msgstr ""
"在最新的 *Fritz!Box* 上，您可以在 \"家庭网络\"->\"网络\"->\"网络设置\"->\"IPv6 配置 "
"\"中找到此配置。在此视图的 \"家庭网络中的 DHCPv6 服务器 \"部分中，激活：\"在 FRITZ.Box 中启用 DHCPv6 "
"服务器，用于家庭网络：\"！Box 中的 DHCPv6 服务器：\"，下面的最后一个单选按钮必须激活：\"指定 DNS 服务器、前缀 "
"(IA_PD) 和 IPv6 地址 (IA_NA)\"，而不是默认的第一个单选按钮。"

#: ../components/nextbox/remote/method-comparison.rst:2
msgid "Comparing Methods For (Remote) Access"
msgstr "远程）访问方法比较"

#: ../components/nextbox/remote/method-comparison.rst:7
msgid "DNS-based"
msgstr "基于 DNS"

#: ../components/nextbox/remote/method-comparison.rst:9
msgid ""
"This is clearly the best and most secure approach and we recommend using "
"a DNS-based remote-access method including your own TLS certificate for "
"the best security"
msgstr "这显然是最好、最安全的方法，我们建议使用基于 DNS 的远程访问方法，包括自己的 TLS 证书，以获得最佳安全性"

#: ../components/nextbox/remote/method-comparison.rst:13
msgid "This denotes the :doc:`dynamic-dns` and the :doc:`static` approach."
msgstr "这表示 :doc:`dynamic-dns` 和 :doc:`static` 方法。"

#: ../components/nextbox/remote/method-comparison.rst:15
msgid ""
"Clearly the *best* method, but also the one requiring some configuration "
"work on your internet router."
msgstr "显然，这是*好的方法，但也需要在互联网路由器上进行一些配置工作。"

#: ../components/nextbox/remote/method-comparison.rst:17
msgid ""
"You get your *own* (sub)domain and a TLS certificate, thus all your "
"traffic will always be end-to-end encrypted and you maintain the highest "
"level of security for your traffic."
msgstr "您将获得自己**的（子）域名和 TLS 证书，因此您的所有流量将始终是端到端加密的，您的流量将保持最高级别的安全性。"

#: ../components/nextbox/remote/method-comparison.rst:19
msgid ""
"Opening the right ports on your internet router is necessary, see "
":doc:`here<port-forwarding>`"
msgstr "请参阅 :doc:`here<port-forwarding>` 在互联网路由器上打开正确的端口。"

#: ../components/nextbox/remote/method-comparison.rst:20
#: ../components/nextbox/remote/method-comparison.rst:36
msgid "Data path: [NextBox] ⟷   [Router] ⟷  [Client]"
msgstr "数据路径：[NextBox] ⟷ [路由器] ⟷ [客户端］"

#: ../components/nextbox/remote/method-comparison.rst:21
msgid "**Pro:** best performance, highest security, full end-to-end encryption"
msgstr "**优点：** 最佳性能、最高安全性、完全端到端加密"

#: ../components/nextbox/remote/method-comparison.rst:22
msgid ""
"**Contra:** needs (dynamic) DNS, needs configuration on your internet "
"router"
msgstr "**Contra：** 需要（动态）DNS，需要在互联网路由器上进行配置"

#: ../components/nextbox/remote/method-comparison.rst:27
msgid "Non-encrypted"
msgstr "非加密"

#: ../components/nextbox/remote/method-comparison.rst:29
msgid ""
"We strongly recommend to not use the non-encrypted setup, if you plan to "
"make your NextBox available outside of your local area network."
msgstr "如果您计划在局域网外使用 NextBox，我们强烈建议您不要使用非加密设置。"

#: ../components/nextbox/remote/method-comparison.rst:32
msgid ""
"simple (``http``) using either ``nextbox.local`` or your local IP (e.g.: "
"``192.168.178.123``)"
msgstr "使用 ``nextbox.local`` 或您的本地 IP（例如：``192.168.178.123``）进行简单（``http``）操作"

#: ../components/nextbox/remote/method-comparison.rst:33
msgid ""
"Generally a bad idea, this will not encrypt the transported data in any "
"way and is only useful in a setup where you do not want remote access to "
"your NextBox (having non-encrypted traffic inside your LAN might be no "
"problem, as long as you know what you are doing)"
msgstr ""
"一般来说，这不是一个好主意，因为它不会以任何方式对传输的数据进行加密，只有在不希望远程访问 NextBox "
"的情况下才有用（在局域网内使用未加密的流量可能没有问题，只要您知道自己在做什么）。"

#: ../components/nextbox/remote/method-comparison.rst:37
msgid "**Pro:** fast, no configuration"
msgstr "**优点：** 快速，无需配置"

#: ../components/nextbox/remote/method-comparison.rst:38
msgid "**Contra:** no transport security, no remote access (or only unencrypted)"
msgstr "**反：**无传输安全，无远程访问（或仅为未加密访问）"

#: ../components/nextbox/remote/method-comparison.rst:41
msgid ""
"Further, once you set up TLS and thus a DNS-based method, the unencrypted"
" connection for your NextBox will be disabled, this is not the case for "
"the Reverse Proxy as a problem with the proxy would then lock you out of "
"your NextBox."
msgstr ""
"此外，一旦您设置了 TLS 和基于 DNS 的方法，NextBox 的未加密连接将被禁用，而反向代理则不然，因为代理出现问题时，您将无法使用 "
"NextBox。"

#: ../components/nextbox/remote/method-comparison.rst:48
msgid "Nitrokey's Reverse Proxy"
msgstr "Nitrokey 的反向代理"

#: ../components/nextbox/remote/method-comparison.rst:50
msgid "This refers to the :doc:`proxy` method."
msgstr "这里指的是 :doc:`proxy` 方法。"

#: ../components/nextbox/remote/method-comparison.rst:53
msgid ""
"Provides transport encryption between your clients and your NextBox.  But"
" with the drawback that it is not End-To-End encrypted, means the traffic"
" will be decrypted at the Nitrokey Proxy Server and passed onward with "
"another encryption. Thus a compromised proxy server might allow access to"
" your traffic to the potential attacker."
msgstr ""
"在客户端和 NextBox 之间提供传输加密。  但缺点是它不是端到端加密，这意味着流量将在 Nitrokey "
"代理服务器上解密，并以另一种加密方式继续传输。因此，被入侵的代理服务器可能会允许潜在攻击者访问您的流量。"

#: ../components/nextbox/remote/method-comparison.rst:58
msgid ""
"The proxy server is a bottleneck and all traffic has to go through the "
"proxy server, even if you are in a local network together with the "
"NextBox the traffic has to go through the proxy server."
msgstr "代理服务器是一个瓶颈，所有流量都必须通过代理服务器，即使您与 NextBox 在本地网络中，流量也必须通过代理服务器。"

#: ../components/nextbox/remote/method-comparison.rst:61
msgid ""
"Data path (local client): [NextBox] ⟷  [Router]⟷  [Proxy Server] ⟷   "
"[Router] ⟷   [Client]"
msgstr "数据路径（本地客户端）：[NextBox] ⟷ [路由器]⟷ [代理服务器] ⟷ [路由器] ⟷ [客户端］"

#: ../components/nextbox/remote/method-comparison.rst:62
msgid ""
"Data path (remote client): [NextBox] ⟷  [Router]⟷  [Proxy Server] ⟷   "
"[Client]"
msgstr "数据路径（远程客户端）：[NextBox] ⟷ [路由器]⟷ [代理服务器] ⟷ [客户端］"

#: ../components/nextbox/remote/method-comparison.rst:63
msgid "**Pro:** easy to setup, good transport security"
msgstr "**优点：** 易于安装，运输安全性高"

#: ../components/nextbox/remote/method-comparison.rst:64
msgid ""
"**Contra:** not strictly end-to-end encrypted, potentially slow (all "
"traffic through the proxy)"
msgstr "**Contra：** 不是严格的端到端加密，速度可能较慢（所有流量都通过代理）。"

#: ../components/nextbox/remote/method-comparison.rst:67
msgid ""
"Non end-to-end encrypted does still mean all your traffic is indeed "
"encrypted, but within the proxy server, in order to be forwarded the "
"traffic will be decrypted once and encrypted again before being passed to"
" the client or NextBox"
msgstr "非端到端加密仍然意味着您的所有流量都已加密，但在代理服务器内，为了转发，流量将被解密一次，然后再次加密，最后才传给客户端或 NextBox。"

#: ../components/nextbox/remote/port-forwarding.rst:2
msgid "Port Forwarding & Firewall Configuration"
msgstr "端口转发和防火墙配置"

#: ../components/nextbox/remote/port-forwarding.rst:7
msgid ""
"You have your dynamic DNS correctly set up, but your NextBox is not "
"reachable using the domain."
msgstr "您已正确设置了动态 DNS，但您的 NextBox 无法通过域名连接。"

#: ../components/nextbox/remote/port-forwarding.rst:9
msgid ""
"Before looking into this topic, make sure your domain correctly resolves "
"to your IP."
msgstr "在研究此主题之前，请确保您的域名能正确解析到您的 IP。"

#: ../components/nextbox/remote/port-forwarding.rst:15
msgid ""
"For both IPv4 and IPv6 you need to properly configure your internet "
"router to allow access to your NextBox. While most internet routers will "
"refer to this configuration as *port forwarding*, in fact IPv4 based "
"(dynamic) DNS will resolve to your router's IP. But IPv6 in contrast will"
" resolve to a (globally) unique IP, which refers to your NextBox."
msgstr ""
"对于 IPv4 和 IPv6，您都需要正确配置互联网路由器，以允许访问您的 "
"NextBox。虽然大多数互联网路由器将此配置称为*端口转发*，但事实上，基于 IPv4 的（动态）DNS 将解析到路由器的 "
"IP。但与此相反，IPv6 会解析到一个（全球）唯一的 IP，也就是你的 NextBox。"

#: ../components/nextbox/remote/port-forwarding.rst:20
msgid ""
"Therefore in technical terms IPv4 needs port forwarding to be enabled and"
" for IPv6 you need to open the firewall to allow access to your NextBox. "
"But in reality most routers do not differentiate between those and just "
"name it *port sharing* for either IPv4 or IPv6."
msgstr ""
"因此，从技术角度讲，IPv4 需要启用端口转发，而 IPv6 则需要打开防火墙，允许访问 "
"NextBox。但实际上，大多数路由器并不区分IPv4和IPv6，只是将其命名为 \"端口共享\"。"

#: ../components/nextbox/remote/port-forwarding.rst:28
msgid ""
"**The port-forwarding and/or firewall rules have to be configured to "
"allow traffic on ports 80 (HTTP-Server) and 443 (HTTPS-Server).**"
msgstr "**必须配置端口转发和/或防火墙规则，以允许 80 端口（HTTP 服务器）和 443 端口（HTTPS 服务器）的流量**。"

#: ../components/nextbox/remote/port-forwarding.rst:31
msgid ""
"On a recent *Fritz!Box* you will find this configuration inside: "
"\"Internet -> Permit Access -> Port Sharing\""
msgstr ""
"在最近的 *Fritz!Box* 上，您可以在 \"Internet -> Permit Access -> Port Sharing\"（互联网"
" -> 允许访问 -> 端口共享）中找到此配置。"

#: ../components/nextbox/remote/proxy.rst:2
msgid "Backwards Proxy Remote Access"
msgstr "反向代理远程访问"

#: ../components/nextbox/remote/proxy.rst:4
msgid ""
"**This is the fastest and easiest way to make your NextBox available for "
"remote access.**"
msgstr "**这是让您的 NextBox 可用于远程访问的最快、最简单的方法。"

#: ../components/nextbox/remote/proxy.rst:7
msgid ""
"The only information to provide is the (sub)domain your NextBox should be"
" available at.  There is also no need for a port forwarding configuration"
" or any other setting to be done at your internet router. Although this "
"method is recommended, please be aware that this method also comes with "
"some drawbacks:"
msgstr ""
"您只需提供 NextBox 的（子）域名。  "
"您也无需在互联网路由器上进行端口转发配置或任何其他设置。虽然推荐使用这种方法，但请注意这种方法也有一些缺点："

#: ../components/nextbox/remote/proxy.rst:12
msgid ""
"All traffic is passed through our (backwards) proxy server, thus is not "
"end-to-end encrypted.  *In particular, if this server is compromised, "
"your traffic might be readable.*"
msgstr "所有流量均通过我们的（后向）代理服务器传输，因此未进行端到端加密。  *特别是，如果该服务器被入侵，您的流量可能会被读取。"

#: ../components/nextbox/remote/proxy.rst:16
#, python-format
msgid ""
"The same reason also introduces a bandwith bottleneck, if you are "
"connecting to your NextBox from within your local area network (LAN). As "
"all traffic has to be send to our proxy server and from there to your "
"NextBox, the available bandwidth is limited to roughly 50% of your upload"
" or download bandwidth (whichever is smaller)."
msgstr ""
"如果您从局域网 (LAN) 连接到 NextBox，同样的原因也会造成带宽瓶颈。由于所有流量都必须发送到我们的代理服务器，再从那里发送到您的 "
"NextBox，因此可用带宽被限制在大约 50% of 上传或下载带宽（以较小者为准）。"

#: ../components/nextbox/remote/proxy.rst:23
msgid ""
"In order to not be affected by these drawbacks you can set up a "
":doc:`dynamic DNS provider <dynamic-dns>` or a :doc:`static domain "
"<static>`."
msgstr "为了不受这些缺点的影响，您可以设置 :doc:` 动态 DNS 提供商 <dynamic-dns>` 或 :doc:` 静态域 <static>`。"

#: ../components/nextbox/remote/proxy.rst:27
msgid "IPv6 to IPv4 Translation"
msgstr "IPv6 到 IPv4 转换"

#: ../components/nextbox/remote/proxy.rst:29
msgid ""
"If your NextBox is only available through IPv6 (e.g., DS-Lite internet "
"connection) the backwards proxy might be the only way to access your "
"NextBox using a non-IPv6 enabled device. As of today e.g., various mobile"
" network providers do not support IPv6 yet."
msgstr ""
"如果您的 NextBox 只能通过 IPv6（如 DS-Lite 互联网连接）访问，则向后代理可能是使用不支持 IPv6 的设备访问 "
"NextBox 的唯一方法。目前，各种移动网络提供商还不支持 IPv6。"

#: ../components/nextbox/remote/static.rst:2
msgid "Static DNS Configuration"
msgstr "静态 DNS 配置"

#: ../components/nextbox/remote/static.rst:4
msgid ""
"This configuration shall be used, if you configured DNS and thus a domain"
" for your NextBox in e.g., your internet router."
msgstr "如果您在互联网路由器等设备上为 NextBox 配置了 DNS 和域名，则应使用此配置。"

#: ../components/nextbox/remote/static.rst:11
msgid ""
"In order to use the configured domain with your NextBox and its Nextcloud"
" instance you must provide the full domain here to trust this domain "
"inside your Nextcloud instance."
msgstr "要在 NextBox 及其 Nextcloud 实例中使用配置的域，您必须在此处提供完整的域，以便在 Nextcloud 实例中信任该域。"

#: ../components/nextbox/remote/static.rst:15
msgid ""
"For instance inside a \"Fritz!Box\" this can be done by navigating to: "
"\"Internet -> Permit Access -> DynDNS\" and configuring a dynamic DNS "
"provider of your choice."
msgstr ""
"例如，在 \"Fritz!Box \"中，可以通过导航至 \"Internet -> Permit Access -> DynDNS "
"\"并配置您选择的动态 DNS 提供商来实现。"

#: ../components/nextbox/remote/walkthrough.rst:2
msgid "Remote Access Walkthrough"
msgstr "远程访问演练"

#: ../components/nextbox/remote/walkthrough.rst:6
msgid ""
"This documentation aims to give you a thorough introduction into the "
"Remote Access topic, including a decision helper **why to choose a "
"particular method**. If you are familiar with this topic you might want "
"to jump directly to :doc:`method-comparison`."
msgstr ""
"本文档旨在向您全面介绍远程访问主题，包括决策帮助 ** 为什么选择特定方法**。如果你熟悉这个主题，你可能想直接跳到 :doc:`method-"
"comparison`."

#: ../components/nextbox/remote/walkthrough.rst:12
msgid "What? Why?"
msgstr "什么？为什么？"

#: ../components/nextbox/remote/walkthrough.rst:14
msgid ""
"You want to access your NextBox from everywhere, this means you want to "
"access your NextBox from the internet through your internet router."
msgstr "您希望从任何地方访问您的 NextBox，这意味着您希望通过互联网路由器从互联网访问您的 NextBox。"

#: ../components/nextbox/remote/walkthrough.rst:17
msgid ""
"On top of that you want to make sure that your data (traffic) is not "
"readable by anyone else despite you. Nowadays this is accomplished by "
"using `HTTPS`_, which is driven by `TLS`_."
msgstr "此外，您还要确保您的数据（流量）不会被其他人读取。如今，这可以通过使用由 `TLS`_ 驱动的 `HTTPS`_ 来实现。"

#: ../components/nextbox/remote/walkthrough.rst:-1
msgid "padlock-tls"
msgstr "挂锁-tls"

#: ../components/nextbox/remote/walkthrough.rst:24
msgid ""
"Right next to the URL (*nitrokey.com*) you see this small padlock, which "
"translates to: This website provides an encrypted connection and all your"
" traffic is not readable by anyone between your browser (client) and the "
"Nitrokey server."
msgstr ""
"在网址（*nitrokey.com*）的旁边，您会看到一个小挂锁，它的意思是：本网站提供加密连接，在您的浏览器（客户端）和 Nitrokey "
"服务器之间，任何人都无法读取您的所有流量。"

#: ../components/nextbox/remote/walkthrough.rst:28
msgid ""
"Once your NextBox is set up properly and you see the dashboard the first "
"time your URL bar in your browser might look like this:"
msgstr "一旦您的 NextBox 设置正确，您第一次看到仪表板时，浏览器中的 URL 栏可能会如下所示："

#: ../components/nextbox/remote/walkthrough.rst:-1
msgid "no-padlock"
msgstr "无联锁"

#: ../components/nextbox/remote/walkthrough.rst:34
msgid ""
"In this case the local IP has been used (``192.168.10.50``), this is "
"specific to your local network and equal to ``nextbox.local``. The *not "
"secure* and the warning sign transports the information that your "
"connection is **not encrypted**, thus using *http* instead of *https*. "
"For more you can read: `HTTP vs. HTTPS`_."
msgstr ""
"在这种情况下，使用的是本地 "
"IP（`192.168.10.50``），这是本地网络特有的，等于`nextbox.local``。不安全*和警告标志传递的信息是，您的连接**未加密**，因此使用*http*而非*https*。更多信息请阅读：`HTTP"
" vs. HTTPS`_。"

#: ../components/nextbox/remote/walkthrough.rst:39
msgid ""
"Obviously, access to the NextBox should be secure, thus encrypted using "
"*https*. This guide covers the different approaches to reach this goal, "
"depending on your specific needs."
msgstr "显然，对 NextBox 的访问应该是安全的，因此应使用 *https* 加密。本指南将根据您的具体需求，介绍实现这一目标的不同方法。"

#: ../components/nextbox/remote/walkthrough.rst:44
msgid "Use The Nitrokey Backwards Proxy"
msgstr "使用 Nitrokey 向后代理"

#: ../components/nextbox/remote/walkthrough.rst:46
msgid ""
"This method is by far the easiest to set up and use to get an encrypted "
"to your NextBox from everywhere, the only think to do is to go to *Remote"
" Access* and *Backwards Proxy* inside the NextBox-App, insert a sub-"
"domain you want to use and click *Enable Quickstart Remote Access*. From "
"now on you can access your NextBox using a URL like this:"
msgstr ""
"这种方法是迄今为止最容易设置和使用的，可以从任何地方加密访问您的 NextBox，只需进入 NextBox 应用程序内的 *Remote "
"Access* 和 *Backward Proxy*，插入您要使用的子域，然后点击 *Enable Quickstart Remote "
"Access*。从现在起，您可以使用类似这样的 URL 访问 NextBox："

#: ../components/nextbox/remote/walkthrough.rst:-1
msgid "proxy"
msgstr "代理"

#: ../components/nextbox/remote/walkthrough.rst:55
msgid ""
"The padlock is there---your data (if you are using your "
"``[subdomain].nextbox.link`` URL) is now encrypted!"
msgstr "挂锁就在那里--您的数据（如果您使用的是 ``[subdomain].nextbox.link`` URL）现在已加密！"

#: ../components/nextbox/remote/walkthrough.rst:58
msgid ""
"So far so good, but wait, this works, but has two major drawbacks: "
"Performance and a chained end-to-end encryption."
msgstr "到目前为止一切顺利，但等等，这虽然有效，却有两大缺点：性能和链式端到端加密。"

#: ../components/nextbox/remote/walkthrough.rst:62
msgid "Performance"
msgstr "性能"

#: ../components/nextbox/remote/walkthrough.rst:64
msgid ""
"The backwards proxy works like this: Your NextBox connects to the "
"Nitrokey Proxy server and opens up a (backwards) channel. So even though "
"your NextBox is maybe standing right next to your computer, the traffic "
"goes all the way from your computer, into the internet, to the Nitrokey "
"server and all the way back to your NextBox."
msgstr ""
"反向代理的工作原理是这样的：您的 NextBox 会连接到 Nitrokey 代理服务器，并打开一个（反向）通道。因此，即使您的 NextBox "
"就在您的电脑旁边，流量也会从您的电脑一路传到互联网，再传到 Nitrokey 服务器，最后回到您的 NextBox。"

#: ../components/nextbox/remote/walkthrough.rst:70
msgid ""
"Simplified, one could say all the traffic has to travel a long way "
"towards the NextBox instead of talking directly to the NextBox. This "
"essentially is a drawback of all proxies. The effect for you as a user is"
" that data transfers will be slower, than a direct connection."
msgstr ""
"简单地说，所有流量都要经过很长一段路才能到达 NextBox，而不是直接与 NextBox "
"对话。这基本上是所有代理服务器的缺点。对用户来说，数据传输的速度会比直接连接慢。"

#: ../components/nextbox/remote/walkthrough.rst:76
msgid "Chained End-to-End Encryption"
msgstr "链式端到端加密"

#: ../components/nextbox/remote/walkthrough.rst:78
msgid ""
"Another drawback is that your traffic is not fully end-to-end encrypted. "
"To be clear: Your data is still encrypted, but only on the path from your"
" client (browser) to the Nitrokey server, there the data will be "
"decrypted and encrypted again to be sent to the NextBox."
msgstr ""
"另一个缺点是，您的流量不是完全端到端加密的。需要说明的是：您的数据仍然是加密的，但只是在从客户端（浏览器）到 Nitrokey "
"服务器的路径上加密，数据将在那里解密并再次加密后发送到 NextBox。"

#: ../components/nextbox/remote/walkthrough.rst:83
msgid ""
"Essentially this means you have to trust Nitrokey, because technically "
"whoever is controlling this server might read the traffic that goes "
"through it using this proxy.  Nitrokey would never do such a thing, but "
"there is a certain remaining risk that someone could compromise this "
"server and read your traffic."
msgstr ""
"从本质上讲，这意味着您必须信任 Nitrokey，因为从技术上讲，控制该服务器的人可能会通过该代理读取通过它的流量。  Nitrokey "
"绝不会这样做，但仍存在一定的风险，即有人可能会入侵该服务器并读取您的流量。"

#: ../components/nextbox/remote/walkthrough.rst:88
msgid ""
"Obviously this can be done in a better way, but still this might be "
"enough depending on your personal usage scenario."
msgstr "显然，这可以用更好的方法来实现，但根据您的个人使用情况，这可能已经足够了。"

#: ../components/nextbox/remote/walkthrough.rst:92
msgid "Acquire Your Own Certificate"
msgstr "获取自己的证书"

#: ../components/nextbox/remote/walkthrough.rst:94
msgid ""
"This is clearly the best and most secure method to remote access your "
"NextBox as it will give your the best performance and true end-to-end "
"encryption, but it comes with some additional configuration needs. We "
"start first with a very quick introduction what encryption with an own "
"certificate means and what is needed."
msgstr ""
"这显然是远程访问 NextBox "
"的最佳和最安全的方法，因为它能为您提供最佳性能和真正的端到端加密，但它需要一些额外的配置。我们首先简要介绍一下使用自有证书加密的含义和所需配置。"

#: ../components/nextbox/remote/walkthrough.rst:101
msgid "The Certificate Authority"
msgstr "证书颁发机构"

#: ../components/nextbox/remote/walkthrough.rst:103
msgid ""
"A `CA`_, as the name suggests, is *someone* who is able to provide you "
"with a digital certificate, which will allow you to use `TLS`_, thus "
"encrypt the your traffic, enabling you to use *https*."
msgstr "顾名思义，\"CA \"就是能够为你提供数字证书的*人，他将允许你使用 \"TLS\"，从而加密你的流量，使你能够使用*https*。"

#: ../components/nextbox/remote/walkthrough.rst:107
msgid ""
"By definition, a `CA`_ is only allowed to issue a certificate, if they "
"can verify that your are the **owner of a public internet (sub)domain**. "
"This ownership is a very important property as this, despite the "
"encryption, additionally allows the client (browser) to verify that the "
"traffic that is sent by a certain website is really originating from this"
" (sub)domain and no man-in-the-middle has injected some data, which could"
" compromise your client."
msgstr ""
"根据定义，\"CA "
"\"只有在能够证实您是公共互联网（子）域**的**所有者时，才允许签发证书。这种所有权是一个非常重要的属性，因为尽管进行了加密，但它还允许客户端（浏览器）验证某个网站发送的流量是否真正来自该（子）域，以及中间人是否注入了某些数据，从而危及您的客户端。"

#: ../components/nextbox/remote/walkthrough.rst:115
msgid ""
"This being said, obviously it is not possible to acquire an certificate "
"for *nextbox.local* or even a local IP, as these are neither public nor "
"unique."
msgstr "尽管如此，显然不可能为 *nextbox.local* 甚至本地 IP 获取证书，因为这些 IP 既不是公共的，也不是唯一的。"

#: ../components/nextbox/remote/walkthrough.rst:119
msgid "Acquire a public (sub)domain for your NextBox"
msgstr "为您的 NextBox 获取公共（子）域名"

#: ../components/nextbox/remote/walkthrough.rst:121
msgid ""
"The NextBox comes with a feature (:doc:`dynamic-dns`), which allows you "
"to easily register a public sub-domain for your NextBox using a so-called"
" *dynamic DNS provider*, here namely `deSEC`_. This particular service is"
" totally free and a non-profit organization."
msgstr ""
"NextBox 附带一项功能（:doc:`dynamic-dns`），允许您使用所谓的*动态 DNS 提供商*（此处即`deSEC`_）为您的 "
"NextBox 轻松注册一个公共子域。这项特殊服务完全免费，并且是一个非营利组织。"

#: ../components/nextbox/remote/walkthrough.rst:126
msgid ""
"This is a very important step prior to acquiring a certificate, as this "
"sub-domain registered through `deSEC`_ will be public and unique, whose "
"as we learned are needed to acquire a certificate."
msgstr "这是获取证书之前非常重要的一步，因为通过 `deSEC`_ 注册的子域将是公开和唯一的，而我们已经了解到这是获取证书所必需的。"

#: ../components/nextbox/remote/walkthrough.rst:131
msgid "Step-by-Step DNS & TLS"
msgstr "逐步实现 DNS 和 TLS"

#: ../components/nextbox/remote/walkthrough.rst:133
msgid ""
"This may sound complex, but the NextBox comes with all you need to get "
"through this process:"
msgstr "这听起来可能很复杂，但 NextBox 提供了完成这一过程所需的一切："

#: ../components/nextbox/remote/walkthrough.rst:136
#: ../components/nextbox/remote/walkthrough.rst:160
msgid "Navigate to the Nextcloud NextBox-App"
msgstr "导航至 Nextcloud NextBox 应用程序"

#: ../components/nextbox/remote/walkthrough.rst:137
msgid "Click on \"Remote Access\" -> \"Guided Dynamic DNS\""
msgstr "单击 \"远程访问\"->\"指导动态 DNS"

#: ../components/nextbox/remote/walkthrough.rst:138
msgid ""
"Insert a valid e-mail address you have access to into the first input "
"field"
msgstr "在第一个输入框中输入您可以访问的有效电子邮件地址"

#: ../components/nextbox/remote/walkthrough.rst:139
msgid ""
"Insert the full sub-domain your NextBox shall be available through. As "
"`deSEC`_ is used here, your sub-domain always has to end with *dedyn.io*,"
" so something like: ``mynextbox.dedyn.io``"
msgstr ""
"插入您的 NextBox 应通过的完整子域名。由于这里使用的是 `deSEC`_ ，您的子域名必须以 *dedyn.io* "
"结尾，因此类似于：``mynextbox.dedyn.io``"

#: ../components/nextbox/remote/walkthrough.rst:142
msgid ""
"Click \"Register at deSEC\" and the NextBox will try to register your "
"domain and e-mail at `deSEC`_. This may fail, if the sub-domain you chose"
" is already taken, please choose another one in this case."
msgstr ""
"点击 \"在 deSEC 注册\"，NextBox 将尝试在 `deSEC`_ "
"注册您的域名和电子邮件。如果您选择的子域名已被注册，则注册可能会失败，此时请选择另一个子域名。"

#: ../components/nextbox/remote/walkthrough.rst:145
msgid ""
"You will receive an e-mail in which you should verify that this is your "
"e-mail by clicking on the provided link"
msgstr "您将收到一封电子邮件，请点击其中提供的链接，确认这是您的电子邮箱。"

#: ../components/nextbox/remote/walkthrough.rst:147
msgid ""
"In step two, you will have to input a *token*, which you received after "
"you clicked the verification link and completed the captcha."
msgstr "第二步，您需要输入一个*token*，这是您点击验证链接并完成验证码后收到的。"

#: ../components/nextbox/remote/walkthrough.rst:150
msgid ""
"Now you are the owner of your very own sub-domain. You can try and visit "
"this subdomain now, but you will see that it will only (best case) end up"
" on your internet router. This is because your router is your door to the"
" internet and it has to be made aware that you want specific traffic to "
"be forwarded to your NextBox. Please set up :doc:`port-forwarding` on "
"your internet router now, once this is done, visiting your registered "
"sub-domain in the browser will show you your NextBox' Nextcloud instance."
msgstr ""
"现在，你就是自己子域的主人了。您现在可以尝试访问这个子域，但您会发现它（最好）只能访问您的互联网路由器。这是因为您的路由器是您通往互联网的大门，必须让它知道您希望将特定流量转发到您的"
" NextBox。请现在就在您的互联网路由器上设置 :doc:`端口转发`，设置完成后，在浏览器中访问您注册的子域将显示您的 NextBox' "
"Nextcloud 实例。"

#: ../components/nextbox/remote/walkthrough.rst:158
msgid "Great from here there is just one step remaining:"
msgstr "很好，现在只剩下一步了："

#: ../components/nextbox/remote/walkthrough.rst:161
msgid "Click on \"HTTPS / TLS\""
msgstr "点击 \"HTTPS/TLS\"。"

#: ../components/nextbox/remote/walkthrough.rst:162
msgid "Click the button \"Enable TLS\""
msgstr "点击 \"启用 TLS \"按钮"

#: ../components/nextbox/remote/walkthrough.rst:163
msgid "Please wait some moments to acquire your certificate"
msgstr "请稍候片刻获取证书"

#: ../components/nextbox/remote/walkthrough.rst:165
msgid ""
"Shortly after you will be automatically redirected to your now encrypted "
"NextBox sub-domain, which might look similar to this:"
msgstr "不久后，您将被自动重定向到已加密的 NextBox 子域名，看起来可能与下面类似："

#: ../components/nextbox/remote/walkthrough.rst:-1
msgid "dns-url"
msgstr "dns-url"

#: ../components/nextbox/remote/walkthrough.rst:171
msgid ""
"There we are, your very own sub-domain, certificate and fully end-to-end "
"encrypted Nextcloud."
msgstr "这就是我们，您自己的子域名、证书和完全端到端加密的 Nextcloud。"

#: ../components/nextbox/remote/walkthrough.rst:174
msgid ""
"If you encounter problems, please read the other articles inside the "
":doc:`Remote Access Section<index>`."
msgstr "如果遇到问题，请阅读 :doc:`Remote Access Section<index>` 中的其他文章。"

#: ../components/nextbox/technical/factory-reset.rst:2
#: ../components/nitrokey3/shared/reset.rst.inc:2
#: ../components/nitrokey3/windows/piv/factory_reset.rst:2
#: ../components/nitropad/factory-reset.rst.inc:2
#: ../components/nitrowall/nw750/factory-reset.rst:2
#: ../components/pro/factory-reset.rst.inc:2
#: ../components/start/factory-reset.rst:2
#: ../components/storage/linux/factory-reset.rst:2
#: ../components/storage/mac/factory-reset.rst:2
#: ../components/storage/windows/factory-reset.rst:2
msgid "Factory Reset"
msgstr "出厂重置"

#: ../components/nextbox/technical/factory-reset.rst:7
msgid ""
"Factory Resetting your NextBox will inevitably **delete all your files** "
"on the NextBox and any configuration settings."
msgstr "出厂重置 NextBox 将不可避免地**删除 NextBox 上的所有文件**和任何配置设置。"

#: ../components/nextbox/technical/factory-reset.rst:10
msgid ""
"**To factory reset your NextBox simply press the hardware button for 5 "
"seconds.**"
msgstr "**要对 NextBox 进行出厂重置，只需按下硬件按钮 5 秒钟**。"

#: ../components/nextbox/technical/factory-reset.rst:12
msgid ""
"The NextBox LED will change to *blue* once you press the button, after "
"the 5 seconds have passed the color will change to blinking red (see "
":doc:`LED documentation <led-colors>`). Once the LED has finally reached "
"*green* again your NextBox is ready for the initial setup as described in"
" :doc:`Getting Started <../gettingstarted>`"
msgstr ""
"按下按钮后，NextBox 的 LED 将变为*蓝色*，5 秒钟后，颜色将变为闪烁的红色（参见 :doc:`LED 文档 <led-"
"colors>`）。一旦 LED 最终再次变为*绿色*，您的 NextBox 就可以进行 :doc:`Getting Started "
"<../gettingstarted>` 中所述的初始设置了。"

#: ../components/nextbox/technical/factory-reset.rst:22
#: ../components/nextbox/technical/soft-reset.rst:21
msgid ""
"The hardware button is a pinhole-style button similar to other embedded "
"devices. In order to press it, it is recommended to use a thin (~1mm) "
"needle-like pin. E.g., the pin to remove a sim-card from a smartphone is "
"working great. **Further take care to not press the button too hard, be "
"careful, there should be a recognizable haptic feedback (button click) "
"with minimal applied force.**"
msgstr ""
"硬件按钮是一个针孔式按钮，与其他嵌入式设备类似。要按下它，建议使用细针（约 1 毫米）。例如，从智能手机上取下 SIM "
"卡的针就很好用。**另外，按压按钮时不要用力过猛，要小心谨慎，应在施加最小力的情况下产生可识别的触觉反馈（按钮咔哒声）。"

#: ../components/nextbox/technical/index.rst:2
msgid "Technical Documentation"
msgstr "技术文档"

#: ../components/nextbox/technical/led-colors.rst:2
msgid "LED Colors and Patterns"
msgstr "LED 颜色和图案"

#: ../components/nextbox/technical/led-colors.rst:5
msgid "Color"
msgstr "颜色"

#: ../components/nextbox/technical/led-colors.rst:5
msgid "Pattern"
msgstr "图案"

#: ../components/nextbox/technical/led-colors.rst:7
msgid "Dimmed-out-Blue"
msgstr "调光蓝"

#: ../components/nextbox/technical/led-colors.rst:7
msgid "NextBox is booting"
msgstr "NextBox 正在启动"

#: ../components/nextbox/technical/led-colors.rst:8
#: ../components/nextbox/technical/led-colors.rst:9
msgid "Green"
msgstr "绿色"

#: ../components/nextbox/technical/led-colors.rst:8
msgid "NextBox Daemon active and in regular operating mode"
msgstr "NextBox 守护进程已激活并处于正常运行模式"

#: ../components/nextbox/technical/led-colors.rst:9
msgid "Fast-Blink"
msgstr "快速闪烁"

#: ../components/nextbox/technical/led-colors.rst:9
msgid "Nextcloud is starting up (docker starting)"
msgstr "Nextcloud 正在启动（docker 启动）"

#: ../components/nextbox/technical/led-colors.rst:10
#: ../components/nextbox/technical/led-colors.rst:11
msgid "Blue"
msgstr "蓝色"

#: ../components/nextbox/technical/led-colors.rst:10
msgid "(Reset) button is currently being pressed"
msgstr "(重置）按钮正在被按下"

#: ../components/nextbox/technical/led-colors.rst:11
#: ../components/nextbox/technical/led-colors.rst:13
#: ../components/nextbox/technical/led-colors.rst:14
msgid "Blink"
msgstr "眨眼"

#: ../components/nextbox/technical/led-colors.rst:11
msgid "Soft-Reset is ongoing"
msgstr "软重置正在进行"

#: ../components/nextbox/technical/led-colors.rst:12
#: ../components/nextbox/technical/led-colors.rst:13
msgid "Yellow"
msgstr "黄色"

#: ../components/nextbox/technical/led-colors.rst:12
msgid "Initializing NextBox Daemon"
msgstr "初始化 NextBox 守护进程"

#: ../components/nextbox/technical/led-colors.rst:13
msgid "NextBox Daemon update check/apply"
msgstr "NextBox 守护进程更新检查/应用"

#: ../components/nextbox/technical/led-colors.rst:14
msgid "Red"
msgstr "红色"

#: ../components/nextbox/technical/led-colors.rst:14
msgid "Factory-Reset is ongoing"
msgstr "工厂复位正在进行中"

#: ../components/nextbox/technical/led-colors.rst:15
msgid "Purple"
msgstr "紫色"

#: ../components/nextbox/technical/led-colors.rst:15
msgid "Nextcloud Maintenance mode active"
msgstr "启用 Nextcloud 维护模式"

#: ../components/nextbox/technical/led-colors.rst:18
msgid "**Fast-Blink** means 0,5secs on and 0,5secs off"
msgstr "**快速闪烁**指 0.5 秒开启和 0.5 秒关闭"

#: ../components/nextbox/technical/led-colors.rst:19
msgid "**Blink** means 2secs on and 2secs off"
msgstr "**闪烁**表示打开 2 秒，关闭 2 秒"

#: ../components/nextbox/technical/led-colors.rst:21
msgid ""
"If the LED is *purple*, the Nextcloud instance is in maintenance mode, "
"you can force exit the maintenance mode by pushing the hardware button "
"**shortly, once**. The NextBox will then switch-off the maintenance mode."
msgstr ""
"如果 LED 指示灯为*紫色*，则表示 Nextcloud 实例处于维护模式，您可以短按硬件按钮**次，强制退出维护模式。然后，NextBox "
"将关闭维护模式。"

#: ../components/nextbox/technical/led-colors.rst:26
msgid ""
"As of today if the maintenance mode is switched using the button press, "
"the \"mail\" app will in addition be disabled as the version 1.11.0 "
"together with Nextcloud version 21.0.0.x will never exit the maintenance "
"mode."
msgstr ""
"从今天起，如果使用按键切换维护模式，\"邮件 \"应用程序也将被禁用，因为 1.11.0 版和 Nextcloud 21.0.0.x "
"版永远不会退出维护模式。"

#: ../components/nextbox/technical/replace-drive.rst:2
msgid "Replace Internal Hard-Drive"
msgstr "更换内部硬盘"

#: ../components/nextbox/technical/replace-drive.rst:7
msgid ""
"Please do this only, if you know what you are doing. By modifying the "
"NextBox you void your warranty for at least the hardware of the NextBox. "
"These steps are generally not covered by the support, you are modifying "
"your NextBox at your own risk!"
msgstr ""
"只有当您知道自己在做什么时，才可以这样做。修改 NextBox 后，您将失去至少对 NextBox "
"硬件的保修。这些步骤通常不在支持范围内，您必须自行承担修改 NextBox 的风险！"

#: ../components/nextbox/technical/replace-drive.rst:14
msgid "Linux(-like) operating system"
msgstr "类 Linux 操作系统"

#: ../components/nextbox/technical/replace-drive.rst:15
msgid "2.5'' hard-drive with a max height of 15mm, most are 7mm"
msgstr "2.5'' 硬盘最大高度为 15 毫米，大多数为 7 毫米"

#: ../components/nextbox/technical/replace-drive.rst:16
msgid "A user which can acquire root-rights using ``sudo``"
msgstr "可以使用 ``sudo`` 获取 root 权限的用户"

#: ../components/nextbox/technical/replace-drive.rst:17
msgid ""
"The following commands must be available: ``sudo``, ``parted``, "
"``mkfs.ext4``, ``bash``"
msgstr "下列命令必须可用：sudo\"、\"parted\"、\"mkfs.ext4\"、\"bash"

#: ../components/nextbox/technical/replace-drive.rst:18
msgid ""
"At least a basic understanding about mounting / unmounting and shell-"
"scripts (execution)"
msgstr "至少对挂载/卸载和 shell 脚本（执行）有基本了解"

#: ../components/nextbox/technical/replace-drive.rst:19
msgid "Phillips Screwdriver"
msgstr "十字螺丝刀"

#: ../components/nextbox/technical/replace-drive.rst:20
msgid "Set up the ssh-access on your NextBox"
msgstr "在 NextBox 上设置 ssh 访问权限"

#: ../components/nextbox/technical/replace-drive.rst:23
msgid ""
"The script which is used will acquire root rights to wipe the hard-drive "
"you pass to the script. **Be extremely careful to pass the correct device"
" to the script, if you pass your system partition, this script will "
"destroy your runnning OS!** Any data on the passed hard-drive will "
"inevitably be deleted!"
msgstr ""
"所使用的脚本将获得 root "
"权限，以擦除您传递给脚本的硬盘。**请务必小心谨慎地向脚本传递正确的设备，如果你传递的是系统分区，该脚本将破坏你正在运行的操作系统！** "
"传递的硬盘上的任何数据都将不可避免地被删除！"

#: ../components/nextbox/technical/replace-drive.rst:30
msgid ""
"Read the following steps completely and thoroughly **before executing "
"them**, if you do not understand what a certain step means this might be "
"an indication that you should not do this by yourself."
msgstr "在执行下列步骤**之前，请完整、彻底地阅读这些步骤，如果你不明白某个步骤的含义，这可能表明你不应该自己完成这些步骤。"

#: ../components/nextbox/technical/replace-drive.rst:35
msgid "Prepare New Hard-Disk"
msgstr "准备新硬盘"

#: ../components/nextbox/technical/replace-drive.rst:37
msgid ""
"Get your ``nextbox.conf`` file from your original hard-disk using ssh, it"
" is located on your NextBox inside the ``/srv/nextbox`` directory"
msgstr "使用 ssh 从原始硬盘上获取 ``nextbox.conf`` 文件，它位于 NextBox 的 ``/srv/nextbox`` 目录中。"

#: ../components/nextbox/technical/replace-drive.rst:39
msgid "Save your ``nextbox.conf`` on your computer"
msgstr "在电脑上保存您的 ``nextbox.conf"

#: ../components/nextbox/technical/replace-drive.rst:40
msgid ""
"Get the following script: "
"https://raw.githubusercontent.com/Nitrokey/nextbox/master/assembly/simple_prepare_harddrive.sh"
msgstr ""
"获取以下脚本： "
"https://raw.githubusercontent.com/Nitrokey/nextbox/master/assembly/simple_prepare_harddrive.sh"

#: ../components/nextbox/technical/replace-drive.rst:41
msgid "Make the script executable: ``chmod +x simple_prepare_harddrive.sh``"
msgstr "使脚本可执行：`chmod +x simple_prepare_harddrive.sh``"

#: ../components/nextbox/technical/replace-drive.rst:42
msgid "Connect your new hard-disk to your computer"
msgstr "将新硬盘连接到电脑"

#: ../components/nextbox/technical/replace-drive.rst:43
msgid ""
"Determine your hard-disk's device name (e.g., ``/dev/sdb``) and make sure"
" none of its partitions are mounted"
msgstr "确定硬盘的设备名称（如 ``/dev/sdb``），并确保没有挂载任何分区"

#: ../components/nextbox/technical/replace-drive.rst:47
msgid ""
"**Again: think at least twice about the following step. Make sure you are"
" referring to the correct hard-drive device (and NOT a partition, means**"
" ``/dev/sdb1`` **is wrong).** The script will decline to do the operation"
" on ``/dev/sda`` as there are good chances this might be your system "
"hard-disk, if you really need this you can comment out lines 23-26 inside"
" the script."
msgstr ""
"**再次：请至少三思以下步骤。确保你指的是正确的硬盘设备（而不是分区，这意味着**`/dev/sdb1``**是错误的）。**脚本会拒绝在`/dev/sda``上执行操作，因为这很有可能是你的系统硬盘，如果你真的需要，可以注释掉脚本中的第"
" 23-26 行。"

#: ../components/nextbox/technical/replace-drive.rst:52
msgid ""
"Run the script using the device name you have determined. Once prompted "
"for your sudo-password please provide it to allow r/w access to the hard-"
"drive:"
msgstr "使用确定的设备名称运行脚本。当提示输入 sudo 密码时，请输入该密码，以允许对硬盘进行 R/W 访问："

#: ../components/nextbox/technical/replace-drive.rst:62
msgid "Watch the script's output for any errors, there should be none"
msgstr "注意脚本输出中是否有错误，应该没有错误"

#: ../components/nextbox/technical/replace-drive.rst:63
msgid ""
"At the end of the script you will be asked to mount the created partition"
" and copy over the ``nextbox.conf`` (to ``/nextbox``) you copied in step "
"1. and 2., unmount the partition and you have successfully prepared your "
"new hard-drive."
msgstr ""
"脚本结束时会要求你挂载创建的分区，并将步骤 1 和步骤 2 中复制的 ``nextbox.conf`` 复制到 "
"``/nextbox``，卸载分区后，你就成功准备好了新硬盘。"

#: ../components/nextbox/technical/replace-drive.rst:70
msgid "Replacement Guide"
msgstr "更换指南"

#: ../components/nextbox/technical/replace-drive.rst:72
msgid ""
"Inside the NextBox Nextcloud App go to \"System Settings\" and switch it "
"off your NextBox using the \"Poweroff\" button"
msgstr "在 NextBox Nextcloud 应用程序中进入 \"系统设置\"，使用 \"关机 \"按钮关闭 NextBox。"

#: ../components/nextbox/technical/replace-drive.rst:74
msgid ""
"Once the Status LED is shortly off (not entirely, thus very dark) and the"
" Ethernet port LEDs are off you can unplug all cables from your NextBox"
msgstr "一旦状态 LED 熄灭（不是完全熄灭，因此颜色很深），以太网端口 LED 熄灭，您就可以拔下 NextBox 上的所有电缆。"

#: ../components/nextbox/technical/replace-drive.rst:76
msgid "Unscrew all 8 Phillips screws"
msgstr "拧下所有 8 个十字螺丝"

#: ../components/nextbox/technical/replace-drive.rst:77
msgid "Carefully remove the top-cover (as vertical as possible) first"
msgstr "先小心取下顶盖（尽量垂直"

#: ../components/nextbox/technical/replace-drive.rst:78
msgid ""
"Again carefully, vertically remove the bottom cover, now you see the so-"
"called bridge"
msgstr "再次小心翼翼地垂直取下底盖，现在就可以看到所谓的桥接器了"

#: ../components/nextbox/technical/replace-drive.rst:79
msgid ""
"Unfold the USB-to-SATA cable and put the NextBox bridge upside down onto "
"a electronics friendly surface like a desk as shown in the following "
"image"
msgstr "展开 USB 转 SATA 电缆，然后将 NextBox 桥接器倒置放置在桌面等便于电子设备使用的表面上，如下图所示"

#: ../components/nextbox/technical/replace-drive.rst
msgid "nextbox-backside"
msgstr "下一方框背面"

#: ../components/nextbox/technical/replace-drive.rst:86
msgid ""
"Unscrew the Phillips screws holding the hard-disk in position (the amount"
" of screws may differ, depending on your hard-disk type) shown in the "
"following image:"
msgstr "如下图所示，拧下固定硬盘的十字螺丝（根据硬盘类型，螺丝数量可能不同）："

#: ../components/nextbox/technical/replace-drive.rst
msgid "nextbox-backside-screws"
msgstr "下一个盒子背面的螺钉"

#: ../components/nextbox/technical/replace-drive.rst:93
msgid ""
"Once the screws are removed, push the hard-disk carefully towards the "
"direction shown in the image above. Do not push it towards the other "
"direction, you might damage the USB cable."
msgstr "卸下螺丝后，小心地将硬盘推向上图所示的方向。切勿向其他方向推动，否则可能会损坏 USB 线缆。"

#: ../components/nextbox/technical/replace-drive.rst:95
msgid "Remove the USB-to-SATA cable from the hard-drive"
msgstr "从硬盘上拔下 USB 转 SATA 电缆"

#: ../components/nextbox/technical/replace-drive.rst:98
msgid ""
"Avoid disconnecting the male-female USB connector to not change the "
"position and bending of the cable. If you have to: be careful to keep the"
" force as small as possible onto the 90° part of the USB extension cable."
msgstr "避免断开 USB 公母接头，以免改变电缆的位置和弯曲度。如果必须这样做，请注意尽量减小对 USB 延长线 90° 部分的作用力。"

#: ../components/nextbox/technical/replace-drive.rst:102
msgid "Connect your previously prepared new hard-drive"
msgstr "连接之前准备好的新硬盘"

#: ../components/nextbox/technical/replace-drive.rst:103
msgid ""
"Carefully slide your new hard-drive into the bridge and fix it into the "
"right position using the previously removed screws"
msgstr "小心地将新硬盘滑入桥接器，并使用先前卸下的螺钉将其固定在正确的位置上"

#: ../components/nextbox/technical/replace-drive.rst:105
msgid ""
"Fold the USB-to-SATA cable (in circles) into the open space behind the "
"hard-disk."
msgstr "将 USB 转 SATA 电缆（圆形）折叠到硬盘后面的空隙中。"

#: ../components/nextbox/technical/replace-drive.rst:106
msgid "Finally assemble your NextBox again in reverse order using steps 5. to 3."
msgstr "最后按步骤 5 至 3 的相反顺序再次组装 NextBox。"

#: ../components/nextbox/technical/replace-drive.rst:108
msgid ""
"On first boot after the assembly, give the NextBox enough time to boot "
"and get all necessary packages from the internet. **Make sure you have "
"ethernet connected**. You should expect a changing status LED (yellow "
"shall be first) quite fast (less than 2 minutes). If the status LED does "
"not change at all, it is likely that there is something wrong with your "
"hard-drive wiring or contents."
msgstr ""
"组装完成后首次启动时，请给 NextBox 足够的时间启动并从互联网上获取所有必要的软件包。**确保已连接以太网**。您应该期待 LED "
"状态指示灯（黄色为先）快速变化（少于 2 分钟）。如果 LED 状态指示灯没有任何变化，则可能是硬盘线路或内容出了问题。"

#: ../components/nextbox/technical/soft-reset.rst:2
msgid "Soft Reset"
msgstr "软复位"

#: ../components/nextbox/technical/soft-reset.rst:4
msgid ""
"**If ever your NextBox doesn't start or behaves strangely the soft reset "
"might fix your problems** The soft reset functionality tries to fix some "
"common failures on your NextBox. So whenever something is wrong, e.g. the"
" NextBox doesn't start, the first thing you could try is a soft reset."
msgstr ""
"**如果您的 NextBox 无法启动或出现异常，软重置可能会解决您的问题** 软重置功能可修复 NextBox "
"上的一些常见故障。因此，只要出现问题，例如 NextBox 无法启动，您首先可以尝试软重置。"

#: ../components/nextbox/technical/soft-reset.rst:9
msgid ""
"**To start the soft reset on your NextBox simply press the hardware "
"button 2 times within 2 seconds.**"
msgstr "**要启动 NextBox 的软重置，只需在 2 秒内按 2 次硬件按钮即可。"

#: ../components/nextbox/technical/soft-reset.rst:11
msgid ""
"The NextBox LED will change to *blue* on every press, after the second "
"press it will change to blinking blue (see :doc:`LED documentation <led-"
"colors>`). Once the LED has finally reached *green* again for at least 20"
" seconds your NextBox is ready for use again. Please do not unplug your "
"NextBox during this process as that might break something."
msgstr ""
"每次按下时，NextBox 的 LED 指示灯将变为*蓝色*，第二次按下后将变为闪烁的蓝色（参见 :doc:`LED 文档 <led-"
"colors>`）。一旦 LED 最终恢复*绿色*至少 20 秒，您的 NextBox 就可以再次使用了。在此过程中，请不要拔下 NextBox "
"的电源插头，否则可能会损坏某些部件。"

#: ../components/nitrokey3/faq.rst:2
msgid "Nitrokey 3 FAQ"
msgstr "Nitrokey 3 常见问题解答"

#: ../components/nitrokey3/faq.rst:5
msgid "Windows, Linux and macOS. Also some support for Android and iOS."
msgstr "Windows、Linux 和 macOS。还支持部分安卓和 iOS 系统。"

#: ../components/nitrokey3/faq.rst:8
msgid ""
"See the `overview <https://www.nitrokey.com/products/nitrokeys>`_  of "
"supported use cases."
msgstr "请参阅受支持用例的 \"概览 <https://www.nitrokey.com/products/nitrokeys>`_\"。"

#: ../components/nitrokey3/faq.rst:14
msgid "**Q:** How can I check if my Nitrokey 3 is working?"
msgstr "**问：** 如何检查 Nitrokey 3 是否正常工作？"

#: ../components/nitrokey3/faq.rst:11
msgid ""
"On `WebAuthn.io`_ you can check various high-level functionalities, while"
" `webautn.bin.coffee`_ provides good developer level details (technical) "
"details. You can also `test`_ your Nitrokey."
msgstr ""
"在`WebAuthn.io`_上，您可以检查各种高级功能，而`webautn.bin.coffee`_则提供了良好的开发人员级细节（技术）。您还可以"
" \"测试 \"您的 Nitrokey。"

#: ../components/nitrokey3/faq.rst:19
msgid "**Q:** Where is the right spot for NFC on my smartphone?"
msgstr "**问：** 在智能手机上安装 NFC 的正确位置在哪里？"

#: ../components/nitrokey3/faq.rst:17
msgid ""
"This is different for every smartphone model, you should find your "
"brand's respective hardware description to find this out. A quite "
"extensive list can be found `here <https://support.bagtag.com/hc/en-"
"us/articles/4417056455185-Where-to-the-find-NFC-location-per-phone-"
"brand>`_."
msgstr ""
"每种智能手机型号的情况都不一样，您应该查找自己品牌各自的硬件说明来了解情况。您可以在这里<https://support.bagtag.com/hc"
"/en-us/articles/4417056455185-Where-to-the-find-NFC-location-per-phone-"
"brand>`_找到一个相当广泛的列表。"

#: ../components/nitrokey3/faq.rst:27
msgid "**Q:** What happens if I lose my device?"
msgstr "**问：** 如果我的设备丢失了怎么办？"

#: ../components/nitrokey3/faq.rst:22
msgid ""
"When securing accounts using FIDO (two-factor authentication and "
"passwordless login), you should configure another factor in your account "
"as a backup. Depending on the service this backup factor can be a phone "
"number, an app or even a second Nitrokey FIDO2. If you lose a device, you"
" can still log in with the second Nitrokey (or with another second "
"factor)."
msgstr ""
"使用 "
"FIDO（双因素身份验证和无密码登录）保护账户安全时，应在账户中配置另一个因素作为备份。根据服务的不同，这个备份因素可以是一个电话号码、一个应用程序，甚至是第二个"
" Nitrokey FIDO2。如果您丢失了设备，您仍然可以使用第二个 Nitrokey（或其他第二个因素）登录。"

#: ../components/nitrokey3/faq.rst:30
msgid ""
"The Nitrokey 3 doesn't contain storage capability for ordinary data (it "
"can only store cryptographic keys and certificates)."
msgstr "Nitrokey 3 不具备存储普通数据的功能（只能存储加密密钥和证书）。"

#: ../components/nitrokey3/faq.rst:35
msgid "**Q:** Why does the Nitrokey 3 not show up in GnuPG"
msgstr "**问：** 为什么 Nitrokey 3 不能显示在 GnuPG 中？"

#: ../components/nitrokey3/faq.rst:34
msgid ""
"Make sure to install a firmware more recent than version 1.4.0. For more "
"information, see the firmware-update page for your operating system."
msgstr "确保安装比 1.4.0 版本更新版的固件。有关详细信息，请参阅操作系统的固件更新页面。"

#: ../components/nitrokey3/faq.rst:38
msgid "**Q:** Why does the Nitrokey 3 not show up in Nitrokey App?"
msgstr "**问：** 为什么 Nitrokey 3 不能显示在 Nitrokey 应用程序中？"

#: ../components/nitrokey3/faq.rst:38
msgid ""
"Nitrokey 3 does only show up and can be managed in \"nitropy\" and "
"\"Nitrokey App 2, not in Nitrokey App 1\"."
msgstr "Nitrokey 3 只能在 \"nitropy \"和 \"Nitrokey App 2，不能在 Nitrokey App 1 \"中显示和管理。"

#: ../components/nitrokey3/faq.rst:44
msgid "**Q:** How can I set the PIN for my Nitrokey 3?"
msgstr "**问：** 如何设置 Nitrokey 3 的密码？"

#: ../components/nitrokey3/faq.rst:43
msgid ""
"The Nitrokey 3 has distinct PINs for each feature. Please refer to the "
"chapter of your respective operating system (`Linux <linux/set-"
"pins.html>`__, `macOS <mac/set-pins.html>`__, `Windows <windows/set-"
"pins.html>`__)."
msgstr ""
"Nitrokey 3 的每种功能都有不同的 PIN 码。请参阅各自操作系统的相关章节（`Linux <linux/set-"
"pins.html>`__, `macOS <mac/set-pins.html>`__, `Windows <windows/set-"
"pins.html>`__）。"

#: ../components/nitrokey3/faq.rst:48
msgid "**Q:** Is the Nitrokey 3 Common Criteria or FIPS certified?"
msgstr "**问：** Nitrokey 3 是否通过了通用标准或 FIPS 认证？"

#: ../components/nitrokey3/faq.rst:47
msgid ""
"The secure element (SE050M) is Common Criteria EAL 6+ security certified "
"up to the OS level (`Certificate "
"<https://commoncriteriaportal.org/files/epfiles/NSCIB-"
"CC-23-0075446_2-Cert.pdf>`__, `Certification Report "
"<https://commoncriteriaportal.org/files/epfiles/NSCIB-"
"CC-0075446-CR2-1.pdf>`__, `Security Target "
"<https://commoncriteriaportal.org/files/epfiles/NSCIB-"
"CC-0075446_2-STLite.pdf>`__, `Java Card Protection Profile - Open "
"Configuration "
"<https://commoncriteriaportal.org/files/ppfiles/pp0099b_pdf.pdf>`__)."
msgstr ""
"安全元件 (SE050M) 已通过 Common Criteria EAL 6+ 安全认证，达到操作系统级别（\"证书 "
"<https://commoncriteriaportal.org/files/epfiles/NSCIB-"
"CC-23-0075446_2-Cert.pdf>`___\"、\"认证报告 "
"<https://commoncriteriaportal.org/files/epfiles/NSCIB-"
"CC-0075446-CR2-1.pdf>`___\"、\"安全目标 "
"<https://commoncriteriaportal.org/files/epfiles/NSCIB-"
"CC-0075446_2-STLite.pdf>`___\"、\"Java Card Protection Profile - Open "
"Configuration "
"<https://commoncriteriaportal.org/files/ppfiles/pp0099b_pdf.pdf>`___\"）。"

#: ../components/nitrokey3/faq.rst:51
msgid "**Q:** How to use Nitrokey 3 with Azure Entra ID (Active Directory)?"
msgstr "**问：** 如何将 Nitrokey 3 与 Azure Entra ID（活动目录）一起使用？"

#: ../components/nitrokey3/faq.rst:51
msgid ""
"After `disabling Enforce Attestation`_ Nitrokey 3 is supported by Azure "
"Entra ID out of the box."
msgstr "在 \"禁用强制认证 \"后，Azure Entra ID 即可支持 Nitrokey 3。"

#: ../components/nitrokey3/faq.rst:62
msgid "**Q:** How can I use the SE050 Secure Element?"
msgstr "**问：** 如何使用 SE050 安全元件？"

#: ../components/nitrokey3/faq.rst:54
msgid ""
"Starting with version 1.7.0 the Secure Element should be automatically "
"activated, if the OpenPGP Card was not used before. To check its "
"activation state you can use: ``nitropy nk3 get-config "
"opcard.use_se050_backend``. To activate it, if it isn't activated use: "
"``nitropy nk3 set-config opcard.use_se050_backend true`` or disable it "
"accordingly by passing ``false``. **Changing the backend from one to the "
"other will always wipe all your data inside the OpenPGP Card**"
msgstr ""
"从 1.7.0 版开始，如果之前未使用 OpenPGP 卡，安全元素应自动激活。要检查其激活状态，可以使用``nitropy nk3 get-"
"config opcard.use_se050_backend``。如果未激活，则激活它：`nitropy nk3 set-config "
"opcard.use_se050_backend true`` 或通过 ``false`` 相应地禁用它。**将后端从一个变为另一个将始终清除 "
"OpenPGP 卡内的所有数据**。"

#: ../components/nitrokey3/faq.rst:60
msgid ""
"If you are updating from a test version firmware, we recommend factory "
"resetting the device before using the Nitrokey 3 with the SE050 in "
"production environments."
msgstr "如果您是从测试版固件升级的，我们建议您在生产环境中使用 Nitrokey 3 和 SE050 之前，先对设备进行出厂重置。"

#: ../components/nitrokey3/features.rst:2
msgid "Features"
msgstr "特点"

#: ../components/nitrokey3/features.rst:5
msgid ""
"The Nitrokey 3 is a very versatile platform which allows us to constantly"
" improve and add functionalities. This overview represents the current "
"state and furthermore adds various technical details on how the different"
" features are realized."
msgstr "Nitrokey 3 是一个非常灵活的平台，它允许我们不断改进和增加功能。本概述代表了当前的状态，并进一步补充了有关如何实现不同功能的各种技术细节。"

#: ../components/nitrokey3/features.rst:14
#: ../components/nitrokey3/features.rst:57
msgid "**Feature**"
msgstr "**特点**"

#: ../components/nitrokey3/features.rst:15
#: ../components/nitrokey3/features.rst:58
msgid "**Description**"
msgstr "**说明**"

#: ../components/nitrokey3/features.rst:16
#: ../components/nitrokey3/features.rst:59
msgid "**Transport(s)**"
msgstr "**交通工具**"

#: ../components/nitrokey3/features.rst:17
#: ../components/nitrokey3/features.rst:60
msgid "**Secure element support**"
msgstr "**安全元件支持**"

#: ../components/nitrokey3/features.rst:20
msgid "`FIDO2`_"
msgstr "`FIDO2`_"

#: ../components/nitrokey3/features.rst:21
msgid "Increase (Web-)security using 2FA and passwordless logins; ssh logins"
msgstr "使用 2FA 和无密码登录、ssh 登录提高（网络）安全性"

#: ../components/nitrokey3/features.rst:22
msgid "USB, NFC"
msgstr "USB, NFC"

#: ../components/nitrokey3/features.rst:23
#: ../components/nitrokey3/features.rst:33
#: ../components/nitrokey3/features.rst:38
#: ../components/nitrokey3/features.rst:65
#: ../components/nitrokey3/features.rst:70
#: ../components/pro/factory-reset.rst.inc:25
#: ../components/pro/factory-reset.rst.inc:26
#: ../components/pro/factory-reset.rst.inc:28
#: ../components/storage/factory-reset.rst:33
#: ../components/storage/factory-reset.rst:34
#: ../components/storage/factory-reset.rst:36
msgid "no"
msgstr "没有"

#: ../components/nitrokey3/features.rst:25
msgid "`OpenPGP Card`_"
msgstr "打开PGP卡"

#: ../components/nitrokey3/features.rst:26
msgid "Asymmetric cryptography; keep your private key(s) secure; email encryption"
msgstr "非对称加密；确保私人密钥安全；电子邮件加密"

#: ../components/nitrokey3/features.rst:27
#: ../components/nitrokey3/features.rst:32
#: ../components/nitrokey3/features.rst:37
#: ../components/nitrokey3/features.rst:64
#: ../components/nitrokey3/features.rst:69
msgid "USB"
msgstr "USB"

#: ../components/nitrokey3/features.rst:28
#: ../components/pro/factory-reset.rst.inc:25
#: ../components/pro/factory-reset.rst.inc:26
#: ../components/pro/factory-reset.rst.inc:27
#: ../components/pro/factory-reset.rst.inc:28
#: ../components/storage/factory-reset.rst:33
#: ../components/storage/factory-reset.rst:34
#: ../components/storage/factory-reset.rst:35
#: ../components/storage/factory-reset.rst:36
msgid "yes"
msgstr "是"

#: ../components/nitrokey3/features.rst:30
msgid "`Password Safe`_"
msgstr "密码安全"

#: ../components/nitrokey3/features.rst:31
msgid "(One-Time-)Passwords securely stored on your Nitrokey 3"
msgstr "(一次性）密码安全存储在 Nitrokey 3 中"

#: ../components/nitrokey3/features.rst:35
msgid "`Admin App`_"
msgstr "管理员应用程序"

#: ../components/nitrokey3/features.rst:36
msgid "Administration functions used by `pynitrokey`_ and `NitrokeyApp2`_"
msgstr "pynitrokey\"_和 \"NitrokeyApp2\"_使用的管理功能"

#: ../components/nitrokey3/features.rst:41
msgid ""
"Secure element support for OpenPGP Card is available since stable "
"firmware v1.7.0. Any new devices will have this automatically activated. "
"For devices already in use, the user has to `manually switch`_ as "
"described in the FAQ."
msgstr ""
"自稳定固件 v1.7.0 起，OpenPGP 卡的安全元素支持已可用。任何新设备都将自动激活。对于已在使用的设备，用户必须按照常见问题中的说明进行"
" \"手动切换\"。"

#: ../components/nitrokey3/features.rst:46
msgid ""
"On top of the stable firmware for the Nitrokey 3, we also provide a `Test"
" Firmware`_, which comes with additional functionalities, which are not "
"(yet) included into the stable firmware."
msgstr "除了 Nitrokey 3 的稳定固件外，我们还提供了一个 \"测试固件\"，它具有稳定固件尚未包含的额外功能。"

#: ../components/nitrokey3/features.rst:49
msgid ""
"**Using the Test Firmware is not recommended for production environments,"
" there might be incompatibilities between test and stable firmware "
"upgrades - please use with caution. Especially data migrations from test "
"to stable firmwares will not be implemented.**"
msgstr "**不建议在生产环境中使用测试固件，因为测试固件和稳定固件升级之间可能不兼容，请谨慎使用。特别是从测试固件到稳定固件的数据迁移将无法实现。"

#: ../components/nitrokey3/features.rst:62
msgid "`PIV`_"
msgstr "`PIV`_"

#: ../components/nitrokey3/features.rst:63
msgid "Asymmetric cryptography; more business focussed smartcard realization"
msgstr "非对称加密；实现更多业务功能的智能卡"

#: ../components/nitrokey3/features.rst:67
msgid "`WebSmartCard`_"
msgstr "WebSmartCard`_"

#: ../components/nitrokey3/features.rst:68
msgid "Provides smartcard-functionalities through the web & FIDO2"
msgstr "通过网络和 FIDO2 提供智能卡功能"

#: ../components/nitrokey3/index.rst:7
msgid "The Nitrokey 3 currently supports:"
msgstr "Nitrokey 3 目前支持"

#: ../components/nitrokey3/index.rst:9
#: ../components/nitrokey3/shared/reset.rst.inc:9
#: ../components/nitrokey3/shared/set-pins.rst.inc:4
#: ../components/nitrokey3/shared/set-pins.rst.inc:8
msgid "FIDO2"
msgstr "FIDO2"

#: ../components/nitrokey3/index.rst:10
msgid "Password-Safe & One-Time Passwords (OTP)"
msgstr "密码保护和一次性密码 (OTP)"

#: ../components/nitrokey3/index.rst:11
msgid "OpenPGP Card (`Secure Element Backend or Software Backend`_)"
msgstr "OpenPGP 卡（\"安全元件后端或软件后端）"

#: ../components/nitrokey3/index.rst:13
msgid ""
"Additional features like PIV are available in test firmware releases. See"
" the `release notes`_ on GitHub for more information."
msgstr "测试固件版本提供 PIV 等其他功能。更多信息，请参阅 GitHub 上的 \"发布说明\"。"

#: ../components/nitrokey3/index.rst:27
msgid "Or choose your operating system:"
msgstr "或选择您的操作系统："

#: ../components/nitrokey3/adsk.rst.inc:2
msgid "Additional Decryption Subkeys (ADSK) with GnuPG"
msgstr "使用 GnuPG 的附加解密子密钥 (ADSK)"

#: ../components/nitrokey3/adsk.rst.inc:6
msgid ""
"`Additional Decryption Subkeys (ADSK) "
"<https://gnupg.org/blog/20230321-adsk.html>`__ can be used to "
"automatically add recipients when encrypting a message with GnuPG. "
"Typical use cases include"
msgstr ""
"附加解密子键 (ADSK) <https://gnupg.org/blog/20230321-adsk.html>`__ 可用于在使用 GnuPG"
" 加密信息时自动添加收件人。典型用例包括"

#: ../components/nitrokey3/adsk.rst.inc:9
msgid ""
"having a single encryption key for a group without the need to share the "
"private key between the members of the group,"
msgstr "一个群组只有一个加密密钥，群组成员之间无需共享私人密钥、"

#: ../components/nitrokey3/adsk.rst.inc:10
msgid "adding a backup key to an encryption key, and"
msgstr "为加密密钥添加备份密钥，以及"

#: ../components/nitrokey3/adsk.rst.inc:11
msgid "setting up a master key that can decrypt messages for other keys."
msgstr "设置一个主密钥，为其他密钥解密信息。"

#: ../components/nitrokey3/adsk.rst.inc:15
msgid ""
"To configure an ADSK, you need GnuPG 2.4.1 or newer. To encrypt a message"
" for a key with an ADSK, you need GnuPG 2.2.42 or newer."
msgstr "要配置 ADSK，需要 GnuPG 2.4.1 或更新版本。要使用 ADSK 为密钥加密信息，需要 GnuPG 2.2.42 或更新版本。"

#: ../components/nitrokey3/adsk.rst.inc:19
msgid "Overview"
msgstr "概述"

#: ../components/nitrokey3/adsk.rst.inc:21
msgid ""
"This guide explains how to add a backup key (user ID "
"``backup@example.com``) as an ADSK to a main key (user ID "
"``main@example.com``). Both keys are stored on a Nitrokey. The same steps"
" can be used to add multiple ADSK to a key, or to add the same key as an "
"ADSK to multiple other keys."
msgstr ""
"本指南说明如何将备份密钥（用户 ID ``backup@example.com``）作为 ADSK 添加到主密钥（用户 ID "
"``main@example.com``）。两个密钥都存储在 Nitrokey 上。同样的步骤可用于将多个 ADSK "
"添加到一个密钥，或将同一密钥作为 ADSK 添加到多个其他密钥。"

#: ../components/nitrokey3/adsk.rst.inc:26
msgid "Preparing the Keys"
msgstr "准备钥匙"

#: ../components/nitrokey3/adsk.rst.inc:28
msgid "Follow one of these guides to generate the two keys:"
msgstr "按照其中一个指南生成两把钥匙："

#: ../components/nitrokey3/adsk.rst.inc:30
msgid ":doc:`openpgp-keygen-backup`"
msgstr "doc:`openpgp-keygen-backup`"

#: ../components/nitrokey3/adsk.rst.inc:31
msgid ":doc:`openpgp-keygen-on-device`"
msgstr "doc:`openpgp-keygen-on-device`"

#: ../components/nitrokey3/adsk.rst.inc:32
msgid ":doc:`openpgp-keygen-gpa`"
msgstr ":doc:`openpgp-keygen-gpa`"

#: ../components/nitrokey3/adsk.rst.inc:34
msgid ""
"Make sure that you can list both keys with ``gpg --list-keys``, for "
"example::"
msgstr "确保可以使用 ``gpg --list-keys`` 列出两个密钥，例如：："

#: ../components/nitrokey3/adsk.rst.inc:51
msgid "Adding an ADSK"
msgstr "添加 ADSK"

#: ../components/nitrokey3/adsk.rst.inc:53
msgid ""
"First determine the fingerprint of the encryption subkey for the backup "
"key::"
msgstr "首先确定备份密钥加密子密钥的指纹：："

#: ../components/nitrokey3/adsk.rst.inc:64
msgid ""
"Look for the line starting with ``sub`` that contains the letter ``E``, "
"indicating a subkey with the encryption capability. The fingerprint of "
"this subkey is listed in the next line. In this case, the fingerprint is "
"``C1735CB29890EEDEABCF1D0DC9310F81D77519BC``."
msgstr ""
"查找以 ``sub`` 开头的一行，该行包含字母 ``E``，表示具有加密功能的子密钥。下一行列出了该子键的指纹。在本例中，指纹是 "
"``C1735CB29890EEDEABCF1D0DC9310F81D77519BC``。"

#: ../components/nitrokey3/adsk.rst.inc:68
msgid "Then determine the fingerprint of the main key::"
msgstr "然后确定主键的指纹：："

#: ../components/nitrokey3/adsk.rst.inc:77
msgid ""
"You can find it in the next line after ``pub``, in this case "
"``55BC284C1D30D97638DA4A2C7963A4CD00C947CE``."
msgstr "您可以在 ``pub`` 之后的下一行中找到它，本例中为 ``55BC284C1D30D97638DA4A2C7963A4CD00C947CE``。"

#: ../components/nitrokey3/adsk.rst.inc:79
msgid "Now you can add the ADSK using the ``--quick-add-adsk`` flag::"
msgstr "现在，您可以使用 ``--quick-add-adsk`` 标记添加 ADSK：："

#: ../components/nitrokey3/adsk.rst.inc:85
msgid ""
"The first argument is the fingerprint of the main key. The second "
"argument is the fingerprint of the encryption subkey of the backup key."
msgstr "第一个参数是主密钥的指纹。第二个参数是备份密钥的加密子密钥指纹。"

#: ../components/nitrokey3/adsk.rst.inc:88
msgid "You can check that the ADSK has been created::"
msgstr "您可以检查 ADSK 是否已创建：："

#: ../components/nitrokey3/adsk.rst.inc:101
msgid ""
"The subkey with the ``R`` (restricted) capability is the ADSK. It has the"
" same fingerprint as the encryption subkey of the backup key."
msgstr "具有 ``R`` （受限）功能的子密钥是 ADSK。它的指纹与备份密钥的加密子密钥相同。"

#: ../components/nitrokey3/adsk.rst.inc:104
msgid "Now you can distribute the public key with the ADSK."
msgstr "现在你可以用 ADSK 发布公钥了。"

#: ../components/nitrokey3/adsk.rst.inc:107
msgid "Using an ADSK"
msgstr "使用 ADSK"

#: ../components/nitrokey3/adsk.rst.inc:109
msgid ""
"When encrypting a message for the main key, the backup key is now "
"automatically added as a recipient. The only requirements for this are:"
msgstr "在为主密钥加密信息时，备份密钥现在会自动添加为收件人。唯一的要求是"

#: ../components/nitrokey3/adsk.rst.inc:112
msgid ""
"The sender of the message has an up-to-date public key that includes the "
"ADSK."
msgstr "信息发送者拥有最新的公钥，其中包括 ADSK。"

#: ../components/nitrokey3/adsk.rst.inc:113
msgid "The sender of the message uses GnuPG 2.2.42 or newer."
msgstr "信息发送者使用 GnuPG 2.2.42 或更新版本。"

#: ../components/nitrokey3/adsk.rst.inc:115
msgid ""
"If you add the ``--verbose`` flag, you can check the keys the message is "
"encrypted to::"
msgstr "如果添加\"--verbose \"标记，就可以检查信息加密的密钥：："

#: ../components/nitrokey3/adsk.rst.inc:128
msgid ""
"You can also use the ``--list-packets`` option to check an encrypted "
"message::"
msgstr "您也可以使用 ``--list-packets` 选项检查加密信息：："

#: ../components/nitrokey3/adsk.rst.inc:134
msgid ""
"Each ``pubkey enc packet`` line represents one key that can decrypt the "
"message."
msgstr "每个 \"pubkey enc packet \"行代表一个可以解密信息的密钥。"

#: ../components/nitrokey3/adsk.rst.inc:138
msgid "Revoking an ADSK"
msgstr "撤销 ADSK"

#: ../components/nitrokey3/adsk.rst.inc:140
msgid ""
"If you revoke an ADSK, it will no longer be added as a recipient when "
"encrypting a message. To perform a revocation, open the key with ``gpg "
"--edit-key``::"
msgstr "如果撤销 ADSK，在加密信息时就不会再将其添加为收件人。要执行撤销，请使用 ``gpg --edit-key`` 打开密钥："

#: ../components/nitrokey3/adsk.rst.inc:160
msgid ""
"Select the subkey to revoke with ``key N``. The selected subkey is marked"
" with an asterisk::"
msgstr "用 ``key N`` 选择要撤销的子键。选中的子键会以星号标记：："

#: ../components/nitrokey3/adsk.rst.inc:179
msgid ""
"Revoke the subkey with ``revkey`` and then save the changes with "
"``save``::"
msgstr "使用 ``revkey`` 取消子键，然后使用 ``save`` 保存更改："

#: ../components/nitrokey3/adsk.rst.inc:213
msgid "Now distribute the updated public key."
msgstr "现在分发更新后的公钥。"

#: ../components/nitrokey3/adsk.rst.inc:217
msgid ""
"The revocation will only become effective once the sender has updated the"
" public key with the revoked ADSK. Messages that have already been "
"encrypted can still be decrypted with the ADSK even if it is revoked."
msgstr "只有在发件人用被撤销的 ADSK 更新了公钥之后，撤销才会生效。即使 ADSK 被撤销，已加密的信息仍可使用 ADSK 解密。"

#: ../components/nitrokey3/linux/fedora-gnupg-configuration.rst:2
msgid "OpenPGP smartcard with GnuPG on Fedora"
msgstr "在 Fedora 上使用 GnuPG 的 OpenPGP 智能卡"

#: ../components/nitrokey3/linux/fedora-gnupg-configuration.rst:5
msgid ""
"The following instructions require the Nitrokey 3 to have at least "
"firmware version ``1.4.0`` installed. Please refer to `firmware update "
"<./firmware-update.html>`__ to learn how to update it."
msgstr ""
"以下说明要求 Nitrokey 3 至少已安装``1.4.0``固件版本。请参阅 `固件更新 <./firmware-"
"update.html>`__ 了解如何更新。"

#: ../components/nitrokey3/linux/fedora-gnupg-configuration.rst:8
msgid ""
"The GnuPG smartcard support requires *scdaemon*. In Fedora the *scdaemon*"
" is part of the GnuPG package."
msgstr "GnuPG 智能卡支持需要 *scdaemon*。在 Fedora 中，*scdaemon* 是 GnuPG 软件包的一部分。"

#: ../components/nitrokey3/linux/fedora-gnupg-configuration.rst:12
msgid ""
"The *scdaemon* is installed in ``/usr/libexec/scdaemon``. This path is "
"usually not part of the PATH environment variable."
msgstr "*scdaemon* 安装在 ``/usr/libexec/scdaemon`` 中。该路径通常不在 PATH 环境变量中。"

#: ../components/nitrokey3/linux/fedora-gnupg-configuration.rst:15
msgid ""
"The GnuPG project supports two setups of interfacing with a OpenPGP "
"smartcard."
msgstr "GnuPG 项目支持两种与 OpenPGP 智能卡连接的设置。"

#: ../components/nitrokey3/linux/fedora-gnupg-configuration.rst:17
msgid "**GnuPG (scdaemon with CCID driver) → Smartcard (e.g. Nitrokey)**"
msgstr "**GnuPG（带 CCID 驱动程序的 scdaemon）→智能卡（如 Nitrokey）**"

#: ../components/nitrokey3/linux/fedora-gnupg-configuration.rst:19
msgid ""
"In this setup the *scdaemon* communicates directly to the Nitrokey with "
"its internal CCID driver and *libusb*. It requires the Udev rules to be "
"set, because the *scdaemon* runs in userspace with the permissions of the"
" logged in user."
msgstr ""
"在此设置中，*scdaemon* 通过其内部 CCID 驱动程序和 *libusb* 直接与 Nitrokey 通信。这需要设置 Udev "
"规则，因为 *scdaemon* 在用户空间运行时拥有登录用户的权限。"

#: ../components/nitrokey3/linux/fedora-gnupg-configuration.rst:22
msgid "**GnuPG (scdaemon with PCSC library) → pcscd → Smartcard (e.g. Nitrokey)**"
msgstr "**GnuPG（带有 PCSC 库的 scdaemon）→ pcscd → 智能卡（如 Nitrokey）**"

#: ../components/nitrokey3/linux/fedora-gnupg-configuration.rst:24
msgid ""
"In this setup the *scdaemon* communicates with *pcscd*, which then "
"communicates with the Nitrokey."
msgstr "在这种设置下，*scdaemon* 与 *pcscd*通信，然后由 *pcscd*与 Nitrokey 通信。"

#: ../components/nitrokey3/linux/fedora-gnupg-configuration.rst:26
msgid ""
"On Fedora only the second setup is supported, because the configuration "
"of the GnuPG package sets the CCID driver as disabled and the pcsc "
"support as required. The relevant configuration can be found in the spec "
"file `here "
"<https://src.fedoraproject.org/rpms/gnupg2/blob/rawhide/f/gnupg2.spec#_140>`__"
" and `here "
"<https://src.fedoraproject.org/rpms/gnupg2/blob/rawhide/f/gnupg2.spec#_51>`__."
msgstr ""
"在 Fedora 上只支持第二种设置，因为 GnuPG 软件包的配置将 CCID 驱动程序设置为禁用，并将 pcsc "
"支持设置为必需。相关配置可在规格文件 `此处 "
"<https://src.fedoraproject.org/rpms/gnupg2/blob/rawhide/f/gnupg2.spec#_140>`__"
" 和 `此处 "
"<https://src.fedoraproject.org/rpms/gnupg2/blob/rawhide/f/gnupg2.spec#_51>`__中找到。"

#: ../components/nitrokey3/linux/fedora-gnupg-configuration.rst:32
msgid ""
"The latest Fedora 38 version should work after installation without "
"issues. Upgraded versions of Fedora might have conflicting configuration "
"and should be checked as below. Fedora Silverblue was reported to have "
"issues with GnuPG and smartcards. The instructions below only apply to "
"*Fedora Workstation* and *Fedora Server* editions."
msgstr ""
"最新的 Fedora 38 版本在安装后应该可以正常工作。Fedora 的升级版本可能存在配置冲突，应按以下步骤检查。据报告，Fedora "
"Silverblue 在 GnuPG 和智能卡方面存在问题。以下说明仅适用于 *Fedora 工作站* 和 *Fedora 服务器* 版本。"

#: ../components/nitrokey3/linux/fedora-gnupg-configuration.rst:37
msgid ""
"The correct configuration of a setup can be checked by querying "
"information about the Nitrokey with ``gpg --card-status``."
msgstr "可以使用 ``gpg --card-status`` 查询 Nitrokey 的相关信息，检查设置是否正确。"

#: ../components/nitrokey3/linux/fedora-gnupg-configuration.rst:40
msgid "Check recognition"
msgstr "检查识别"

#: ../components/nitrokey3/linux/fedora-gnupg-configuration.rst:42
msgid ""
"Verify with the `lsusb` command that the Nitrokey is recognized. The "
"output should list the Nitrokey, e.g. `Bus 001 Device 002: ID 20a0:42b2 "
"Clay Logic Nitrokey 3`."
msgstr ""
"使用 `lsusb` 命令验证 Nitrokey 是否被识别。输出结果应列出 Nitrokey，例如 `Bus 001 Device 002：ID"
" 20a0:42b2 Clay Logic Nitrokey 3`。"

#: ../components/nitrokey3/linux/fedora-gnupg-configuration.rst:46
msgid "Check system configuration"
msgstr "检查系统配置"

#: ../components/nitrokey3/linux/fedora-gnupg-configuration.rst:48
msgid ""
"Make sure the *pcscd* package is installed with ``dnf install pcsc-"
"lite``. Further the *systemd* service and socket must be enabled and "
"started with ``systemctl enable pcscd.socket pcscd.service && systemctl "
"start pcscd.socket``."
msgstr ""
"确保使用 ``dnf install pcsc-lite`` 安装了 *pcscd* 软件包。此外，必须使用 ``systemctl enable"
" pcscd.socket pcscd.service && systemctl start pcscd.socket`` 启用并启动 "
"*systemd* 服务和套接字。"

#: ../components/nitrokey3/linux/fedora-gnupg-configuration.rst:51
msgid ""
"The *scdaemon* requires the *libpcsclite* library to connect to *pcscd*. "
"The path to the pcsc library can be set explicitly with ``echo \"pcsc-"
"driver /usr/lib64/libpcsclite.so.1\" >> ~/.gnupg/scdaemon.conf``. "
"Alternatively, the library can also be made available with a symlink as "
"follows ``ln -s /usr/lib64/libpcsclite.so.1 /usr/lib64/libpcsclite.so``. "
"Make sure the ``~/.gnupg/scdaemon.conf`` file has no conflicting settings"
" applied."
msgstr ""
"*scdaemon* 需要 *libpcsclite* 库来连接 *pcscd*。可以使用 ``echo \"pcsc-driver "
"/usr/lib64/libpcsclite.so.1\" >> ~/.gnupg/scdaemon.conf``明确设置 pcsc "
"库的路径。或者，也可以使用符号链接提供该库，如下所示 ``ln -s /usr/lib64/libpcsclite.so.1 "
"/usr/lib64/libpcsclite.so``。确保 ``~/.gnupg/scdaemon.conf`` 文件中没有与之冲突的设置。"

#: ../components/nitrokey3/linux/fedora-gnupg-configuration.rst:56
msgid ""
"The *scdaemon* by default expects exclusive access to *pcscd*, to avoid "
"potential issues with concurrent modifications of information on the "
"card. This causes access to fail if other clients, usually web browsers, "
"accessed the card, even if only for reading. Shared access can be enabled"
" with ``echo \"pcsc-shared\" >> ~/.gnupg/scdaemon.conf`` (in GnuPG "
"version 2.2.28 or higher)."
msgstr ""
"默认情况下，*scdaemon* 希望独占访问 "
"*pcscd*，以避免同时修改卡上信息的潜在问题。如果其他客户端（通常是网络浏览器）访问该卡，即使只是读取，也会导致访问失败。可以使用 "
"``echo \"pcsc-shared\" >> ~/.gnupg/scdaemon.conf``（GnuPG 2.2.28 "
"或更高版本）启用共享访问。"

#: ../components/nitrokey3/firmware-update.rst.inc:8
msgid "This guide describes how to update the firmware on the Nitrokey 3."
msgstr "本指南介绍如何更新 Nitrokey 3 的固件。"

#: ../components/nitrokey3/firmware-update.rst.inc:11
msgid ""
"**For firmware v.1.0.0 and below the update will delete all user data!** "
"Make sure you have proper backup login methods enabled and/or ensure that"
" the Nitrokey 3 is not the only way to authenticate/2FA for your "
"applications/services."
msgstr ""
"**对于固件 v.1.0.0 及以下版本，更新将删除所有用户数据！** 请确保您已启用适当的备份登录方法，并/或确保 Nitrokey 3 "
"不是您的应用程序/服务的唯一验证/2FA 方式。"

#: ../components/nitrokey3/firmware-update.rst.inc:17
msgid ""
"**For firmware v1.0.1 and above user data is retained** during the "
"update. Anyways, be sure to always have another device (or login method) "
"registered with your service, if for some reason your data is not "
"retained."
msgstr ""
"**对于 v1.0.1 "
"及以上版本的固件，用户数据会在更新过程中保留**。总之，如果由于某种原因无法保留数据，请确保始终有另一个设备（或登录方法）在您的服务中注册。"

#: ../components/nitrokey3/firmware-update.rst.inc:23
msgid ""
"Never disconnect the Nitrokey 3 or abort the process while updating, this"
" will likely render your device useless!"
msgstr "在更新过程中，切勿断开 Nitrokey 3 的连接或中止更新过程，否则可能会导致设备无法使用！"

#: ../components/nitrokey3/firmware-update.rst.inc:27
msgid "Run ``nitropy nk3 update``."
msgstr "运行 \"nitropy nk3 update\"。"

#: ../components/nitrokey3/firmware-update.rst.inc:30
msgid ""
"Please wait until the process finished. (This may vary depending on your "
"operating system)"
msgstr "请等待进程结束。(这可能因操作系统而异）"

#: ../components/nitrokey3/firmware-update.rst.inc:31
msgid ""
"*Optional*: run ``nitropy nk3 test`` to check if device is working "
"properly after flashing."
msgstr "*可选*：运行 ``nitropy nk3 test`` 检查闪存后设备是否正常工作。"

#: ../components/nitrokey3/firmware-update.rst.inc:40
msgid "Firmware Release Types"
msgstr "固件发布类型"

#: ../components/nitrokey3/firmware-update.rst.inc:42
msgid "There are three types of firmware releases for the Nitrokey 3:"
msgstr "Nitrokey 3 有三种固件版本："

#: ../components/nitrokey3/firmware-update.rst.inc:44
msgid ""
"**Stable releases** are most important for users. They are designed to be"
" backward compatible and to retain all user data and are thoroughly "
"tested. On production devices, only stable releases should be used."
msgstr "**稳定版本**对用户来说最为重要。它们在设计上向后兼容，保留所有用户数据，并经过全面测试。在生产设备上，只能使用稳定版本。"

#: ../components/nitrokey3/firmware-update.rst.inc:48
msgid ""
"A **release candidate** is a preview of an upcoming stable release. It "
"should also be backward compatible but is not tested as thoroughly as a "
"stable release."
msgstr "候选发布版**是即将发布的稳定版的预览版。它也应向后兼容，但没有像稳定版那样经过全面测试。"

#: ../components/nitrokey3/firmware-update.rst.inc:51
msgid ""
"**Test releases** (previously: *alpha releases*) contain additional "
"features that are not ready for production yet. User data created with a "
"test release may not be compatible with other releases. These releases "
"are still being tested and are more likely to contain bugs."
msgstr ""
"**测试版本**（以前称为*alpha "
"版本*）包含尚未投入生产的附加功能。使用测试版本创建的用户数据可能与其他版本不兼容。这些版本仍在测试中，更有可能包含错误。"

#: ../components/nitrokey3/firmware-update.rst.inc:55
msgid ""
"See the `release notes`_ on GitHub for more information on the features "
"available in a release."
msgstr "有关版本中可用功能的更多信息，请参阅 GitHub 上的 \"发布说明\"。"

#: ../components/nitrokey3/firmware-update.rst.inc:59
msgid "You can identify the type of a firmware release by its version number:"
msgstr "您可以通过版本号来识别固件版本的类型："

#: ../components/nitrokey3/firmware-update.rst.inc:65
msgid "Type"
msgstr "类型"

#: ../components/nitrokey3/firmware-update.rst.inc:66
msgid "Version Number"
msgstr "版本号"

#: ../components/nitrokey3/firmware-update.rst.inc:68
msgid "stable release"
msgstr "稳定版"

#: ../components/nitrokey3/firmware-update.rst.inc:69
msgid "``v<major>.<minor>.<patch>``"
msgstr "``v<major>.<minor>.<patch>```。"

#: ../components/nitrokey3/firmware-update.rst.inc:70
msgid "``v1.3.1``"
msgstr "``v1.3.1``"

#: ../components/nitrokey3/firmware-update.rst.inc:71
msgid "release candidate"
msgstr "释放候选人"

#: ../components/nitrokey3/firmware-update.rst.inc:72
msgid "``v<major>.<minor>.<patch>-rc.<counter>``"
msgstr "``v<major>.<minor>.<patch>-rc.<counter>``"

#: ../components/nitrokey3/firmware-update.rst.inc:73
msgid "``v1.3.1-rc.1``"
msgstr "``v1.3.1-rc.1``"

#: ../components/nitrokey3/firmware-update.rst.inc:74
msgid "test release"
msgstr "试放"

#: ../components/nitrokey3/firmware-update.rst.inc:75
msgid "``v<major>.<minor>.<patch>-test.<date>``"
msgstr "``v<major>.<minor>.<patch>-test.<date>```。"

#: ../components/nitrokey3/firmware-update.rst.inc:76
msgid "``v1.3.1-test.20230414``"
msgstr "``v1.3.1-test.20230414``"

#: ../components/nitrokey3/firmware-update.rst.inc:79
msgid "Downgrade Protection"
msgstr "降级保护"

#: ../components/nitrokey3/firmware-update.rst.inc:81
msgid ""
"The firmware of the Nitrokey 3 cannot be downgraded. You can only install"
" a firmware update with the same or a higher major, minor and patch "
"version number than the firmware currently installed on the device. This "
"protects against downgrade attacks where a secure firmware version would "
"be replaced with an old, potentially insecure version."
msgstr ""
"Nitrokey 3 "
"的固件不能降级。您只能安装主版本号、次版本号和补丁号与设备上当前安装的固件相同或更高的固件更新。这样可以防止降级攻击，即用可能不安全的旧版本替换安全的固件版本。"

#: ../components/nitrokey3/firmware-update.rst.inc:83
msgid "Examples:"
msgstr "例如"

#: ../components/nitrokey3/firmware-update.rst.inc:85
msgid ""
"``v1.3.1`` can be updated to ``v1.3.1-test.20230414`` and vice versa "
"because they have the same major, minor and patch version number."
msgstr "v1.3.1 \"可以更新为 \"v1.3.1-test.20230414\"，反之亦然，因为它们的主版本号、次版本号和补丁版本号相同。"

#: ../components/nitrokey3/firmware-update.rst.inc:86
msgid ""
"``v1.3.1`` can be updated to ``v1.3.2`` or ``v1.4.0`` because the version"
" number increases."
msgstr "由于版本号增加，`v1.3.1``可更新为`v1.3.2`或`v1.4.0`。"

#: ../components/nitrokey3/firmware-update.rst.inc:87
msgid ""
"``v1.3.1`` cannot be updated to ``v1.3.0-rc.1`` because the version "
"number would decrease."
msgstr "v1.3.1 \"不能更新为 \"v1.3.0-rc.1\"，因为版本号会减少。"

#: ../components/nitrokey3/firmware-update.rst.inc:89
msgid ""
"This is mostly relevant for users that rely on a feature from the test "
"releases. Users of the stable firmware can always update to the latest "
"available firmware version."
msgstr "这主要与依赖测试版本功能的用户有关。稳定版固件的用户可以随时更新到最新的固件版本。"

#: ../components/nitrokey3/linux/firmware-update.rst:4
msgid "Troubleshooting:"
msgstr "故障排除："

#: ../components/nitrokey3/linux/firmware-update.rst:14
#: ../components/pro/linux/firmware-update.rst:11
msgid "**Issue:** I get ``permission denied for /dev/hidrawX`` during update."
msgstr "**问题：** 在更新过程中，我收到了\"/dev/hidrawX \"的 \"拒绝访问权限\"。"

#: ../components/nitrokey3/linux/firmware-update.rst:7
msgid ""
"This likely means your user has not the needed permissions to read/write "
"the device. Please make sure you have set up the correct `udev-rules`_. "
"Download this `udev-rules`_ set and place it in your udev rules directory"
" (e.g., ``/etc/udev/rules.d``). Then remove your Nitrokey 3 from the USB "
"slot and run: ``udevadm control --reload-rules && udevadm trigger`` or "
"reboot your machine. Afterwards the update should work without the "
"permission issue."
msgstr ""
"这可能意味着你的用户没有读/写设备所需的权限。请确保已设置正确的 `udev-rules`_。下载此 `udev-rules`_ "
"集，并将其放入您的 udev 规则目录（例如 ``/etc/udev/rules.d``）。然后从 USB 插槽中取出 Nitrokey 3 "
"并运行`udevadm control --reload-rules && udevadm trigger`` "
"或重启机器。之后，更新应能正常工作，而不会出现权限问题。"

#: ../components/nitrokey3/linux/firmware-update-qubes.rst:2
msgid "Firmware Update With Qubes OS"
msgstr "使用 Qubes OS 进行固件更新"

#: ../components/nitrokey3/linux/firmware-update-qubes.rst:8
msgid ""
"This guide describes how to update Nitrokey 3's firmware with nitropy in "
"Qubes OS."
msgstr "本指南介绍如何使用 Qubes OS 中的 nitropy 更新 Nitrokey 3 的固件。"

#: ../components/nitrokey3/linux/firmware-update-qubes.rst:11
msgid ""
"please read the general `firmware update instructions`_ before! Since for"
" specifc versions there are limitations regarding what data is possible "
"to migrate to the new version."
msgstr "请先阅读一般的 \"固件更新说明\"！因为对于特定版本而言，可以迁移到新版本的数据是有限制的。"

#: ../components/nitrokey3/linux/firmware-update-qubes.rst:17
msgid "Setup"
msgstr "设置"

#: ../components/nitrokey3/linux/firmware-update-qubes.rst:19
msgid ""
"Install nitropy in a app VM of your choice following the `installation "
"instructions`_."
msgstr "按照 \"安装说明\"，在自己选择的应用程序虚拟机中安装 nitropy。"

#: ../components/nitrokey3/linux/firmware-update-qubes.rst:28
msgid ""
"Never disconnect the Nitrokey 3 or abort the process while updating, "
"because it will likely render your device unusable!"
msgstr "在更新过程中，切勿断开 Nitrokey 3 的连接或中止进程，因为这很可能会导致设备无法使用！"

#: ../components/nitrokey3/linux/firmware-update-qubes.rst:31
msgid "Run ``nitropy nk3 reboot --bootloader`` in app VM."
msgstr "在应用程序虚拟机中运行 ``nitropy nk3 reboot --bootloader``."

#: ../components/nitrokey3/linux/firmware-update-qubes.rst:32
msgid ""
"Once instructed by ``nitropy`` touch the device to activate the "
"bootloader."
msgstr "根据 \"nitropy \"的指示，触摸设备以激活启动加载程序。"

#: ../components/nitrokey3/linux/firmware-update-qubes.rst:33
msgid ""
"This will detach the nitrokey from the app VM, and the bootloader will "
"apear in sys-usb"
msgstr "这将使 nitrokey 脱离应用程序虚拟机，引导加载程序将出现在 sys-usb 中。"

#: ../components/nitrokey3/linux/firmware-update-qubes.rst:34
msgid "Attach the bootloader to the app VM"
msgstr "将引导加载器附加到应用程序虚拟机"

#: ../components/nitrokey3/linux/firmware-update-qubes.rst:35
msgid ""
"Run ``nitropy nk3 update`` and follow the instructions. This will reboot "
"the Nitrokey to finalice the update eventually."
msgstr "运行 \"nitropy nk3 update \"并按提示操作。这将重启 Nitrokey，最终完成更新。"

#: ../components/nitrokey3/linux/firmware-update-qubes.rst:36
msgid "Re-attach the Nitrokey back to th app VM"
msgstr "将 Nitrokey 重新装回应用程序虚拟机"

#: ../components/nitrokey3/linux/index.rst:2
msgid "Nitrokey 3 With Linux"
msgstr "使用 Linux 的 Nitrokey 3"

#: ../components/nitrokey3/shared/main.rst:1
msgid ""
"The Nitrokey 3 supports two-factor authentication (2FA) and passwordless "
"authentication:"
msgstr "Nitrokey 3 支持双因素身份验证（2FA）和无密码身份验证："

#: ../components/nitrokey3/shared/main.rst:4
msgid ""
"With **passwordless authentication**, entering a password is replaced by "
"logging in with the Nitrokey 3 and a PIN."
msgstr "使用**无密码身份验证**，输入密码由使用 Nitrokey 3 和 PIN 码登录代替。"

#: ../components/nitrokey3/shared/main.rst:7
msgid ""
"With **two-factor authentication** (2FA), the Nitrokey 3 is checked in "
"addition to the password."
msgstr "使用**双因素身份验证**（2FA）时，除密码外，还要检查 Nitrokey 3。"

#: ../components/nitrokey3/shared/main.rst:10
msgid ""
"The Nitrokey 3 can be used with any current browser and with the "
"`Nitrokey App 2 </software/nk-app2/>`__."
msgstr "Nitrokey 3 可与任何当前浏览器和 \"Nitrokey App 2\"</software/nk-app2/>\"___\"一起使用。"

#: ../components/nitrokey3/shared/main.rst:15
msgid "Open a web page that supports FIDO2."
msgstr "打开支持 FIDO2 的网页。"

#: ../components/nitrokey3/shared/main.rst:16
msgid ""
"Log in to the website and go to “Set up security key” in the security "
"settings of your account."
msgstr "登录网站，进入账户安全设置中的 \"设置安全密钥\"。"

#: ../components/nitrokey3/shared/main.rst:18
msgid "Now you need to set a PIN for your Nitrokey 3."
msgstr "现在您需要为 Nitrokey 3 设置一个 PIN 码。"

#: ../components/nitrokey3/shared/main.rst:19
msgid "Touch the button of your Nitrokey 3 when prompted."
msgstr "按提示轻触 Nitrokey 3 的按钮。"

#: ../components/nitrokey3/shared/main.rst:20
msgid ""
"Once you have successfully configured the device, you will need to "
"activate your Nitrokey 3 this way each time you log in, after entering "
"your PIN."
msgstr "成功配置设备后，每次登录都需要在输入密码后以这种方式激活 Nitrokey 3。"

#: ../components/nitrokey3/shared/main.rst:29
#: ../components/u2f/shared/index-content1.rst:12
msgid ""
"Log in to the website and enable two-factor authentication in your "
"account settings. (In most cases you will find a link to the "
"documentation of the supported web service at `dongleauth.com "
"<https://www.dongleauth.com/>`__.)"
msgstr ""
"登录网站并在账户设置中启用双因素身份验证。(在大多数情况下，您可以在 `dongleauth.com "
"<https://www.dongleauth.com/>`__ 找到所支持网络服务的文档链接）。"

#: ../components/nitrokey3/shared/main.rst:33
msgid ""
"Register your Nitrokey 3 in the account settings by touching the button "
"to activate the Nitrokey 3. After you have successfully configured the "
"device, you must activate the Nitrokey 3 this way each time you log in."
msgstr "在账户设置中点击激活 Nitrokey 3 的按钮注册 Nitrokey 3。成功配置设备后，每次登录都必须这样激活 Nitrokey 3。"

#: ../components/software/nk-app2/keepassxc.rst:2
msgid "KeePassXC"
msgstr "KeePassXC"

#: ../components/software/nk-app2/keepassxc.rst:4
msgid ""
"These instructions describe how to protect and encrypt a `KeePassXC "
"<https://keepassxc.org/>`__ password database with Nitrokey 3."
msgstr "本说明介绍了如何使用 Nitrokey 3 保护和加密 `KeePassXC <https://keepassxc.org/>`__ 密码数据库。"

#: ../components/software/nk-app2/keepassxc.rst:8
msgid "KeePassXC version 2.7.6 or newer is required."
msgstr "需要 KeePassXC 2.7.6 或更新版本。"

#: ../components/software/nk-app2/keepassxc.rst:9
msgid ""
"`Nitrokey App 2 </software/nk-app2/>`__ version 2.2.2 or newer is "
"required."
msgstr "Nitrokey App 2 需要 2.2.2 或更新版本。"

#: ../components/software/nk-app2/keepassxc.rst:12
msgid "First Step: Generate a HMAC Secret With the Nitrokey App 2"
msgstr "第一步：使用 Nitrokey 应用程序生成 HMAC 密文 2"

#: ../components/software/nk-app2/keepassxc.rst:14
msgid "Open `Nitrokey App 2 </software/nk-app2/>`__"
msgstr "打开`Nitrokey 应用程序 2 </software/nk-app2/>`__"

#: ../components/software/nk-app2/keepassxc.rst:15
msgid "Select the Nitrokey 3"
msgstr "选择 Nitrokey 3"

#: ../components/software/nk-app2/keepassxc.rst:16
msgid "Select the ``PASSWORDS`` tab"
msgstr "选择 \"密码 \"选项卡"

#: ../components/software/nk-app2/keepassxc.rst:17
msgid "Click on ``ADD`` to create a new credential"
msgstr "单击 ``ADD`` 创建新凭证"

#: ../components/software/nk-app2/keepassxc.rst:18
msgid "Select ``HMAC`` from the algorithm drop-down menu"
msgstr "从算法下拉菜单中选择 \"HMAC"

#: ../components/software/nk-app2/keepassxc.rst:22
msgid "The credential is automatically named in ``HmacSlot2``."
msgstr "证书会自动以 ``HmacSlot2`` 命名。"

#: ../components/software/nk-app2/keepassxc.rst:23
msgid "No extra attributes can be saved for the HMAC credential."
msgstr "HMAC 凭据不能保存额外属性。"

#: ../components/software/nk-app2/keepassxc.rst:24
msgid ""
"The HMAC secret must be *exactly 20 bytes* long and in *Base32* format. "
"That is exactly 32 characters."
msgstr "HMAC 密文的长度必须*精确为 20 字节*，格式为*Base32*。也就是正好 32 个字符。"

#: ../components/software/nk-app2/keepassxc.rst:25
msgid "It is possible to save exactly one HMAC secret on a Nitrokey 3."
msgstr "在 Nitrokey 3 上可以准确保存一个 HMAC 密文。"

#: ../components/software/nk-app2/keepassxc.rst:27
msgid ""
"To generate a secret, there is a button in the field on the right-hand. "
"It is also possible to enter your own secret, as long as it is compliant."
msgstr "右侧字段中有一个按钮可用于生成密文。您也可以输入自己的秘密，只要它符合要求即可。"

#: ../components/software/nk-app2/keepassxc.rst:32
msgid ""
"The database can no longer be unlocked if the Nitrokey 3 is lost or "
"unavailable! Thus, you may want to set up a second Nitrokey 3 with the "
"same HMAC secret as a backup device."
msgstr ""
"如果 Nitrokey 3 丢失或不可用，数据库将无法再解锁！因此，您可能需要设置第二个具有相同 HMAC 密钥的 Nitrokey 3 "
"作为备份设备。"

#: ../components/software/nk-app2/keepassxc.rst:36
msgid ""
"The secret can **only** be seen before saving. If the KeePassXC database "
"is to be used with another Nitrokey 3, the HMAC secret must be copied "
"which is **only** possible **before saving** the credential."
msgstr ""
"只有***在保存之前才能看到该密文。如果 KeePassXC 数据库要与另一个 Nitrokey 3 一起使用，则必须复制 HMAC "
"密文，而这只能***在保存**凭证之前进行。"

#: ../components/software/nk-app2/keepassxc.rst:38
msgid "Click on ``SAVE`` to save the credential"
msgstr "单击 ``SAVE`` 保存证书"

#: ../components/software/nk-app2/keepassxc.rst:41
msgid "First Option: Protect an Existing KeePassXC Database With a Nitrokey 3"
msgstr "第一种选择：使用 Nitrokey 3 保护现有 KeePassXC 数据库"

#: ../components/software/nk-app2/keepassxc.rst:43
#: ../components/software/nk-app2/keepassxc.rst:65
msgid "Open KeePassXC"
msgstr "打开 KeePassXC"

#: ../components/software/nk-app2/keepassxc.rst:44
msgid ""
"Open the existing KeePassXC database that is to be protected with a "
"Nitrokey 3."
msgstr "打开要使用 Nitrokey 3 保护的现有 KeePassXC 数据库。"

#: ../components/software/nk-app2/keepassxc.rst:45
msgid "Select ``Database`` -> ``Database Security...`` from the menu bar"
msgstr "从菜单栏选择 \"数据库\"->\"数据库安全...\"。"

#: ../components/software/nk-app2/keepassxc.rst:46
msgid "Select ``Security`` on the left side"
msgstr "选择左侧的 \"安全"

#: ../components/software/nk-app2/keepassxc.rst:47
msgid ""
"Click on the ``Add additional protection...`` button in the ``Database "
"Credentials`` tab"
msgstr "单击 \"数据库凭证 \"选项卡中的 \"添加额外保护... \"按钮"

#: ../components/software/nk-app2/keepassxc.rst:48
#: ../components/software/nk-app2/keepassxc.rst:76
msgid ""
"Scroll down to ``Challenge-Response`` and click on ``Add Challenge-"
"Response``"
msgstr "向下滚动到 \"挑战-响应\"，点击 \"添加挑战-响应"

#: ../components/software/nk-app2/keepassxc.rst:49
msgid ""
"Now if the Nitrokey 3 is plugged in and a HMAC was generated before, "
"Nitrokey 3 should be displayed in the field."
msgstr "现在，如果插入了 Nitrokey 3，并且之前生成了 HMAC，那么 Nitrokey 3 就会显示在字段中。"

#: ../components/software/nk-app2/keepassxc.rst:51
msgid "Click on ``OK`` to add the Nitrokey 3 to the existing KeePassXC database"
msgstr "点击 \"确定\"，将 Nitrokey 3 添加到现有的 KeePassXC 数据库中"

#: ../components/software/nk-app2/keepassxc.rst:55
msgid ""
"By default the Nitrokey 3 is used as a second factor in addition to the "
"passphrase. To protect the database by the Nitrokey 3 exclusively, delete"
" the passphrase by clicking the button ``Remove Password``."
msgstr ""
"默认情况下，除密码外，Nitrokey 3 还被用作第二个因素。要完全使用 Nitrokey 3 保护数据库，请点击 \"删除密码 "
"\"按钮删除口令。"

#: ../components/software/nk-app2/keepassxc.rst:59
msgid ""
"If the Nirokey 3 is not recognized, close KeePassXC completely. Then "
"connect the Nitrokey 3 to your computer before restarting KeePassXC."
msgstr "如果无法识别 Nirokey 3，请完全关闭 KeePassXC。然后将 Nitrokey 3 与电脑连接，再重新启动 KeePassXC。"

#: ../components/software/nk-app2/keepassxc.rst:64
msgid "Second Option: Creating a KeePassXC Database, Protected by Nitrokey 3"
msgstr "第二种选择：创建受 Nitrokey 3 保护的 KeePassXC 数据库"

#: ../components/software/nk-app2/keepassxc.rst:66
msgid ""
"Select ``Database`` -> ``New Database...`` from the menu bar to create a "
"new KeePassXC database."
msgstr "从菜单栏选择 \"数据库\"->\"新建数据库...\"，创建新的 KeePassXC 数据库。"

#: ../components/software/nk-app2/keepassxc.rst:67
msgid ""
"Fill in the display name and an optional description for your new "
"database and click on ``Continue``"
msgstr "填写新数据库的显示名称和可选描述，然后点击``继续``。"

#: ../components/software/nk-app2/keepassxc.rst:68
msgid ""
"`Further database encryption settings <https://keepassxc.org/docs/>`__ "
"can now be configured here or the default settings can be retained. The "
"settings can also be changed later in the database settings."
msgstr ""
"现在可以在此处配置其他数据库加密设置 <https://keepassxc.org/docs/>`__ "
"或保留默认设置。以后也可以在数据库设置中更改这些设置。"

#: ../components/software/nk-app2/keepassxc.rst:71
msgid "Click on ``Continue`` to confirm the settings"
msgstr "点击 \"继续 \"确认设置"

#: ../components/software/nk-app2/keepassxc.rst:72
msgid "**Database Credential**"
msgstr "**数据库证书**"

#: ../components/software/nk-app2/keepassxc.rst:74
msgid ""
"Here you can enter a password as a second factor to unlock the database. "
"To connect the Nitrokey 3 (on which the HMAC secret was generated) to the"
" new KeePassXC database, click on ``Add additional protection...``"
msgstr ""
"在此您可以输入密码作为解锁数据库的第二个因素。要将 Nitrokey 3（在其上生成 HMAC 秘密）连接到新的 KeePassXC "
"数据库，请单击 \"添加附加保护...\"。"

#: ../components/software/nk-app2/keepassxc.rst:77
msgid ""
"Now if the Nitrokey 3 is plugged in and a HMAC was generated before, "
"Nitrokey 3 should be displayed in the field. Click on ``Continue`` to "
"complete the creation of the new KeePassXC database."
msgstr ""
"现在，如果已插入 Nitrokey 3 且之前已生成 HMAC，则字段中应显示 Nitrokey 3。点击 \"继续 \"完成新 "
"KeePassXC 数据库的创建。"

#: ../components/software/nk-app2/keepassxc.rst:82
msgid ""
"If the passphrase is left empty, the database will be protected by the "
"Nitrokey 3 exclusively. If a passphrase is entered, the database will be "
"protected by the passphrase **and** the Nitrokey 3."
msgstr "如果密码为空，数据库将只受 Nitrokey 3 保护。如果输入了口令，数据库将受到口令**和**Nitrokey 3 的保护。"

#: ../components/software/nk-app2/keepassxc.rst:86
msgid ""
"If the Nitrokey 3 is not recognized, close KeePassXC completely. Then "
"connect the Nitrokey 3 to your computer before restarting KeePassXC."
msgstr "如果无法识别 Nitrokey 3，请完全关闭 KeePassXC。然后将 Nitrokey 3 与电脑连接，再重新启动 KeePassXC。"

#: ../components/software/nk-app2/keepassxc.rst:89
msgid "Troubleshooting for Linux"
msgstr "Linux 故障排除"

#: ../components/software/nk-app2/keepassxc.rst:90
msgid ""
"If the Nirokey 3 device is not recognised by `KeePassXC "
"<https://keepassxc.org/>`__ on a Linux system:"
msgstr "如果 Linux 系统上的 `KeePassXC <https://keepassxc.org/>`__ 无法识别 Nirokey 3 设备："

#: ../components/software/nk-app2/keepassxc.rst:92
msgid ""
"Provided that the udev rules have been set as described `here "
"</software/nitropy/linux/udev.html>`__."
msgstr ""
"前提是 udev 规则已按 "
"\"此处</software/nitropy/linux/udev.html>\"________________________________设置。"

#: ../components/software/nk-app2/keepassxc.rst:93
msgid "Provided that the ``pcscd service`` are has been started with:"
msgstr "前提是`pcscd 服务``已经启动："

#: ../components/software/nk-app2/keepassxc.rst:99
msgid "Install the latest version of KeePassXC with flatpak:"
msgstr "使用 flatpak 安装最新版本的 KeePassXC："

#: ../components/software/nk-app2/keepassxc.rst:105
msgid ""
"Install ``ccid`` on Arch Linux based systems. See also: `Arch wiki: "
"Nitrokey <https://wiki.archlinux.org/title/Nitrokey>`__."
msgstr ""
"在基于 Arch Linux 的系统上安装 ``ccid``。另请参见：Arch wiki：Nitrokey "
"<https://wiki.archlinux.org/title/Nitrokey>`__。"

#: ../components/nitrokey3/shared/nitropy.rst:2
msgid "Using The Nitrokey 3 With nitropy"
msgstr "通过硝基使用 Nitrokey 3"

#: ../components/nitrokey3/shared/nitropy.rst:6
msgid "``nitropy`` can be used to list and manage Nitrokey 3 devices."
msgstr "nitropy \"可用于列出和管理 Nitrokey 3 设备。"

#: ../components/nitrokey3/shared/nitropy.rst:11
msgid ""
"Please see `this guide <https://docs.nitrokey.com/software/nitropy/all-"
"platforms/installation>`__ for pynitrokey installation instructions."
msgstr ""
"有关 pynitrokey 的安装说明，请参阅 `this guide "
"<https://docs.nitrokey.com/software/nitropy/all-"
"platforms/installation>`__ 。"

#: ../components/nitrokey3/shared/nitropy.rst:14
msgid "Listing Nitrokey 3 Devices"
msgstr "列出 Nitrokey 3 设备"

#: ../components/nitrokey3/shared/nitropy.rst:16
msgid ""
"Use ``nitropy list`` or ``nitropy nk3 list`` to list all connected "
"devices:"
msgstr "使用 ``nitropy list`` 或 ``nitropy nk3 list`` 列出所有连接的设备："

#: ../components/nitrokey3/shared/nitropy.rst:33
msgid "Querying Device Information"
msgstr "查询设备信息"

#: ../components/nitrokey3/shared/nitropy.rst:35
msgid ""
"The following commands are currently available for querying device "
"information:"
msgstr "下列命令目前可用于查询设备信息："

#: ../components/nitrokey3/shared/nitropy.rst:37
msgid "``nitropy nk3 version``: queries the firmware version of the device"
msgstr "`nitropy nk3 version`：查询设备的固件版本"

#: ../components/nitrokey3/shared/nitropy.rst:46
msgid "Working With Multiple Devices"
msgstr "使用多种设备"

#: ../components/nitrokey3/shared/nitropy.rst:48
msgid ""
"If multiple Nitrokey 3 devices are connected, you can use the ``--path`` "
"option to select one of them.  To determine the path of a device, use the"
" ``nitropy list`` or ``nitropy nk3 list`` command."
msgstr ""
"如果连接了多个 Nitrokey 3 设备，可以使用 ``--path` 选项选择其中一个。  要确定设备的路径，请使用 ``nitropy "
"list`` 或 ``nitropy nk3 list`` 命令。"

#: ../components/nitrokey3/shared/nitropy.rst:73
msgid ""
"To diagnose issues with your Nitrokey 3 device, you can use the ``nitropy"
" nk3 test`` command.  It performs a number of tests to determine the "
"state of your device."
msgstr "要诊断 Nitrokey 3 设备的问题，可以使用 ``nitropy nk3 test`` 命令。  它会执行一系列测试，以确定设备的状态。"

#: ../components/nitrokey3/shared/nitropy.rst:75
msgid "If the tests are successful, a summary of the steps is printed:"
msgstr "如果测试成功，则打印步骤摘要："

#: ../components/nitrokey3/shared/nitropy.rst:97
msgid ""
"If a test fails, the error message contains the path of a log file with "
"detailed information.  Please include this log file in support requests."
msgstr "如果测试失败，错误信息中会包含一个日志文件的路径，其中包含详细信息。  请在支持请求中包含该日志文件。"

#: ../components/nitrokey3/shared/nitropy.rst:99
msgid ""
"If you have set a FIDO2 pin for your device, you have to use the "
"``--pin`` option:"
msgstr "如果已为设备设置了 FIDO2 针脚，则必须使用 ``--pin`` 选项："

#: ../components/nitrokey3/shared/openpgp.rst.inc:2
#: ../components/pro/openpgp.rst.inc:2
msgid "OpenPGP Email Encryption"
msgstr "OpenPGP 电子邮件加密"

#: ../components/nitrokey3/shared/openpgp.rst.inc:7
msgid ""
"OpenPGP support was introduced with the `1.4.0 release of the Nitrokey 3 "
"<https://www.nitrokey.com/news/2023/milestone-nitrokey-3-achieved-"
"openpgp-card-one-time-passwords-and-usb-c-availability>`_ firmware. If "
"you have an older version, `update your firmware <firmware-update.html>`_"
msgstr ""
"Nitrokey 3 <https://www.nitrokey.com/news/2023/milestone-nitrokey-3"
"-achieved-openpgp-card-one-time-passwords-and-"
"usb-c-availability>`_固件的`1.4.0版本引入了 OpenPGP 支持。如果您使用的是旧版本，请更新您的固件 "
"<firmware-update.html>`_"

#: ../components/shared/openpgp.rst.inc:7
msgid ""
"If you are in doubt which one to choose, you should use OpenPGP. While "
"this page describes the usage of OpenPGP, S/MIME is described `here "
"<smime.html>`_."
msgstr "如果您不知道该选择哪一种，则应使用 OpenPGP。本页介绍 OpenPGP 的用法，而 S/MIME 则在 <smime.html>`_ 中介绍。"

#: ../components/shared/openpgp.rst.inc:9
msgid ""
"Please familiarize yourself with the general concept behind the OpenPGP "
"standard first, for example by reading `this info graphic "
"<https://emailselfdefense.fsf.org/en/infographic.html>`__ of the Free "
"Software Foundation."
msgstr ""
"请首先熟悉 OpenPGP 标准背后的一般概念，例如阅读自由软件基金会的 `this info graphic "
"<https://emailselfdefense.fsf.org/en/infographic.html>`__ 。"

#: ../components/pro/openpgp-keygen-backup.rst.inc:9
#: ../components/pro/openpgp-keygen-gpa.rst.inc:11
#: ../components/pro/openpgp-keygen-on-device.rst.inc:17
#: ../components/shared/openpgp.rst.inc:12
msgid "Key Generation"
msgstr "密钥生成"

#: ../components/shared/openpgp.rst.inc:14
msgid "If you do not have OpenPGP keys yet, you need to generate them first."
msgstr "如果还没有 OpenPGP 密钥，则需要先生成。"

#: ../components/shared/openpgp.rst.inc:16
msgid ""
"`Generate keys on your Nitrokey device <openpgp-keygen-gpa.html>`_ - this"
" is the best option if you are unexperienced, but you won’t have a backup"
" of your keys and therefore won’t be able to mitigate the loss of the "
"Nitrokey"
msgstr ""
"在 Nitrokey 设备上生成密钥 <openpgp-keygen-gpa.html>`_ - "
"如果您没有经验，这是最佳选择，但您没有密钥备份，因此无法减少 Nitrokey 的损失"

#: ../components/shared/openpgp.rst.inc:22
msgid ""
"`Generate keys on your Nitrokey device with different algorithm or key "
"size <openpgp-keygen-on-device.html>`_ - this is as secure as the "
"previous option and thus you won’t have a backup as well, but you can "
"change the key attributes (that is the algorithm and key size)"
msgstr ""
"在 Nitrokey 设备上使用不同的算法或密钥大小生成密钥 <openpgp-keygen-on-device.html>`_ - "
"这与前一个选项一样安全，因此您也不会有备份，但您可以更改密钥属性（即算法和密钥大小）。"

#: ../components/shared/openpgp.rst.inc:28
msgid ""
"`Generate keys locally <openpgp-keygen-backup.html>`_ and copy them to "
"your Nitrokey device - this is the most flexible, expert option, but only"
" secure if your system is not compromised, because you can create a "
"backup key outside your Nitrokey A similar description in french can be "
"found `here <https://xieme-art.org/post/importer-des-clefs-gnupg-dans-sa-"
"nitrokey-pro/>`__."
msgstr ""
"在本地 <openpgp-keygen-backup.html>``_ 生成密钥，然后将其复制到 Nitrokey 设备中 - "
"这是最灵活、最专业的选择，但只有在系统未被破坏的情况下才安全，因为您可以在 Nitrokey 外部创建备份密钥。类似的法文说明可在这里 "
"<https://xieme-art.org/post/importer-des-clefs-gnupg-dans-sa-nitrokey-"
"pro/>`__ 找到。"

#: ../components/shared/openpgp.rst.inc:37
msgid "Importing Existing Keys"
msgstr "导入现有密钥"

#: ../components/shared/openpgp.rst.inc:39
msgid ""
"If you already have OpenPGP keys you may want to use them with your "
"Nitrokey, instead of generating new ones. Importing existing keys works "
"basically the same as generating keys locally first and copying them to "
"the Nitrokey (see above). Therefore, please have a look at the "
"`corresponding instructions <openpgp-keygen-backup.html#key-import>`_. "
"Note that you probably want to generate another subkey for authentication"
" to your existing key. See at the same instructions for `subkey "
"generation <openpgp-keygen-backup.html#subkey-for-authentication>`_."
msgstr ""
"如果你已经有了 OpenPGP 密钥，你可能想将它们与 Nitrokey "
"一起使用，而不是生成新密钥。导入现有密钥的方法与先在本地生成密钥并将其复制到 Nitrokey 的方法基本相同（见上文）。因此，请参阅 "
"\"相应说明 <openpgp-keygen-backup.html#key-"
"import>`_\"。请注意，你可能需要生成另一个子密钥来验证现有密钥。请参阅 \"子密钥生成 \"的相同说明 <openpgp-keygen-"
"backup.html#subkey-for-authentication>`_。"

#: ../components/shared/openpgp.rst.inc:46
msgid "to use `OpenPGP encryption with Thunderbird <openpgp-thunderbird.html>`_"
msgstr ""
"在 Thunderbird <openpgp-thunderbird.html> 中使用 \"OpenPGP "
"加密\"____________________________。"

#: ../components/shared/openpgp.rst.inc:49
msgid "to use `OpenPGP encryption with Outlook <openpgp-outlook.html>`_"
msgstr "在 Outlook 中使用 `OpenPGP 加密 <openpgp-outlook.html>`_"

#: ../components/shared/openpgp.rst.inc:52
msgid ""
"to use `Claws Mail <https://www.claws-mail.org/plugin.php?plugin=gpg>`__,"
" an email client (and news reader) for Linux and Windows"
msgstr ""
"使用 \"Claws Mail <https://www.claws-"
"mail.org/plugin.php?plugin=gpg>`___\"，它是 Linux 和 Windows "
"的电子邮件客户端（和新闻阅读器）。"

#: ../components/shared/openpgp.rst.inc:56
msgid ""
"to use `Evolution <https://help.gnome.org/users/evolution/stable/mail-"
"encryption.html.en>`__, an email client for the Gnome Desktop on Linux "
"systems"
msgstr ""
"使用 \"Evolution <https://help.gnome.org/users/evolution/stable/mail-"
"encryption.html.en>`___\"，它是 Linux 系统上 Gnome 桌面的电子邮件客户端"

#: ../components/shared/openpgp.rst.inc:60
msgid "to use `GPGTools <https://gpgtools.org/>`__ on macOS."
msgstr "以在 macOS 上使用 `GPGTools <https://gpgtools.org/>`__。"

#: ../components/pro/openpgp-keygen-backup.rst.inc:2
msgid "OpenPGP Key Generation With Backup"
msgstr "带备份的 OpenPGP 密钥生成"

#: ../components/pro/openpgp-keygen-backup.rst.inc:6
msgid ""
"The following instructions explain the generation of OpenPGP keys and how"
" to copy them to the Nitrokey. This method has the advantage of providing"
" a backup of the keys in case of losing or breaking the Nitrokey. The "
"instructions are based on the command line interface of GnuPG. Thus, you "
"need to have GnuPG installed on your system. The newest GnuPG version for"
" Windows can be found `here <https://www.gpg4win.org/>`__ and the newest "
"version for MacOS can be found `here <https://gpgtools.org/>`__. Users of"
" Linux systems please install GnuPG with help of the package manager."
msgstr ""
"以下说明解释了如何生成 OpenPGP 密钥以及如何将其复制到 Nitrokey 中。这种方法的优点是可以在 Nitrokey "
"丢失或损坏时提供密钥备份。本说明基于 GnuPG 的命令行界面。因此，你需要在系统中安装 GnuPG。Windows 的最新 GnuPG 版本可在"
" `此处 <https://www.gpg4win.org/>`___找到，MacOS 的最新版本可在 `此处 "
"<https://gpgtools.org/>`___找到。Linux 系统用户请使用软件包管理器安装 GnuPG。"

#: ../components/pro/openpgp-keygen-backup.rst.inc:11
msgid ""
"At first, you need to generate a key locally. You can decide, which key "
"attributes to use and - most importantly - you can export the key and "
"keep it somewhere save in case you need to restore the key."
msgstr "首先，你需要在本地生成一个密钥。您可以决定使用哪个密钥属性，最重要的是，您可以导出密钥并保存在某个地方，以备需要恢复密钥时使用。"

#: ../components/pro/openpgp-keygen-backup.rst.inc:14
msgid "Main Key and Encryption Subkey"
msgstr "主密钥和加密子密钥"

#: ../components/pro/openpgp-keygen-backup.rst.inc:16
msgid ""
"We can use the command ``gpg --full-generate-key --expert`` to start a "
"guided key generation with all possible options. You can choose the key "
"type (usually RSA (1) or ECC (9)), the length of the key and other "
"attributes. The following output is just a simple example, you may choose"
" other values."
msgstr ""
"我们可以使用命令 ``gpg --full-generate-key --expert`` "
"来使用所有可能的选项生成密钥。你可以选择密钥类型（通常是 RSA (1) 或 ECC "
"(9)）、密钥长度和其他属性。下面的输出只是一个简单的例子，你可以选择其他值。"

#: ../components/pro/openpgp-keygen-backup.rst.inc:80
msgid ""
"For information regarding the supported algorithms, please refer to the "
"`faq <../faq.html>`_"
msgstr "有关支持算法的信息，请参阅 \"faq <.../faq.html>`_"

#: ../components/pro/openpgp-keygen-backup.rst.inc:84
msgid "Subkey for Authentication"
msgstr "验证子密钥"

#: ../components/pro/openpgp-keygen-backup.rst.inc:86
msgid ""
"You now have a main key with the capability to sign and certify (marked "
"as [SC]) and a subkey for encryption (marked as [E]). It is necessary to "
"have another subkey for use cases in which authentication is needed. This"
" subkey is generated in the next step. Type in ``gpg --edit-key --expert "
"keyID`` to start the process, whereas “keyID” is either the id of the key"
" or the email address used during key generation."
msgstr ""
"现在你有了一个具有签名和认证功能的主密钥（标记为 [SC]）和一个用于加密的子密钥（标记为 "
"[E]）。在需要进行身份验证的情况下，还需要另一个子密钥。下一步将生成该子密钥。键入 ``gpg --edit-key --expert "
"keyID`` 开始此过程，其中 \"keyID \"是密钥的 ID 或生成密钥时使用的电子邮件地址。"

#: ../components/pro/openpgp-keygen-backup.rst.inc:107
msgid ""
"Now you are in the interactive mode of GnuPG and you can add a key by "
"simply typing ``addkey``. You need to choose the key you want to use. It "
"is crucial to choose “set your own capabilities”, because we want to have"
" the “authenticate” capability which is not available otherwise. We "
"toggle sign and encrypt by typing ``s`` and ``e`` and we activate "
"authenticate by typing ``a``."
msgstr ""
"现在你已进入 GnuPG 的交互模式，只需输入 ``addkey`` 即可添加密钥。你需要选择要使用的密钥。选择 \"设置自己的功能 "
"\"至关重要，因为我们希望拥有 \"验证 \"功能，否则就无法使用。输入 ``s`` 和 ``e` 来切换签名和加密，输入 ``a` "
"激活身份验证。"

#: ../components/pro/openpgp-keygen-backup.rst.inc:165
msgid ""
"We quit with ``q``. Afterwards we need to answer the same questions as "
"before. Finally, we have a ready-to-go key set which we can import to our"
" device."
msgstr "我们以 ``q`` 结尾。之后，我们需要回答与之前相同的问题。最后，我们就有了一个随时可用的密钥集，可以导入到我们的设备中。"

#: ../components/pro/openpgp-keygen-backup.rst.inc:199
msgid ""
"Now is good time to backup your key. Please keep this backup very secure."
" It is best practice to never have this key on a regular computer which "
"has connection to the internet, so that the key never gets compromised. "
"You can create a backup with something like:"
msgstr "现在是备份密钥的好时机。请妥善保管备份密钥。最好的做法是，永远不要把密钥放在能连接互联网的普通电脑上，这样密钥就不会泄露。您可以使用以下方法创建备份"

#: ../components/pro/openpgp-keygen-backup.rst.inc:206
msgid "Key Import"
msgstr "主要进口"

#: ../components/pro/openpgp-keygen-backup.rst.inc:208
msgid ""
"You have a main key and two subkeys which can be imported to your "
"Nitrokey. Before proceeding please make sure that you really have a "
"backup of the key, if you need one. The ``keytocard`` command used in the"
" next steps will **delete** your key from your disk!"
msgstr ""
"您有一个主密钥和两个子密钥，可以导入到您的 Nitrokey 中。在继续之前，请确保你确实有密钥的备份（如果需要的话）。接下来的步骤中使用的 "
"\"keytocard \"命令将从磁盘中删除***你的密钥！"

#: ../components/pro/openpgp-keygen-backup.rst.inc:210
msgid ""
"We start the process by accessing the interactive interface of GnuPG "
"again with ``gpg --edit-key --expert keyID``, whereas ``keyID`` is either"
" the id of the key or the email address used during key generation."
msgstr ""
"我们使用 ``gpg --edit-key --expert keyID`` 再次访问 GnuPG 的交互式界面来开始这一过程，其中 "
"``keyID`` 是密钥的 ID 或生成密钥时使用的电子邮件地址。"

#: ../components/pro/openpgp-keygen-backup.rst.inc:246
msgid ""
"We just imported the main key to the card. Now we proceed with the two "
"subkeys. We type ``key 1`` to select the encryption subkey and type in "
"``keytocard`` again and select the slot to use."
msgstr ""
"我们刚刚将主密钥导入到卡中。现在我们继续输入两个子密钥。我们输入 ``key 1`` 来选择加密子密钥，然后再次输入 ``keytocard` "
"并选择要使用的插槽。"

#: ../components/pro/openpgp-keygen-backup.rst.inc:275
msgid ""
"Now we deselect the first key with ``key 1`` and select the second subkey"
" with ``key 2`` and move it as well with ``keytocard``. Afterwards we "
"quit and save the changes."
msgstr ""
"现在，我们用 ``key 1`` 取消选择第一个键，用 ``key 2`` 选择第二个子键，并用 ``keytocard` "
"移动它。然后退出并保存更改。"

#: ../components/pro/openpgp-keygen-backup.rst.inc:318
msgid ""
"Your keys are now moved to the Nitrokey and thus secured in hardware. "
"Congratulations!"
msgstr "现在，您的钥匙已被转移到 Nitrokey 中，从而实现了硬件安全。恭喜您"

#: ../components/pro/openpgp-keygen-backup.rst.inc:321
#: ../components/pro/openpgp-keygen-gpa.rst.inc:51
#: ../components/pro/openpgp-keygen-on-device.rst.inc:204
msgid "Exporting Public Key and Keyserver Usage"
msgstr "导出公钥和密钥服务器使用情况"

#: ../components/pro/openpgp-keygen-backup.rst.inc:323
#: ../components/pro/openpgp-keygen-gpa.rst.inc:53
#: ../components/pro/openpgp-keygen-on-device.rst.inc:206
msgid ""
"Although you can start to use your Nitrokey right away after generating "
"the keys on your system, you need to import your public key on every "
"system, you want to use the Nitrokey on. So to be prepared you have two "
"options: You either save the public key anywhere you like and use it on "
"another system or you save the public key on a webpage/keyserver."
msgstr ""
"虽然在系统上生成密钥后，你可以立即开始使用 Nitrokey，但你需要在每一个要使用 Nitrokey "
"的系统上导入你的公钥。因此，为了做好准备，你有两个选择：要么把公钥保存在任何地方，然后在其他系统上使用；要么把公钥保存在网页/钥匙服务器上。"

#: ../components/pro/openpgp-keygen-backup.rst.inc:326
#: ../components/pro/openpgp-keygen-on-device.rst.inc:209
msgid "Generating a Public Key File"
msgstr "生成公开密钥文件"

#: ../components/pro/openpgp-keygen-backup.rst.inc:328
msgid ""
"To get a simple file of your public key, you can just use ``gpg --armor "
"--export keyID > pubkey.asc``. Use either the fingerprint as “keyID” "
"(look at ``gpg -K`` to get it) or just use your email address as an "
"identifier."
msgstr ""
"要获取公钥的简单文件，可以使用 ``gpg --armor --export keyID > pubkey.asc``。使用指纹作为 "
"\"keyID\"（查看 ``gpg -K`` 获取），或者直接使用你的电子邮件地址作为标识符。"

#: ../components/pro/openpgp-keygen-backup.rst.inc:330
msgid ""
"You can carry this file with you or send it to anyone who you like. This "
"file is not secret at all. If you want to use the Nitrokey on another "
"system, you first import this public key via ``gpg --import pubkey.asc`` "
"and then types ``gpg --card-status`` so that the system knows where to "
"look for this key. That’s all."
msgstr ""
"您可以随身携带这份文件，也可以将其发送给任何您喜欢的人。该文件绝非机密。如果你想在其他系统上使用 Nitrokey，首先要通过 ``gpg "
"--import pubkey.asc`` 导入此公钥，然后键入 ``gpg --card-status`` "
"这样系统就知道在哪里可以找到此公钥。就这样。"

#: ../components/pro/openpgp-keygen-backup.rst.inc:334
#: ../components/pro/openpgp-keygen-on-device.rst.inc:216
msgid "Uploading the Public Key"
msgstr "上传公开密钥"

#: ../components/pro/openpgp-keygen-backup.rst.inc:336
#: ../components/pro/openpgp-keygen-on-device.rst.inc:218
msgid ""
"If you do not want to carry a public keyfile with you, you can upload it "
"to keyserver. You can do this by typing ``gpg --keyserver "
"search.keyserver.net --send-key keyID``. If you are using another machine"
" you can just import it by using ``gpg --keyserver search.keyserver.net "
"--recv-key keyID``."
msgstr ""
"如果不想随身携带公开密钥文件，可以将其上传到 keyserver。键入``gpg --keyserver search.keyserver.net"
" --send-key keyID``即可。如果你使用的是另一台机器，可以使用 ``gpg --keyserver "
"search.keyserver.net --recv-key keyID`` 来导入。"

#: ../components/pro/openpgp-keygen-backup.rst.inc:338
msgid ""
"Another possibility is to change the URL setting on your card. Start "
"``gpg --card-edit`` again and first set the URL where the key is situated"
" (e.g. on the keyserver or on your webpage etc.) via the ``url`` command."
" From now on you can import the key on another system by just using the "
"``fetch`` command within the ``gpg --card-edit environment``."
msgstr ""
"另一种方法是更改卡上的 URL 设置。再次启动 ``gpg --card-edit`` 并首先通过 ``url`` 命令设置密钥所在的 "
"URL（例如在密钥服务器上或你的网页上等）。从现在起，你只需在 ``gpg --card-edit environment`` 中使用 "
"``fetch`` 命令，就可以在其他系统上导入密钥。"

#: ../components/pro/openpgp-keygen-gpa.rst.inc:2
msgid "OpenPGP Key Generation Using GPA"
msgstr "使用 GPA 生成 OpenPGP 密钥"

#: ../components/pro/openpgp-keygen-gpa.rst.inc:6
msgid ""
"The following instructions explain the generation of OpenPGP keys "
"directly on the Nitrokey with help of the GNU Privacy Assistant (GPA). "
"You won’t be able to create a backup of these keys. Thus, if you lose the"
" Nitrokey or it breaks you can not decrypt mails or use these keys "
"anymore. Please see `here <openpgp-outlook.html>`_ for a comparison of "
"the different methods to generate OpenPGP keys."
msgstr ""
"以下说明介绍了如何在 Nitrokey 上借助 GNU Privacy Assistant (GPA) 直接生成 OpenPGP "
"密钥。你无法创建这些密钥的备份。因此，如果你丢失了 Nitrokey 或它坏了，你就不能再解密邮件或使用这些密钥了。请参阅 \"此处 "
"<openpgp-outlook.html>``_ 以比较生成 OpenPGP 密钥的不同方法。"

#: ../components/pro/openpgp-keygen-gpa.rst.inc:8
#, fuzzy
msgid ""
"You need to have GnuPG and GPA installed on your system. The newest "
"version for Windows can be found `here <https://www.gpg4win.org/>`__ "
"(make sure to check “GPA” during the installation!). Users of Linux "
"systems please install GnuPG and GPA with help of the package manager "
"(e.g. using ``sudo apt install gnupg gpa`` on Ubuntu)."
msgstr ""
"您需要在系统中安装 GnuPG 和 GPA。Windows 的最新版本可在 `此处 "
"<https://www.gpg4win.org/>`___找到（请确保在安装时选中 \"GPA\"！）。Linux "
"系统用户请在软件包管理器的帮助下安装 GnuPG 和 GPA（例如，在 Ubuntu 上使用 ``sudo apt install gnupg "
"gpa``）。"

#: ../components/pro/openpgp-keygen-gpa.rst.inc:13
msgid ""
"At first, open the GNU Privacy Assistant (GPA). You may are asked to "
"generate a key, you can skip this step for now by clicking “Do it later”."
" In the main window, please click on “Card” or “Card Manager”."
msgstr ""
"首先，打开 GNU Privacy Assistant (GPA)。可能会要求你生成一个密钥，你可以点击 \"稍后再做 "
"\"暂时跳过这一步。在主窗口中，请点击 \"卡 \"或 \"卡管理器\"。"

#: ../components/pro/openpgp-keygen-gpa.rst.inc:20
msgid ""
"Another windows opens. Please go to “Card” -> “Generate key” to start the"
" key generation process."
msgstr "另一个窗口打开。请转到 \"卡\"->\"生成密钥\"，开始密钥生成过程。"

#: ../components/pro/openpgp-keygen-gpa.rst.inc:27
msgid ""
"Now you can put in your name and the email address you want to use for "
"the key that will be generated next. You may choose an expiration date "
"for your key, but you don’t have to."
msgstr "现在，您可以输入您的姓名和电子邮件地址，以便接下来生成密钥。你可以为密钥选择一个到期日期，但不一定要这样做。"

#: ../components/pro/openpgp-keygen-gpa.rst.inc:29
msgid ""
"**Please do not use the backup checkbox**. This “backup” does only save "
"the encryption key. In case of a loss of the device, you will not be able"
" to restore the whole key set. So on the one hand it is no full backup "
"(use `these instructions <openpgp-keygen-backup.html>`_ instead, if you "
"need one) and on the other hand you risk that someone else can get in "
"possession of your encryption key. The advantage of generating keys on-"
"device is to make sure that keys are stored securely. Therefore, we "
"recommend to skip this half-backup."
msgstr ""
"**请不要使用备份复选框**。这种 \"备份 "
"\"只保存加密密钥。如果设备丢失，将无法恢复整个密钥集。因此，一方面它不是完整的备份（如果需要，请使用 \"这些说明 <openpgp-"
"keygen-backup.html>`_\" "
"代替），另一方面，你还冒着被他人获取加密密钥的风险。在设备上生成密钥的好处是确保密钥的安全存储。因此，我们建议跳过这一半备份。"

#: ../components/pro/openpgp-keygen-gpa.rst.inc:36
msgid ""
"You will be asked for the admin PIN (default: 12345678) and the user PIN "
"(default: 123456). When the key generation is finished, you can see the "
"fingerprints of the keys on the bottom of the window. You may fill up the"
" fields shown above, which are saved on your Nitrokey as well."
msgstr ""
"系统会要求你输入管理员密码（默认值：12345678）和用户密码（默认值：123456）。密钥生成完成后，你可以在窗口底部看到密钥的指纹。您可以填写上面显示的字段，这些信息也会保存在您的"
" Nitrokey 中。"

#: ../components/pro/openpgp-keygen-gpa.rst.inc:43
msgid ""
"Now you can close the window and go back to the main window. Your key "
"will be visible in the key manager after refreshing. Every application "
"which makes use of GnuPG will work with your Nitrokey as well, because "
"GnuPG is fully aware of the fact, that the keys are stored on your "
"Nitrokey."
msgstr ""
"现在，您可以关闭窗口并返回主窗口。刷新后，你的密钥就会出现在密钥管理器中。所有使用 GnuPG 的应用程序都能使用你的 Nitrokey，因为 "
"GnuPG 完全知道密钥存储在你的 Nitrokey 中。"

#: ../components/pro/openpgp-keygen-gpa.rst.inc:60
msgid ""
"Right-click on your key entry in the key manager and click “Export Keys…”"
" to export the public key to a file and/or “Send Keys…” to upload the key"
" to a keyserver."
msgstr "右键单击密钥管理器中的密钥条目，然后单击 \"导出密钥... \"将公开密钥导出到文件和/或 \"发送密钥... \"将密钥上传到密钥服务器。"

#: ../components/pro/openpgp-keygen-gpa.rst.inc:62
msgid ""
"You can carry the keyfile with you or send it to anyone who you like. "
"This file is not secret at all. If you want to use the Nitrokey on "
"another system, you first import this public key via clicking on “Keys” "
"-> “Importing Keys…” and choosing the file."
msgstr ""
"您可以随身携带密钥文件，也可以将其发送给您喜欢的任何人。该文件绝非机密。如果想在其他系统上使用 Nitrokey，首先要通过点击 "
"\"密钥\"->\"导入密钥... \"并选择文件来导入公钥。"

#: ../components/pro/openpgp-keygen-gpa.rst.inc:65
msgid ""
"If you do not want to carry a public keyfile with you, you can upload it "
"to keyserver. If you are using another machine you can just import it by "
"using “Server” -> “Retrieve Keys…” and entering your name or key id."
msgstr ""
"如果不想随身携带公钥文件，可以将其上传到 keyserver。如果你使用的是另一台机器，可以使用 "
"\"服务器\"->\"检索密钥...\"，然后输入你的名字或密钥 ID，直接导入。"

#: ../components/pro/openpgp-keygen-gpa.rst.inc:67
#, fuzzy
msgid ""
"Another possibility is to change the URL setting on your card. Open the "
"card manager again and fill in the URL where the key is situated (e.g. on"
" the keyserver or on your webpage etc.). From now on you can import the "
"key on another system by right-clicking on the URL and click on “Fetch "
"Key”."
msgstr ""
"另一种方法是更改卡上的 URL 设置。再次打开密钥卡管理器，填写密钥所在的 URL（如密钥服务器或您的网页等）。从现在起，您可以右击 URL "
"并点击 \"Fetch Key（获取密钥）\"，将密钥导入其他系统。"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:2
msgid "OpenPGP Key Generation On-Device"
msgstr "在设备上生成 OpenPGP 密钥"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:6
msgid ""
"The following instructions explain the generation of OpenPGP keys "
"directly on the Nitrokey. This is done by using the command line "
"interface of GnuPG. Thus, you need to have GnuPG installed on your "
"system. The newest GnuPG version for Windows can be found `here "
"<https://www.gpg4win.org/>`__ and the newest version for MacOS can be "
"found `here <https://gpgtools.org/>`__. Users of Linux systems please "
"install GnuPG with help of the package manager."
msgstr ""
"以下说明解释了如何直接在 Nitrokey 上生成 OpenPGP 密钥。这是通过使用 GnuPG 的命令行界面完成的。因此，您需要在系统中安装 "
"GnuPG。Windows 系统的最新 GnuPG 版本可在 `此处 <https://www.gpg4win.org/>`__找到，MacOS "
"系统的最新版本可在 `此处 <https://gpgtools.org/>`__找到。Linux 系统用户请使用软件包管理器安装 GnuPG。"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:10
msgid ""
"These instructions are based on GnuPG version 2.2.6 or higher. Some Linux"
" Distributions have an older version installed. In this case please "
"choose a different method as listed `here <openpgp.html>`_ or install a "
"newer version if possible."
msgstr ""
"这些说明基于 GnuPG 2.2.6 或更高版本。有些 Linux 发行版安装的是旧版本。在这种情况下，请选择 \"此处 "
"<openpgp.html>`_ 列出的其他方法，或尽可能安装更新的版本。"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:19
msgid ""
"The following descriptions explain the basic key generation on-device via"
" GnuPG’s command line interface. The default behaviour is to generate RSA"
" keys of 2048 bit size. If you want to change the key algorithm and "
"length, have a look at the next section first."
msgstr ""
"以下说明解释了通过 GnuPG 命令行界面在设备上生成密钥的基本方法。默认情况下生成 2048 位的 RSA "
"密钥。如果要更改密钥算法和长度，请先查看下一节。"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:21
msgid "Open a command line and type ``gpg2 --card-edit``."
msgstr "打开命令行，输入 ``gpg2 --card-edit``."

#: ../components/pro/openpgp-keygen-on-device.rst.inc:23
msgid ""
"To open the Windows command line please push the Windows-key and R-key. "
"Now type ‘cmd.exe’ in the text field and hit enter. To open a Terminal on"
" macOS or GNU/Linux please use the application search (e.g. spotlight on "
"macOS)."
msgstr ""
"要打开 Windows 命令行，请按下 Windows 键和 R 键。现在在文本字段中输入 \"cmd.exe\"，然后按回车键。要在 macOS"
" 或 GNU/Linux 上打开终端，请使用应用程序搜索（例如 macOS 上的 spotlight）。"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:51
msgid ""
"Now you are in the interactive interface of GnuPG. Activate the admin "
"commands with ``admin`` and use ``generate`` afterwards to start the "
"generation of keys."
msgstr "现在你已进入 GnuPG 的交互界面。使用 ``admin`` 激活管理命令，然后使用 ``generate`` 开始生成密钥。"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:93
msgid ""
"**Please do not create the suggested off-card backup.** This “backup” "
"does only save the encryption key, but not the signature and "
"authentication keys. In case of a loss of the device, you will not be "
"able to restore the whole key set. So on the one hand it is no full "
"backup (use `these instructions <openpgp-keygen-backup.html>`_ instead, "
"if you need one) and on the other hand you risk that someone else can get"
" in possession of your encryption key. The advantage of generating keys "
"on-device is to make sure that keys are stored securely. Therefore, we "
"recommend to skip this half-backup."
msgstr ""
"**请不要创建建议的卡外备份。** 这种 \"备份 "
"\"只保存加密密钥，而不保存签名和验证密钥。如果设备丢失，您将无法恢复整个密钥集。因此，一方面这不是完整的备份（如果需要，请使用 \"这些说明 "
"<openpgp-keygen-backup.html>`_\" "
"代替），另一方面，你还冒着被他人获取加密密钥的风险。在设备上生成密钥的好处是确保密钥的安全存储。因此，我们建议跳过这一半备份。"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:96
msgid ""
"Now you have a complete key set on your device which can be used for the "
"`various applications "
"<https://www.nitrokey.com/documentation/applications>`__ listed on our "
"site. Type ``quit`` and hit enter to exit."
msgstr ""
"现在你的设备上已经有了一套完整的密钥，可以用于我们网站上列出的 \"各种应用程序 "
"<https://www.nitrokey.com/documentation/applications>`__\"。输入 ``quit`` "
"并按回车键退出。"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:99
msgid "Change Key Attributes"
msgstr "更改关键属性"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:101
msgid ""
"This section is about changing the key attributes. If you want to use the"
" default values, you can proceed with the next section."
msgstr "本节介绍如何更改关键属性。如果想使用默认值，可以继续下一节的内容。"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:103
msgid "Open a command line and type ``gpg2 --card-edit --expert``."
msgstr "打开命令行并键入 ``gpg2 --card-edit --expert``."

#: ../components/pro/openpgp-keygen-on-device.rst.inc:129
msgid ""
"Now you are in the interactive interface of GnuPG. As you can see in the "
"“Key attributes” field above, the default value rsa2048 is set. To change"
" them, activate the admin commands with ``admin`` and use ``key-attr`` "
"afterwards to change the attributes of the keys."
msgstr ""
"现在你已进入 GnuPG 的交互界面。在上面的 \"Key attributes（密钥属性）\"栏中可以看到，默认值为 "
"rsa2048。要更改它们，请使用 ``admin`` 激活管理命令，然后使用 ``key-attr` 更改密钥属性。"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:160
msgid ""
"You can choose the attribute for each key (that is, signature, encryption"
" and authentication key). Most people will use the same attributes for "
"every key. Type ``list`` to see the results (have look at the “Key "
"attributes” field, which now reads rsa4096)."
msgstr ""
"你可以为每个密钥（即签名、加密和验证密钥）选择属性。大多数人会对每个密钥使用相同的属性。键入 ``list`` 查看结果（请看 \"密钥属性 "
"\"字段，现在是 rsa4096）。"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:186
msgid ""
"Type ``quit`` and hit enter to exit or proceed directly with the previous"
" section to actually generate the keys with the key attributes you just "
"set."
msgstr "键入 ``quit`` 并按回车键退出，或者直接执行上一节，用刚才设置的密钥属性实际生成密钥。"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:188
msgid ""
"The following table illustrates which algorithm can be used on which "
"device."
msgstr "下表说明了哪种算法可用于哪种设备。"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:191
msgid "\\"
msgstr "\\"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:197
msgid "curve25519 (ECC)"
msgstr "curve25519 (ECC)"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:198
msgid "NIST (ECC)"
msgstr "NIST (ECC)"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:199
msgid "Brainpool (ECC)"
msgstr "脑池（ECC）"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:200
msgid "secp256k1"
msgstr "secp256k1"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:211
msgid ""
"To get a simple file of your public key, you can just use ``gpg2 --armor "
"--export keyID > pubkey.asc``. Use either the fingerprint as “keyID” "
"(look at ``gpg -K`` to get it) or just use your email address as an "
"identifier."
msgstr ""
"要获取公钥的简单文件，可以使用 ``gpg2 --armor --export keyID > pubkey.asc``。使用指纹作为 "
"\"keyID\"（查看 ``gpg -K`` 获取），或者直接使用你的电子邮件地址作为标识符。"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:213
msgid ""
"You can carry this file with you or send it to anyone who you like. This "
"file is not secret at all. If you want to use the Nitrokey on another "
"system, you first import this public key via ``gpg2 --import pubkey.asc``"
" and then types ``gpg2 --card-status`` so that the system knows where to "
"look for this key. That’s all."
msgstr ""
"您可以随身携带这份文件，也可以将其发送给任何您喜欢的人。该文件绝非机密。如果你想在其他系统上使用 Nitrokey，首先要通过 ``gpg2 "
"--import pubkey.asc`` 导入此公钥，然后键入 ``gpg2 --card-status`` "
"这样系统就知道在哪里可以找到此公钥。就这样。"

#: ../components/pro/openpgp-keygen-on-device.rst.inc:220
msgid ""
"Another possibility is to change the URL setting on your card. Start gpg "
"–card-edit again and first set the URL where the key is situated (e.g. on"
" the keyserver or on your webpage etc.) via the ``url`` command. From now"
" on you can import the key on another system by just using the ``fetch`` "
"command within the ``gpg --card-edit`` environment."
msgstr ""
"另一种方法是更改密钥卡上的 URL 设置。再次启动 gpg -card-edit 并首先通过 ``url`` 命令设置密钥所在的 "
"URL（例如在密钥服务器或你的网页上等）。从现在起，你只需在 ``gpg --card-edit`` 环境中使用 ``fetch`` "
"命令，就可以在其他系统中导入密钥了。"

#: ../components/pro/openpgp-outlook.rst.inc:2
msgid "OpenPGP Email Encryption with Outlook"
msgstr "用 Outlook 进行 OpenPGP 电子邮件加密"

#: ../components/pro/openpgp-outlook.rst.inc:8
msgid ""
"Unfortunately, there is no solution to use OpenPGP in Outlook for macOS "
"yet."
msgstr "遗憾的是，目前还没有在 MacOS 版 Outlook 中使用 OpenPGP 的解决方案。"

#: ../components/pro/openpgp-outlook.rst.inc:14
msgid ""
"If you do not have PGP-Keys on your Nitrokey yet, please look at `this "
"page <openpgp.html>`_ first."
msgstr "如果您的 Nitrokey 上还没有 PGP 密钥，请先查看`本页 <openpgp.html>`_ 。"

#: ../components/pro/openpgp-outlook.rst.inc:16
msgid ""
"You need to have GnuPG installed on your System. The newest GnuPG version"
" for Windows can be found `here <https://www.gpg4win.org>`__. You need to"
" make sure to have “GpgOL” checked during installation process (see "
"below)."
msgstr ""
"您需要在系统中安装 GnuPG。Windows 版 GnuPG 的最新版本可在 `此处 "
"<https://www.gpg4win.org>`___找到。在安装过程中，需要确保选中 \"GpgOL\"（见下文）。"

#: ../components/pro/openpgp-outlook.rst.inc:26
msgid ""
"After installing GPG4Win along with GpgOL, you will see a new icon "
"labeled “Secure” in the composing window. To encrypt and sign a mail you "
"just click on the sign like seen below."
msgstr "安装 GPG4Win 和 GpgOL 后，你会在撰写窗口中看到一个标有 \"安全 \"的新图标。要对邮件进行加密和签名，只需点击下图中的签名即可。"

#: ../components/pro/openpgp-outlook.rst.inc:33
msgid ""
"GnuPG will start signing and encrypting the mail as soon as you click on "
"‘send’. You are requested to choose the identity you want to sign with "
"and encrypt for."
msgstr "一旦点击 \"发送\"，GnuPG 就会开始对邮件进行签名和加密。您需要选择要签名和加密的身份。"

#: ../components/pro/openpgp-outlook.rst.inc:40
msgid ""
"Furthermore, you are asked for typing in the User PIN of the Nitrokey for"
" signing the mail."
msgstr "此外，您还需要输入 Nitrokey 的用户密码，以便签署邮件。"

#: ../components/pro/openpgp-outlook.rst.inc:47
msgid ""
"You will be asked automatically for your User PIN if you want to read an "
"encrypted mail."
msgstr "如果您要阅读加密邮件，系统会自动要求您输入用户密码。"

#: ../components/pro/openpgp-thunderbird.rst.inc:2
msgid "OpenPGP Email Encryption With Thunderbird"
msgstr "使用 Thunderbird 进行 OpenPGP 电子邮件加密"

#: ../components/pro/openpgp-thunderbird.rst.inc:7
msgid "Thunderbird 78.3 and newer"
msgstr "雷鸟 78.3 及更新版本"

#: ../components/pro/openpgp-thunderbird.rst.inc:9
msgid ""
"At the moment Thunderbird’s 78 support for the OpenPGP emails is not easy"
" to set up. See `Thunderbird’s documentation "
"<https://wiki.mozilla.org/Thunderbird:OpenPGP:Smartcards>`__ for details."
" Here is a `comprehensive German guide "
"<https://decatec.de/it/thunderbird-78-pgp-verschluesselung-mit-dem-"
"nitrokey-storage/>`__."
msgstr ""
"目前，Thunderbird 对 OpenPGP 电子邮件的 78 支持还不容易设置。详情请参见 \"Thunderbird 文档 "
"<https://wiki.mozilla.org/Thunderbird:OpenPGP:Smartcards>`__\"。这里有一份 "
"\"全面的德语指南 <https://decatec.de/it/thunderbird-78-pgp-verschluesselung-mit-"
"dem-nitrokey-storage/>`__\"。"

#: ../components/pro/openpgp-thunderbird.rst.inc:14
msgid ""
"Error message: ``The configured key ID '4BA0183FCBA844A7' cannot be found"
" on your keyring``"
msgstr "错误信息：在您的密钥环中找不到配置的密钥 ID \"4BA0183FCBA844A7\"``。"

#: ../components/pro/openpgp-thunderbird.rst.inc:16
msgid "Make sure that the public key is imported to the Thunderbird’s manager and"
msgstr "确保已将公钥导入到 Thunderbird 的管理器中，并且"

#: ../components/pro/openpgp-thunderbird.rst.inc:17
msgid ""
"The key ID does not contain any whitespace, and consists of 16 characters"
" from range 0-9 A-F"
msgstr "密钥 ID 不包含任何空格，由 16 个字符组成，字符范围为 0-9 A-F"

#: ../components/pro/openpgp-thunderbird.rst.inc:18
msgid "you have GPA or Kleopatra software installed."
msgstr "您已安装 GPA 或 Kleopatra 软件。"

#: ../components/pro/openpgp-thunderbird.rst.inc:20
msgid ""
"Please use Kleopatra or `GPA <openpgp-keygen-gpa.html>`_ software to "
"handle the smart card."
msgstr "请使用 Kleopatra 或`GPA <openpgp-keygen-gpa.html>`_ 软件来处理智能卡。"

#: ../components/pro/openpgp-thunderbird.rst.inc:23
msgid "Thunderbird 77 and older"
msgstr "雷鸟 77 及以上"

#: ../components/pro/openpgp-thunderbird.rst.inc:28
msgid ""
"Install the device driver as described `here "
"<https://www.nitrokey.com/documentation/installation>`__."
msgstr ""
"按照 <https://www.nitrokey.com/documentation/installation>`__`` "
"此处所述安装设备驱动程序。"

#: ../components/pro/openpgp-thunderbird.rst.inc:31
msgid ""
"Install `Thunderbird <https://www.thunderbird.net/en-US/>`__ and the Add-"
"on `Enigmail <https://www.enigmail.net/index.php/en/>`__."
msgstr ""
"安装 `Thunderbird <https://www.thunderbird.net/en-US/>`__ 和附加组件 `Enigmail "
"<https://www.enigmail.net/index.php/en/>`__。"

#: ../components/pro/openpgp-thunderbird.rst.inc:35
msgid "Changing PINs"
msgstr "更改密码"

#: ../components/pro/openpgp-thunderbird.rst.inc:37
msgid "There are two PINs for the Nitrokey:"
msgstr "Nitrokey 有两个 PIN 码："

#: ../components/pro/openpgp-thunderbird.rst.inc:39
msgid "The User PIN required for daily work"
msgstr "日常工作所需的用户密码"

#: ../components/pro/openpgp-thunderbird.rst.inc:41
msgid ""
"The Admin PIN is required to change keys or other settings of the device."
" In addition, the Nitrokey can be unlocked (for example, after 3 times "
"incorrect input of the User PIN) by means of the Admin PIN."
msgstr "更改设备的按键或其他设置需要输入管理密码。此外，Nitrokey 还可以通过管理密码解锁（例如，用户密码输入错误 3 次后）。"

#: ../components/pro/openpgp-thunderbird.rst.inc:45
msgid ""
"After receiving the Nitrokey, you should immediately change the User PIN "
"= “123456” and Admin PIN = “12345678”."
msgstr "收到 Nitrokey 后，应立即更改用户密码 =\"123456 \"和管理密码 =\"12345678\"。"

#: ../components/nitropad/factory-reset-heads2.rst.inc:21
#: ../components/nitropad/factory-reset.rst.inc:24
#: ../components/nitropad/firmware-update.rst.inc:57
#: ../components/pro/openpgp-thunderbird.rst.inc:49
msgid "Procedure"
msgstr "程序"

#: ../components/pro/openpgp-thunderbird.rst.inc:51
msgid "Insert the Nitrokey into a USB port on your computer."
msgstr "将 Nitrokey 插入电脑的 USB 端口。"

#: ../components/pro/openpgp-thunderbird.rst.inc:53
msgid "Start Thunderbird."
msgstr "启动 Thunderbird。"

#: ../components/pro/openpgp-thunderbird.rst.inc:55
msgid ""
"In Thunderbird, select as shown in the following picture. “OpenPGP” → "
"“Manage smart card”"
msgstr "在 Thunderbird 中，选择如下图所示。\"OpenPGP\"→\"管理智能卡"

#: ../components/pro/openpgp-thunderbird.rst.inc:63
msgid "In the “SmartCard Details” window, select “SmartCard → Change PIN”"
msgstr "在 \"智能卡详细信息 \"窗口中，选择 \"智能卡 → 更改 PIN 码\"。"

#: ../components/pro/openpgp-thunderbird.rst.inc:70
msgid ""
"Select “Change PIN”. This is your User PIN you need for daily work. Enter"
" the current PIN ( “123456” for delivery) and twice your new PIN. For "
"this PIN you can use the characters: a-z A-Z 0-9 / .;;:- !? () [] {}% +. "
"The PIN should be at least 6 characters long. Click “OK”."
msgstr ""
"选择 \"更改 PIN 码\"。这是您日常工作所需的用户密码。输入当前 PIN 码（交货时为 \"123456\"）和两次新 PIN 码。该 "
"PIN 码可以使用以下字符： a-z A-Z 0-9 / .;;:- !() [] {}% +.PIN 码长度至少为 6 个字符。点击 "
"\"确定\"。"

#: ../components/pro/openpgp-thunderbird.rst.inc:81
msgid "Repeat the procedure for the Admin PIN. “SmartCard → Change PIN”"
msgstr "重复该步骤以获取管理密码。\"智能卡 → 更改密码"

#: ../components/pro/openpgp-thunderbird.rst.inc:88
msgid ""
"Select Change Admin PIN. This is your Admin PIN that you only rarely "
"need. Enter the current PIN ( “12345678” for delivery) and the new PIN "
"twice. For this PIN, you can use the characters: a-z A-Z 0-9 / .;;:- !? "
"() [] {}% +. The PIN should be at least 8 characters long. Click “OK”."
msgstr ""
"选择更改管理密码。这是您很少用到的管理密码。输入当前 PIN 码（交货时为 \"12345678\"）和新 PIN 码两次。该 PIN "
"码可以使用以下字符： a-z A-Z 0-9 / .;;:- !() [] {}% +.PIN 码长度至少为 8 个字符。点击 \"确定\"。"

#: ../components/pro/openpgp-thunderbird.rst.inc:99
msgid ""
"You have now changed the PINs and should continue to generate your "
"personal keys."
msgstr "您现在已经更改了 PIN 码，并应继续生成个人密钥。"

#: ../components/pro/openpgp-thunderbird.rst.inc:102
msgid "Generation of Keys"
msgstr "钥匙的生成"

#: ../components/pro/openpgp-thunderbird.rst.inc:104
msgid ""
"To encrypt data and e-mails, a key pair consisting of a public key and a "
"private key, must first be generated. The so-called public key is used to"
" **en**\\ crypt the data or e-mails. You can distribute this to all those"
" with whom you want to communicate securely (for example, publish it "
"publicly on your site). The so-called private key is used to **de**\\ "
"crypt the data or messages. This key should **NEVER** be made known! "
"Usually, you also do not have direct access to it (see below), since this"
" is stored securely on the Nitrokey. Use the Nitrokey to create both keys"
" using the following procedure:"
msgstr ""
"要对数据和电子邮件进行加密，首先必须生成一个由公开密钥和私人密钥组成的密钥对。所谓的公开密钥用于对数据或电子邮件进行**加密。您可以将其分发给所有希望与之进行安全通信的人（例如，在您的网站上公开发布）。所谓的私人密钥用于对数据或邮件进行****加密。这个密钥绝对不能让别人知道！通常情况下，您也无法直接访问它（见下文），因为它被安全地存储在"
" Nitrokey 中。使用 Nitrokey 按以下步骤创建两个密钥："

#: ../components/pro/openpgp-thunderbird.rst.inc:107
msgid "Insert the Nitrokey into a USB port on your computer. StartThunderbird"
msgstr "将 Nitrokey 插入电脑的 USB 端口。启动雷鸟"

#: ../components/pro/openpgp-thunderbird.rst.inc:110
msgid ""
"In Thunderbird, select as shown in the following picture „OpenPGP“ → "
"„Manage Smart Card“"
msgstr "在 Thunderbird 中，选择如下图所示的 \"OpenPGP\"→\"管理智能卡"

#: ../components/pro/openpgp-thunderbird.rst.inc:113
msgid "In the “SmartCard details” window, select “SmartCard” → “Generate key”"
msgstr "在 \"智能卡详细信息 \"窗口中，选择 \"智能卡\"→\"生成密钥\"。"

#: ../components/pro/openpgp-thunderbird.rst.inc:116
msgid ""
"In the following window, select your e-mail address for which you want to"
" generate keys. Verify that the e-mail address specified in “User ID” is "
"correct. You can also specify whether a private key backup copy should be"
" stored on your computer."
msgstr ""
"在下一个窗口中，选择要生成密钥的电子邮件地址。请确认 \"用户 ID "
"\"中指定的电子邮件地址是否正确。您还可以指定是否在计算机上存储私人密钥备份副本。"

#: ../components/pro/openpgp-thunderbird.rst.inc:126
msgid ""
"If you do not create a backup copy, you have no chance to get your "
"encrypted data if the Nitrokey is lost or damaged!"
msgstr "如果不创建备份副本，一旦 Nitrokey 丢失或损坏，就没有机会获取加密数据了！"

#: ../components/pro/openpgp-thunderbird.rst.inc:134
msgid ""
"It is recommended to store this safety device. Select “Save key copy of "
"the key outside the Smard Card”. Then enter your personal password for "
"the backup copy under “Passphrase”. This password should not be less than"
" 8 characters, and should contain both uppercase and lowercase letters "
"and numbers. You can also use a long sentence, but avoid known prose or "
"lyric. Also, no name or known term should be used."
msgstr ""
"建议存储此安全装置。选择 \"保存 Smard 卡外的密钥副本\"。然后在 \"密码 \"下输入备份副本的个人密码。密码不应少于 8 "
"个字符，应包含大小写字母和数字。也可以使用长句子，但应避免使用已知的散文或抒情诗。此外，不应使用姓名或已知术语。"

#: ../components/pro/openpgp-thunderbird.rst.inc:142
msgid ""
"**Allowed characters**: a-z A-Z 0-9 /.,;:-!?( )%+ (no umlauts ä,ü,ö,Ä,Ü,Ö"
" or ß)"
msgstr "**允许使用的字符**： a-z A-Z 0-9 /.,;:-! ?( )%+ （禁止使用元音 ä、ü、ö、Ä、Ü、Ö 或 ß）。"

#: ../components/pro/openpgp-thunderbird.rst.inc:144
msgid ""
"**Poor Passwords**: qwerty123, ILoveSusi3, Password, If you can dream it,"
" you can do it."
msgstr "**糟糕的密码**：qwerty123、ILoveSusi3、密码、如果你能梦想成真，你就能做到。"

#: ../components/pro/openpgp-thunderbird.rst.inc:146
#, python-format
msgid ""
"**Strong Passwords**: g(Ak?2Pn7Yn or Ki.stg2bLqzp%d or A dog with greeen "
"Earz and fife legs (spelling errors increase security)"
msgstr ""
"**强密码**：g(Ak?2Pn7Yn 或 Ki.stg2bLqzp%d 或 A dog with greeen Earz and fife "
"legs（拼写错误会增加安全性）。"

#: ../components/pro/openpgp-thunderbird.rst.inc:148
#, fuzzy
msgid ""
"You do **not** need this password for daily work. It is only necessary "
"for the restoration of the secret key, e.g. if you have lost the "
"Nitrokey. Therefore, keep the password in a safe place."
msgstr "在日常工作中，您***不需要这个密码。只有在恢复密匙时，如丢失 Nitrokey 时，才需要使用该密码。因此，请将密码妥善保管。"

#: ../components/pro/openpgp-thunderbird.rst.inc:150
msgid ""
"You can also specify whether and when the key should be automatically "
"invalid. This means, from this point onwards, no more e-mails can be "
"encrypted with this key and you have to create a new key pair."
msgstr "您还可以指定密钥是否以及何时自动失效。这意味着，从这一刻起，就不能再用这个密钥加密电子邮件了，你必须创建一个新的密钥对。"

#: ../components/pro/openpgp-thunderbird.rst.inc:152
msgid "Finally, click on “Generate key pair”."
msgstr "最后，点击 \"生成配对密钥\"。"

#: ../components/pro/openpgp-thunderbird.rst.inc:159
msgid "You are now asked if the key should be generated. Confirm with “Yes”."
msgstr "现在会询问您是否要生成密钥。请确认 \"是\"。"

#: ../components/pro/openpgp-thunderbird.rst.inc:166
msgid ""
"In order for the program to write your keys to the stick, you must enter "
"the admin PIN and the user PIN (changed above)."
msgstr "为了让程序将密钥写入记忆棒，您必须输入管理密码和用户密码（如上所述）。"

#: ../components/pro/openpgp-thunderbird.rst.inc:174
msgid ""
"The key generation can take a few minutes. Do not terminate the program "
"prematurely!"
msgstr "密钥生成需要几分钟时间。不要过早终止程序！"

#: ../components/pro/openpgp-thunderbird.rst.inc:176
msgid ""
"When the key generation is complete, you receive the following message. A"
" certificate is now created that allows you to invalidate your key in an "
"emergency. This certificate is automatically saved with your private key."
" This should be printed out or backed up on at least one other external "
"medium so that you can revoke the validity of the keys if your keys and "
"backups are lost. Click “Yes”"
msgstr ""
"密钥生成完成后，您会收到以下信息。现在创建的证书可以让你在紧急情况下使密钥失效。该证书会自动与你的私人密钥一起保存。应将其打印出来或备份到至少一种外部介质上，以便在密钥和备份丢失时可以撤销密钥的有效性。点击"
" \"是\"。"

#: ../components/pro/openpgp-thunderbird.rst.inc:183
msgid ""
"You can now select the directory in which the backup copy is stored. This"
" copy is encrypted with your password entered above. This means that no "
"one can read or use the keys without your password. Do not give your "
"password to anyone. This file with the name of your e-mail address and "
"the suffix “.asc” should be backed up on another medium. After selecting "
"the directory, click “Save”."
msgstr ""
"现在您可以选择存储备份副本的目录。该副本使用您在上面输入的密码进行加密。这意味着没有密码，任何人都无法读取或使用密钥。不要将密码告诉任何人。该文件名为您的电子邮件地址，后缀为\".asc\"，应备份到其他介质上。选择目录后，点击"
" \"保存\"。"

#: ../components/pro/openpgp-thunderbird.rst.inc:190
msgid "Here you must again specify your user PIN or passphrase. Then click “OK”"
msgstr "在此，您必须再次指定用户密码或口令。然后点击 \"确定\"。"

#: ../components/pro/openpgp-thunderbird.rst.inc:-1
#: ../components/pro/windows/2fa-microsoft.rst:-1
#: ../components/storage/firmware-update-manually.rst:-1
msgid "img12"
msgstr "img12"

#: ../components/pro/openpgp-thunderbird.rst.inc:198
msgid ""
"You will now see the message that the certificate was created and saved. "
"Click “OK”"
msgstr "现在您将看到证书已创建并保存的信息。点击 \"确定\"。"

#: ../components/pro/openpgp-thunderbird.rst.inc:-1
#: ../components/pro/windows/2fa-microsoft.rst:-1
#: ../components/storage/firmware-update-manually.rst:-1
msgid "img13"
msgstr "img13"

#: ../components/pro/openpgp-thunderbird.rst.inc:206
msgid ""
"Key generation is now complete. You can now exit the program (File - "
"Close)."
msgstr "密钥生成已完成。现在可以退出程序（文件 - 关闭）。"

#: ../components/pro/openpgp-thunderbird.rst.inc:-1
#: ../components/pro/windows/2fa-microsoft.rst:-1
msgid "img14"
msgstr "img14"

#: ../components/pro/openpgp-thunderbird.rst.inc:214
msgid ""
"Your Nitrokey is personalized and ready to use. **Have fun with the "
"secure email encryption!**"
msgstr "您的 Nitrokey 已个性化并可随时使用。**尽情享受安全电子邮件加密带来的乐趣！**"

#: ../components/nitrokey3/shared/openpgp-uif.rst.inc:2
msgid "OpenPGP Touch Confirmation (UIF)"
msgstr "OpenPGP 触摸确认 (UIF)"

#: ../components/nitrokey3/shared/openpgp-uif.rst.inc:6
msgid ""
"The Nitrokey 3 OpenPGP Card functionality supports touch button "
"confirmations (so called User Interaction Flags, UIF) when performing "
"cryptographic key operations. It can be configured separately for each "
"operation (Signature, Decryption and Authentication)."
msgstr ""
"在执行加密密钥操作时，Nitrokey 3 OpenPGP Card "
"功能支持触摸按钮确认（即所谓的用户交互标志，UIF）。可为每种操作（签名、解密和验证）单独配置。"

#: ../components/nitrokey3/shared/openpgp-uif.rst.inc:8
msgid "UIF supports 3 modes:"
msgstr "UIF 支持 3 种模式："

#: ../components/nitrokey3/shared/openpgp-uif.rst.inc:10
msgid ""
"Disabled: The device never prompts for user presence, which is the "
"default behaviour"
msgstr "已禁用：设备从不提示用户是否在场，这是默认行为"

#: ../components/nitrokey3/shared/openpgp-uif.rst.inc:11
msgid "Enabled: The device always prompts for user presence"
msgstr "已启用：设备始终提示用户是否在场"

#: ../components/nitrokey3/shared/openpgp-uif.rst.inc:12
msgid ""
"Permanentaly Enabled: Behaves like Enabled, but can only be reverted to "
"Disabled through a factory-reset"
msgstr "永久启用：行为类似于启用，但只能通过工厂重置恢复为禁用"

#: ../components/nitrokey3/shared/openpgp-uif.rst.inc:17
msgid "With GnuPG 2.3 or more recent:"
msgstr "使用 GnuPG 2.3 或更新版本："

#: ../components/nitrokey3/shared/openpgp-uif.rst.inc:27
msgid "Then, set the UIF flag accordingly:"
msgstr "然后，相应地设置 UIF 标志："

#: ../components/nitrokey3/shared/openpgp-uif.rst.inc:29
msgid ""
"For signature operation: ``uif 1 on`` or ``uif 1 off`` or with ``uif 1 "
"permanent``."
msgstr "签名操作：`uif 1 on`或`uif 1 off`或使用`uif 1 permanent`。"

#: ../components/nitrokey3/shared/openpgp-uif.rst.inc:30
msgid ""
"For decryption operation: ``uif 2 on`` or ``uif 2 off`` or ``uif 2 "
"permanent``."
msgstr "解密操作：`uif 2 on`或`uif 2 off`或`uif 2 permanent`。"

#: ../components/nitrokey3/shared/openpgp-uif.rst.inc:31
msgid ""
"For authentication operation: ``uif 3 on`` or ``uif 3 off`` or ``uif 3 "
"permanent``."
msgstr "验证操作：`uif 3 on`或`uif 3 off`或`uif 3 permanent`。"

#: ../components/nitrokey3/shared/reset.rst.inc:6
msgid "Each functionality of the Nitrokey 3 can be reset individually."
msgstr "Nitrokey 3 的每项功能都可以单独重置。"

#: ../components/nitrokey3/shared/reset.rst.inc:11
msgid ""
"The Factory Reset operation deletes all (and generates new) secret FIDO2 "
"keys stored in the Nitrokey:"
msgstr "出厂重置操作会删除存储在 Nitrokey 中的所有（并生成新的）FIDO2 密钥："

#: ../components/nitrokey3/shared/reset.rst.inc:13
msgid ""
"nitropy tool: ``nitropy fido2 reset`` (execution requires Administrator "
"rights)"
msgstr "nitropy 工具：nitropy fido2 reset``（执行需要管理员权限）"

#: ../components/nitrokey3/shared/reset.rst.inc:19
msgid ""
"Static passwords and One-Time Passwords (OTP) can be reset with ``nitropy"
" nk3 secrets reset``."
msgstr "静态密码和一次性密码 (OTP) 可以使用 ``nitropy nk3 secrets reset`` 重置。"

#: ../components/nitrokey3/shared/reset.rst.inc:22
msgid "OpenPGP"
msgstr "OpenPGP"

#: ../components/nitrokey3/shared/reset.rst.inc:24
msgid ""
"The OpenPGP Card can be reset with GnuPG: ``gpg --card-edit``, then "
"``admin`` and ``factory-reset``."
msgstr ""
"可以使用 GnuPG 重置 OpenPGP 卡：``gpg --card-edit``, 然后``admin``和``factory-"
"reset``。"

#: ../components/nitrokey3/shared/reset.rst.inc:27
msgid "PIV Smartcard"
msgstr "PIV 智能卡"

#: ../components/nitrokey3/shared/reset.rst.inc:29
msgid "The PIV smartcard can be reset using the following command:"
msgstr "可以使用以下命令重置 PIV 智能卡："

#: ../components/nitrokey3/shared/set-pins.rst.inc:4
msgid "Set PINs"
msgstr "设置密码"

#: ../components/nitrokey3/shared/set-pins.rst.inc:6
msgid "The Nitrokey 3 has distinct PINs for each feature."
msgstr "Nitrokey 3 的每个功能都有不同的 PIN 码。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:9
msgid "Password and OTP secrets"
msgstr "密码和 OTP 保密"

#: ../components/nitrokey3/shared/set-pins.rst.inc:10
msgid "OpenPGP Card (User PIN, Admin PIN, and optional Reset Code)"
msgstr "OpenPGP 卡（用户密码、管理密码和可选重置密码）"

#: ../components/nitrokey3/shared/set-pins.rst.inc:4
#: ../components/nitrokey3/shared/set-pins.rst.inc:11
msgid "PIV"
msgstr "PIV"

#: ../components/nitrokey3/shared/set-pins.rst.inc:6
msgid ""
"The PIN for FIDO2 can be set with `Nitropy "
"<../../software/nitropy/index.html>`__, operating system native apps, or "
"a webbrowser such as Chrom(e|ium)."
msgstr ""
"FIDO2 的 PIN 码可以通过 `Nitropy "
"<../../software/nitropy/index.html>`__、操作系统本地应用程序或 Chrom(e|ium) 等网络浏览器设置。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:4
msgid "Setting PIN with Nitropy"
msgstr "使用 Nitropy 设置 PIN"

#: ../components/nitrokey3/shared/set-pins.rst.inc:6
msgid ""
"The PIN for FIDO2 can be set with the `Nitropy "
"<../../software/nitropy/index.html>`__ utility."
msgstr ""
"FIDO2 的 PIN 可以通过 \"Nitropy <.../../software/nitropy/index.html>`__ 实用程序 "
"\"设置。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:8
#: ../components/nitrokey3/shared/set-pins.rst.inc:22
#: ../components/nitrokey3/shared/set-pins.rst.inc:24
#: ../components/nitrokey3/shared/set-pins.rst.inc:39
#: ../components/nitrokey3/shared/set-pins.rst.inc:44
#: ../components/nitrokey3/shared/set-pins.rst.inc:71
#: ../components/nitrokey3/windows/piv/access_control.rst:39
#: ../components/nitrokey3/windows/piv/access_control.rst:57
msgid "Connect the Nitrokey 3 with your computer."
msgstr "将 Nitrokey 3 与电脑连接。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:9
msgid ""
"On the terminal enter ``nitropy fido2 set-pin`` and follow the "
"instructions. If the PIN has been already set before the above command "
"must be changed to ``nitropy fido2 change-pin``."
msgstr ""
"在终端上输入 ``nitropy fido2 set-pin``，然后按提示操作。如果之前已经设置了 PIN，则必须将上述命令改为 "
"``nitropy fido2 change-pin``。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:4
msgid "Setting PIN with the Chrom(e|ium) webbrowser"
msgstr "使用 Chrom(e|ium) 浏览器设置 PIN 码"

#: ../components/nitrokey3/shared/set-pins.rst.inc:6
msgid "# Chrome(e|ium) - Linux, Mac OS, and Windows"
msgstr "# Chrome(e|ium) - Linux、Mac OS 和 Windows"

#: ../components/nitrokey3/shared/set-pins.rst.inc:8
msgid "Open Chrome(e|ium)."
msgstr "打开 Chrome(e|ium)。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:9
msgid "Open the menu with the three dots in the top right of the menubar."
msgstr "打开菜单栏右上方有三个点的菜单。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:10
msgid "Click on \"Settings\"."
msgstr "点击 \"设置\"。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:11
msgid "In the menubar on the left click on \"Privacy and security\"."
msgstr "在左侧菜单栏中点击 \"隐私和安全\"。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:12
msgid "In the menu in the middle click on \"Security\"."
msgstr "在中间的菜单中点击 \"安全\"。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:13
msgid "In the menu in the middle click on \"Manage security keys\"."
msgstr "在中间的菜单中点击 \"管理安全密钥\"。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:14
msgid "In the menu in the middle click on \"Create a PIN\"."
msgstr "在中间的菜单中点击 \"创建 PIN\"。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:11
#: ../components/nitrokey3/shared/set-pins.rst.inc:15
msgid "Follow the instructions on the screen to set the PIN."
msgstr "按照屏幕上的说明设置 PIN 码。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:4
msgid "Passwords and OTP secrets"
msgstr "密码和 OTP 秘密"

#: ../components/nitrokey3/shared/set-pins.rst.inc:6
msgid ""
"The PIN for passwords and OTP secrets can be set with the `Nitropy "
"<../../software/nitropy/index.html>`__ utility."
msgstr ""
"密码和 OTP 密钥的 PIN 可通过 \"Nitropy <.../../software/nitropy/index.html>`__ "
"实用程序 \"设置。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:9
msgid ""
"On the terminal enter ``nitropy nk3 secrets set-pin`` and follow the "
"instructions."
msgstr "在终端上输入 ``nitropy nk3 secrets set-pin``，然后按提示操作。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:4
msgid "OpenPGP Card"
msgstr "OpenPGP 卡"

#: ../components/nitrokey3/shared/set-pins.rst.inc:6
msgid ""
"The PINs on the OpenPGP Card can be set with GnuPG. The OpenPGP Card has "
"the *User PIN*, *Admin PIN*, and an optional *Reset Code*."
msgstr "OpenPGP 卡上的 PIN 可以用 GnuPG 设置。OpenPGP 卡有*用户密码*、*管理员密码*和一个可选的*重置密码*。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:10
#: ../components/pro/change-pins.rst.inc:7
msgid "User PIN"
msgstr "用户密码"

#: ../components/nitrokey3/shared/set-pins.rst.inc:12
msgid ""
"The *User PIN* is used for key operations, such as signing, encrypting, "
"and authentication. The factory default for the *User PIN* is ``123456``."
msgstr "用户密码*用于密钥操作，如签名、加密和身份验证。用户密码*的出厂默认值为 ``123456``。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:16
msgid ""
"The *User PIN* must have a minimal length of 6 characters and maximal "
"length of 127 characters. It can contain alphanumeric characters, "
"including special characters such as punctations."
msgstr "用户密码* 最小长度必须为 6 个字符，最大长度必须为 127 个字符。它可以包含字母数字字符，包括标点符号等特殊字符。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:20
msgid ""
"The *User PIN* has a PIN retry counter of 3 attempts. If this attempts "
"are used up, the *User PIN* must be unlocked with the *Admin PIN*. "
"Alternatively the optional *Reset Code* can be used for unlocking."
msgstr "用户密码*的密码重试次数为 3 次。如果重试次数用完，则必须使用*管理员密码*解锁*用户密码*。另外，也可以使用可选的*重置密码*来解锁。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:25
#: ../components/nitrokey3/shared/set-pins.rst.inc:45
#: ../components/nitrokey3/shared/set-pins.rst.inc:72
msgid "On the terminal enter ``gpg --card-edit``."
msgstr "在终端上输入 ``gpg --card-edit``."

#: ../components/nitrokey3/shared/set-pins.rst.inc:26
msgid "In the promt enter ``passwd``."
msgstr "在 promt 中输入 ``passwd``。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:27
msgid ""
"GnuPG will now ask for the current *User PIN*, and the new *User PIN*. "
"Please note that if you provision a new Nitrokey the factory default PIN "
"from above must be entered as the current *User PIN*."
msgstr ""
"GnuPG 现在会询问当前*用户密码*和新*用户密码*。请注意，如果您提供的是新的 "
"Nitrokey，则必须输入上述出厂默认密码作为当前*用户密码*。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:31
#: ../components/pro/change-pins.rst.inc:29
msgid "Admin PIN"
msgstr "管理密码"

#: ../components/nitrokey3/shared/set-pins.rst.inc:33
msgid ""
"The Admin PIN is used for management operations, such as copying and "
"generating keys, unblocking the PIN, and setting the *Admin PIN* and "
"Reset Code. The factory default for the *Admin PIN* is ``12345678``."
msgstr "管理密码用于管理操作，如复制和生成密钥、解锁密码以及设置 *Admin PIN* 和重置密码。管理密码*的出厂默认值为 ``12345678``。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:37
msgid ""
"The *Admin PIN* must have a minimal length of 8 characters and maximal "
"length of 127 characters. It can contain alphanumeric characters, "
"including special characters such as punctations."
msgstr "管理员密码* 最小长度必须为 8 个字符，最大长度必须为 127 个字符。它可以包含字母数字字符，包括标点符号等特殊字符。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:41
msgid ""
"The *Admin PIN* has a PIN retry counter of 3 attempts. If this attempts "
"are used up, the OpenPGP Card can not be used anymore and must be reset "
"to factory defaults."
msgstr "管理员密码*的密码重试次数为 3 次。如果尝试次数用完，则不能再使用 OpenPGP 卡，必须重置为出厂默认设置。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:46
#: ../components/nitrokey3/shared/set-pins.rst.inc:73
msgid "In the prompt enter ``admin``, followed by ``passwd``."
msgstr "在提示符下输入 ``admin``，然后输入 ``passwd``。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:47
msgid "In the prompt enter ``3``, to set the *Admin PIN*."
msgstr "在提示符下输入 ``3``，以设置 *Admin PIN*。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:48
msgid ""
"GnuPG will now ask for the current *Admin PIN*, and the new *Admin PIN*. "
"Please note that if you provision a new Nitrokey the factory default PIN "
"from above must be entered as the current *Admin PIN*."
msgstr ""
"GnuPG 现在会询问当前的 *Admin PIN* 和新的 *Admin PIN*。请注意，如果您提供的是新的 "
"Nitrokey，则必须输入上述出厂默认密码作为当前的 *Admin PIN*。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:52
msgid "Reset Code"
msgstr "重置密码"

#: ../components/nitrokey3/shared/set-pins.rst.inc:54
msgid ""
"The *Reset Code* is used to unblock the *User PIN*. It is useful in "
"situations when the user of the Nitrokey should be able to unblock the "
"*User PIN*, but not be able to manage it with the *Admin PIN*."
msgstr ""
"重置密码*用于解除对*用户密码*的锁定。当 Nitrokey "
"用户可以解除对*用户密码*的锁定，但无法使用*管理员密码*对其进行管理时，重置密码*就会派上用场。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:58
msgid ""
"The Reset Code has no factory default. It must be explicitly set using "
"the Admin PIN."
msgstr "重置密码没有出厂默认值。必须使用管理密码明确设置。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:61
msgid ""
"The *Reset Code* must have a minimal length of 8 characters and maximal "
"length of 127 characters. It can contain alphanumeric characters, "
"including special characters such as punctations."
msgstr "重置密码* 最小长度必须为 8 个字符，最大长度必须为 127 个字符。它可以包含字母数字字符，包括标点符号等特殊字符。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:65
msgid ""
"Once the *Reset Code* is set it can not be disabled anymore. Disabling "
"would require a reset of the OpenPGP Card application."
msgstr "一旦设置了*重置密码*，就不能再禁用了。禁用需要重置 OpenPGP 卡应用程序。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:68
msgid ""
"The *Reset Code* has a PIN retry counter of 3 attempts. If this attempts "
"are used up, the *Reset Code* must be unlocked with the *Admin PIN*."
msgstr "重置密码*的密码重试次数为 3 次。如果重试次数用完，则必须使用*管理员密码*解锁*重置密码*。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:74
msgid "In the prompt enter ``4``, to set the *Reset Code*."
msgstr "在提示符下输入 ``4``，设置*重置密码*。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:75
msgid "GnuPG will now ask for the *Admin PIN*, and the *Reset Code*."
msgstr "GnuPG 现在会要求输入 *Admin PIN* 和 *Reset Code* 。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:6
msgid ""
"The *PIN* and *PUK* for PIV (Personal Identity Verification) Card can be "
"set with `pivy-tool <https://github.com/arekinath/pivy>`__."
msgstr ""
"PIV（个人身份验证）卡的 *PIN* 和 *PUK* 可以用 `pivy-tool "
"<https://github.com/arekinath/pivy>`__ 设置。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:9
#: ../components/nitrokey3/windows/piv/access_control.rst:7
msgid "PIN"
msgstr "密码"

#: ../components/nitrokey3/shared/set-pins.rst.inc:11
#: ../components/nitrokey3/windows/piv/access_control.rst:28
msgid ""
"The *PIN* is used for key operations, such as signing and authentication."
" The factory default for the *PIN* is ``123456``."
msgstr "*PIN* 用于密钥操作，如签名和身份验证。*PIN* 的出厂默认值为 ``123456``。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:15
#: ../components/nitrokey3/windows/piv/access_control.rst:32
msgid ""
"The *PIN* must have maximal length of 8 characters. It can contain "
"alphanumeric characters, including special characters such as "
"punctations."
msgstr "*PIN* 的最大长度必须为 8 个字符。它可以包含字母数字字符，包括标点符号等特殊字符。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:19
msgid ""
"The *PIN* has a PIN retry counter of 3 attempts. If this attempts are "
"used up, the *PIN* must be unlocked with the *PUK*."
msgstr "*PIN* 有一个密码重试计数器，可重试 3 次。如果重试次数用完，则必须使用 *PUK* 解锁*PIN*。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:23
msgid "On the terminal enter ``pivy-tool change-pin``."
msgstr "在终端上输入 ``pivy-tool change-pin``。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:26
#: ../components/nitrokey3/windows/piv/access_control.rst:7
msgid "PUK"
msgstr "PUK"

#: ../components/nitrokey3/shared/set-pins.rst.inc:28
#: ../components/nitrokey3/windows/piv/access_control.rst:46
msgid ""
"The *PUK* is used for management operations, such as unblocking the PIN. "
"The factory default for the *PUK* is ``123456``."
msgstr "*PUK* 用于管理操作，如解锁 PIN。*PUK* 的出厂默认值为 ``123456``。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:32
#: ../components/nitrokey3/windows/piv/access_control.rst:50
msgid ""
"The *PUK* must have a maximal length of 8 characters. It can contain "
"alphanumeric characters, including special characters such as "
"punctations."
msgstr "*PUK* 的最大长度必须为 8 个字符。它可以包含字母数字字符，包括标点符号等特殊字符。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:36
msgid ""
"The *PUK* has a retry counter of 3 attempts. If this attempts are used "
"up, the PIV Card can not be used anymore and must be reset to factory "
"defaults."
msgstr "*PUK* 的重试计数器有 3 次重试机会。如果重试次数用完，PIV 卡将无法继续使用，必须重置为出厂默认设置。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:40
msgid "On the terminal enter ``pivy-tool change-puk``."
msgstr "在终端上输入 ``pivy-tool change-puk``。"

#: ../components/pro/smime.rst.inc:15
msgid ""
"If you are in doubt which one to choose, you should use OpenPGP, see "
"`here <openpgp.html>`_. This page describes the usage of S/MIME email "
"encryption."
msgstr ""
"如果您对选择哪种加密方式有疑问，应使用 OpenPGP，请参阅 \"此处 <openpgp.html>`_\"。本页介绍 S/MIME "
"电子邮件加密的用法。"

#: ../components/nitrokey3/troubleshooting.rst.inc:4
#: ../components/nitropad/troubleshooting.rst.inc:11
msgid "Here you will find a collection of common issues."
msgstr "这里收集了一些常见问题。"

#: ../components/nitrokey3/troubleshooting.rst.inc:8
msgid "Nitrokey is Not Detected on Linux"
msgstr "在 Linux 上检测不到 Nitrokey"

#: ../components/nitrokey3/troubleshooting.rst.inc:10
msgid "If the Nitrokey is not detected, proceed as follows:"
msgstr "如果检测不到 Nitrokey，请按以下步骤操作："

#: ../components/nitrokey3/troubleshooting.rst.inc:12
msgid ""
"Copy this file `41-nitrokey.rules "
"<https://www.nitrokey.com/sites/default/files/41-nitrokey.rules>`__ to "
"``/etc/udev/rules.d/``."
msgstr ""
"将该文件 `41-nitrokey.rules "
"<https://www.nitrokey.com/sites/default/files/41-nitrokey.rules>`__ 复制到 "
"``/etc/udev/rules.d/``."

#: ../components/nitrokey3/troubleshooting.rst.inc:20
msgid "Google and Microsoft Services"
msgstr "谷歌和微软服务"

#: ../components/nitrokey3/troubleshooting.rst.inc:22
msgid ""
"Currently there seems to be a bug we hope to fix soon which affects the "
"Nitrokey 3 working with some Google and Microsoft Services per FIDO2."
msgstr "目前似乎存在一个错误，我们希望能尽快修复，这个错误会影响 Nitrokey 3 通过 FIDO2 与某些谷歌和微软服务协同工作。"

#: ../components/nitrokey3/troubleshooting.rst.inc:25
msgid "Timeout Bug"
msgstr "超时错误"

#: ../components/nitrokey3/troubleshooting.rst.inc:27
msgid ""
"There is a bug with the Nitrokey being recognized by the system, where a "
"timeout occurs before the connection succeeds."
msgstr "系统识别 Nitrokey 存在一个错误，即连接成功前会出现超时。"

#: ../components/nitrokey3/troubleshooting.rst.inc:30
msgid "NFC is Not Working"
msgstr "NFC 无法工作"

#: ../components/nitrokey3/troubleshooting.rst.inc:31
msgid ""
"Please make sure FIDO2 is working correctly. Otherwise NFC won't work "
"either."
msgstr "请确保 FIDO2 正常工作。否则 NFC 也无法工作。"

#: ../components/nitrokey3/troubleshooting.rst.inc:33
msgid ""
"Also check if you are using the right spot on your smartphone. Find the "
"right spot using: `nfc.fail`_."
msgstr "同时检查您是否使用了智能手机上的正确位置。使用nfc.fail`_。"

#: ../components/nitrokey3/troubleshooting.rst.inc:36
msgid ""
"The backside of the Nitrokey has to be held against the smartphone. For "
"the USB-A version it might be helpful to lift the side with the USB "
"connector slightly to reduce the distance to the end part of the stick."
msgstr "Nitrokey 的背面必须紧贴智能手机。如果是 USB-A 版本，可以稍微抬起有 USB 接口的一侧，以缩短与棒端部分的距离。"

#: ../components/nitrokey3/troubleshooting.rst.inc:38
msgid ""
"If you have a phone cover, try to find the right spot first without it. "
"Retry afterwards with the cover."
msgstr "如果您有手机套，请先试着在没有手机套的情况下找到正确的位置。之后再戴上手机套重试。"

#: ../components/nitrokey3/troubleshooting.rst.inc:40
msgid ""
"The search of the optimal spot sometimes took up to 20-30 sec. In our "
"experience holding the Nitrokey in an horizontal orientation yields "
"better results.If you still encounter issues please write a mail to our "
"support. For optimal help please include the shipping/order number and "
"your smartphone model."
msgstr ""
"搜索最佳位置有时需要 20-30 秒。根据我们的经验，将 Nitrokey "
"水平放置会产生更好的效果。为获得最佳帮助，请注明发货/订单号和您的智能手机型号。"

#: ../components/nitrokey3/troubleshooting.rst.inc:43
msgid "OpenPGP Troubleshooting"
msgstr "OpenPGP 故障排除"

#: ../components/nitrokey3/troubleshooting.rst.inc:46
msgid "GnuPG: OpenPGP Card Not Available"
msgstr "GnuPG：OpenPGP 卡不可用"

#: ../components/nitrokey3/troubleshooting.rst.inc:48
msgid ""
"**Problem:** GnuPG cannot access the Nitrokey 3 and shows an error "
"message like this::"
msgstr "**问题：** GnuPG 无法访问 Nitrokey 3，并显示如下错误信息：："

#: ../components/nitrokey3/troubleshooting.rst.inc:55
msgid ""
"**Solution:** There are two common smartcard services on Linux systems: "
"``scdaemon``, GnuPG’s smartcard daemon, and ``pcscd``, a generic "
"smartcard daemon. ``scdaemon`` has two drivers for accessing smartcards: "
"Its integrated ``ccid`` driver tries to directly access the smartcard. "
"The ``pcsc`` drivers uses the ``pcscd`` daemon instead."
msgstr ""
"**解决方案：** Linux 系统上有两种常见的智能卡服务：scdaemon \"是 GnuPG 的智能卡守护进程，\"pcscd "
"\"是通用的智能卡守护进程。scdaemon \"有两个用于访问智能卡的驱动程序：其集成的 ``ccid`` 驱动程序尝试直接访问智能卡。而 "
"``pcsc`` 驱动程序则使用 ``pcscd`` 守护进程。"

#: ../components/nitrokey3/troubleshooting.rst.inc:61
msgid ""
"A smartcard can only be accessed directly by one daemon. This means that "
"depending on the startup order, ``pcscd`` might lock the card before "
"``scdaemon`` tries to access it using the internal ``ccid`` driver. "
"Therefore we recommend to use the ``pcscd`` driver for ``scdaemon``. You "
"can activate it by adding ``disable-ccid`` to the "
"``~/.gnupg/scdaemon.conf`` config file and restarting ``scdaemon``, for "
"example with ``gpg-connect-agent \"SCD KILLSCD\" /bye``. If this does not"
" fix the problem, see the next section for more information."
msgstr ""
"一张智能卡只能被一个守护进程直接访问。这意味着根据启动顺序，`pcscd`` 可能会在 `scdaemon`` 尝试使用内部 `ccid`` "
"驱动程序访问智能卡之前锁定智能卡。因此，我们建议为 ``scdaemon`` 使用 ``pcscd`` 驱动程序。你可以在配置文件 "
"``~/.gnupg/scdaemon.conf`` 中添加 ``disable-ccid`` 来激活它，然后重启 "
"``scdaemon``，例如使用 ``gpg-connect-agent \"SCD KILLSCD\" "
"/bye``。如果这还不能解决问题，请参阅下一节了解更多信息。"

#: ../components/nitrokey3/troubleshooting.rst.inc:67
msgid ""
"Alternatively, you can deactivate or uninstall ``pcscd`` to avoid this "
"conflict."
msgstr "您也可以停用或卸载 ``pcscd`` 以避免冲突。"

#: ../components/nitrokey3/troubleshooting.rst.inc:70
msgid "pcscd: Card Not Found"
msgstr "pcscd：未找到卡"

#: ../components/nitrokey3/troubleshooting.rst.inc:72
msgid "**Problem:** An application using ``pcscd`` does not show the Nitrokey 3."
msgstr "**问题：** 使用 ``pcscd`` 的应用程序不显示 Nitrokey 3。"

#: ../components/nitrokey3/troubleshooting.rst.inc:75
msgid ""
"**Solution:** First, make sure that ``scdaemon`` is not running (see the "
"previous section)::"
msgstr "**解决方法：** 首先，确保 ``scdaemon`` 没有运行（见上一节）：："

#: ../components/nitrokey3/troubleshooting.rst.inc:80
msgid ""
"Now list the smartcards recognized by ``pcscd`` with ``pcsc_scan -r``. "
"You should see an entry like this one::"
msgstr "现在用 ``pcsc_scan -r`` 列出``pcscd``识别的智能卡。你应该会看到类似下面这样的条目：："

#: ../components/nitrokey3/troubleshooting.rst.inc:88
msgid ""
"If the Nitrokey 3 shows up, it is recognized correctly by ``pcscd`` and "
"there might be an issue with the application that tries to access it. If "
"it does not show up, make sure that your ``libccid`` version is up to "
"date. Support for the Nitrokey 3 was added in ``libccid`` 1.5.0."
msgstr ""
"如果 Nitrokey 3 显示出来，说明它已被 ``pcscd`` 正确识别，可能是试图访问它的应用程序出了问题。如果没有显示，请确保您的 "
"``libccid`` 版本是最新的。在 ``libccid`` 1.5.0 中添加了对 Nitrokey 3 的支持。"

#: ../components/nitrokey3/troubleshooting.rst.inc:93
msgid "Updating The Device Database"
msgstr "更新设备数据库"

#: ../components/nitrokey3/troubleshooting.rst.inc:95
msgid ""
"If you cannot update ``libccid`` to a supported version, you have to "
"manually update the device database. The path of the database depends on "
"your distribution:"
msgstr "如果无法将 ``libccid`` 升级到支持的版本，则必须手动更新设备数据库。数据库的路径取决于您的发行版："

#: ../components/nitrokey3/troubleshooting.rst.inc:98
msgid "Arch, Debian, Ubuntu: ``/etc/libccid_Info.plist``"
msgstr "Arch、Debian、Ubuntu：``/etc/libccid_Info.plist``"

#: ../components/nitrokey3/troubleshooting.rst.inc:100
msgid ""
"Make sure to backup the file before overwriting it. You can download an "
"`updated device database file "
"<https://github.com/Nitrokey/nitrokey-3-firmware/blob/main/Info.plist>`__"
" from the ``nitrokey-3-firmware`` repository. After updating the file, "
"restart ``pcscd`` and run ``pcsc_scan -r`` again. The Nitrokey 3 should "
"now show up."
msgstr ""
"确保在覆盖文件前对其进行备份。你可以从 ``nitrokey-3-firmware`` 软件仓库下载`更新的设备数据库文件 "
"<https://github.com/Nitrokey/nitrokey-3-firmware/blob/main/Info.plist>`___。更新文件后，重启"
" ``pcscd`` 并再次运行 ``pcsc_scan -r``。Nitrokey 3 现在应该会显示出来。"

#: ../components/nitrokey3/troubleshooting.rst.inc:106
msgid "Update Via update.nitrokey.com Does Not Work"
msgstr "通过 update.nitrokey.com 更新不起作用"

#: ../components/nitrokey3/troubleshooting.rst.inc:108
msgid ""
"Currently the web updater doesn't support the Nitrokey 3. However you can"
" get the latest firmware using these `instructions <firmware-"
"update.html>`_."
msgstr "目前，网络更新程序不支持 Nitrokey 3。不过，您可以使用这些 \"说明 <firmware-update.html>`_\"获取最新固件。"

#: ../components/nitrokey3/mac/index.rst:2
msgid "Nitrokey 3 With macOS"
msgstr "Nitrokey 3 与 macOS"

#: ../components/nitrokey3/windows/index.rst:2
msgid "Nitrokey 3 With Windows"
msgstr "使用 Windows 的 Nitrokey 3"

#: ../components/pro/windows/openpgp-csp.rst:2
msgid "Windows Login and S/MIME Email Encryption with Active Directory"
msgstr "使用活动目录进行 Windows 登录和 S/MIME 电子邮件加密"

#: ../components/pro/windows/openpgp-csp.rst:6
msgid ""
"Please note that this driver is still in development/testing. Please tell"
" us your experiences! See our `contact page "
"<https://www.nitrokey.com/contact>`__."
msgstr ""
"请注意，该驱动程序仍在开发/测试中。请告诉我们您的经验！请参阅我们的 \"联系我们 \"页面 "
"<https://www.nitrokey.com/contact>`__。"

#: ../components/pro/windows/openpgp-csp.rst:11
msgid ""
"This guide assumes that an Active Directory server with role ‘Active "
"Directory Certificate Services’ is installed and running on a server. "
"These instructions are based on Nitrokey Storage 2 and Nitrokey Pro 2 "
"only."
msgstr ""
"本指南假定服务器上安装并运行了角色为 \"Active Directory 证书服务 \"的 Active Directory "
"服务器。这些说明仅基于 Nitrokey Storage 2 和 Nitrokey Pro 2。"

#: ../components/pro/windows/openpgp-csp.rst:14
msgid "Installing OpenPGP-CSP"
msgstr "安装 OpenPGP-CSP"

#: ../components/pro/windows/openpgp-csp.rst:16
msgid ""
"This step is needed for clients to use the OpenPGP-CSP driver. Download "
"and install the `latest version <https://github.com/vletoux/OpenPGP-"
"CSP/releases/tag/1.3>`__ of the installer file ‘SetupOpenPGPCsp’ for your"
" system architecture, for ‘SetupOpenPGPCsp_x64.msi’ for 64-bit systems."
msgstr ""
"客户端需要此步骤才能使用 OpenPGP-CSP 驱动程序。为您的系统架构下载并安装 \"SetupOpenPGPCsp \"安装文件的 "
"\"最新版本 <https://github.com/vletoux/OpenPGP-CSP/releases/tag/1.3>`__\"，64 "
"位系统安装 \"SetupOpenPGPCsp_x64.msi\"。"

#: ../components/pro/windows/openpgp-csp.rst:18
msgid ""
"You may want to install the driver on the server as well for being able "
"to enforce the use of this driver in the template (see below)."
msgstr "可能还需要在服务器上安装驱动程序，以便在模板中强制使用该驱动程序（见下文）。"

#: ../components/pro/windows/openpgp-csp.rst:21
msgid "Creating Certificate Template on Server Side"
msgstr "在服务器端创建证书模板"

#: ../components/pro/windows/openpgp-csp.rst:23
msgid ""
"On Active Directory Server open certsrv.msc to manage your certificate "
"templates. Right click on ‘Certificate Templates’ and choose ‘Manage’"
msgstr "在 Active Directory 服务器上打开 certsrv.msc，管理证书模板。右键点击 \"证书模板 \"并选择 \"管理"

#: ../components/pro/windows/openpgp-csp.rst:30
msgid ""
"Now right click on ‘Smartcard Logon’ template and click ‘Duplicate’, to "
"create a new template on basis of this standard template. Rename template"
" to ‘OpenPGP Card Logon and Email’ or alike."
msgstr ""
"现在右键单击 \"智能卡登录 \"模板并单击 \"复制\"，在此标准模板的基础上创建一个新模板。将模板重命名为 \"OpenPGP "
"卡登录和电子邮件 \"或类似名称。"

#: ../components/pro/windows/openpgp-csp.rst:37
msgid ""
"Under ‘Request Handling’, you can choose the OpenPGP-CSP as the one and "
"only Cryptography Service Provider (click the Button labeled ‘CSPs…’). "
"For this to work, you need to install the driver on the server as well "
"and you have to insert a Nitrokey beforehand. This is optional. You can "
"let the user choose, which CSP to use."
msgstr ""
"在 \"请求处理 \"下，您可以选择 OpenPGP-CSP 作为唯一的加密服务提供商（点击 \"CSP... "
"\"按钮）。为此，您还需要在服务器上安装驱动程序，并事先插入 Nitrokey。这是可选项。您可以让用户选择使用哪个 CSP。"

#: ../components/pro/windows/openpgp-csp.rst:49
msgid ""
"For enabling S/MIME email encryption go to ‘Subject name’. Tick the "
"checkbox ‘E-Mail name’ (note: You must save the mail addresses of your "
"users in the corresponding Active Directory field!)."
msgstr ""
"要启用 S/MIME 电子邮件加密，请转到 \"主题名称\"。勾选 \"电子邮件名称 \"复选框（注意：您必须在相应的 Active "
"Directory 字段中保存用户的邮件地址！）。"

#: ../components/pro/windows/openpgp-csp.rst:56
msgid ""
"Then go to ‘Extensions’, there you edit the applications guideline and "
"add ‘Secure Email’."
msgstr "然后转到 \"扩展\"，在那里编辑应用程序指南并添加 \"安全电子邮件\"。"

#: ../components/pro/windows/openpgp-csp.rst:69
msgid "Request Certificate on Client (Domain Member)"
msgstr "在客户端（域成员）上申请证书"

#: ../components/pro/windows/openpgp-csp.rst:71
msgid ""
"To request a certificate for a domain member, you have to open "
"certmgr.msc. Right click on folder ‘Personal->Certificates’ and click "
"’All Tasks->Request New Certificate and choose the template you created "
"on the AD."
msgstr ""
"要为域成员申请证书，必须打开 certmgr.msc。右键单击文件夹 "
"\"Personal->Certificates\"（个人->证书），然后单击 \"All Tasks->Request New "
"Certificate\"（所有任务->申请新证书），并选择在 AD 上创建的模板。"

#: ../components/pro/windows/openpgp-csp.rst:79
msgid ""
"If you did not enforce the usage of OpenPGP-CSP you have to choose it "
"here now."
msgstr "如果您没有强制使用 OpenPGP-CSP，则必须在此选择。"

#: ../components/pro/windows/openpgp-csp.rst:91
msgid "Next you choose the Authentication slot for the certificate."
msgstr "然后选择证书的验证插槽。"

#: ../components/pro/windows/openpgp-csp.rst:93
msgid ""
"You are now ready to logon on the computer with the Nitrokey instead of "
"your password and you can use `S/MIME email encryption/signing "
"<smime.html>`_ with the Nitrokey. The driver has to be installed on every"
" computer you want to use the certificate on."
msgstr ""
"现在，您就可以用 Nitrokey 代替密码登录电脑了，还可以用 Nitrokey 使用 \"S/MIME 电子邮件加密/签名 "
"<smime.html>`_\"。您必须在每台要使用证书的电脑上安装驱动程序。"

#: ../components/nitrokey3/windows/piv/access_control.rst:2
msgid "Access Control"
msgstr "门禁控制"

#: ../components/nitrokey3/windows/piv/access_control.rst:4
msgid ""
"The following access matrix shows what authentication a certain operation"
" requires."
msgstr "下面的访问矩阵显示了某项操作需要哪些身份验证。"

#: ../components/nitrokey3/windows/piv/access_control.rst:7
msgid "MGM"
msgstr "米高梅"

#: ../components/nitrokey3/windows/piv/access_control.rst:7
msgid "Remarks"
msgstr "备注"

#: ../components/nitrokey3/windows/piv/access_control.rst:9
msgid "Change PIN"
msgstr "更改密码"

#: ../components/nitrokey3/windows/piv/access_control.rst:9
#: ../components/nitrokey3/windows/piv/access_control.rst:11
#: ../components/nitrokey3/windows/piv/access_control.rst:13
#: ../components/nitrokey3/windows/piv/access_control.rst:15
#: ../components/nitrokey3/windows/piv/access_control.rst:17
#: ../components/nitrokey3/windows/piv/access_control.rst:21
msgid "x"
msgstr "x"

#: ../components/nitrokey3/windows/piv/access_control.rst:11
msgid "Change PUK"
msgstr "更改 PUK"

#: ../components/nitrokey3/windows/piv/access_control.rst:13
msgid "Change MGM"
msgstr "改变米高梅"

#: ../components/nitrokey3/windows/piv/access_control.rst:15
msgid "Unblock PIN"
msgstr "解锁密码"

#: ../components/nitrokey3/windows/piv/access_control.rst:17
msgid "Generate key"
msgstr "生成密钥"

#: ../components/nitrokey3/windows/piv/access_control.rst:19
msgid "Read certificate"
msgstr "阅读证书"

#: ../components/nitrokey3/windows/piv/access_control.rst:19
msgid "This operatain does not require authentication."
msgstr "该操作不需要验证。"

#: ../components/nitrokey3/windows/piv/access_control.rst:21
msgid "Write certificate"
msgstr "书写证书"

#: ../components/nitrokey3/windows/piv/access_control.rst:26
msgid "Personal Identification Number (PIN)"
msgstr "个人识别码 (PIN)"

#: ../components/nitrokey3/windows/piv/access_control.rst:36
msgid ""
"The *PIN* is subject to the restriction of a retry counter. Please refer "
"to the chapter `Retry Counter <access_control.html#retry-counter>`__ to "
"learn more."
msgstr ""
"*PIN* 受重试计数器的限制。请参阅 \"重试计数器 <access_control.html#retry-counter>`__\" "
"一章了解更多信息。"

#: ../components/nitrokey3/windows/piv/access_control.rst:40
msgid "On the terminal enter ``nitropy nk3 piv change-pin``."
msgstr "在终端输入 ``nitropy nk3 piv change-pin``。"

#: ../components/nitrokey3/windows/piv/access_control.rst:44
msgid "Personal Unblocking Key (PUK)"
msgstr "个人解锁密钥 (PUK)"

#: ../components/nitrokey3/windows/piv/access_control.rst:54
msgid ""
"The *PUK* is subject to the restriction of a retry counter. Please refer "
"to the chapter `Retry Counter <access_control.html#retry-counter>`__ to "
"learn more."
msgstr ""
"*PUK* 受重试计数器的限制。请参阅 \"重试计数器 <access_control.html#retry-counter>`__\" "
"一章了解更多信息。"

#: ../components/nitrokey3/windows/piv/access_control.rst:58
msgid "On the terminal enter ``nitropy nk3 piv change-puk``."
msgstr "在终端输入 ``nitropy nk3 piv change-puk``。"

#: ../components/nitrokey3/windows/piv/access_control.rst:62
msgid "Retry Counter"
msgstr "重试计数器"

#: ../components/nitrokey3/windows/piv/access_control.rst:64
msgid ""
"The retry counter is used for the *PIN* and *PUK*. The counter decrements"
" for every failed login attempt. A retry counter of zero means that there"
" are no attempts left."
msgstr "重试计数器用于 *PIN* 和 *PUK*。每次登录失败，计数器都会递减。重试计数器为零表示没有任何尝试。"

#: ../components/nitrokey3/windows/piv/access_control.rst:68
msgid ""
"The *PIN* has a retry counter of 3 attempts. If these attempts are used "
"up, the *PIN* must be unlocked with the *PUK*."
msgstr "*PIN* 的重试次数为 3 次。如果重试次数用完，则必须使用 *PUK* 解锁*PIN*。"

#: ../components/nitrokey3/windows/piv/access_control.rst:71
msgid ""
"To unblock the *PIN*, use the command ``nitropy nk3 piv reset-retry-"
"counter``. This command requires the *PUK*."
msgstr "要解除对 *PIN* 的锁定，请使用 \"nitropy nk3 piv reset-retry-counter \"命令。该命令需要 *PUK*。"

#: ../components/nitrokey3/windows/piv/access_control.rst:74
msgid ""
"The *PUK* has a retry counter of 3 attempts. If these attempts are used "
"up, the PIV Card can not be used anymore and must be reset to factory "
"defaults. Please refer to the chapter `Factory Reset "
"<factory_reset.html>`__ to learn more."
msgstr ""
"*PUK* 的重试计数器有 3 次重试机会。如果重试次数用完，PIV 卡将无法继续使用，必须重置为出厂默认设置。请参阅 \"出厂重置 "
"<factory_reset.html>`__\" 章节了解更多信息。"

#: ../components/nitrokey3/windows/piv/access_control.rst:80
msgid "Management Key (MGM)"
msgstr "管理钥匙 (MGM)"

#: ../components/nitrokey3/windows/piv/access_control.rst:82
msgid "The management key is used for management operations."
msgstr "管理密钥用于管理操作。"

#: ../components/nitrokey3/windows/piv/access_control.rst:84
msgid ""
"Before you can perform management operations you must authenticate with "
"the management key. The authentication is done with ``nitropy nk3 piv "
"admin-auth``."
msgstr "执行管理操作前，必须先使用管理密钥进行身份验证。使用 ``nitropy nk3 piv admin-auth`` 进行身份验证。"

#: ../components/nitrokey3/windows/piv/access_control.rst:87
msgid ""
"The management key can be changed with ``nitropy nk3 piv change-admin-"
"key``."
msgstr "可以使用 \"nitropy nk3 piv change-admin-key \"更改管理密钥。"

#: ../components/nitrokey3/windows/piv/certificate_management.rst:2
msgid "Certificate Management"
msgstr "证书管理"

#: ../components/nitrokey3/windows/piv/certificate_management.rst:4
msgid ""
"Every private key has a certificate associated. The certificates can be "
"read and written. The size of a certificate is limited by the transport "
"layer and about 6kB."
msgstr "每个私人密钥都有一个相关证书。证书可以读取和写入。证书的大小受传输层限制，约为 6kB。"

#: ../components/nitrokey3/windows/piv/certificate_management.rst:9
msgid "Read Certificate"
msgstr "阅读证书"

#: ../components/nitrokey3/windows/piv/certificate_management.rst:11
msgid "Certificates can be read from the Nitrokey per key slot."
msgstr "每个密钥槽都可以从 Nitrokey 读取证书。"

#: ../components/nitrokey3/windows/piv/certificate_management.rst:21
msgid "Write Certificate"
msgstr "书写证书"

#: ../components/nitrokey3/windows/piv/certificate_management.rst:23
msgid "Certificates can be written to the Nitrokey per key slot."
msgstr "每个密钥槽都可以向 Nitrokey 写入证书。"

#: ../components/nitrokey3/windows/piv/factory_reset.rst:4
msgid ""
"The PIV application can be reset to factory defaults. It can only be "
"reset if the PIN and PUK are blocked."
msgstr "PIV 应用程序可以重置为出厂默认设置。只有在 PIN 和 PUK 被阻止的情况下才能重置。"

#: ../components/nitrokey3/windows/piv/factory_reset.rst:8
msgid ""
"Performing a factory reset of the PIV application will delete all private"
" keys and certificates."
msgstr "对 PIV 应用程序进行出厂重置将删除所有私钥和证书。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:2
msgid "Client Logon with Active Directory"
msgstr "使用活动目录登录客户端"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:4
msgid ""
"This document explains how to use the PIV application of a Nitrokey 3 for"
" smartcard logon with Active Directory."
msgstr "本文档介绍如何使用 Nitrokey 3 的 PIV 应用程序通过 Active Directory 进行智能卡登录。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:6
msgid ""
"In the future, this manual provisioning may be automated through a "
"Windows MiniDriver."
msgstr "今后，这种手动配置可通过 Windows MiniDriver 自动完成。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:9
msgid ""
"The PIV application of the Nitrokey 3 is currently considered unstable "
"and is not available on the stable firmware releases. To obtain that "
"functionality it is required to install a test firmware. Subsequent "
"firmware updates may lead to loss of data and cryptographic keys. Please "
"refer to `the firmware update documentation </nitrokey3/windows/firmware-"
"update.html#firmware-release-types>`__ for more information."
msgstr ""
"Nitrokey 3 的 PIV "
"应用程序目前被认为是不稳定的，在稳定固件版本中不可用。要获得该功能，需要安装测试固件。后续固件更新可能会导致数据和加密密钥丢失。更多信息请参阅 "
"\"固件更新文档\"</nitrokey3/windows/firmware-update.html#firmware-release-"
"types>___。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:17
msgid ""
"The setup requires administrative access to the machines running Active "
"Directory Directory Services (ADDS) and Active Directory Certificate "
"Services (ADCS). On the client machine only access to the respective user"
" account used for logon is required."
msgstr ""
"设置要求对运行 Active Directory 目录服务 (ADDS) 和 Active Directory 证书服务 (ADCS) "
"的计算机具有管理访问权限。在客户机上，只需访问用于登录的相应用户账户。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:23
msgid ""
"Windows server (supported versions are Windows Server 2016, 2019, 2022 in"
" all editions)"
msgstr "Windows 服务器（支持的版本包括 Windows Server 2016、2019 和 2022 的所有版本）"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:21
msgid "ADDS role installed and configured."
msgstr "已安装并配置 ADDS 角色。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:23
msgid "ADCS role installed and *Enterprise-CA* with root certificate configured."
msgstr "已安装 ADCS 角色，*Enterprise-CA* 已配置根证书。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:23
msgid ""
"Each Domain Controller (DC) must have a *Domain Controller*, *Domain "
"Controller Authentication*, and *Kerberos Authentication* certificate "
"issued."
msgstr "每个域控制器 (DC) 都必须有*域控制器*、*域控制器验证*和*Kerberos 验证*证书。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:24
msgid ""
"If you have clients leaving the company network, make sure the published "
"full and delta certificate revocation lists (CRL) are retrievable from "
"external networks."
msgstr "如果有客户离开公司网络，请确保已发布的完整和 delta 证书吊销列表 (CRL) 可从外部网络检索到。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:25
msgid ""
"Windows client (supported versions are Windows 10, 11 in editions "
"*Professional* and *Enterprise*)"
msgstr "Windows 客户端（支持的版本为 Windows 10、11（*专业*和*企业*版本）"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:26
msgid "Client must be a domain member of the Active Directory (AD) domain."
msgstr "客户端必须是 Active Directory (AD) 域的域成员。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:27
msgid "Nitrokey 3 with PIV application."
msgstr "带有 PIV 应用程序的 Nitrokey 3。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:30
msgid "Configure smartcard logon for use with Active Directory (AD)"
msgstr "配置智能卡登录，以便与 Active Directory (AD) 一起使用"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:32
msgid ""
"The smartcard logon requires a certificate template in the certificate "
"authority (CA) of the the domain. This template defines the values and "
"constraints of the user certificates. It is used to sign the Certificate "
"Request (CSR) during provisioning of the Nitrokey."
msgstr "智能卡登录需要域证书颁发机构（CA）的证书模板。该模板定义了用户证书的值和限制。它用于在配置 Nitrokey 时签署证书请求（CSR）。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:36
msgid ""
"Signing a certificate request for smartcard logon requires to create a "
"certificate template in the certificate authority."
msgstr "签署智能卡登录证书请求需要在证书颁发机构创建证书模板。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:39
#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:74
msgid "MMC"
msgstr "MMC"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:40
msgid ""
"From the Command Line, PowerShell, or Run, type ``certtmpl.msc`` and "
"press Enter."
msgstr "从命令行、PowerShell 或运行中输入 ``certtmpl.msc`` 并按 Enter。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:41
msgid "In the detail pane select the template **Smartcard Logon**."
msgstr "在详细窗格中选择模板 **智能卡登录**。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:42
msgid "In the menu bar click **Actions → All Tasks → Duplicate Template**."
msgstr "在菜单栏中单击 **操作 → 所有任务 → 复制模板**。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:43
msgid "Set the settings below on the template, according to the mentioned tab."
msgstr "根据上述选项卡在模板上进行以下设置。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:50
msgid "**Compatibility**"
msgstr "**兼容性**"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:46
msgid "Disable **Show resulting changes**"
msgstr "禁用 **显示更改结果**"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:47
msgid ""
"Set **Certificate Authority** and **Certificate recipient** to the oldest"
" clients in the domain which are supposed to use smartcard logon."
msgstr "将 ** 证书授权人** 和 ** 证书接收人** 设置为域中最早使用智能卡登录的客户端。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:50
msgid ""
"If you want to use Elliptic Curve (EC) keys your clients must be not "
"older than Windows Server 2008 and Windows Vista."
msgstr "如果要使用椭圆曲线 (EC) 密钥，客户机的版本必须不高于 Windows Server 2008 和 Windows Vista。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:54
msgid "**General**"
msgstr "**一般**"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:53
msgid "Set a **Template display name**."
msgstr "设置**模板显示名称**。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:54
msgid "Set the **Validity period** and **Renewal period**."
msgstr "设置**有效期**和**续订期**。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:57
msgid "**Request handling**"
msgstr "**请求处理**"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:57
msgid "Set a purpose of **Signature and smartcard logon**."
msgstr "设置**签名和智能卡登录**的目的。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:65
msgid "**Cryptography**"
msgstr "**加密**"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:60
msgid "Set a provider category of **Key Storage Provider**."
msgstr "将提供商类别设置为**密钥存储提供商**。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:61
msgid "Set a algorithm name and minimum key size."
msgstr "设置算法名称和最小密钥大小。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:64
msgid ""
"Microsoft recommends to use the RSA algorithm with a key length of "
"``2048`` Bit. If you choose to use Eliptic Curve (EC) keys you need to "
"make additional changes on your client computers."
msgstr ""
"Microsoft 建议使用密钥长度为 ``2048`` 位的 RSA 算法。如果选择使用 Eliptic Curve (EC) "
"密钥，则需要在客户端计算机上进行额外的更改。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:67
msgid "**Subject Name**"
msgstr "**课题名称**"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:68
msgid "Set **Supply in the request**."
msgstr "在请求中设置**供应**。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:69
msgid "Confirm the template creation with **OK**."
msgstr "用 **OK** 确认模板创建。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:71
msgid ""
"After the creation of a certificate template, the template must be issued"
" to be used by the clients."
msgstr "创建证书模板后，必须签发模板供客户使用。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:75
#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:138
#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:164
msgid ""
"From the Command Line, PowerShell, or Run, type ``certsrv.msc`` and press"
" Enter."
msgstr "从命令行、PowerShell 或运行中输入 ``certsrv.msc`` 并按 Enter。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:76
msgid ""
"In the navigation pane expand the Certificate Authority (CA) and navigate"
" to **Certificate Templates**."
msgstr "在导航窗格中展开证书颁发机构 (CA)，并导航至 **Certificate Templates**。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:77
msgid "In the menu bar click **Action → New → Certificate Template to Issue**."
msgstr "在菜单栏中单击 **操作 → 新建 → 签发证书模板**。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:78
msgid "Select the certificate template you want to issue and confirm with **OK**."
msgstr "选择要签发的证书模板，并用 **OK** 确认。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:82
msgid "Provision Nitrokey 3 for smartcard logon with Active Directory"
msgstr "使用 Active Directory 为智能卡登录提供 Nitrokey 3"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:84
msgid ""
"The smartcard logon requires to provision a Nitrokey for an user in "
"Active Directory. The provisiong contains the private key and Certificate"
" Singing Request (CSR) generation. The certificate is then written to the"
" Nitrokey."
msgstr ""
"智能卡登录需要在 Active Directory 中为用户配置 Nitrokey。该配置包含私钥和证书生成请求（CSR）。然后将证书写入 "
"Nitrokey。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:89
msgid ""
"Before following the steps below make sure the Active Directory user "
"account you want to use for smartcard logon exists. A creation time of "
"the certificate before the creation time of the user account will lead to"
" a failed logon."
msgstr "在执行以下步骤之前，请确保要用于智能卡登录的 Active Directory 用户账户已经存在。证书创建时间早于用户账户创建时间将导致登录失败。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:93
msgid ""
"If the PIV application on the Nitrokey was not used before, perform a "
"initialization with ``nitropy nk3 piv init`` first."
msgstr "如果之前没有使用过 Nitrokey 上的 PIV 应用程序，请先使用 ``nitropy nk3 piv init`` 进行初始化。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:95
msgid "Generate a private key and write the CSR to file with the command below."
msgstr "使用下面的命令生成私钥并将 CSR 写入文件。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:101
msgid ""
"The value of ``<algorithm>`` is the used algorithm with its key length, "
"e.g. ``rsa2048``. The values of ``<subject-name>`` and ``<subject-"
"alternative-name>`` corresponds typically to the ``commonName`` and "
"``userPrincipalName`` attribute of the Active Directory user account."
msgstr ""
"`<算法>``的值是使用的算法及其密钥长度，例如`rsa2048``。``<subject-name>`` 和 ``<subject-"
"alternative-name>`` 的值通常与 Active Directory 用户账户的 ``commonName`` 和 "
"``userPrincipalName`` 属性相对应。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:104
msgid ""
"Sign the CSR with the certificate authority (CA) of the domain with the "
"command below."
msgstr "用下面的命令在域的证书颁发机构 (CA) 上签署 CSR。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:110
msgid ""
"The value of ``<template-name>`` is the name of the certificate template "
"for smartcard logon. The value of ``<file>`` is the certificate singing "
"request file."
msgstr "<template-name>`` 的值是用于智能卡登录的证书模板名称。``<文件>``的值是证书演唱请求文件。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:113
msgid "Write the signed certificate to the Nitrokey with the command below."
msgstr "用下面的命令将签名证书写入 Nitrokey。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:119
msgid "The value of ``<file>`` is the certificate file."
msgstr "``<file>``的值是证书文件。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:123
msgid "Revoke smartcard logon for use with Active Directory (AD)"
msgstr "撤销智能卡登录，以便与 Active Directory (AD) 一起使用"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:125
msgid ""
"The issued user logon certificates are listed in the Active Directory "
"Certificate Services (ADCS). From ADCS the certificates can be revoked, "
"which adds them to the configured Certificate Revocation List (CRL). This"
" is required in case of a lost or broken Nitrokey."
msgstr ""
"已签发的用户登录证书列在 Active Directory 证书服务 (ADCS) 中。从 ADCS "
"中可以撤销证书，并将其添加到配置的证书撤销列表（CRL）中。这在 Nitrokey 丢失或损坏时是必需的。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:130
msgid ""
"It is strongly advised to never leave unused user certificates without "
"revoking them."
msgstr "强烈建议不要在未撤销证书的情况下留下未使用的用户证书。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:133
msgid ""
"It is possible to temporarily revoke a certificate with the reason "
"*Certificate Hold*. This revocation can be reverted and is hence not "
"permanent."
msgstr "可以暂时吊销证书，理由是 *Certificate Hold*。这种撤销可以恢复，因此不是永久性的。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:137
msgid "MMC (certsrv.msc)"
msgstr "MMC (certsrv.msc)"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:139
msgid ""
"In the navigation pane expand the certificate authority (CA) and navigate"
" to **Issued Certificates**."
msgstr "在导航窗格中展开证书颁发机构 (CA)，并导航至 **已颁发证书**。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:140
msgid "In the detail pane select the user certificate you want to revoke."
msgstr "在详细窗格中选择要撤销的用户证书。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:141
msgid "In the menu bar click **Action → All Tasks → Revoke Certificate**."
msgstr "在菜单栏中单击 **操作 → 所有任务 → 注销证书**。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:142
msgid ""
"Specifiy a reason for the revocation, date and time, and confirm with "
"**Yes**."
msgstr "说明撤销的原因、日期和时间，并用**是**确认。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:143
msgid "In the navigation pane navigate to **Revoked Certificates**."
msgstr "在导航窗格中导航至 **已撤销证书**。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:144
msgid "In the menu bar click **Action → All Tasks → Publish**."
msgstr "在菜单栏中点击 **操作 → 所有任务 → 发布**。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:145
msgid "Select the revocation list you want to publish and confirm with **OK**."
msgstr "选择要发布的撤销列表，并用**OK**确认。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:148
msgid ""
"During each smartcard logon attempt Windows checks if the certificate "
"presented by the smartcard is listed on a Certificate Revocation List "
"(CRL). If the certificate is found on a CRL the logon is denied. Each CRL"
" contains a validity to make them expire. Windows caches the fetched CRL "
"and updates them if the CRL is about to expire. Hence a revocation is not"
" immediate and depends on the expiration of the CRL the client has."
msgstr ""
"在每次智能卡登录尝试中，Windows 都会检查智能卡出示的证书是否列在证书吊销列表（CRL）中。如果在证书吊销列表中发现该证书，则拒绝登录。每个"
" CRL 都包含一个使其过期的有效期。Windows 会缓存获取的 CRL，并在 CRL "
"即将过期时更新它们。因此，证书吊销不会立即发生，而是取决于客户端所拥有的证书废止列表的过期时间。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:156
msgid "Import a user smartcard certificate to the personal certificate store"
msgstr "将用户智能卡证书导入个人证书存储区"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:158
msgid ""
"The user certificate which is stored on the Nitrokey can be imported to "
"the user's personal certificate store. In certain situations this is a "
"required procedure."
msgstr "存储在 Nitrokey 上的用户证书可以导入到用户的个人证书存储空间。在某些情况下，这是必要的程序。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:162
msgid "MMC (certmgr.msc)"
msgstr "MMC (certmgr.msc)"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:163
#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:172
msgid ""
"Make sure you are logged on to the user account the certificate "
"corresponds to."
msgstr "确保您已登录证书对应的用户账户。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:165
msgid ""
"In the navigation pane expand the **Personal** key store and navigate to "
"**Certificates**."
msgstr "在导航窗格中展开**个人**密钥存储，然后导航到**证书**。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:166
msgid "In the menu bar click **Action → All Tasks → Import**."
msgstr "在菜单栏中点击 **操作 → 所有任务 → 导入**。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:167
msgid ""
"Follow the import wizard and provide the user certificate file when "
"requested."
msgstr "按照导入向导操作，并按要求提供用户证书文件。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:168
msgid ""
"After the import completed check the detail pane for the imported "
"certificate. If the Nitrokey is connected, the properties of the "
"certificate should show the message *You have a private key that "
"corresponds to this certificate.* indicating that the private on the "
"Nitrokey could be identified."
msgstr ""
"导入完成后，检查导入证书的详细信息窗格。如果连接了 Nitrokey，证书属性中应显示 \"您有与此证书相对应的私钥 \"*，表明 "
"Nitrokey 上的私钥可以被识别。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:171
msgid "PowerShell"
msgstr "PowerShell"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:173
msgid "Open PowerShell."
msgstr "打开 PowerShell。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:174
msgid ""
"Change to the personal certficate store of the user with ``Set-Location "
"-Path cert:\\CurrentUser\\My``."
msgstr "使用 ``Set-Location -Path cert:\\CurrentUser\\My`` 更改到用户的个人证书存储空间。"

#: ../components/nitrokey3/windows/piv/guides/client_logon_with_active_directory.rst:175
msgid ""
"Import the certificate to the store with ``Import-Certificate -Filepath "
"'<path>'``, replacing ``<path>`` with the certificate file path."
msgstr ""
"使用 ``Import-Certificate -Filepath '<path>'``，将 ``<path>`` "
"替换为证书文件路径，将证书导入存储区。"

#: ../components/nitrokey3/windows/piv/guides/index.rst:2
msgid "Guides"
msgstr "指南"

#: ../components/nitrokey3/windows/piv/index.rst:2
msgid "PIV (Personal Identity Verification)"
msgstr "PIV（个人身份验证）"

#: ../components/nitrokey3/windows/piv/index.rst:5
msgid ""
"The PIV application of the Nitrokey 3 is currently considered unstable "
"and is not available on the stable firmware releases. To obtain that "
"functionality it is required to install a test firmware. Subsequent "
"firmware updates may lead to loss of data and cryptographic keys. Please "
"refer to `the firmware update documentation <../firmware-update.html"
"#firmware-release-types>`__ for more information."
msgstr ""
"Nitrokey 3 的 PIV "
"应用程序目前被认为是不稳定的，在稳定固件版本中不可用。要获得该功能，需要安装测试固件。后续固件更新可能会导致数据和加密密钥丢失。更多信息请参阅 "
"\"固件更新文档<.../firmware-update.html#firmware-release-types>\"___。"

#: ../components/nitrokey3/windows/piv/index.rst:10
msgid ""
"The *Personal Identity Verfication* (PIV) is based on the NIST special "
"publication `SP 800-73 "
"<https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-73-4.pdf>`__."
msgstr ""
"个人身份验证* (PIV)以美国国家标准与技术研究院特别出版物`SP 800-73 "
"<https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-73-4.pdf>`__为基础。"

#: ../components/nitrokey3/windows/piv/key_management.rst:5
msgid "Key Slots"
msgstr "关键插槽"

#: ../components/nitrokey3/windows/piv/key_management.rst:7
msgid ""
"The PIV application can hold certificates for different purposes. For "
"each purpose the private key and its corresponding certificate are stored"
" in a key slot."
msgstr "PIV 应用程序可持有不同用途的证书。每种用途的私人密钥及其相应的证书都存储在一个密钥槽中。"

#: ../components/nitrokey3/windows/piv/key_management.rst:11
msgid "Slot"
msgstr "插槽"

#: ../components/nitrokey3/windows/piv/key_management.rst:11
msgid "Application"
msgstr "应用"

#: ../components/nitrokey3/windows/piv/key_management.rst:13
msgid "82-95"
msgstr "82-95"

#: ../components/nitrokey3/windows/piv/key_management.rst:13
msgid "Retired Key Management"
msgstr "退休的主要管理人员"

#: ../components/nitrokey3/windows/piv/key_management.rst:13
msgid ""
"The private keys and certificates in these slots were used for key "
"management applications and are still there to provide backward "
"compatibility."
msgstr "这些插槽中的私钥和证书用于密钥管理应用程序，目前仍在提供向后兼容性。"

#: ../components/nitrokey3/windows/piv/key_management.rst:17
msgid "9a"
msgstr "9a"

#: ../components/nitrokey3/windows/piv/key_management.rst:17
msgid "Authentication"
msgstr "认证"

#: ../components/nitrokey3/windows/piv/key_management.rst:17
msgid ""
"The private key and certificate in this slot are used to authenticate the"
" cardholder."
msgstr "此插槽中的私钥和证书用于验证持卡人的身份。"

#: ../components/nitrokey3/windows/piv/key_management.rst:20
msgid "9c"
msgstr "9c"

#: ../components/nitrokey3/windows/piv/key_management.rst:20
msgid "Signature"
msgstr "签名"

#: ../components/nitrokey3/windows/piv/key_management.rst:20
msgid ""
"The private key and certificate in this slot are used to sign emails and "
"files."
msgstr "此插槽中的私钥和证书用于签署电子邮件和文件。"

#: ../components/nitrokey3/windows/piv/key_management.rst:23
msgid "9d"
msgstr "9d"

#: ../components/nitrokey3/windows/piv/key_management.rst:23
msgid ""
"The private key and certificate in this slot are used to encrypt emails "
"and files."
msgstr "此插槽中的私钥和证书用于加密电子邮件和文件。"

#: ../components/nitrokey3/windows/piv/key_management.rst:26
msgid "9e"
msgstr "9e"

#: ../components/nitrokey3/windows/piv/key_management.rst:26
msgid "Card Authentication"
msgstr "卡认证"

#: ../components/nitrokey3/windows/piv/key_management.rst:26
msgid ""
"The private key and certificate in this slot are used for physical "
"operations, such as building access or time recording. Support from the "
"respective system is a prerequisite."
msgstr "该插槽中的私钥和证书用于实际操作，如楼宇门禁或时间记录。前提条件是相关系统提供支持。"

#: ../components/nitrokey3/windows/piv/key_management.rst:33
msgid "Algorithms"
msgstr "算法"

#: ../components/nitrokey3/windows/piv/key_management.rst:35
msgid ""
"The PIV application uses asymmetric and symmetric algorithms. The "
"asymmetric algorithms are used for the user private keys and the "
"symmetric algorithms for the management key."
msgstr "PIV 应用程序使用非对称和对称算法。非对称算法用于用户私钥，对称算法用于管理密钥。"

#: ../components/nitrokey3/windows/piv/key_management.rst:38
msgid "Supported asymmetric key algorithms:"
msgstr "支持非对称密钥算法："

#: ../components/nitrokey3/windows/piv/key_management.rst:40
msgid "RSA 2048"
msgstr "RSA 2048"

#: ../components/nitrokey3/windows/piv/key_management.rst:41
msgid "nistp256"
msgstr "nistp256"

#: ../components/nitrokey3/windows/piv/key_management.rst:43
msgid "Supported symmetric key algorithms:"
msgstr "支持对称密钥算法："

#: ../components/nitrokey3/windows/piv/key_management.rst:45
msgid "AES 256"
msgstr "AES 256"

#: ../components/nitrokey3/windows/piv/key_management.rst:46
msgid "3DES (TDES)"
msgstr "3DES (TDES)"

#: ../components/nitrokey3/windows/piv/key_management.rst:49
msgid "It is not recommended to use the 3DES (TDES) algorithm."
msgstr "不建议使用 3DES (TDES) 算法。"

#: ../components/nitrokey3/windows/piv/key_management.rst:54
msgid "The PIV application can generate a new private key on the Nitrokey."
msgstr "PIV 应用程序可在 Nitrokey 上生成新的私人密钥。"

#: ../components/nitrokey3/windows/piv/key_management.rst:56
msgid ""
"The command below will create private key in key slot ``9a`` for the user"
" with the subject name ``John Doe`` and subject alternative name "
"``jd@nitrokey.local``."
msgstr ""
"下面的命令将在密钥槽 ``9a`` 中为主题名为 ``John Doe`` 和主题替代名称为 ``jd@nitrokey.local`` "
"的用户创建私钥。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:4
msgid "Settings PIN with Windows Settings application"
msgstr "使用 Windows 设置应用程序设置 PIN 码"

#: ../components/nitrokey3/shared/set-pins.rst.inc:6
msgid "Open the Windows \"Settings\" application."
msgstr "打开 Windows \"设置 \"应用程序。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:7
msgid "Open the \"Accounts\" menu."
msgstr "打开 \"账户 \"菜单。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:8
msgid "In the menubar on the left click on \"Sign-in options\"."
msgstr "在左侧菜单栏点击 \"登录选项\"。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:9
msgid ""
"In the menu in the middle click on \"Security Key\" and then \"Manage\" "
"under it."
msgstr "在中间的菜单中点击 \"安全密钥\"，然后点击其下的 \"管理\"。"

#: ../components/nitrokey3/shared/set-pins.rst.inc:10
msgid "Under the header \"Security Key PIN\" click on \"Change\"."
msgstr "在 \"安全密钥 PIN \"标题下点击 \"更改\"。"

#: ../components/nitropad/content/shared-index-content1.rst:11
#: ../components/nitropad/content/shared-index-content1.rst:28
msgid ""
"With the NitroPad, malicious changes to the BIOS, operating system, and "
"software can be easily detected. For example, if you left your NitroPad "
"in a hotel room, you can use your Nitrokey to check if it has been "
"tampered with while you were away. If an attacker modifies the NitroPad’s"
" firmware or operating system, the Nitrokey will detect this "
"(instructions below)."
msgstr ""
"有了 NitroPad，对 BIOS、操作系统和软件的恶意更改就很容易被检测到。例如，如果你把 NitroPad 忘在酒店房间里，你可以用 "
"Nitrokey 检查它是否在你离开时被篡改过。如果攻击者修改了 NitroPad 的固件或操作系统，Nitrokey 会检测到（说明如下）。"

#: ../components/nitropad/content/shared-index-content1.rst:19
msgid "Verification of Sealed Hardware"
msgstr "密封硬件的验证"

#: ../components/nitropad/content/shared-index-content1.rst:21
msgid ""
"If you have ordered the unit with the option “sealed screws and sealed "
"bag”, please `verify the sealing <sealed-hardware.html>`_ before "
"unpacking. If you do not know what this means, skip this section."
msgstr ""
"如果您订购的设备带有 \"密封螺钉和密封袋 \"选项，请在开箱前 \"验证密封<sealed-"
"hardware.html>`_\"。如果您不知道这意味着什么，请跳过本节。"

#: ../components/nitropad/content/shared-index-content1.rst:26
msgid "Secure Starting Procedure"
msgstr "安全启动程序"

#: ../components/nitropad/content/shared-index-content1.rst:35
msgid ""
"Each time you start the NitroPad, you should - if possible - connect your"
" Nitrokey. If the Nitrokey is plugged in and the system has not been "
"modified, the following screen will appear when the NitroPad is turned "
"on."
msgstr ""
"每次启动 NitroPad 时，都应尽可能连接 Nitrokey。如果已插入 Nitrokey 且未修改系统，则打开 NitroPad "
"时会出现以下屏幕。"

#: ../components/nitropad/content/shared-index-content1.rst:43
msgid ""
"The box marked in red contains the information that the BIOS has not been"
" changed and that the shared secret of the NitroPad and the Nitrokey "
"match. But this information is not sufficient, because an attacker could "
"have faked it. If at the same time the Nitrokey also flashes green, "
"everything is fine. An attacker would have to have had access to the "
"NitroPad and Nitrokey to achieve this result. It is therefore important "
"that you do not leave both devices unattended."
msgstr ""
"红色方框中包含的信息表明，BIOS 未被更改，且 NitroPad 和 Nitrokey "
"的共享密钥相匹配。但这些信息并不充分，因为攻击者可能会伪造这些信息。如果同时 Nitrokey 也闪烁绿光，则一切正常。攻击者必须能够访问 "
"NitroPad 和 Nitrokey 才能实现这一结果。因此，重要的是不要让两个设备同时处于无人看管的状态。"

#: ../components/nitropad/content/shared-index-content1.rst:51
msgid ""
"If the information on the NitroPad does not match the information on the "
"Nitrokey, the background would turn red and the message “Invalid Code” "
"would appear. This could indicate that manipulation has taken place."
msgstr "如果 NitroPad 上的信息与 Nitrokey 上的信息不一致，背景会变成红色，并显示 \"无效代码 \"信息。这可能表明发生了篡改。"

#: ../components/nitropad/content/shared-index-content1.rst:58
msgid ""
"How the boot process may look like if the system has been changed (for "
"example after an update) and what error messages may otherwise occur is "
"described further below."
msgstr "如果系统发生变化（如更新后），启动过程可能会怎样，以及可能会出现哪些错误信息，将在下文中进一步说明。"

#: ../components/nitropad/content/shared-index-content1.rst:64
msgid ""
"The NitroPad can also be started without the Nitrokey. If you don’t have "
"the Nitrokey with you, but are sure that the hardware has not been "
"manipulated, you can boot your system without checking."
msgstr "没有 Nitrokey 也可以启动 NitroPad。如果没带 Nitrokey，但确定硬件未被篡改，则无需检查即可启动系统。"

#: ../components/nitropad/content/shared-index-content2.rst:2
msgid "Behavior After a System Update"
msgstr "系统更新后的行为"

#: ../components/nitropad/content/shared-index-content2.rst:4
msgid ""
"The NitroPad firmware checks certain system files for changes. If your "
"operating system has updated important components, you will be warned the"
" next time you boot the NitroPad. This could look like this, for example:"
msgstr "NitroPad 固件会检查某些系统文件是否有更改。如果操作系统更新了重要组件，下次启动 NitroPad 时就会收到警告。举例来说，这可能是这样的"

#: ../components/nitropad/content/shared-index-content2.rst:12
msgid ""
"That’s why it’s important to restart your NitroPad under controlled "
"conditions after a system update. Only when the new status has been "
"confirmed can you leave the device unattended again. Otherwise, you will "
"not be able to distinguish a possible attack from a system update. "
"Detailed instructions for a system update can be `found here <system-"
"update.html>`_."
msgstr ""
"这就是为什么系统更新后必须在可控条件下重新启动 NitroPad "
"的原因。只有在确认了新状态后，才能再次将设备置于无人看管的状态。否则，您将无法区分可能的攻击和系统更新。有关系统更新的详细说明，请参见 "
"<system-update.html>`_。"

#: ../components/nitropad/faq.rst:2
msgid "NitroPad FAQ"
msgstr "NitroPad 常见问题"

#: ../components/nitropad/faq.rst:5 ../components/nitropc/faq.rst:6
msgid "**Q:** What is the default hard-disk encryption password?"
msgstr "**问：** 默认的硬盘加密密码是什么？"

#: ../components/nitropad/faq.rst:5
msgid ""
"The default Nitropad disk encryption password: \"12345678\". This was "
"change on the 15.01.2024 so if \"12345678\" is not working try the old "
"default: \"PleaseChangeMe\""
msgstr ""
"Nitropad 磁盘加密的默认密码为 \"12345678\"。该密码已于 15.01.2024 更改，因此如果 \"12345678 "
"\"无法使用，请尝试旧的默认密码：\"PleaseChangeMe\"。"

#: ../components/nitropad/faq.rst:10
msgid "**Q:** How to change the hard-disk encryption password from within HEADS?"
msgstr "**问：** 如何在 HEADS 中更改硬盘加密密码？"

#: ../components/nitropad/faq.rst:8
msgid ""
"This is the prefered way to change the hard-disk encryption password. "
"Inside HEADS choose ``Options -> Change LUKS Disk Recovery Key "
"passphrase`` and follow the instructions."
msgstr "这是更改硬盘加密密码的首选方法。在 HEADS 中选择 \"选项 -> 更改 LUKS 磁盘恢复密钥口令\"，然后按说明操作。"

#: ../components/nitropad/faq.rst:18
msgid "**Q:** How to change the hard-disk encryption password from within the OS?"
msgstr "**问：** 如何在操作系统内更改硬盘加密密码？"

#: ../components/nitropad/faq.rst:13
msgid ""
"Using default ``cryptsetup`` tools it is important to note that the right"
" key slot is used: ``sudo cryptsetup luksChangeKey --key-slot=0 "
"/dev/nvme0n1p3`` or ``sudo cryptsetup luksChangeKey --key-slot=0 "
"/dev/sda3``. In Qubes 4.2 exist also now a GUI tool for that:"
msgstr ""
"使用默认的 ``cryptsetup`` 工具时，必须注意使用正确的密钥插槽：`sudo cryptsetup luksChangeKey "
"--key-slot=0 /dev/nvme0n1p3`` 或 `sudo cryptsetup luksChangeKey --key-"
"slot=0 /dev/sda3``。在 Qubes 4.2 中也有一个 GUI 工具："

#: ../components/nitropad/faq.rst ../components/nitropad/qubes/index.rst
#: ../components/nitropc/qubes/index.rst
msgid "Change Password Qubes Image"
msgstr "更改密码 Qubes 图像"

#: ../components/nitropad/faq.rst:30
msgid "**Q:** What is re-ownership / re-encryption and why is it important?"
msgstr "**问：** 什么是重新拥有/重新加密，为什么它很重要？"

#: ../components/nitropad/faq.rst:21
msgid ""
"Changing your hard-disk encryption password does not change the "
"encryption itself, just the access to the encryption key. This means that"
" in a situation where somebody had phyisical access to the device (e.g., "
"during shipment) they may have copied the LUKS header, i.e., the "
"encryption key. Using this copy one might decrypt the hard-disk even with"
" a new password being set. This is why the re-ownership wizard proposes "
"to re-encrypt the hard-disk, which reencrypts in place ensuring the "
"previously described scenario cannot be applied."
msgstr ""
"更改硬盘加密密码不会改变加密本身，只会改变加密密钥的访问权限。这就意味着，如果有人对设备进行了物理访问（如在运输过程中），他们可能已经复制了 "
"LUKS 标头，即加密密钥。即使设置了新密码，也可能利用该副本解密硬盘。因此，重新拥有权向导建议对硬盘重新加密，以确保前面所述的情况无法发生。"

#: ../components/nitropad/index.rst:16 ../components/nitropc/index.rst:17
msgid "Qubes"
msgstr "Qubes"

#: ../components/nitropad/index.rst:16 ../components/nitropc/index.rst:17
msgid "Ubuntu"
msgstr "乌班图"

#: ../components/nitropad/index.rst:2
msgid "NitroPad"
msgstr "NitroPad"

#: ../components/pro/change-pins.rst.inc:2
#: ../components/start/setting-kdf-do.rst.inc:26
msgid "Change User and Admin PIN"
msgstr "更改用户和管理密码"

#: ../components/pro/change-pins.rst.inc:9
#, fuzzy
msgid ""
"The user PIN is at least 6-digits long and is used to get access to the "
"content of the Nitrokey. This is the PIN you will use a lot in every day "
"use e.g. for decrypting messages, for unlocking your encrypted storage "
"(NK Storage only) etc."
msgstr ""
"用户密码至少为 6 位数，用于访问 Nitrokey 的内容。您在日常使用中会经常用到这个 PIN 码，例如用于解密信息、解锁加密存储空间（仅限 "
"NK 存储空间）等。"

#: ../components/pro/change-pins.rst.inc:11
msgid ""
"You can change the user PIN with the Nitrokey App if using a Nitrokey Pro"
" or Nitrokey Storage. In the `Nitrokey "
"<https://www.nitrokey.com/download>`__ App open ‘Menu -> Configure -> "
"Change User PIN’ to open the dialog to change the PIN."
msgstr ""
"如果使用的是 Nitrokey Pro 或 Nitrokey Storage，可以通过 Nitrokey 应用程序更改用户密码。在 "
"\"Nitrokey <https://www.nitrokey.com/download>`__ App \"中打开 \"菜单 -> 配置 ->"
" 更改用户密码\"，打开更改密码的对话框。"

#: ../components/pro/change-pins.rst.inc:19
msgid "You can change the User PIN in the dialog window now."
msgstr "您现在可以在对话窗口中更改用户密码。"

#: ../components/pro/change-pins.rst.inc:21
#: ../components/shared-faqs/pins.rst.inc:19
msgid ""
"The user PIN can have up to 20 digits and other characters (e.g. "
"alphabetic and special characters). But as the user PIN is blocked as "
"soon three wrong PIN attempts were done, it is sufficiently secure to "
"only have a 6 digits PIN. The default PIN is 123456."
msgstr ""
"用户密码最多可以有 20 位数字和其他字符（如字母和特殊字符）。但是，由于用户密码在三次输入错误后就会被封锁，因此只输入 6 "
"位数的密码就足够安全了。默认 PIN 码为 123456。"

#: ../components/pro/change-pins.rst.inc:31
#, fuzzy
msgid ""
"The admin PIN is at least 8-digits long and is used to change "
"contents/settings of the Nitrokey. That is to say after initializing the "
"Nitrokey you probably won’t need this PIN too often (e.g. if you want to "
"add another password to the password safe of the Nitrokey Pro or Nitrokey"
" Storage)."
msgstr ""
"管理员密码至少为 8 位数，用于更改 Nitrokey 的内容/设置。也就是说，在初始化 Nitrokey 后，您可能不会经常用到该 PIN "
"码（例如，如果您想在 Nitrokey Pro 或 Nitrokey Storage 的密码保险箱中添加另一个密码）。"

#: ../components/pro/change-pins.rst.inc:33
msgid ""
"You can change the admin PIN with the Nitrokey App if using a Nitrokey "
"Pro or Nitrokey Storage. In the `Nitrokey App "
"<https://www.nitrokey.com/download>`__ open ‘Menu -> Configure -> Change "
"Admin PIN’ to open the dialog to change the PIN."
msgstr ""
"如果使用的是 Nitrokey Pro 或 Nitrokey Storage，可以通过 Nitrokey 应用程序更改管理密码。在 "
"\"Nitrokey App <https://www.nitrokey.com/download>`__\"中打开 \"菜单 -> 配置 -> "
"更改管理密码\"，打开更改密码的对话框。"

#: ../components/pro/change-pins.rst.inc:41
msgid "You can change the admin PIN in the dialog window now."
msgstr "您现在可以在对话窗口中更改管理员密码。"

#: ../components/pro/change-pins.rst.inc:43
#: ../components/shared-faqs/pins.rst.inc:31
msgid ""
"The admin PIN can have up to 20 digits and other characters (e.g. "
"alphabetic and special characters). But as the admin PIN is blocked as "
"soon three wrong PIN attempts were done, it is sufficiently secure to "
"only have 8 digits PIN. The default PIN is 12345678."
msgstr ""
"管理员密码最多可以有 20 位数字和其他字符（如字母和特殊字符）。但是，只要三次尝试输入错误的 PIN 码，管理员 PIN "
"码就会被阻止，因此只输入 8 位数的 PIN 码就足够安全了。默认密码为 12345678。"

#: ../components/nitropad/default-boot.rst.inc:2
msgid "Default Boot"
msgstr "默认启动"

#: ../components/nitropad/default-boot.rst.inc:6
msgid ""
"If you have installed a new operating system, it may be that default boot"
" is not yet assigned. If this is the case, please proceed as described "
"below."
msgstr "如果您安装了新的操作系统，可能尚未分配默认启动。如果是这种情况，请按以下步骤操作。"

#: ../components/nitropad/default-boot.rst.inc:8
msgid "Select “Default boot”."
msgstr "选择 \"默认启动\"。"

#: ../components/nitropad/default-boot.rst.inc:15
msgid ""
"Heads informs you that it does not yet know any default. First you agree "
"to the update of the checksums."
msgstr "Heads 会通知您，它还不知道任何默认设置。首先，您同意更新校验和。"

#: ../components/nitropad/default-boot.rst.inc:23
#: ../components/nitropad/default-boot.rst.inc:49
#: ../components/nitropad/firmware-update.rst.inc:98
#: ../components/nitropad/firmware-update.rst.inc:112
msgid "Confirm the process with Enter."
msgstr "用回车键确认程序。"

#: ../components/nitropad/default-boot.rst.inc:30
msgid ""
"Now insert the Nitrokey if this is not already the case and confirm with "
"Enter. Then you have to enter the User PIN of the Nitrokey."
msgstr "现在插入 Nitrokey（如果尚未插入），并用 Enter 加以确认。然后输入 Nitrokey 的用户密码。"

#: ../components/nitropad/default-boot.rst.inc:47
msgid "Now the NitroPad marks the files that changed by the update as verified."
msgstr "现在，NitroPad 会将更新更改的文件标记为已验证。"

#: ../components/nitropad/default-boot.rst.inc:56
msgid ""
"You will then see a list of all possible boot entries - choose the first "
"one here by simply pressing Enter. Boot Options"
msgstr "然后，您将看到所有可能的启动项列表，只需按 Enter 键即可选择第一个启动项。启动选项"

#: ../components/nitropad/default-boot.rst.inc:64
msgid ""
"To save this value as default, select “Make Ubuntu the default” for "
"Ubuntu or “Make Qubes the default” for Qubes OS. Confirm Boot Details"
msgstr ""
"要将此值保存为默认值，请选择 \"将 Ubuntu 设为默认值\"（Ubuntu）或 \"将 Qubes 设为默认值\"（Qubes "
"OS）。确认启动细节"

#: ../components/nitropad/default-boot.rst.inc:72
msgid ""
"Confirm the next three questions with Enter and enter the PIN of the "
"Nitrokey if you are prompted to do so."
msgstr "用 \"回车 \"确认接下来的三个问题，并在出现提示时输入 Nitrokey 的 PIN 码。"

#: ../components/nitropad/default-boot.rst.inc:93
#: ../components/nitropad/system-update.rst.inc:121
msgid "Your system will then boot."
msgstr "然后系统将启动。"

#: ../components/nitropad/default-boot.rst.inc:96
msgid "Changing default kernel"
msgstr "更改默认内核"

#: ../components/nitropad/default-boot.rst.inc:98
msgid ""
"This is a workaround for Heads v1.1 bug, which does not allow to change "
"the kernel to the one later (lower) in the list."
msgstr "这是针对 Heads v1.1 bug 的一个变通方法，该 bug 不允许将内核更改为列表中较后（较低）的内核。"

#: ../components/nitropad/default-boot.rst.inc:100
msgid ""
"Usual way would be to go to ``Options -> Boot Options -> Show OS boot "
"menu``, selecting the kernel and making it default, however the latter is"
" not working at the moment. Instead please use the following workaround:"
msgstr ""
"通常的方法是进入 "
"\"选项\"->\"启动选项\"->\"显示操作系统启动菜单\"，选择内核并将其设置为默认，但后者目前无法使用。请使用以下变通方法："

#: ../components/nitropad/default-boot.rst.inc:102
msgid ""
"Start recovery console and remove the default boot files. Please make "
"sure the correct files are removed. Here 2 default files were available:"
msgstr "启动恢复控制台并删除默认启动文件。请确保删除了正确的文件。这里有 2 个默认文件："

#: ../components/nitropad/default-boot.rst.inc:117
msgid ""
"Sign all current boot files with: ``Options --> Update checksums and sign"
" all files in /boot``"
msgstr "签署当前所有启动文件：选项 --> 更新校验和并签署 /boot 中的所有文件"

#: ../components/nitropad/default-boot.rst.inc:119
msgid "Return to main menu and select default boot ``Main Menu --> Default boot``"
msgstr "返回主菜单并选择默认启动```主菜单 --> 默认启动```。"

#: ../components/nitropad/default-boot.rst.inc:121
msgid ""
"Agree to select default kernel (screen: ``No Default Boot Option "
"Configured`` )"
msgstr "同意选择默认内核（屏幕：\"未配置默认启动选项\"）。"

#: ../components/nitropad/default-boot.rst.inc:123
msgid "Select the desired kernel to work as the default"
msgstr "选择所需的内核作为默认内核运行"

#: ../components/nitropad/default-boot.rst.inc:124
msgid "Select 2nd option: ``Make <kernel version> the default``"
msgstr "选择第 2 个选项：``使 < 内核版本> 成为默认设置``。"

#: ../components/nitropad/default-boot.rst.inc:125
msgid ""
"Save the kernel with accepting default options (proceed, do not agree for"
" TPM encryption, confirm GPG card):"
msgstr "保存内核并接受默认选项（继续、不同意 TPM 加密、确认 GPG 卡）："

#: ../components/nitropad/default-boot.rst.inc:134
msgid "Enter PIN for the Nitrokey Pro/Storage device to execute signing process"
msgstr "输入 Nitrokey Pro/Storage 设备的 PIN 码以执行签名过程"

#: ../components/nitropad/default-boot.rst.inc:136
msgid ""
"The selected kernel will boot and it will be the default one the next "
"time when selecting ``Default Boot`` option from the menu."
msgstr "选定的内核将启动，下次从菜单中选择 \"默认启动 \"选项时，它将成为默认内核。"

#: ../components/nitropad/factory-reset-heads2.rst.inc:7
#: ../components/nitropad/factory-reset.rst.inc:7
msgid "Reasons for resetting to factory settings"
msgstr "恢复出厂设置的原因"

#: ../components/nitropad/factory-reset-heads2.rst.inc:9
#: ../components/nitropad/factory-reset.rst.inc:9
#, fuzzy
msgid "Your Nitrokey is locked (e.g. due to multiple incorrect PIN entries)"
msgstr "您的 Nitrokey 被锁定（例如由于多次输入错误的 PIN 码）。"

#: ../components/nitropad/factory-reset-heads2.rst.inc:11
#: ../components/nitropad/factory-reset.rst.inc:11
msgid "You have lost your Nitrokey (in which case you will first need a new one)"
msgstr "您丢失了 Nitrokey（在这种情况下，您首先需要一个新的 Nitrokey）"

#: ../components/nitropad/factory-reset-heads2.rst.inc:13
#: ../components/nitropad/factory-reset.rst.inc:13
#, fuzzy
msgid ""
"You have installed an operating system yourself (e.g. after changing the "
"hard disk)"
msgstr "您自行安装了操作系统（如更换硬盘后）。"

#: ../components/nitropad/factory-reset-heads2.rst.inc:15
#: ../components/nitropad/factory-reset.rst.inc:15
msgid "Your operating system does not start"
msgstr "操作系统无法启动"

#: ../components/nitropad/factory-reset.rst.inc:18
#: ../components/nitropad/factory-reset.rst.inc:44
msgid ""
"All your data will be lost if you reset your device. Therefore please "
"backup your data before performing the reset."
msgstr "如果重置设备，您的所有数据都将丢失。因此，请在重置前备份数据。"

#: ../components/nitropad/factory-reset.rst.inc:21
msgid "Only for firmware till version 1.4"
msgstr "仅适用于 1.4 版之前的固件"

#: ../components/nitropad/factory-reset.rst.inc:25
msgid ""
"Connect any USB flash drive to the NitroPad. (You need that USB flash "
"drive for saving your security key)"
msgstr "将任何 USB 闪存盘连接到 NitroPad。(您需要 U 盘来保存安全密钥）"

#: ../components/nitropad/factory-reset-heads2.rst.inc:22
#: ../components/nitropad/factory-reset.rst.inc:26
msgid "Connect your Nitrokey to the NitroPad."
msgstr "将 Nitrokey 与 NitroPad 相连。"

#: ../components/nitropad/factory-reset-heads2.rst.inc:23
#: ../components/nitropad/factory-reset.rst.inc:31
msgid "Turn on the NitroPad."
msgstr "打开 NitroPad。"

#: ../components/nitropad/factory-reset-heads2.rst.inc:24
#: ../components/nitropad/factory-reset.rst.inc:32
msgid "Select “Options”."
msgstr "选择 \"选项\"。"

#: ../components/nitropad/factory-reset.rst.inc:37
msgid "Select “OEM-Factory Reset”."
msgstr "选择 \"OEM-出厂重置\"。"

#: ../components/nitropad/factory-reset.rst.inc:46
msgid "Confirm the “OEM Factory Reset” with “Continue”."
msgstr "点击 \"继续 \"确认 \"OEM 工厂重置\"。"

#: ../components/nitropad/factory-reset.rst.inc:51
msgid ""
"You will be asked if you want to set the User and Admin/TPM PIN yourself."
" You press Enter to continue without changing the PINs."
msgstr "系统会询问您是否要自行设置用户和管理员/TPM PIN 码。按 Enter 继续，无需更改 PIN 码。"

#: ../components/nitropad/factory-reset.rst.inc:53
msgid ""
"You will then be asked if manual user information should be added. You "
"confirm with ‘y’ and enter your name and then the email address."
msgstr "然后，系统会询问您是否要添加手动用户信息。您可以用 \"y \"确认，然后输入您的姓名和电子邮件地址。"

#: ../components/nitropad/factory-reset.rst.inc:82
msgid ""
"If you are using Nitrokey Storage, you must then select the drive. If the"
" drives /dev/sdb1, /dev/sdc, /dev/sdd1 are displayed, select /dev/sdd1. "
"If the drives /dev/sdb1, /dev/sdc1, /dev/sdd are displayed, select "
"/dev/sdb1."
msgstr ""
"如果使用的是 Nitrokey Storage，则必须选择驱动器。如果显示驱动器 /dev/sdb1、/dev/sdc、/dev/sdd1，请选择"
" /dev/sdd1。如果显示驱动器 /dev/sdb1、/dev/sdc1、/dev/sdd，请选择 /dev/sdb1。"

#: ../components/nitropad/factory-reset.rst.inc:88
msgid ""
"The rest of the configuration will be done automatically. You confirm the"
" subsequent restart."
msgstr "其余配置将自动完成。请确认随后的重新启动。"

#: ../components/nitropad/factory-reset-heads2.rst.inc:101
#: ../components/nitropad/factory-reset.rst.inc:95
msgid ""
"After the restart the OTP secret must be created. Confirm the process "
"with Enter."
msgstr "重新启动后，必须创建 OTP 密码。用回车键确认程序。"

#: ../components/nitropad/factory-reset.rst.inc:102
msgid "Confirm that new OTP Secrets should be created."
msgstr "确认应创建新的 OTP 保密信息。"

#: ../components/nitropad/factory-reset.rst.inc:109
msgid ""
"When prompted, enter the Admin PIN and TPM password. Both are by default:"
" “12345678”."
msgstr "出现提示时，输入管理密码和 TPM 密码。两者的默认值都是：\"12345678\"。"

#: ../components/nitropad/factory-reset-heads2.rst.inc:127
#: ../components/nitropad/factory-reset.rst.inc:116
msgid "You should then reach the Start menu."
msgstr "然后就可以进入 \"开始 \"菜单。"

#: ../components/nitropad/factory-reset-heads2.rst.inc:132
#: ../components/nitropad/factory-reset.rst.inc:123
msgid "Press Enter to start the “Default Boot”."
msgstr "按 Enter 键启动 \"默认启动\"。"

#: ../components/nitropad/factory-reset-heads2.rst.inc:136
#: ../components/nitropad/factory-reset.rst.inc:127
msgid ""
"If you see the message that no default exists yet, please follow the "
"procedure described in “Troubleshooting: Default Boot Menu”."
msgstr "如果看到尚未存在默认值的信息，请按照 \"故障排除 \"中描述的步骤操作：默认启动菜单 \"中所述的步骤。"

#: ../components/nitropad/factory-reset.rst.inc:129
msgid ""
"Once the operating system starts until the encryption password is "
"requested, you are done."
msgstr "一旦操作系统启动，直到要求输入加密密码时，就完成了。"

#: ../components/nitropad/factory-reset.rst.inc:136
#, fuzzy
msgid ""
"Finally, copy the public PGP key from the data stick to your computer, "
"e.g. to use it for e-mail encryption."
msgstr "最后，将公共 PGP 密钥从数据棒拷贝到电脑上，例如用于电子邮件加密。"

#: ../components/nitropad/factory-reset-heads2.rst.inc:2
msgid "Factory Reset Heads 2.0"
msgstr "工厂重置头 2.0"

#: ../components/nitropad/factory-reset-heads2.rst.inc:18
msgid ""
"All data on the Nitrokey will be lost if you reset your device. Therefore"
" please backup your data before performing the reset."
msgstr "如果重置设备，Nitrokey 上的所有数据都将丢失。因此，请在重置前备份数据。"

#: ../components/nitropad/factory-reset-heads2.rst.inc:-1
msgid "heads options menu"
msgstr "磁头选项菜单"

#: ../components/nitropad/factory-reset-heads2.rst.inc:29
msgid "Select “OEM-Factory Reset /Re-Ownership”."
msgstr "选择 \"OEM-工厂重置/重新拥有\"。"

#: ../components/nitropad/factory-reset-heads2.rst.inc:-1
msgid "reset"
msgstr "重置"

#: ../components/nitropad/factory-reset-heads2.rst.inc:34
msgid "Confirm Reset with “Continue”."
msgstr "继续 \"确认重置。"

#: ../components/nitropad/factory-reset-heads2.rst.inc:-1
msgid "confirm"
msgstr "确定"

#: ../components/nitropad/factory-reset-heads2.rst.inc:39
msgid ""
"The integrity of your Setup will be tested, deppending on your reason to "
"perform the reset this can fail continue with ok anyways"
msgstr "将对您的设置的完整性进行测试，根据您执行重置的原因，这可能会失败，但无论如何都可以继续进行。"

#: ../components/nitropad/factory-reset-heads2.rst.inc:-1
msgid "confirm integrity"
msgstr "确证完整性"

#: ../components/nitropad/factory-reset-heads2.rst.inc:44
msgid ""
"The following Question can all be answered with the Default. Just hit "
"enter if you only want to reset your device."
msgstr "以下问题都可以用默认值来回答。如果您只想重置设备，只需点击回车键即可。"

#: ../components/nitropad/factory-reset-heads2.rst.inc:91
msgid "It will show the Default GPG PINS and TPM Password"
msgstr "它将显示默认 GPG PINS 和 TPM 密码"

#: ../components/nitropad/factory-reset-heads2.rst.inc:-1
msgid "defaults"
msgstr "默认"

#: ../components/nitropad/factory-reset-heads2.rst.inc:96
msgid "confirm the subsequent restart."
msgstr "确认随后的重新启动。"

#: ../components/nitropad/factory-reset-heads2.rst.inc:-1
msgid "otp secrets generate confirm 1"
msgstr "otp 保密生成确认 1"

#: ../components/nitropad/factory-reset-heads2.rst.inc:-1
msgid "otp secrets generate confirm 2"
msgstr "OTP 秘密生成确认 2"

#: ../components/nitropad/factory-reset-heads2.rst.inc:111
msgid "Enter TPM Password (Default: 12345678)"
msgstr "输入 TPM 密码（默认：12345678）"

#: ../components/nitropad/factory-reset-heads2.rst.inc:-1
msgid "tpm password enter"
msgstr "输入 tpm 密码"

#: ../components/nitropad/factory-reset-heads2.rst.inc:116
msgid "Scan QR COde with Phone to inport TOTP Seceret (Optional) and hit Enter"
msgstr "用手机扫描二维码，输入 TOTP Seceret（可选）并点击 Enter"

#: ../components/nitropad/factory-reset-heads2.rst.inc:-1
msgid "qr code totp"
msgstr "QR 码 totp"

#: ../components/nitropad/factory-reset-heads2.rst.inc:122
msgid ""
"When prompted, enter the Admin PIN of your Nitrokey (Default: 12345678) "
"and hit Enter"
msgstr "出现提示时，输入 Nitrokey 的管理密码（默认值：12345678）并点击 Enter"

#: ../components/nitropad/factory-reset-heads2.rst.inc:-1
msgid "admin pin nitrokey input"
msgstr "管理引脚硝基输入"

#: ../components/nitropad/factory-reset-heads2.rst.inc:-1
msgid "start menu"
msgstr "开始菜单"

#: ../components/nitropad/firmware-update.rst.inc:6
msgid "This guide describes how to update the Heads firmware of the NitroPad."
msgstr "本指南介绍如何更新 NitroPad 的 Heads 固件。"

#: ../components/nitropad/firmware-update.rst.inc:8
msgid "These instructions are relevant in the following cases:"
msgstr "这些说明适用于以下情况："

#: ../components/nitropad/firmware-update.rst.inc:10
msgid "You want to update the Heads firmware."
msgstr "您要更新磁头固件。"

#: ../components/nitropad/firmware-update.rst.inc:12
msgid ""
"You have already performed an OEM factory reset, but the TPM counter has "
"not been reset."
msgstr "您已经执行了 OEM 出厂重置，但 TPM 计数器尚未重置。"

#: ../components/nitropad/firmware-update.rst.inc:18
msgid "Connect your NitroPad to a power plug and load its battery to over 70%"
msgstr "将 NitroPad 连接到电源插头，并将电池电量加载到 70% 以上"

#: ../components/nitropad/firmware-update.rst.inc:21
msgid ""
"Download the `latest firmware "
"<https://github.com/Nitrokey/heads/releases/latest>`__ and store it on a "
"USB drive. For the:"
msgstr ""
"下载 \"最新固件 <https://github.com/Nitrokey/heads/releases/latest>`__\"，并将其存储在"
" USB 驱动器中。对于"

#: ../components/nitropad/firmware-update.rst.inc:23
msgid "NitroPad T430: ``firmware-nitropad-t430-[version].npf``"
msgstr "NitroPad T430: ``firmware-nitropad-t430-[version].npf``"

#: ../components/nitropad/firmware-update.rst.inc:24
msgid "NitroPad X230: ``firmware-nitropad-x230-[version].npf``"
msgstr "NitroPad X230: ``firmware-nitropad-x230-[version].npf``"

#: ../components/nitropad/firmware-update.rst.inc:25
msgid "NitroPad NV41: ``firmware-nitropad-nv41-[version].npf``"
msgstr "NitroPad NV41: ``firmware-nitropad-nv41-[version].npf``"

#: ../components/nitropad/firmware-update.rst.inc:26
msgid "NitroPad NS50: ``firmware-nitropad-ns50-[version].npf``"
msgstr "NitroPad NS50: ``firmware-nitropad-ns50-[version].npf``"

#: ../components/nitropad/firmware-update.rst.inc:29
msgid "Firmware Signature Check"
msgstr "固件签名检查"

#: ../components/nitropad/firmware-update.rst.inc:31
msgid "To verify the firmware follow these steps:"
msgstr "要验证固件，请按以下步骤操作："

#: ../components/nitropad/firmware-update.rst.inc:33
msgid ""
"Download  `sha256sum.sig "
"<https://github.com/Nitrokey/heads/releases/latest>`__ and store it"
msgstr ""
"下载 `sha256sum.sig <https://github.com/Nitrokey/heads/releases/latest>`__ "
"并存储它"

#: ../components/nitropad/firmware-update.rst.inc:35
#, python-format
msgid ""
"Download and import Markus Meissners `gpg key "
"<https://keyserver.ubuntu.com/pks/lookup?search=coder%40safemailbox.de&fingerprint=on&op=index>`__"
msgstr ""
"下载并导入 Markus Meissners `gpg key "
"<https://keyserver.ubuntu.com/pks/lookup?search=coder%40safemailbox.de&fingerprint=on&op=index>`__"

#: ../components/nitropad/firmware-update.rst.inc:37
msgid "Verify the signature:"
msgstr "验证签名："

#: ../components/nitropad/firmware-update.rst.inc:44
msgid "You expect an output like this one:"
msgstr "你希望得到这样的输出结果："

#: ../components/nitropad/firmware-update.rst.inc:54
msgid "This verifys the file."
msgstr "这将验证文件。"

#: ../components/nitropad/firmware-update.rst.inc:59
msgid ""
"This is the actual update procedure. Usually the first two screens will "
"not be shown - in that case please start from step 3."
msgstr "这就是实际的更新程序。通常不会显示前两个屏幕，在这种情况下，请从第 3 步开始。"

#: ../components/nitropad/firmware-update.rst.inc:61
#: ../components/nitropad/firmware-update.rst.inc:69
msgid "(Optional screen) Select “Ignore error and continue to default boot menu”."
msgstr "(可选屏幕）选择 \"忽略错误并继续进入默认启动菜单\"。"

#: ../components/nitropad/firmware-update.rst.inc:77
msgid "Go to “Options”."
msgstr "转到 \"选项\"。"

#: ../components/nitropad/firmware-update.rst.inc:84
msgid "Select “Flash/Update the BIOS”."
msgstr "选择 \"闪存/更新 BIOS\"。"

#: ../components/nitropad/firmware-update.rst.inc:91
msgid "Please confirm the first option."
msgstr "请确认第一个选项。"

#: ../components/nitropad/firmware-update.rst.inc:105
msgid "Select the desired .npf file."
msgstr "选择所需的 .npf 文件。"

#: ../components/nitropad/firmware-update.rst.inc:119
msgid "Confirm the restart with Enter."
msgstr "用回车键确认重新启动。"

#: ../components/nitropad/firmware-update.rst.inc:126
msgid "You have successfully updated your firmware!"
msgstr "您已成功更新固件！"

#: ../components/nitropad/firmware-update.rst.inc:129
msgid "Further steps"
msgstr "进一步的步骤"

#: ../components/nitropad/firmware-update.rst.inc:132
msgid ""
"There is a known issue with the NV41 that it can get stuck after the "
"update in the boot splash(heads takes longer then 30s to get up). This "
"solves it self after max 5 restarts (pressing the power button short). If"
" not please contact support@nitrokey.com"
msgstr ""
"NV41 有一个已知的问题，即更新后可能会卡死在启动画面中（启动需要 30 秒以上的时间）。最多重启 5 "
"次（短按电源按钮）后即可自行解决。如果不能解决，请联系 support@nitrokey.com。"

#: ../components/nitropad/firmware-update.rst.inc:134
msgid ""
"In case ``ERROR: TOTP Generation Failed!`` screen will show up, please "
"follow the instructions for Factory Reset (on the left side menu), "
"starting from step"
msgstr ""
"如果出现 \"ERROR: TOTP Generation Failed!\"（错误：TOTP 生成失败！）屏幕，请按照 "
"\"出厂重置\"（在左侧菜单中）的说明从以下步骤开始操作"

#: ../components/nitropad/firmware-update-1.4.rst.inc:2
msgid "Firmware Update v1.4+"
msgstr "固件更新 v1.4+"

#: ../components/nitropad/firmware-update-1.4.rst.inc:6
msgid ""
"Starting with v1.4 due to elementary changes inside Heads and the "
"firmware layout, the update requires some additional considerations. This"
" applies for both NitroPads X230 and T430."
msgstr "从 v1.4 开始，由于 Heads 内部和固件布局的基本变化，更新需要一些额外的注意事项。这适用于 NitroPads X230 和 T430。"

#: ../components/nitropad/firmware-update-1.4.rst.inc:11
msgid "Should I update my NitroPad?"
msgstr "我应该更新我的 NitroPad 吗？"

#: ../components/nitropad/firmware-update-1.4.rst.inc:13
msgid ""
"When updating your firmware to 1.4 (without using an external flasher "
"device) the graphical HEADS dialogues will be replaced with a less "
"convenient text-only version."
msgstr "将固件更新到 1.4 版时（不使用外部闪存设备），图形化 HEADS 对话框将被不太方便的纯文本框取代。"

#: ../components/nitropad/firmware-update-1.4.rst.inc:17
msgid ""
"If you use Ubuntu, Debian, LinuxMint, or Qubes 4.0 updating the firmware "
"beyond v1.3.1 is (as of today) not needed. If you use Qubes 4.1 *without*"
" the integrated Ethernet port, you don't need to update the firmware "
"either."
msgstr ""
"如果您使用的是 Ubuntu、Debian、LinuxMint 或 Qubes 4.0，则无需更新 v1.3.1 "
"之后的固件（截至目前）。如果你使用的 Qubes 4.1 *没有集成以太网端口，也不需要更新固件。"

#: ../components/nitropad/firmware-update-1.4.rst.inc:21
msgid ""
"If you want to use Qubes 4.1 or newer *and* the integrated Ethernet port "
"you need to update the firmware to 1.4."
msgstr "如果要使用 Qubes 4.1 或更新版本*和*集成的以太网端口，则需要将固件升级到 1.4。"

#: ../components/nitropad/firmware-update-1.4.rst.inc:25
msgid ""
"If the `.npf` file is not accepted by HEADS, likely you do not run the "
"latest HEADS version. So either 1st update to version 1.3.1 or `unzip` "
"the `.npf` file and use the resulting `.rom` file instead."
msgstr ""
"如果 HEADS 不接受 \".npf \"文件，很可能是你没有运行最新的 HEADS 版本。因此，要么第 1 次更新到 1.3.1 "
"版，要么解压缩`.npf`文件并使用生成的`.rom`文件。"

#: ../components/nitropad/firmware-update-1.4.rst.inc:31
msgid "How can I update my NitroPad?"
msgstr "如何更新我的 NitroPad？"

#: ../components/nitropad/firmware-update-1.4.rst.inc:33
msgid "Updating from ``v1.3.1`` onwards has two different ways:"
msgstr "从 ``v1.3.1`` 起，有两种不同的更新方式："

#: ../components/nitropad/firmware-update-1.4.rst.inc:35
msgid ""
"Legacy update using either ``nitropad-t430-v1.4.npf`` or "
"``nitropad-x230-v1.4.npf`` from the Heads menu, see: :doc:`firmware-"
"update`"
msgstr ""
"使用 Heads 菜单中的 ``nitropad-t430-v1.4.npf` 或 ``nitropad-x230-v1.4.npf` "
"进行传统更新，请参阅： :doc:`firmware-update` 。"

#: ../components/nitropad/firmware-update-1.4.rst.inc:37
msgid ""
"When using an external flasher device you can use the ``-maximized`` "
"images. This keeps graphical HEADS dialogues working. Read about the "
"external flashing below."
msgstr "使用外部闪存设备时，可以使用 \"最大化 \"图像。这样就能保持图形化 HEADS 对话框正常工作。请阅读以下有关外部闪灯的信息。"

#: ../components/nitropad/firmware-update-1.4.rst.inc:41
msgid ""
"Never try updating your NitroPad using the `-maximized` image, if you do "
"not know exactly what you are doing! You will brick your NitroPad and it "
"can only be repaired using an external flasher!"
msgstr "如果您不知道自己在做什么，千万不要尝试使用 \"最大化 \"镜像更新 NitroPad！您的 NitroPad 将变砖，只能使用外部闪存进行修复！"

#: ../components/nitropad/firmware-update-1.4.rst.inc:47
msgid "How can I update to *-maximized*?"
msgstr "如何更新为*-maximized*？"

#: ../components/nitropad/firmware-update-1.4.rst.inc:50
msgid ""
"We highly recommend to NOT DO THIS ON YOUR OWN, as long as you are not "
"exactly know what you are doing!"
msgstr "我们强烈建议，只要您不清楚自己在做什么，就不要自己动手！"

#: ../components/nitropad/firmware-update-1.4.rst.inc:53
msgid ""
"We have a service to do this upgrade on your NitroPad, please write an "
"e-mail to \"shop at nitrokey.com\" together with your sales order number "
"(SOxxxxxx)."
msgstr ""
"我们为您的 NitroPad 提供升级服务，请发送电子邮件至 \"shop at nitrokey.com\"，并附上您的销售订单号 "
"(SOxxxxxx)。"

#: ../components/nitropad/firmware-update-1.4.rst.inc:56
msgid ""
"The following procedure describes roughly how to flash your NitroPad "
"using an external flasher - it is intentionally on a high level as we do "
"not recommend doing this process on your own. But for the sake of "
"completeness we document this here for the curios."
msgstr "下面的步骤大致描述了如何使用外部闪存对 NitroPad 进行闪存。但为了完整起见，我们在此将其记录下来，供好奇者参考。"

#: ../components/nitropad/firmware-update-1.4.rst.inc:61
msgid ""
"Make sure you have a (``flashrom``) compatible flasher like "
"``ch341a_spi`` with a SOIC-8 clamp."
msgstr "确保您有一个（`flashrom``）兼容的闪存，如带有 SOIC-8 夹子的`ch341a_spi`。"

#: ../components/nitropad/firmware-update-1.4.rst.inc:63
msgid ""
"Open the device (`see coreboot docs "
"<https://doc.coreboot.org/mainboard/lenovo/Ivy_Bridge_series.html>`__) "
"and make sure you can access both flash chips."
msgstr ""
"打开设备（\"参见 coreboot docs "
"<https://doc.coreboot.org/mainboard/lenovo/Ivy_Bridge_series.html>`__），确保可以访问两个闪存芯片。"

#: ../components/nitropad/firmware-update-1.4.rst.inc:66
msgid "Using ``flashrom`` read out the **bottom** flash (the 8MB image)"
msgstr "使用 ``flashrom`` 读出**底部**闪存（8MB 映像）"

#: ../components/nitropad/firmware-update-1.4.rst.inc:68
msgid ""
"Using ``ifdtool`` (`coreboot ifdtool docs "
"<https://doc.coreboot.org/ifdtool/index.html>`__) extract the ``GbE`` "
"flashregion from the image and replace the ``GbE``-region inside your "
"``-maximized`` image."
msgstr ""
"使用 ``ifdtool`` (`coreboot ifdtool docs "
"<https://doc.coreboot.org/ifdtool/index.html>`__)从镜像中提取 ``GbE`` 闪存区域，并在 "
"``maximized`` 镜像中替换 ``GbE` 区域。"

#: ../components/nitropad/firmware-update-1.4.rst.inc:71
msgid ""
"Split the modified firmware image using ``dd`` (as described in the "
"coreboot documentation) into ``-top`` and ``-bottom``"
msgstr "使用 ``dd`` 将修改后的固件映像分割成 ``top`` 和 ``-bottom`` （如 coreboot 文档所述）。"

#: ../components/nitropad/firmware-update-1.4.rst.inc:73
msgid "Flash the images to the matching flash chips using your flasher and clamp"
msgstr "使用闪光灯和夹子将图像闪到匹配的闪存芯片上"

#: ../components/nitropad/firmware-update-1.4.rst.inc:75
msgid ""
"Reboot into your system (you should see ``-maximized`` inside the Heads "
"menu)"
msgstr "重新启动系统（在 \"头部 \"菜单中应看到 \"最大化\"）。"

#: ../components/nitropad/firmware-update-1.4.rst.inc:79
msgid "Background information"
msgstr "背景信息"

#: ../components/nitropad/firmware-update-1.4.rst.inc:81
msgid ""
"The new firmware *class* of ``-maximized`` images change the firmware "
"layout in a way that it is incompatible with Heads' internal firmware "
"upgrade feature on the NitroPads."
msgstr "新固件*类*的 \"最大化 \"图像改变了固件布局，与 Heads 在 NitroPads 上的内部固件升级功能不兼容。"

#: ../components/nitropad/firmware-update-1.4.rst.inc:85
msgid ""
"This change mainly originates from a reduces *Management Engine* size "
"inside the firmware image. Furthermore the ``-maximized`` images do "
"contain all flash regions inside the firmware, this also includes "
"``GbE``, which contains the Ethernet MAC address."
msgstr ""
"这一变化主要源于固件映像中*管理引擎*的大小减小。此外，\"最大化 \"映像确实包含固件内的所有闪存区域，其中也包括包含以太网 MAC 地址的 "
"\"GbE\"。"

#: ../components/nitropad/firmware-update-1.4.rst.inc:90
msgid ""
"The non ``-maximized`` images have no **functional** differences compared"
" to the ``-maximized`` images except of the reduced Heads GUI."
msgstr "与 \"最大化 \"图像相比，非 \"最大化 \"图像除了减少 Heads GUI 外，在功能上没有***差异。"

#: ../components/nitropad/qubes/index.rst:2
msgid "NitroPad with Qubes OS"
msgstr "配备 Qubes 操作系统的 NitroPad"

#: ../components/nitropad/qubes/index.rst:9
#: ../components/nitropad/ubuntu/index.rst:31
msgid ""
"After purchase, the passwords are set to a default value and must be "
"changed by you:"
msgstr "购买后，密码被设置为默认值，您必须自行更改："

#: ../components/nitropad/qubes/index.rst:12
#: ../components/nitropad/ubuntu/index.rst:34
msgid ""
"Press Enter (“Default Boot”) after booting the system, provided the "
"NitroPad has not shown any errors and the Nitrokey is lit green (see "
"above)."
msgstr "启动系统后，如果 NitroPad 未显示任何错误且 Nitrokey 为绿色（见上文），请按 Enter 键（\"默认启动\"）。"

#: ../components/nitropad/qubes/index.rst:16
msgid ""
"Next, the system will prompt you to enter the passphrase to decrypt the "
"hard disk. The passphrase is initially \"12345678\". This was changed on "
"the 15.01.2024 so if \"12345678\" is not working try the old default: "
"\"PleaseChangeMe\""
msgstr ""
"接下来，系统会提示你输入密码来解密硬盘。密码最初为 \"12345678\"。该密码在 15.01.2024 时已更改，因此如果 "
"\"12345678 \"无法使用，请尝试使用旧的默认密码：\"PleaseChangeMe\"。"

#: ../components/nitropad/qubes/index.rst:22
#: ../components/nitropad/ubuntu/index.rst:44
msgid ""
"The system will then guide you through the process of creating a user "
"account. After that you should have successfully booted the system and "
"could already use it normally."
msgstr "然后，系统会引导你完成创建用户账户的过程。之后，你就可以成功启动系统并正常使用了。"

#: ../components/nitropad/qubes/index.rst:26
msgid ""
"Open the pre-installed Nitrokey App and change the PINs of your Nitrokey "
"as `described here <change-pins.html>`_."
msgstr "打开预装的 Nitrokey 应用程序，按照\"<change-pins.html>\"中的说明更改 Nitrokey 密码。"

#: ../components/nitropad/qubes/index.rst:29
msgid ""
"Change the passphrase for the hard disk encryption by searching in the "
"Qubes Menu for \"Change Disk Passwort\". This passphrase is different "
"from your user acount's passphrase."
msgstr "在 Qubes 菜单中选择 \"更改磁盘密码\"，更改硬盘加密的密码。该密码与用户账户密码不同。"

#: ../components/nitropad/qubes/network-settings.rst:2
msgid "Enable Network Settings, e.g. Wifi"
msgstr "启用网络设置，如 Wifi"

#: ../components/nitropad/qubes/network-settings.rst:4
msgid ""
"To be able to use Wifi, Bluetooth and other functionalities, \"Settings\""
" must be activated in \"sys-net\"."
msgstr "要使用 Wifi、蓝牙和其他功能，必须在 \"系统网络 \"中激活 \"设置\"。"

#: ../components/nitropad/qubes/network-settings.rst:7
msgid "Click on the top left Qubes Icon and select Qubes:Settings under sys-net."
msgstr "点击左上角的 Qubes 图标，选择系统网下的 Qubes:设置。"

#: ../components/nitropad/qubes/network-settings.rst:12
msgid ""
"Go to Applications, select \"Settings\" and click \">\" to move it to the"
" right side."
msgstr "进入应用程序，选择 \"设置\"，然后点击\">\"将其移到右侧。"

#: ../components/nitropad/qubes/network-settings.rst:13
msgid "Click \"Apply\" and after wards \"Ok\"."
msgstr "点击 \"应用\"，然后点击 \"确定\"。"

#: ../components/nitropad/qubes/network-settings.rst:14
msgid "Now you should have \"Settings\" visible under sys-net."
msgstr "现在，在 sys-net 下应该可以看到 \"设置\"。"

#: ../components/nitropad/qubes/network-settings.rst:18
msgid ""
"If it won't open Settings after clicking on it, please follow the "
"instructions below."
msgstr "如果点击后无法打开 \"设置\"，请按照以下说明操作。"

#: ../components/nitropad/qubes/network-settings.rst:21
msgid "Fix sys-net Settings"
msgstr "修复系统网设置"

#: ../components/nitropad/qubes/network-settings.rst:23
msgid "Go to the sys-net Terminal."
msgstr "转到 sys-net 终端。"

#: ../components/nitropad/qubes/network-settings.rst:24
msgid "Open the bashrc-file with ``sudo vim ~/.bashrc``."
msgstr "用 ``sudo vim ~/.bashrc`` 打开 bashrc 文件。"

#: ../components/nitropad/qubes/network-settings.rst:29
msgid ""
"Press \"i\" to enable the editing and add ``export "
"XDG_CURRENT_DESKTOP=GNOME`` to the file."
msgstr "按 \"i \"键启用编辑，并在文件中添加 ``export XDG_CURRENT_DESKTOP=GNOME``。"

#: ../components/nitropad/qubes/network-settings.rst:34
msgid "Save the changes with ``:wq``."
msgstr "用 ``:wq`` 保存更改。"

#: ../components/nitropad/qubes/network-settings.rst:35
msgid "Restart your NitroPad."
msgstr "重新启动 NitroPad。"

#: ../components/nitropad/qubes/network-settings.rst:36
msgid "Now Settings should be visible."
msgstr "现在应该可以看到 \"设置 \"了。"

#: ../components/nitropad/qubes/nitrokey-app.rst:2
#: ../components/nitropad/ubuntu/nitrokey-app.rst:2
#: ../components/nitropc/ubuntu/nitrokey-app.rst:2
msgid "Nitrokey App Installation"
msgstr "安装 Nitrokey 应用程序"

#: ../components/nitropad/qubes/nitrokey-app.rst:5
msgid ""
"Most of the time the app is already pre installed. You simply need to "
"press the button \"refresh applications\" under the sys-usb settings (see"
" picture point 7), if the app don't show up in the menu."
msgstr "大多数情况下，应用程序已经预先安装。如果应用程序没有显示在菜单中，只需按下系统 USB 设置下的 \"刷新应用程序 \"按钮（见图 7）即可。"

#: ../components/nitropad/qubes/nitrokey-app.rst:8
msgid ""
"Set in the \"Qubes Settings\" of sys-usb \"Networking\" to default and "
"\"Apply\" the changes."
msgstr ""
"将 sys-usb 的 \"Qubes Settings（Qubes 设置）\"中的 \"Networking（网络）\"设置为默认值，然后 "
"\"Apply（应用）\"更改。"

#: ../components/nitropad/qubes/nitrokey-app.rst:14
msgid ""
"Set in the \"Qubes Settings\" of fedora template \"Networking\" to "
"default and \"Apply\" the changes."
msgstr "在 fedora 模板的 \"Qubes 设置 \"中将 \"网络 \"设为默认，然后 \"应用 \"更改。"

#: ../components/nitropad/qubes/nitrokey-app.rst:19
msgid ""
"Open the terminal of the fedora template and run ``sudo dnf install "
"nitrokey-app``."
msgstr "打开 fedora 模板的终端，运行 ``sudo dnf install nitrokey-app``。"

#: ../components/nitropad/qubes/nitrokey-app.rst:24
msgid "Shut down the template."
msgstr "关闭模板。"

#: ../components/nitropad/qubes/nitrokey-app.rst:26
msgid "Restart all qubes based on the template."
msgstr "根据模板重新启动所有 qubes。"

#: ../components/nitropad/qubes/nitrokey-app.rst:28
msgid "Go to \"Application\" of sys-usb and select the Nitrokey App."
msgstr "进入 sys-usb 的 \"应用程序\"，选择 Nitrokey 应用程序。"

#: ../components/nitropad/qubes/nitrokey-app.rst:33
msgid ""
"Click the arrow pointing to the right side to move it to the shortcuts "
"and \"Apply\" the changes."
msgstr "单击指向右侧的箭头，将其移动到快捷方式上，然后 \"应用 \"更改。"

#: ../components/nitropad/qubes/nitrokey-app.rst:38
msgid "Now you can access the Nitrokey App by clicking on sys-usb."
msgstr "现在点击 sys-usb，即可访问 Nitrokey 应用程序。"

#: ../components/nitropad/os-reinstallation.rst.inc:2
#: ../components/nitropc/os-reinstallation.rst.inc:2
msgid "Operating System Reinstallation"
msgstr "重新安装操作系统"

#: ../components/nitropad/os-reinstallation.rst.inc:8
#: ../components/nitropad/os-reinstallation.rst.inc:47
#: ../components/nitropc/os-reinstallation.rst.inc:9
msgid ""
"Booting this USB drive entirely erases all data on the hard disk or SSD "
"of the NitroPad without further warning. Don’t boot this USB drive on any"
" computer which contains data you want to keep. Make sure to format the "
"USB drive after the intended use."
msgstr ""
"启动该 USB 驱动器会完全删除 NitroPad "
"硬盘或固态硬盘上的所有数据，且不会发出进一步警告。请勿在包含您希望保留的数据的任何计算机上启动该 USB 驱动器。确保在使用后格式化 USB "
"驱动器。"

#: ../components/nitropad/os-reinstallation.rst.inc:15
msgid ""
"Due to a bug Linux Mint 21 is currently not supported. The latest "
"supported version is Linux Mint 20.1"
msgstr "由于一个错误，Linux Mint 21 目前不支持。最新支持的版本是 Linux Mint 20.1"

#: ../components/nitropad/os-reinstallation.rst.inc:17
msgid ""
"Download one of the operating system images: `Ubuntu Linux "
"<https://www.nitrokey.com/files/ci/ubuntu/>`__, `Qubes OS "
"<https://www.nitrokey.com/files/ci/qubes/>`__, `Debian "
"<https://www.nitrokey.com/files/ci/nitropad/debian-oem/>`__, `Linux Mint "
"<https://linuxmint.com/download.php>`__"
msgstr ""
"下载其中一个操作系统映像：`Ubuntu Linux "
"<https://www.nitrokey.com/files/ci/ubuntu/>`__, `Qubes OS "
"<https://www.nitrokey.com/files/ci/qubes/>`__, `Debian "
"<https://www.nitrokey.com/files/ci/nitropad/debian-oem/>`__, `Linux Mint "
"<https://linuxmint.com/download.php>`__"

#: ../components/nitropad/os-reinstallation.rst.inc:22
#: ../components/nitropc/os-reinstallation.rst.inc:18
msgid ""
"Optional: Download hash sum and `verify <https://proprivacy.com/guides"
"/how-why-and-when-you-should-hash-check#how-to-hash-check>`__ the "
"downloaded operating system image."
msgstr ""
"可选：下载散列和并 \"验证 <https://proprivacy.com/guides/how-why-and-when-you-"
"should-hash-check#how-to-hash-check>`__ 下载的操作系统映像。"

#: ../components/nitropad/os-reinstallation.rst.inc:26
#: ../components/nitropc/os-reinstallation.rst.inc:22
msgid "Write the operating system image to any USB drive. Possible applications:"
msgstr "将操作系统映像写入任何 USB 驱动器。可能的应用"

#: ../components/nitropad/os-reinstallation.rst.inc:29
#: ../components/nitropc/os-reinstallation.rst.inc:25
msgid ""
"Windows: `Rufus <https://rufus.ie/>`__, `balenaEtcher "
"<https://www.balena.io/etcher/>`__;"
msgstr ""
"Windows：`Rufus <https://rufus.ie/>`__，`balenaEtcher "
"<https://www.balena.io/etcher/>`__；"

#: ../components/nitropad/os-reinstallation.rst.inc:31
#: ../components/nitropc/os-reinstallation.rst.inc:27
msgid "Linux: ``dd``, `balenaEtcher <https://www.balena.io/etcher/>`__;"
msgstr "Linux: ``dd``, `balenaEtcher <https://www.balena.io/etcher/>`__；"

#: ../components/nitropad/os-reinstallation.rst.inc:32
#: ../components/nitropc/os-reinstallation.rst.inc:28
msgid "macOS: ``dd``, `balenaEtcher <https://www.balena.io/etcher/>`__."
msgstr "macOS：``dd``，`balenaEtcher <https://www.balena.io/etcher/>`__。"

#: ../components/nitropad/os-reinstallation.rst.inc:34
msgid ""
"Connect the USB drive to your NitroPad and start it. In Heads menu select"
" Boot Options -> USB Boot."
msgstr ""
"将 USB 驱动器连接到 NitroPad 并启动它。在 Heads（头部）菜单中选择 Boot Options（启动选项）-> USB "
"Boot（USB 启动）。"

#: ../components/nitropad/os-reinstallation.rst.inc:37
#: ../components/nitropc/os-reinstallation.rst.inc:38
msgid ""
"Depending on the operating system you may need to confirm its "
"reinstallation."
msgstr "根据操作系统的不同，您可能需要确认重新安装。"

#: ../components/nitropad/os-reinstallation.rst.inc:40
msgid "`Sign the boot partition. <system-update.html>`_"
msgstr "签署引导分区。 <system-update.html>`_"

#: ../components/nitropad/os-reinstallation.rst.inc:43
#: ../components/nitropc/os-reinstallation.rst.inc:41
msgid ""
"To avoid accidential overwriting of valuable data, format the USB drive "
"afterwards."
msgstr "为避免意外覆盖有价值的数据，请在事后格式化 USB 驱动器。"

#: ../components/nitropad/sealed-hardware.rst.inc:6
msgid ""
"If you ordered your NitroPad with sealed screws and in a sealed bag, it "
"allows you to check if the NitroPad has been tampered with during "
"shipping."
msgstr "如果您订购的 NitroPad 带有密封螺丝并装在密封袋中，则可以检查 NitroPad 在运输过程中是否被篡改。"

#: ../components/nitropad/sealed-hardware.rst.inc:8
msgid ""
"The bag and all screws on the bottom of the device have been sealed. For "
"the bag and each of these screws you have received a photo by e-mail. The"
" orientation of the photos is such that the battery is on top."
msgstr "包装袋和设备底部的所有螺丝均已密封。您已通过电子邮件收到有关包装袋和每个螺丝的照片。照片的方向是电池在上面。"

#: ../components/nitropad/sealed-hardware.rst.inc:10
msgid ""
"Check each screw individually to see if its individual appearance matches"
" the photo. It is best to use a magnifying glass or macro lens for this "
"purpose. The screws are numbered as follows."
msgstr "逐个检查每个螺丝的外观是否与照片相符。为此最好使用放大镜或微距镜头。螺丝编号如下。"

#: ../components/nitropad/sealed-hardware.rst.inc:14
msgid "Nitropad NV41:"
msgstr "Nitropad NV41："

#: ../components/nitropad/sealed-hardware.rst.inc
msgid "NV41"
msgstr "NV41"

#: ../components/nitropad/sealed-hardware.rst.inc:19
msgid "Nitropad NS50:"
msgstr "Nitropad NS50："

#: ../components/nitropad/sealed-hardware.rst.inc
msgid "NS50"
msgstr "NS50"

#: ../components/nitropad/sealed-hardware.rst.inc:24
msgid "NitroPad X230:"
msgstr "NitroPad X230"

#: ../components/nitropad/sealed-hardware.rst.inc
msgid "X230"
msgstr "X230"

#: ../components/nitropad/sealed-hardware.rst.inc:29
msgid "NitroPad T430:"
msgstr "NitroPad T430"

#: ../components/nitropad/sealed-hardware.rst.inc
msgid "T430"
msgstr "T430"

#: ../components/nitropad/sealed-hardware.rst.inc:35
#: ../components/nitropc/sealed-hardware.rst.inc:15
msgid ""
"This example shows a sealed screw whose glitter represents an individual "
"pattern."
msgstr "该示例显示了一个密封螺钉，其闪光代表了一个单独的图案。"

#: ../components/nitropad/sealed-hardware.rst.inc
#: ../components/nitropc/sealed-hardware.rst.inc
#: ../components/pro/linux/index.rst:-1 ../components/pro/mac/index.rst:-1
#: ../components/pro/windows/index.rst:-1
msgid "img"
msgstr "图像"

#: ../components/nitropad/sealed-hardware.rst.inc:42
msgid ""
"If the bag or the screws do not match the photos sent, an unauthorized "
"opening of your NitroPad cannot be excluded. In this case please contact "
"us to arrange further action."
msgstr "如果包装袋或螺丝与发送的照片不符，则不能排除您的 NitroPad 在未经授权的情况下被打开。在这种情况下，请联系我们安排进一步的行动。"

#: ../components/nitropad/system-update.rst.inc:2
msgid "System update"
msgstr "系统更新"

#: ../components/nitropad/system-update.rst.inc:6
msgid ""
"The NitroPad watches for changes to important system files to detect "
"third-party tampering. This means that special steps are sometimes "
"necessary when updating the system. This can often be recognized by the "
"fact that the system prompts you to reboot."
msgstr "NitroPad 会监控重要系统文件的更改，以检测第三方篡改。这意味着更新系统时有时需要采取特殊步骤。这通常可以通过系统提示您重新启动来识别。"

#: ../components/nitropad/system-update.rst.inc:9
msgid "Procedure After a System Update"
msgstr "系统更新后的步骤"

#: ../components/nitropad/system-update.rst.inc:12
msgid "Boot Hash Mismatch"
msgstr "引导哈希值不匹配"

#: ../components/nitropad/system-update.rst.inc:14
msgid ""
"If you restart the NitroPad after an update, the startup screen should "
"initially appear as usual without an error message."
msgstr "如果在更新后重新启动 NitroPad，启动屏幕最初应与往常一样显示，而不会出现错误信息。"

#: ../components/nitropad/system-update.rst.inc:22
msgid ""
"If you press Enter afterwards, you will get an error message that looks "
"like this or similar:"
msgstr "如果之后按回车键，就会收到类似这样的错误信息："

#: ../components/nitropad/system-update.rst.inc:30
msgid ""
"Confirm the message with Enter to have the files changed by the system "
"update verified. Afterwards you will be asked again for a confirmation."
msgstr "用 Enter 确认信息，以验证系统更新所更改的文件。之后会再次要求您确认。"

#: ../components/nitropad/system-update.rst.inc:39
msgid ""
"Now insert the Nitrokey if this is not already the case and confirm with "
"Enter. Then you must enter the User PIN of the Nitrokey (default: "
"123456). You will not see the characters you typed in on the screen."
msgstr ""
"现在插入 Nitrokey（如果尚未插入），并用 Enter 加以确认。然后输入 Nitrokey 的用户密码（默认为 "
"123456）。在屏幕上看不到您输入的字符。"

#: ../components/nitropad/system-update.rst.inc:45
#: ../components/nitropad/system-update.rst.inc:101
#, fuzzy
msgid ""
"Heads expects an English keyboard layout, on which e.g. “y” and “z” are "
"swapped in comparison to the German keyboard layout. If you agree with "
"the default selection (which is written in capital letter) you can also "
"simply confirm by pressing Enter."
msgstr ""
"Heads 希望使用英语键盘布局，例如，与德语键盘布局相比，\"y \"和 \"z "
"\"会对调。如果您同意默认选择（以大写字母书写），也可以直接按回车键确认。"

#: ../components/nitropad/system-update.rst.inc:61
msgid "Now the NitroPad marks the files changed by the update as verified."
msgstr "现在，NitroPad 会将更新更改的文件标记为已验证。"

#: ../components/nitropad/system-update.rst.inc:64
msgid "Boot Entry Has Changed"
msgstr "引导条目已更改"

#: ../components/nitropad/system-update.rst.inc:66
msgid ""
"Next, either another error message appears or the operating system "
"starts. This depends on the system update. If the following error message"
" appears, proceeds as described below:"
msgstr "接下来，要么出现另一条错误信息，要么操作系统启动。这取决于系统更新。如果出现以下错误信息，请按以下步骤操作："

#: ../components/nitropad/system-update.rst.inc:75
msgid ""
"First confirm the error message shown above. Then we see a list of all "
"possible boat entries - choose the first one by simply pressing Enter."
msgstr "首先确认上面显示的错误信息。然后，我们会看到所有可能的船只条目列表，只需按 Enter 键即可选择第一个条目。"

#: ../components/nitropad/system-update.rst.inc:84
msgid ""
"To save this value as default, select the option “Make Ubuntu the "
"default” for Ubuntu or “Make Qubes the default” for Qubes OS in the next "
"window."
msgstr ""
"要将该值保存为默认值，请在下一个窗口中为 Ubuntu 选择 \"Make Ubuntu the default（将 Ubuntu "
"设为默认值）\"选项，或为 Qubes OS 选择 \"Make Qubes the default（将 Qubes 设为默认值）\"选项。"

#: ../components/nitropad/system-update.rst.inc:93
msgid "Now the Nitrokey has to be plugged in, if this is not yet the case."
msgstr "现在，如果还没有插入 Nitrokey，则必须插入。"

#: ../components/nitropad/system-update.rst.inc:95
msgid "Confirm the question \"Saving a default will modify the disk\" with Y."
msgstr "用 Y 确认 \"保存默认值会修改磁盘\"。"

#: ../components/nitropad/system-update.rst.inc:96
msgid ""
"Confirm the question \"Do you wish to add a disk encryption to the TPM\" "
"with N."
msgstr "在 \"您是否希望为 TPM 添加磁盘加密 \"问题中确认 N。"

#: ../components/nitropad/system-update.rst.inc:97
msgid ""
"Confirm the question \"Please confirm that your GPG card is inserted\" "
"with Y."
msgstr "在问题 \"请确认您的 GPG 卡已插入 \"中用 Y 加以确认。"

#: ../components/nitropad/system-update.rst.inc:98
msgid "Enter the User PIN of the Nitrokey whenever prompted (default: 123456)."
msgstr "根据提示输入 Nitrokey 的用户密码（默认值：123456）。"

#: ../components/nitropad/troubleshooting.rst.inc:17
msgid "Starting in recovery shell"
msgstr "从恢复外壳开始"

#: ../components/nitropad/troubleshooting.rst.inc:19
msgid ""
"If your OS doesn’t boot as shown below, please execute the following "
"steps:"
msgstr "如果操作系统无法按下图启动，请执行以下步骤："

#: ../components/nitropad/troubleshooting.rst.inc:32
msgid "Restart your Laptop and go to Options."
msgstr "重新启动笔记本电脑并进入选项。"

#: ../components/nitropad/troubleshooting.rst.inc:37
msgid "Select “Update Checksums and sign all files on /boot”."
msgstr "选择 \"更新校验和并签署 /boot 上的所有文件\"。"

#: ../components/nitropad/troubleshooting.rst.inc:42
msgid ""
"After that, please follow `these instructions <system-update.html>`_ from"
" step 3 onwards."
msgstr "之后，请从第 3 步开始按照 \"这些说明 <system-update.html>`_\" 进行操作。"

#: ../components/nitropad/troubleshooting.rst.inc:45
msgid "NitroPad doesn’t start"
msgstr "NitroPad 无法启动"

#: ../components/nitropad/troubleshooting.rst.inc:47
msgid ""
"If the Laptop does not start and only flashes briefly when switched on, "
"please try the following steps:"
msgstr "如果笔记本电脑无法启动，而且开机后只是短暂闪烁，请尝试以下步骤："

#: ../components/nitropad/troubleshooting.rst.inc:50
msgid ""
"Try a hard reboot: Remove the power supply and battery and press and hold"
" the power button for 20 seconds. Then reconnect the power supply and "
"battery and start."
msgstr "尝试硬重启：拔下电源和电池，按住电源按钮 20 秒钟。然后重新连接电源和电池并启动。"

#: ../components/nitropad/troubleshooting.rst.inc:54
msgid ""
"If this did not work: Remove the battery or start only with the power "
"supply connected."
msgstr "如果无效：取下电池或仅在连接电源的情况下启动。"

#: ../components/nitropad/troubleshooting.rst.inc:57
msgid "You could also try removing the RAMs and reinserting them."
msgstr "您也可以尝试卸下内存，然后重新安装。"

#: ../components/nitropad/troubleshooting.rst.inc:60
msgid "Invalid Code"
msgstr "无效代码"

#: ../components/nitropad/troubleshooting.rst.inc:62
#, fuzzy
msgid ""
"Each boot the code is generated on the Nitropad and the Nitrokey, if its "
"connected. It is allowed to run 10 boots without loosing the "
"synchronization between the devices, after which the bad code signal is "
"shown, regardless of the rest of the system being in a correct state. If "
"you are sure the system was not beign tampered with (e.g. the Nitropad "
"was booted more than 10 times without the Nitrokey), you can safely reset"
" the system’s warning."
msgstr ""
"每次启动时，代码都会在 Nitropad 和 Nitrokey（如果已连接）上生成。在不失去设备间同步的情况下，允许运行 10 "
"次启动，之后无论系统其他部分是否处于正确状态，都会显示坏代码信号。如果确定系统未被篡改（例如，在没有 Nitrokey 的情况下启动 "
"Nitropad 超过 10 次），则可以安全地重置系统警告。"

#: ../components/nitropad/troubleshooting.rst.inc:70
msgid ""
"Please connect the Nitrokey and execute the following from the main boot "
"screen:"
msgstr "请连接 Nitrokey 并在主启动屏幕上执行以下操作："

#: ../components/nitropad/troubleshooting.rst.inc:73
msgid "Options"
msgstr "选项"

#: ../components/nitropad/troubleshooting.rst.inc:74
msgid "TPM/TOTP/HOTP Options"
msgstr "TPM/TOTP/HOTP 选项"

#: ../components/nitropad/troubleshooting.rst.inc:75
msgid "Generate new TOTP/HOTP secret"
msgstr "生成新的 TOTP/HOTP 密码"

#: ../components/nitropad/troubleshooting.rst.inc:77
msgid ""
"and follow the on-screen guide. After that the secret and counter should "
"be both reset to a new value."
msgstr "并按照屏幕上的提示操作。之后，密文和计数器都应重置为新值。"

#: ../components/nitropad/qubes/user-password-reset.rst:2
msgid "User Password Reset"
msgstr "重置用户密码"

#: ../components/nitropad/qubes/user-password-reset.rst:4
msgid "Follow the next five steps to boot from the installation media"
msgstr "按照接下来的五个步骤从安装介质启动"

#: ../components/nitropad/qubes/user-password-reset.rst
msgid "Step 1"
msgstr "步骤 1"

#: ../components/nitropad/qubes/user-password-reset.rst
msgid "Step 2"
msgstr "步骤 2"

#: ../components/nitropad/qubes/user-password-reset.rst
msgid "Step 3"
msgstr "步骤 3"

#: ../components/nitropad/qubes/user-password-reset.rst
msgid "Step 4"
msgstr "步骤 4"

#: ../components/nitropad/qubes/user-password-reset.rst
msgid "Step 5"
msgstr "步骤 5"

#: ../components/nitropad/qubes/user-password-reset.rst:21
msgid ""
"In the rescue shell, type: `cryptsetup open /dev/sda3 qubes` or "
"`cryptsetup open /dev/nvme0n1p3 qubes` to unlock the encrypted root drive"
msgstr ""
"在应急外壳中键入cryptsetup open /dev/sda3 qubes` 或 `cryptsetup open "
"/dev/nvme0n1p3 qubes` 以解锁加密的根驱动器"

#: ../components/nitropad/qubes/user-password-reset.rst:23
msgid "Mount the root drive `mount /dev/mapper/qubes_dom0-root /mnt`"
msgstr "挂载根驱动器 `mount /dev/mapper/qubes_dom0-root /mnt`"

#: ../components/nitropad/qubes/user-password-reset.rst:25
msgid "Change root to it `chroot /mnt`"
msgstr "将 root 更改为 `chroot /mnt`"

#: ../components/nitropad/qubes/user-password-reset.rst:27
msgid "Change the password `passwd user` (where \"user\" is your Qubes login)"
msgstr "更改密码 \"passwd user\"（其中 \"user \"为 Qubes 登录名）"

#: ../components/nitropad/qubes/user-password-reset.rst:28
msgid "Type in a new password and confirm"
msgstr "输入新密码并确认"

#: ../components/nitropad/qubes/user-password-reset.rst:29
msgid "Type `exit` to exit the chroot"
msgstr "输入 `exit` 退出 chroot"

#: ../components/nitropad/qubes/user-password-reset.rst:30
msgid "Type `reboot` and then boot as usal without the installation medium"
msgstr "键入 \"reboot\"（重新启动），然后以普通方式启动，不使用安装介质"

#: ../components/nitropad/ubuntu/change-disk-encryption-passphrase.rst:2
msgid "Change Disk Encryption Passphrase"
msgstr "更改磁盘加密口令"

#: ../components/nitropad/ubuntu/change-disk-encryption-passphrase.rst:4
msgid ""
"To change the passphrase for disk encryption, first click on “Activities”"
" in the upper left corner and enter “disk” in the search bar. Then select"
" the “Disks” program that appears in the middle of the screen."
msgstr "要更改磁盘加密的密码，首先点击左上角的 \"活动\"，然后在搜索栏中输入 \"磁盘\"。然后选择屏幕中间出现的 \"磁盘 \"程序。"

#: ../components/nitropad/ubuntu/change-disk-encryption-passphrase.rst:14
msgid ""
"Select the field that says “Luks”. Afterwards it should have an orange "
"background."
msgstr "选择 \"Luks \"字段。之后，它就会变成橙色背景。"

#: ../components/nitropad/ubuntu/change-disk-encryption-passphrase.rst:22
msgid ""
"Left click on the gears and select “Change Passphrase” from the context "
"menu."
msgstr "左键单击齿轮，从上下文菜单中选择 \"更改密码\"。"

#: ../components/nitropad/ubuntu/change-disk-encryption-passphrase.rst:30
msgid ""
"Enter \"12345678\" this was changed on the 10.04.2024 so if it's not "
"working try the old default: \"PleaseChangeMe\" as the current passphrase"
" and select a secure new one."
msgstr ""
"输入 \"12345678\"，10.04.2024 "
"版本对该密码进行了更改，因此如果无法使用，请尝试使用旧的默认密码：\"PleaseChangeMe \"作为当前密码，然后选择一个安全的新密码。"

#: ../components/nitropad/ubuntu/change-disk-encryption-passphrase.rst:38
msgid "Enter the your account password."
msgstr "输入您的账户密码。"

#: ../components/nitropad/ubuntu/index.rst:2
msgid "NitroPad with Ubuntu Linux"
msgstr "使用 Ubuntu Linux 的 NitroPad"

#: ../components/nitropad/ubuntu/index.rst:7
msgid "Workaround Ubuntu 24.04."
msgstr "解决方法 Ubuntu 24.04."

#: ../components/nitropad/ubuntu/index.rst:9
msgid ""
"There is an (`issue "
"<https://github.com/linuxboot/heads/issues/1641>`__)that prevents Ubuntu "
"to show the luks decryption screen if started with heads. Its there and "
"you can type in your password blindly, after that Ubuntu starts normal. "
"Follow these Steps:"
msgstr ""
"有一个（\"问题 <https://github.com/linuxboot/heads/issues/1641>`___\"）可以阻止 "
"Ubuntu 在用 \"头 \"启动时显示 luks 解密屏幕。有了它，你就可以盲打密码，之后 Ubuntu 就会正常启动。请按照以下步骤操作："

#: ../components/nitropad/ubuntu/index.rst:12
msgid "Heads starts. If nothing needs to be done, Ubuntu will start automatically"
msgstr "头部启动。如果不需要做任何事情，Ubuntu 会自动启动"

#: ../components/nitropad/ubuntu/index.rst:14
msgid ""
"After a while, you will see a black screen with white writing on the last"
" lines:"
msgstr "过一会儿，您会看到一个黑色屏幕，最后一行写着白色文字："

#: ../components/nitropad/ubuntu/index.rst:22
msgid "These lines indicate that Ubuntu is starting."
msgstr "这几行表示 Ubuntu 正在启动。"

#: ../components/nitropad/ubuntu/index.rst:24
msgid ""
"Wait **5 seconds** and then enter your **password** (\"12345678\" if you "
"are starting it for the first time) followed by **Enter**."
msgstr "等待**5 秒**，然后输入您的**密码**（如果是第一次启动，则输入 \"12345678\"），然后**回车**。"

#: ../components/nitropad/ubuntu/index.rst:26
msgid ""
"Now you will see the normal Ubuntu screen. When you start for the first "
"time, you must complete the initial configuration."
msgstr "现在，你将看到 Ubuntu 的正常界面。首次启动时，必须完成初始配置。"

#: ../components/nitropad/ubuntu/index.rst:38
msgid ""
"Next, the system will prompt you to enter the passphrase to decrypt the "
"hard disk. The passphrase is initially \"12345678\". This was changed on "
"the 10.04.2024 so if \"12345678\" is not working try the old default: "
"\"PleaseChangeMe\""
msgstr ""
"接下来，系统会提示你输入密码来解密硬盘。密码最初为 \"12345678\"。10.04.2024 版本对此进行了更改，因此如果 "
"\"12345678 \"不起作用，请尝试使用旧的默认值：\"PleaseChangeMe\"。"

#: ../components/nitropad/ubuntu/index.rst:48
msgid ""
"Open the pre-installed Nitrokey App and change the PINs of your Nitrokey."
" To learn more about how to change the PINs, please refer to chapter "
"`Change User and Admin PIN <change-pins.html>`_."
msgstr ""
"打开预装的 Nitrokey App 并更改 Nitrokey 的 PIN 码。要进一步了解如何更改 PIN 码，请参阅 \"更改用户和管理 "
"PIN 码 <change-pins.html>`_\" 章节。"

#: ../components/nitropad/ubuntu/index.rst:51
msgid ""
"Change the passphrase for disk encryption. To learn more about how to "
"change the passphrase for disk encryption, please refer to chapter "
"`Change Disk Encryption Passphrase <change-disk-encryption-"
"passphrase.html>`_. This passphrase is different from your user acount's "
"passphrase."
msgstr ""
"更改磁盘加密口令。要进一步了解如何更改磁盘加密口令，请参阅 \"更改磁盘加密口令 <change-disk-encryption-"
"passphrase.html>`_\" 章节。该口令与用户账户的口令不同。"

#: ../components/nitropad/ubuntu/nitrokey-app.rst:4
#: ../components/nitropc/ubuntu/nitrokey-app.rst:4
msgid ""
"The Nitrokey App is included in Ubuntu's repositories since Ubuntu 18.04 "
"(codename 'bionic') on. You can just install it via Software Center or by"
" typing the following in a terminal:"
msgstr ""
"从 Ubuntu 18.04（代号 \"仿生\"）开始，Nitrokey 应用程序就包含在 Ubuntu "
"的软件源中了。你可以通过软件中心或在终端中输入以下命令安装它："

#: ../components/nitropad/ubuntu/nitrokey-app.rst:14
#: ../components/nitropc/ubuntu/nitrokey-app.rst:14
msgid ""
"Unfortunately, the App versions in the official Ubuntu repositories are "
"often not up-to-date."
msgstr "遗憾的是，Ubuntu 官方软件仓库中的应用程序版本往往不是最新的。"

#: ../components/nitropad/ubuntu/nitrokey-app.rst:17
#: ../components/nitropc/ubuntu/nitrokey-app.rst:17
msgid "More recent App versions"
msgstr "最新的应用程序版本"

#: ../components/nitropad/ubuntu/nitrokey-app.rst:19
#: ../components/nitropc/ubuntu/nitrokey-app.rst:19
msgid ""
"To get the most recent Nitrokey App you can add a separate repository "
"which is maintained by Nitrokey."
msgstr "要获取最新的 Nitrokey 应用程序，你可以添加一个由 Nitrokey 维护的独立软件源。"

#: ../components/nitropad/ubuntu/nitrokey-app.rst:21
#: ../components/nitropc/ubuntu/nitrokey-app.rst:21
msgid ""
"Please execute the following in a terminal to add the repository and "
"install the Nitrokey App:"
msgstr "请在终端执行以下操作，添加软件源并安装 Nitrokey 应用程序："

#: ../components/nitropad/ubuntu/nitrokey-app.rst:25
#: ../components/nitropc/ubuntu/nitrokey-app.rst:25
msgid ""
"The PPA is not necessary for Ubuntu 22.04 and later. The previous "
"versions of Ubuntu could still use it to update the app."
msgstr "Ubuntu 22.04 及更高版本不需要 PPA。以前版本的 Ubuntu 仍可使用它来更新应用程序。"

#: ../components/nitropad/ubuntu/nitrokey-app.rst:36
#: ../components/nitropc/ubuntu/nitrokey-app.rst:36
msgid ""
"Alternatively, you can use the snap package. Please see `here "
"<https://www.nitrokey.com/download/snap-package>`__ for more information."
msgstr ""
"或者，您也可以使用 snap 软件包。更多信息请参见 `此处 <https://www.nitrokey.com/download/snap-"
"package>`__。"

#: ../components/nitropc/debian/index.rst:2
msgid "NitroPC with Debian"
msgstr "使用 Debian 的 NitroPC"

#: ../components/nitropc/debian/index.rst:16
msgid ""
"During boot, the system will prompt you to enter the passphrase to "
"decrypt the hard disk. Enter the default passphrase “PleaseChangeMe”."
msgstr "在启动过程中，系统将提示您输入密码以解密硬盘。请输入默认密码 \"PleaseChangeMe\"。"

#: ../components/nitropc/debian/index.rst:19
msgid ""
"The system has a user account setup already. Choose it and login with the"
" default passphrase \"PleaseChangeMe\". You may keep using the existing "
"user account or create you a new one, as you like."
msgstr "系统已经设置了一个用户账户。选择它并使用默认密码 \"PleaseChangeMe \"登录。您可以继续使用现有的用户账户，也可以创建一个新账户。"

#: ../components/nitropc/debian/index.rst:22
#: ../components/nitropc/ubuntu/index.rst:22
msgid ""
"Change the passphrase for disk encryption by opening a terminal and "
"execute:"
msgstr "打开终端并执行，更改磁盘加密口令："

#: ../components/nitropc/debian/index.rst:30
msgid "Using WIFI (with RTL8821ce chipset)"
msgstr "使用 WIFI（配备 RTL8821ce 芯片组）"

#: ../components/nitropc/os-reinstallation.rst.inc:14
msgid ""
"Download one of the following operating system images: `Ubuntu Linux "
"<https://www.nitrokey.com/files/ci/ubuntu/>`__, `Qubes OS "
"<https://www.nitrokey.com/files/ci/qubes/>`__, `Debian "
"<https://www.nitrokey.com/files/ci/nitropc/debian-oem/>`__, `Linux Mint "
"<https://linuxmint.com/download.php>`__"
msgstr ""
"下载以下操作系统映像之一：`Ubuntu Linux "
"<https://www.nitrokey.com/files/ci/ubuntu/>`__, `Qubes OS "
"<https://www.nitrokey.com/files/ci/qubes/>`__, `Debian "
"<https://www.nitrokey.com/files/ci/nitropc/debian-oem/>`__, `Linux Mint "
"<https://linuxmint.com/download.php>`__"

#: ../components/nitropc/os-reinstallation.rst.inc:30
msgid "Connect the USB drive to your NitroPC and start it."
msgstr "将 USB 驱动器连接到 NitroPC 并启动它。"

#: ../components/nitropc/os-reinstallation.rst.inc:33
msgid "If you are using a NitroPC with Heads:"
msgstr "如果您使用的是带有 Heads 的 NitroPC："

#: ../components/nitropc/os-reinstallation.rst.inc:33
msgid "Go to the Heads menu and select Boot Options -> USB Boot."
msgstr "进入 Heads（头部）菜单，选择 Boot Options（启动选项）-> USB Boot（USB 启动）。"

#: ../components/nitropc/os-reinstallation.rst.inc:36
msgid "If you are using a NitroPC with TitanCore:"
msgstr "如果您使用的是配备 TitanCore 的 NitroPC："

#: ../components/nitropc/os-reinstallation.rst.inc:36
msgid "Press ESC to enter the BIOS to select USB Boot."
msgstr "按 ESC 键进入 BIOS 选择 USB 启动。"

#: ../components/nitropc/os-reinstallation.rst.inc:45
msgid ""
"Booting this USB drive entirely erases all data on the hard disk or SSD "
"of the NitroPC without further warning. Don’t boot this USB drive on any "
"computer which contains data you want to keep. Make sure to format the "
"USB drive after the intended use."
msgstr ""
"启动该 USB 驱动器会完全删除 NitroPC 硬盘或固态硬盘上的所有数据，且不会发出进一步警告。请勿在包含您希望保留的数据的任何计算机上启动该"
" USB 驱动器。确保在使用后格式化 USB 驱动器。"

#: ../components/nitropc/sealed-hardware.rst.inc:7
msgid ""
"If you ordered your NitroPC with sealed screws and in a sealed bag, it "
"allows you to check if the NitroPC has been tampered with during "
"shipping."
msgstr "如果您订购的 NitroPC 带有密封螺丝并装在密封袋中，则可以检查 NitroPC 是否在运输过程中被篡改。"

#: ../components/nitropc/sealed-hardware.rst.inc:9
msgid ""
"The bag and all screws of the device have been sealed. For the bag and "
"each of these screws you have received a photo by e-mail."
msgstr "设备的包装袋和所有螺丝都已密封。您已通过电子邮件收到包装袋和每个螺丝的照片。"

#: ../components/nitropc/sealed-hardware.rst.inc:11
msgid ""
"Check each screw individually to see if its individual appearance matches"
" the photo. It is best to use a magnifying glass or macro lens for this "
"purpose."
msgstr "逐个检查每个螺丝的外观是否与照片相符。为此最好使用放大镜或微距镜头。"

#: ../components/nitropc/sealed-hardware.rst.inc:22
msgid ""
"If the bag or the screws do not match the photos sent, an unauthorized "
"opening of your NitroPC cannot be excluded. In this case please contact "
"us to arrange further action."
msgstr "如果包装袋或螺丝与发送的照片不符，则不能排除您的 NitroPC 在未经授权的情况下被打开。在这种情况下，请联系我们安排进一步的行动。"

#: ../components/nitropc/faq.rst:2
msgid "NitroPC FAQ"
msgstr "NitroPC 常见问题"

#: ../components/nitropc/faq.rst:5
msgid ""
"The default NitroPC disk encryption password: \"12345678\". This was "
"change on the 15.01.2024 so if \"12345678\" is not working try the old "
"default: \"PleaseChangeMe\""
msgstr ""
"NitroPC 磁盘加密默认密码：\"12345678\"。该密码已于 15.01.2024 更改，因此如果 \"12345678 "
"\"无法使用，请尝试旧的默认密码：\"PleaseChangeMe\"。"

#: ../components/nitropc/index.rst:17
#: ../components/nitropc/qubes/gpu-install.rst:85
msgid "Debian"
msgstr "Debian"

#: ../components/nitropc/index.rst:2
msgid "NitroPC"
msgstr "NitroPC"

#: ../components/nitropc/index.rst:27
msgid "Booting from USB drive"
msgstr "从 USB 驱动器启动"

#: ../components/nitropc/index.rst:28
msgid ""
"Connect the USB drive to a black USB 2.0 socket (blue USB 3.0 don't "
"work!), start the PC and keep pressing DEL until you see the firmware "
"menu. Choose Boot Menu and select your USB drive."
msgstr ""
"将 USB 驱动器连接到黑色 USB 2.0 插口（蓝色 USB 3.0 插口无效！），启动电脑并一直按 DEL "
"直到看到固件菜单。选择启动菜单，然后选择 USB 驱动器。"

#: ../components/nitropc/qubes/gpu-install.rst:2
msgid "NitroPC Pro 2 With External GPU"
msgstr "配备外置图形处理器的 NitroPC Pro 2"

#: ../components/nitropc/qubes/gpu-install.rst:6
msgid ""
"This guide is only working if you use the Qubes OS OEM GPU image from "
"Nitrokey that you can build `here`_."
msgstr "只有使用 Nitrokey 提供的 Qubes OS OEM GPU 镜像（可在此处构建），本指南才有效。"

#: ../components/nitropc/qubes/gpu-install.rst:13
msgid ""
"This guide explains how to use your NitroPC with an external graphic card"
" (GPU) with Qubes OS."
msgstr "本指南介绍如何在 Qubes OS 中使用带有外置图形卡（GPU）的 NitroPC。"

#: ../components/nitropc/qubes/gpu-install.rst:16
msgid ""
"Following this guide may create some security issues within Qubes OS. "
"Follow it at your own risks."
msgstr "遵循本指南可能会在 Qubes OS 中产生一些安全问题。请自行承担风险。"

#: ../components/nitropc/qubes/gpu-install.rst:20
msgid "Create a Windows Qube"
msgstr "创建 Windows Qube"

#: ../components/nitropc/qubes/gpu-install.rst:23
msgid ""
"This will install a Windows Qube from the offical trial ISO. If you want "
"a full Windows experience then you will need to add a licence key."
msgstr "这将从正式试用版 ISO 安装 Windows Qube。如果您想要完整的 Windows 体验，则需要添加许可证密钥。"

#: ../components/nitropc/qubes/gpu-install.rst:25
msgid ""
"This part is using `ElliotKillick project "
"<https://github.com/elliotkillick/qvm-create-windows-qube>`__."
msgstr ""
"本部分使用 `ElliotKillick 项目 <https://github.com/elliotkillick/qvm-create-"
"windows-qube>`__。"

#: ../components/nitropc/qubes/gpu-install.rst:28
msgid ""
"Open a terminal in dom0 and make sure that you have the internet "
"connected."
msgstr "在 dom0 中打开终端，确保已连接互联网。"

#: ../components/nitropc/qubes/gpu-install.rst:30
msgid ""
"Install the Qubes Windows Tools, in dom0 : ``sudo qubes-dom0-update "
"qubes-windows-tools-4.1.69`` when asked press ``y`` and enter."
msgstr ""
"在 dom0 中安装 Qubes Windows 工具：``sudo qubes-dom0-update qubes-windows-"
"tools-4.1.69``` 当询问时按``y``并回车。"

#: ../components/nitropc/qubes/gpu-install.rst:33
msgid ""
"Please see the `security implication <https://github.com/QubesOS/qubes-"
"secpack/blob/master/QSBs/qsb-091-2023.txt>`__ of installing QWT."
msgstr ""
"请参阅安装 QWT 的 \"安全影响 <https://github.com/QubesOS/qubes-"
"secpack/blob/master/QSBs/qsb-091-2023.txt>`__\" 。"

#: ../components/nitropc/qubes/gpu-install.rst:35
msgid ""
"Make the install script executable, in dom0 : ``sudo chmod +x "
"/install.sh``"
msgstr "在 dom0 中使安装脚本可执行： ``sudo chmod +x /install.sh``"

#: ../components/nitropc/qubes/gpu-install.rst:37
msgid "Launch the install script, in dom0 : ``/install.sh``"
msgstr "在 dom0 中启动安装脚本： ``/install.sh``"

#: ../components/nitropc/qubes/gpu-install.rst:39
msgid ""
"If you see this message : ``[+] Installation complete!`` then you can "
"continue."
msgstr "如果看到以下信息：``[+] 安装完成！`` 则可以继续。"

#: ../components/nitropc/qubes/gpu-install.rst:41
msgid ""
"At this point the script created a new Qube called windows-mgmt now we "
"will dowload the ISO to create the Windows Qube."
msgstr "此时，脚本会创建一个名为 windows-mgmt 的新 Qube，现在我们将下载 ISO 来创建 Windows Qube。"

#: ../components/nitropc/qubes/gpu-install.rst:43
msgid ""
"To do so we need to copy the ``~/qvm-create-windows-"
"qube/windows/isos/mido.sh`` script from the windows-mgmt Qube inside a "
"disposable Qube with internet connectivity."
msgstr ""
"为此，我们需要将 Windows-mgmt Qube 中的``~/qvm-create-windows-"
"qube/windows/isos/mido.sh``脚本复制到一个具有互联网连接的一次性 Qube 中。"

#: ../components/nitropc/qubes/gpu-install.rst:45
msgid ""
"Start a new DVM (disposable) Qube and give it at least 10 GB of private "
"storage."
msgstr "启动一个新的 DVM（一次性）Qube，并为其提供至少 10 GB 的私人存储空间。"

#: ../components/nitropc/qubes/gpu-install.rst:47
msgid ""
"Start the windows-mgmt Qube and copy the script, in windows-mgmt Qube : "
"``qvm-copy qvm-create-windows-qube/windows/isos/mido.sh`` then select the"
" DVM Qube (dispXXXX)."
msgstr ""
"启动 windows-mgmt Qube 并在 windows-mgmt Qube 中复制脚本：``qvm-copy qvm-create-"
"windows-qube/windows/isos/mido.sh`` 然后选择 DVM Qube (dispXXXX)。"

#: ../components/nitropc/qubes/gpu-install.rst:49
msgid ""
"Once the script is copied launch it, in dispXXX : ``./QubesIncoming"
"/windows-mgmt/mido.sh win10x64``"
msgstr "复制脚本后，在 dispXXX 中启动它：``./QubesIncoming/windows-mgmt/mido.sh win10x64``。"

#: ../components/nitropc/qubes/gpu-install.rst:52
msgid ""
"In this guide we install Windows 10 but other Windows versions are "
"available you can list them by using ``./QubesIncoming/windows-"
"mgmt/mido.sh``"
msgstr ""
"在本指南中，我们安装的是 Windows 10，但也有其他 Windows 版本，您可以使用 ``./QubesIncoming/windows-"
"mgmt/mido.sh`` 列出它们。"

#: ../components/nitropc/qubes/gpu-install.rst:55
msgid ""
"If you get a success message then you will need to copy the dowloaded ISO"
" from the DVM to the windows-mgmt Qube, in dispXXXX :  ``qvm-copy "
"QubesIncoming/windows-mgmt/win10x64.iso`` and choose the windows-mgmt "
"Qube."
msgstr ""
"如果收到成功消息，则需要将下载的 ISO 从 DVM 复制到 windows-mgmt Qube，在 dispXXXX 中：``qvm-copy "
"QubesIncoming/windows-mgmt/win10x64.iso`` 并选择 windows-mgmt Qube。"

#: ../components/nitropc/qubes/gpu-install.rst:57
msgid "Once copied you can close your DVM Qube."
msgstr "复制完成后，您就可以关闭 DVM Qube。"

#: ../components/nitropc/qubes/gpu-install.rst:59
msgid ""
"In the windows-mgmt Qube : ``mv QubesIncoming/dispXXXX/win10x64.iso qvm-"
"create-windows-qube/windows/isos/`` (replace 'dispXXXX' with the name of "
"the disposable Qube you created)."
msgstr ""
"在 windows-mgmt Qube 中：``mv QubesIncoming/dispXXXX/win10x64.iso qvm-"
"create-windows-qube/windows/isos/``（将 \"dispXXXX \"替换为您创建的一次性 Qube 的名称）。"

#: ../components/nitropc/qubes/gpu-install.rst:61
msgid ""
"Then in dom0 : ``qvm-create-windows-qube -n sys-firewall -oy -i "
"win10x64.iso -a win10x64-pro.xml work-win10``"
msgstr ""
"然后在 dom0 中 : ``qvm-create-windows-qube -n sys-firewall -oy -i "
"win10x64.iso -a win10x64-pro.xml work-win10``"

#: ../components/nitropc/qubes/gpu-install.rst:64
msgid ""
"You can pre-install any package from `this site "
"<https://community.chocolatey.org/packages>`__. E.g: ``qvm-create-"
"windows-qube -n sys-firewall -oyp "
"firefox,notepadplusplus,office365proplus -i win10x64.iso -a "
"win10x64-pro.xml work-win10``"
msgstr ""
"您可以从 `this site <https://community.chocolatey.org/packages>`__ "
"中预装任何软件包。例如： ``qvm-create-windows-qube -n sys-firewall -oyp "
"firefox,notepadplus,office365proplus -i win10x64.iso -a win10x64-pro.xml "
"work-win10``"

#: ../components/nitropc/qubes/gpu-install.rst:67
msgid ""
"If the script stops or if it get stuck retry until you see this message: "
"``[+] Completed successfully!``"
msgstr "如果脚本停止或卡住，请重试，直到看到以下信息：[+]已成功完成！```"

#: ../components/nitropc/qubes/gpu-install.rst:69
msgid ""
"Now you will need to attach your GPU to the Windows Qube, to do so go to "
"the Qube Manager and the Windows 10 Qube options (make sure that the Qube"
" is shut down), under the Devices tab select your graphic card and pass "
"it to the right then click on the ``Configure strict reset for PCI "
"devices`` then select your card and click ``OK``"
msgstr ""
"现在，您需要将 GPU 连接到 Windows Qube，为此，请访问 Qube 管理器和 Windows 10 Qube 选项（确保 Qube "
"已关闭），在 \"设备 \"选项卡下选择图形卡并将其传递到右侧，然后单击 \"为 PCI 设备配置严格重置\"，然后选择显卡并单击 \"确定\"。"

#: ../components/nitropc/qubes/gpu-install.rst:71
msgid ""
"Now that your graphic card is attached to your Windows Qube you will need"
" to install the drivers of your card. Search for ``Check for updates`` in"
" the search bar then click on ``Check for updates`` (you will need to "
"reboot several times)."
msgstr ""
"现在显卡已连接到 Windows Qube，您需要安装显卡的驱动程序。在搜索栏中搜索 \"检查更新\"，然后点击 "
"\"检查更新\"（您需要重启几次）。"

#: ../components/nitropc/qubes/gpu-install.rst:73
msgid ""
"Now Windows will install all the drivers you will need to use your "
"external graphic card. If you're experiencing some problems make sure "
"that you have enought space in your Windows Qube while installing "
"updates."
msgstr "现在，Windows 将安装使用外置显卡所需的所有驱动程序。如果遇到问题，请确保在安装更新时 Windows Qube 有足够的空间。"

#: ../components/nitropc/qubes/gpu-install.rst:75
msgid "Once finished you can connect a secondary display to the graphic card."
msgstr "完成后，您就可以将辅助显示器连接到显卡。"

#: ../components/nitropc/qubes/gpu-install.rst:77
msgid ""
"If you want to use a dedicated mouse or keyboard for the Windows Qube "
"then you need to use sys-usb and attach the desired device to it."
msgstr "如果您想在 Windows Qube 上使用专用鼠标或键盘，则需要使用 sys-usb，并将所需设备连接到它。"

#: ../components/nitropc/qubes/gpu-install.rst:82
msgid "Create a Linux Qube"
msgstr "创建 Linux Qube"

#: ../components/nitropc/qubes/gpu-install.rst:88
msgid ""
"Go to the Qube manager and create a new standalone Qube and launch the "
"settings after creation."
msgstr "进入 Qube 管理器，创建一个新的独立 Qube，并在创建后启动设置。"

#: ../components/nitropc/qubes/gpu-install.rst:90
msgid ""
"In the advenced tab change the mode to HVM and disable memory balancing "
"and choose the amount of RAM you want."
msgstr "在 \"建议 \"选项卡中，将模式更改为 HVM，禁用内存均衡，并选择所需的内存大小。"

#: ../components/nitropc/qubes/gpu-install.rst:92
msgid ""
"In the devices tab select the GPU and pass it to the right then click on "
"the ``Configure strict reset for PCI devices`` then select your card and "
"click ``OK``"
msgstr "在 \"设备 \"选项卡中选择 GPU 并将其移至右侧，然后点击 \"为 PCI 设备配置严格重置\"，然后选择显卡并点击 \"确定\"。"

#: ../components/nitropc/qubes/gpu-install.rst:94
msgid "Close the settings and start the Qube."
msgstr "关闭设置并启动 Qube。"

#: ../components/nitropc/qubes/gpu-install.rst:96
msgid ""
"Add non-free to your source list: ``sudo sed -i '1 s/.*/& non-free/' "
"/etc/apt/sources.list``"
msgstr ""
"在源代码列表中添加 non-free`sudo sed -i '1 s/.*/& non-free/' "
"/etc/apt/sources.list```"

#: ../components/nitropc/qubes/gpu-install.rst:98
msgid "``sudo apt update``"
msgstr "`sudo apt update``"

#: ../components/nitropc/qubes/gpu-install.rst:100
msgid "``sudo apt install nvidia-driver dbus-x11``"
msgstr "`sudo apt install nvidia-driver dbus-x11```"

#: ../components/nitropc/qubes/gpu-install.rst:102
msgid "Now you will need to create 3 differents files:"
msgstr "现在，您需要创建 3 个不同的文件："

#: ../components/nitropc/qubes/gpu-install.rst:105
msgid "screen.conf::"
msgstr "screen.conf:："

#: ../components/nitropc/qubes/gpu-install.rst:123
msgid "xorgX1.sh::"
msgstr "xorgX1.sh:："

#: ../components/nitropc/qubes/gpu-install.rst:137
msgid "xfce.sh::"
msgstr "xfce.sh:："

#: ../components/nitropc/qubes/gpu-install.rst:144
msgid "``sudo chmod +x xorgX1.sh xfce.sh``"
msgstr "`sudo chmod +x xorgX1.sh xfce.sh```"

#: ../components/nitropc/qubes/gpu-install.rst:146
msgid "``sudo ./xorgX1.sh ./xfce.sh``"
msgstr "`sudo ./xorgX1.sh ./xfce.sh```"

#: ../components/nitropc/qubes/gpu-install.rst:148
msgid "Now the secondary screen should turn on and show a Debian XFCE desktop."
msgstr "现在副屏幕应该会打开，并显示 Debian XFCE 桌面。"

#: ../components/nitropc/qubes/gpu-install.rst:150
msgid ""
"If you want to use a dedicated mouse or keyboard for the Linux Qube then "
"you need to use sys-usb and attach the desired device to it."
msgstr "如果要在 Linux Qube 上使用专用鼠标或键盘，则需要使用 sys-usb，并将所需设备连接到它。"

#: ../components/nitropc/qubes/index.rst:2
msgid "NitroPC with Qubes OS"
msgstr "配备 Qubes 操作系统的 NitroPC"

#: ../components/nitropc/qubes/index.rst:16
msgid ""
"During boot, the system will prompt you to enter the passphrase to "
"decrypt the hard disk. Enter the default passphrase \"12345678\". This "
"was changed on the 15.01.2024 so if \"12345678\" is not working try the "
"old default: \"PleaseChangeMe\" The system will then guide you through "
"the process of creating a user account. After that you should have "
"successfully booted the system and could already use it normally."
msgstr ""
"在启动过程中，系统将提示您输入密码以解密硬盘。输入默认密码 \"12345678\"。该密码在 15.01.2024 版本中已更改，因此如果 "
"\"12345678 \"无法使用，请尝试使用旧的默认密码：\"PleaseChangeMe\"。之后，您就可以成功启动系统并正常使用了。"

#: ../components/nitropc/qubes/index.rst:22
msgid ""
"Change the passphrase for disk encryption by searching in the Qubes Menu "
"for \"Change Disk Password\""
msgstr "在 Qubes 菜单中选择 \"更改磁盘密码\"，更改磁盘加密口令"

#: ../components/nitropc/qubes/index.rst:30
msgid "Failed to start Load Kernel Modules"
msgstr "加载内核模块失败"

#: ../components/nitropc/qubes/index.rst:32
msgid ""
"During boot of the system the error \"Failed to start Load Kernel "
"Modules\" is displayed. `This is a known issue "
"<https://github.com/QubesOS/qubes-issues/issues/2638>`__ which is not "
"critical and can be ignored."
msgstr ""
"在系统启动过程中，显示错误 \"Failed to start Load Kernel Modules\"（加载内核模块失败）。这是一个已知的 "
"<https://github.com/QubesOS/qubes-issues/issues/2638>`__ 问题，并不严重，可以忽略。"

#: ../components/nitropc/ubuntu/index.rst:2
msgid "NitroPC with Ubuntu"
msgstr "使用 Ubuntu 的 NitroPC"

#: ../components/nitropc/ubuntu/index.rst:16
msgid ""
"During boot, the system will prompt you to enter the passphrase to "
"decrypt the hard disk. Enter the default passphrase \"12345678\". This "
"was changed on the 10.04.2024 so if \"12345678\" is not working try the "
"old default: \"PleaseChangeMe\" The system will then guide you through "
"the process of creating a user account. After that you should have "
"successfully booted the system and could already use it normally."
msgstr ""
"在启动过程中，系统将提示您输入密码以解密硬盘。输入默认密码 \"12345678\"。10.04.2024 版本对该密码进行了更改，如果 "
"\"12345678 "
"\"无法使用，请尝试使用旧的默认密码：\"PleaseChangeMe\"，系统将引导你完成创建用户账户的过程。之后你就可以成功启动系统并正常使用了。"

#: ../components/nitrophone/apps.rst:2 ../components/nitrophone/index.rst:19
msgid "Apps"
msgstr "应用程序"

#: ../components/nitrophone/apps.rst:5
msgid "App Store"
msgstr "应用程序商店"

#: ../components/nitrophone/apps.rst:7
msgid ""
"For very high security requirements, you should use as few apps as "
"possible to provide a small attack surface. If instead you want to use "
"the NitroPhone as an everyday smartphone with more apps we recommend:"
msgstr ""
"对于安全性要求极高的用户，应尽量少用应用程序，以提供较小的攻击面。如果您想将 NitroPhone "
"作为日常智能手机使用，我们建议您使用更多应用程序："

#: ../components/nitrophone/apps.rst:11
msgid ""
"Install the `F-Droid <https://f-droid.org/F-Droid.apk>`__ App Store. This"
" has exclusively open source apps that do without drastic tracking and "
"without advertising. Here you will find thousands of apps from a wide "
"variety of fields. If you are looking for an app, check F-Droid first."
msgstr ""
"安装 `F-Droid <https://f-droid.org/F-Droid.apk>`__ "
"应用程序商店。这里有专门的开源应用程序，这些应用程序不进行大量跟踪，也没有广告。在这里，你可以找到来自各个领域的数千个应用程序。如果您正在寻找应用程序，请先查看"
" F-Droid。"

#: ../components/nitrophone/apps.rst:16
msgid ""
"If the apps in F-Droid are not enough for you, open F-Droid and install "
"Aurora Store. In Aurora Store, you can install all apps from Google Play "
"Store."
msgstr ""
"如果 F-Droid 中的应用程序无法满足您的需求，请打开 F-Droid，然后安装极光应用商店。在 Aurora Store 中，您可以安装 "
"Google Play Store 中的所有应用程序。"

#: ../components/nitrophone/apps.rst:19
msgid ""
"Many apps work without Google Play Services. However, if you want to use "
"apps that require Google Play Services, you can install `Google Play "
"Services in a sandbox <https://grapheneos.org/usage#sandboxed-google-"
"play>`__ as follows."
msgstr ""
"许多应用程序无需 Google Play 服务即可运行。不过，如果你想使用需要 Google Play 服务的应用程序，可以在沙盒 "
"<https://grapheneos.org/usage#sandboxed-google-play>`__ 中安装 \"Google Play"
" 服务\"，方法如下。"

#: ../components/nitrophone/apps.rst:22
msgid "Open Graphenes app repository client: *Home screen -> Apps*"
msgstr "打开 Graphenes 应用程序资源库客户端：*主屏幕 -> 应用程序"

#: ../components/nitrophone/apps.rst:23
msgid ""
"Install the 3 core Google Play Apps (\"Google Play store\", \"Google Play"
" Services\", \"Google Services Framework\")."
msgstr ""
"安装 3 个核心 Google Play 应用程序（\"Google Play 商店\"、\"Google Play 服务 \"和 "
"\"Google 服务框架\"）。"

#: ../components/nitrophone/apps.rst:24
msgid ""
"Disable batterie optimization for Google Play Services (for Push to work "
"properly). From the home screen, select: *Settings -> Apps -> Google Play"
" services > Battery > Unrestricted*"
msgstr ""
"禁用 Google Play 服务的电池优化（以便推送正常工作）。从主屏幕选择*设置 -> 应用程序 -> Google Play 服务 > 电池"
" > 不受限制*。"

#: ../components/nitrophone/apps.rst:25
msgid ""
"Open the Google Play Store once and press \"Sign in\" to start the "
"initialization. You don't have to finish the sign in and a real login is "
"not necessary. This is solely to initialize the software."
msgstr "打开 Google Play Store 并点击 \"登录 \"开始初始化。你不必完成登录，也无需真正登录。这只是为了初始化软件。"

#: ../components/nitrophone/apps.rst:30
msgid ""
"To prevent some apps from accessing Google Play Services, install Google "
"Play Services in a separate profile. To do this, create a new dedicated "
"user profile and install the Google Play Services there. Using a work "
"profile together with *Shelter* is also possible, but without as much "
"isolation."
msgstr ""
"要防止某些应用程序访问 Google Play 服务，请将 Google Play "
"服务安装在单独的配置文件中。为此，请创建一个新的专用用户配置文件，并在其中安装 Google Play 服务。将工作配置文件与 *Shelter*"
" 一起使用也是可行的，但隔离效果较差。"

#: ../components/nitrophone/apps.rst:38
msgid ""
"The Google Play Store cannot install and update apps due to the sandbox. "
"Instead, always use F-Droid (for open source apps) or Aurora Store (for "
"apps from Google Play Store) to install apps."
msgstr ""
"由于沙盒的原因，Google Play Store 无法安装和更新应用程序。请务必使用 F-Droid（适用于开源应用程序）或 Aurora "
"Store（适用于来自 Google Play Store 的应用程序）安装应用程序。"

#: ../components/nitrophone/apps.rst:43
msgid "Recommended Apps"
msgstr "推荐应用程序"

#: ../components/nitrophone/apps.rst:45
msgid ""
"Browser: The pre-installed browser Vanadium is hardened and therefore "
"recommended for high security. For ad-blocking, we recommend `DNS-based "
"ad-blocking <https://grapheneos.org/faq#ad-blocking>`__."
msgstr ""
"浏览器预装的浏览器 Vanadium 经过加固，因此建议使用安全性较高的浏览器。对于广告拦截，我们建议使用 \"基于 DNS 的广告拦截 "
"<https://grapheneos.org/faq#ad-blocking>`__\"。"

#: ../components/nitrophone/apps.rst:46
msgid "Email: K9-mail and OpenKeyChain (for OpenPGP encryption) or FairEmail."
msgstr "电子邮件K9-mail 和 OpenKeyChain（用于 OpenPGP 加密）或 FairEmail。"

#: ../components/nitrophone/apps.rst:47
msgid ""
"VPN: Orbot uses the free TOR network. Mullvad VPN and IVPN are paid VPN "
"services."
msgstr "VPN：Orbot 使用免费的 TOR 网络。Mullvad VPN 和 IVPN 是付费 VPN 服务。"

#: ../components/nitrophone/apps.rst:48
msgid ""
"Backup: The integrated backup (Seedvault) and Nextcloud. Choose Settings "
"-> System -> Backup."
msgstr "备份：集成备份（Seedvault）和 Nextcloud。选择设置 -> 系统 -> 备份。"

#: ../components/nitrophone/apps.rst:51
msgid "Messenger:"
msgstr "信使"

#: ../components/nitrophone/apps.rst:50
msgid ""
"`Signal <https://signal.org/android/apk/>`__ is secure and now widely "
"used. It can also be downloaded without an app store."
msgstr ""
"`Signal <https://signal.org/android/apk/>`__ "
"很安全，目前已被广泛使用。它也可以在没有应用程序商店的情况下下载。"

#: ../components/nitrophone/apps.rst:51
msgid ""
"`Element <https://element.io/>`__ does not require a central "
"infrastructure and allows the use of own servers. An own account can be "
"registered for free at `NitroChat <https://nitro.chat>`__ for example."
msgstr ""
"`Element <https://element.io/>`__ 不需要中央基础设施，允许使用自己的服务器。例如，可以在 `NitroChat "
"<https://nitro.chat>`__ 免费注册自己的账户。"

#: ../components/nitrophone/apps.rst:52
msgid ""
"`Briar <https://briarproject.org/>`__ is a peer-to-peer messenger without"
" any server at all, which can be used without internet with contacts "
"nearby."
msgstr ""
"`Briar <https://briarproject.org/>`__ "
"是一款无需任何服务器的点对点信使，可以在没有互联网的情况下与附近的联系人一起使用。"

#: ../components/nitrophone/apps.rst:53
msgid ""
"Contacts and calendar synchronization: DAVx5 supports CalDAV, CardDAV and"
" WebCAL."
msgstr "联系人和日历同步：DAVx5 支持 CalDAV、CardDAV 和 WebCAL。"

#: ../components/nitrophone/apps.rst:54
msgid ""
"One-time password generator (2FA, OTP): `Aegis Authenticator "
"<https://github.com/beemdevelopment/Aegis>`__."
msgstr ""
"一次性密码生成器（2FA、OTP）：`Aegis Authenticator "
"<https://github.com/beemdevelopment/Aegis>`___。"

#: ../components/nitrophone/apps.rst:55
msgid "Regarding camera app, see `here <https://grapheneos.org/usage#camera>`__."
msgstr "关于相机应用程序，请参见 `此处 <https://grapheneos.org/usage#camera>`__。"

#: ../components/nitrophone/apps.rst:58
msgid "Recommendation for Sensor-Less Devices"
msgstr "关于无传感器设备的建议"

#: ../components/nitrophone/apps.rst:60
msgid ""
"If you have a NitroPhone or NitroTablet without rotation sensor, you "
"could use `Rotation Control "
"<https://play.google.com/store/apps/details?id=org.crape.rotationcontrol>`__"
" to rotate your screen manually."
msgstr ""
"如果你的 NitroPhone 或 NitroTablet 没有旋转传感器，你可以使用 `Rotation Control "
"<https://play.google.com/store/apps/details?id=org.crape.rotationcontrol>`__"
" 手动旋转屏幕。"

#: ../components/nitrophone/apps.rst:63
msgid "Permissions of Individual Apps"
msgstr "单个应用程序的权限"

#: ../components/nitrophone/apps.rst:65
msgid ""
"To check or change the permissions on network access and sensors for a "
"specific app:"
msgstr "检查或更改特定应用程序的网络访问和传感器权限："

#: ../components/nitrophone/apps.rst:67
msgid "*Long press on the respective app icon -> app info -> permissions*"
msgstr "*长按相应应用程序图标 -> 应用程序信息 -> 权限*。"

#: ../components/nitrophone/apps.rst:70
msgid "Car Sharing Apps"
msgstr "汽车共享应用程序"

#: ../components/nitrophone/apps.rst:72
msgid ""
"Some car sharing apps (such as SHARE NOW) use Bluetooth-based location "
"service to unlock a car in the proximity. To enable this choose: Settings"
" -> Location -> Location Services -> Bluetooth scanning -> on"
msgstr ""
"某些汽车共享应用程序（如 SHARE NOW）使用蓝牙定位服务来解锁附近的汽车。要启用此功能，请选择设置 -> 位置 -> 定位服务 -> "
"蓝牙扫描 -> 打开"

#: ../components/nitrophone/apps.rst:75
msgid "Banking Apps"
msgstr "银行应用程序"

#: ../components/nitrophone/apps.rst:77
msgid ""
"There is a `list of banking apps <https://privsec.dev/posts/android"
"/banking-applications-compatibility-with-grapheneos/>`__ stating which "
"are working or not."
msgstr ""
"有一份 \"银行应用程序<https://privsec.dev/posts/android/banking-applications-"
"compatibility-with-grapheneos/>`___列表\"，说明了哪些应用程序可以使用，哪些不能使用。"

#: ../components/nitrophone/background-images.rst:2
#: ../components/nitrophone/index.rst:19
msgid "Background Images"
msgstr "背景图片"

#: ../components/nitrophone/background-images.rst:4
msgid "You can use these nice background images:"
msgstr "您可以使用这些精美的背景图片："

#: ../components/nitrophone/background-images.rst:-1
msgid "Background image 1"
msgstr "背景图片 1"

#: ../components/nitrophone/background-images.rst:-1
msgid "Background image 2"
msgstr "背景图片 2"

#: ../components/nitrophone/background-images.rst:-1
msgid "Background image 3"
msgstr "背景图片 3"

#: ../components/nitrophone/faq.rst:2
msgid "NitroPhone FAQ"
msgstr "NitroPhone 常见问题"

#: ../components/nitrophone/faq.rst:8
msgid "**Q:** Does the Nitrophone work with my carrier network?"
msgstr "**问：** Nitrophone 兼容我的运营商网络吗？"

#: ../components/nitrophone/faq.rst:5
msgid ""
"Google claims `all major carriers`_ should work with the Pixel phones. "
"Nevertheless there might be exceptions, obviously we cannot check `all` "
"carriers around the world. Best practice, is to check if you find some "
"tests/experience stories about the Pixel 4a together with your planned "
"carrier network."
msgstr ""
"谷歌声称，\"所有主要运营商 \"都应支持 Pixel 手机。不过也可能有例外，显然我们无法检查全球所有运营商。最好的做法是检查您是否找到一些关于"
" Pixel 4a 与您计划的运营商网络的测试/体验故事。"

#: ../components/nitrophone/faq.rst:14
msgid "**Q:** What is and how to activate *PIN Layout Scrambling*"
msgstr "**问：** 什么是*PIN 布局扰乱*，如何激活？"

#: ../components/nitrophone/faq.rst:11
msgid ""
"To make it difficult for strangers to read the PIN when typing it in, you"
" can display the PIN layout in a random order. Additionally, we recommend"
" a `privacy screen <https://shop.nitrokey.com/shop/category/smartphone-"
"tablet-4>`__. To enable, select: *Settings -> Security -> PIN scrambling "
"-> Scramble PIN*"
msgstr ""
"为了使陌生人在输入密码时难以读取，可以随机显示密码布局。此外，我们建议使用 \"隐私屏幕 "
"<https://shop.nitrokey.com/shop/category/smartphone-"
"tablet-4>`__\"。要启用，请选择*设置 -> 安全性 -> 密码扰乱 -> 扰乱 PIN*"

#: ../components/nitrophone/faq.rst:22
msgid "**Q:** What is a *Kill Switch* and how to activate it?"
msgstr "**问：** 什么是 \"死亡开关\"？"

#: ../components/nitrophone/faq.rst:17
msgid ""
"Kill Switches, which erase all the phone's data when triggered, are very "
"risky in practice as they could be triggered unintentionally. Therefore, "
"the NitroPhone instead has the feature to automatically shut down and "
"restart when inactive for a set period of time. This puts the phone in a "
"secure state where all data is encrypted, no data is in RAM, and the "
"phone can only be unlocked with the legitimate PIN or password. To "
"enable, select: *Settings -> Security -> Auto reboot -> select the idle "
"time duration after which the phone should reboot*"
msgstr ""
"Kill Switches 在触发时会清除手机的所有数据，但在实际使用中风险很大，因为它们可能会被无意触发。因此，NitroPhone "
"具有在设定时间内不活动时自动关机并重新启动的功能。这将使手机处于安全状态，所有数据都被加密，RAM 中没有数据，只有使用合法的 PIN "
"或密码才能解锁手机。要启用，请选择*设置 -> 安全 -> 自动重启 -> 选择手机重启后的闲置时间长度*。"

#: ../components/nitrophone/faq.rst:30
msgid ""
"**Q:** Why do I get \"Warning: Your device is loading a different "
"operating system\"?"
msgstr "**问：** 为什么会出现 \"警告：您的设备正在加载不同的操作系统\"？"

#: ../components/nitrophone/faq.rst
msgid "Boot screen"
msgstr "启动屏幕"

#: ../components/nitrophone/faq.rst:29
msgid ""
"Shortly after the phone is turned on, the warning \"Your device is "
"loading a different operating system\" is displayed. This warning "
"indicates that no ordinary Google Android is running and can be ignored."
msgstr "手机开机后不久，就会显示 \"您的设备正在加载不同的操作系统 \"的警告。该警告表示运行的不是普通的谷歌 Android 系统，可以忽略。"

#: ../components/nitrophone/faq.rst:33
msgid "**Q:** How can I check, if my NitroPhone has been hacked/compromised?"
msgstr "**问：** 如何检查我的 NitroPhone 是否被黑客攻击？"

#: ../components/nitrophone/faq.rst:33
msgid ""
"If you want to check the integrity of the operating system, you can use "
"`remote verification <https://attestation.app/about>`_."
msgstr "如果要检查操作系统的完整性，可以使用 \"远程验证 <https://attestation.app/about>`_\"。"

#: ../components/nitrophone/faq.rst:36
msgid "**Q:** Where can I get further information about GrapheneOS?"
msgstr "**问：** 从哪里可以获得有关 GrapheneOS 的更多信息？"

#: ../components/nitrophone/faq.rst:36
msgid ""
"`Here <https://grapheneos.org/faq>`__ you can find further information on"
" GrapheneOS."
msgstr "`在 <https://grapheneos.org/faq>`__ 你可以找到有关 GrapheneOS 的更多信息。"

#: ../components/nitrophone/faq.rst:39
msgid "**Q:** Why is OEM unlocking enabled by default?"
msgstr "**问：** 为什么默认启用 OEM 解锁？"

#: ../components/nitrophone/faq.rst:39
msgid ""
"The only real purpose of the OEM Unlocking setting is `anti-theft "
"protection <https://grapheneos.org/faq#anti-theft>`__ which is not "
"implemented by GrapheneOS. OEM unlocking controls whether the device can "
"be unlocked via boot loader. In the later case all user data is wiped. If"
" OEM Unlocking is disabled, someone can still boot up in recovery mode, "
"enter the menu, wipe data, then boot the OS and enable OEM unlocking. "
"Therefore it doesn't really increase the security but `disabling it "
"<index.html>`_ reduces the potential physical attack surface."
msgstr ""
"OEM 解锁设置的唯一真正目的是 \"防盗保护 <https://grapheneos.org/faq#anti-theft>`__\"，而 "
"GrapheneOS 并没有实现这一功能。OEM 解锁控制设备是否可以通过引导加载器解锁。在后一种情况下，所有用户数据都会被清除。如果禁用了 "
"OEM 解锁功能，用户仍然可以在恢复模式下启动、进入菜单、擦除数据，然后启动操作系统并启用 OEM 解锁功能。因此，这并不能真正提高安全性，但 "
"\"禁用 <index.html>`_ 减少了潜在的物理攻击面。"

#: ../components/nitrophone/faq.rst:42
msgid "**Q:** Why do we offer to remove the microphones?"
msgstr "**问：** 为什么我们要拆除麦克风？"

#: ../components/nitrophone/faq.rst:42
msgid ""
"GrapheneOS informs about active access to the sensors and offers a "
"transparent way to monitor the device. However, physical removal is the "
"only way to completely exclude possible misuse. Especially in the case of"
" a microphone, which allows continuous eavesdropping."
msgstr ""
"GrapheneOS "
"会告知传感器的主动访问情况，并提供一种透明的方式来监控设备。然而，物理移除是完全排除可能的滥用的唯一方法。尤其是麦克风，它允许持续窃听。"

#: ../components/nitrophone/faq.rst:45
msgid "**Q:** Why do we also offer to remove the gyroscope?"
msgstr "**问：** 为什么我们也提供拆卸陀螺仪的服务？"

#: ../components/nitrophone/faq.rst:45
msgid ""
"A gyroscope is a sensor that detects the orientation of a smartphone. It "
"not only stabilises the camera, but also tells the smartphone whether it "
"is held in portrait or landscape mode. Additionally the gyroscope can "
"also pick up mechanical vibrations, so it has the functionality of a "
"microphone."
msgstr "陀螺仪是一种检测智能手机方向的传感器。它不仅能稳定摄像头，还能告诉智能手机是纵向握持还是横向握持。此外，陀螺仪还能捕捉机械振动，因此具有麦克风的功能。"

#: ../components/nitrophone/faq.rst:48
msgid "**Q:** Why don't we offer to remove the speakers?"
msgstr "**问：** 为什么我们不主动拆除扬声器？"

#: ../components/nitrophone/faq.rst:48
msgid ""
"Microphones are usually used to convert mechanical vibrations into "
"electrical signals. The mechanical construction of loudspeakers is "
"essentially the same as that of microphones, so that loudspeakers can "
"also be used as microphones. In loudspeakers, electrical signals cause "
"the diaphragm to vibrate, thus generating sound. Conversely, this process"
" can be used to transmit the electrical signal from the diaphragm to the "
"device, as with a microphone. However, this method is not possible if an "
"amplifier is installed, as this does not allow the signal to be "
"transmitted from the loudspeaker to the device. All Nitrophones only have"
" speakers with built-in amplifiers and are therefore harmless."
msgstr ""
"麦克风通常用于将机械振动转换为电信号。扬声器的机械结构与麦克风基本相同，因此扬声器也可用作麦克风。在扬声器中，电信号会引起振膜振动，从而产生声音。反过来，也可以像麦克风一样，利用这一过程将电信号从振膜传送到设备。但是，如果安装了放大器，则无法使用这种方法，因为放大器无法将信号从扬声器传输到设备。所有"
" Nitrophones 都只有内置放大器的扬声器，因此对人体无害。"

#: ../components/nitrophone/index.rst:2
msgid "NitroPhone, NitroTablet"
msgstr "NitroPhone, NitroTablet"

#: ../components/nitrophone/index.rst:9
msgid ""
"By default you have a secure smartphone, already pre-installed with all "
"the most necessary apps."
msgstr "默认情况下，您拥有一部安全的智能手机，已经预装了所有必要的应用程序。"

#: ../components/nitrophone/index.rst:11
msgid ""
"Set up a six-digit PIN to protect the phone. In cooperation with the "
"security chip, this will ensure high security while maintaining good "
"usability."
msgstr "设置一个六位数的密码来保护手机。与安全芯片配合使用，这将确保高度安全性，同时保持良好的可用性。"

#: ../components/nitrophone/index.rst:13
msgid ""
"For extra hardening (optional): Go to Settings -> System -> Developer "
"Options and disable the \"OEM unlocking\" setting. Afterwards disable the"
" \"Developer Options\"."
msgstr "额外加固（可选）：进入设置 -> 系统 -> 开发人员选项，禁用 \"OEM 解锁 \"设置。然后禁用 \"开发人员选项\"。"

#: ../components/nitrophone/index.rst:15
msgid ""
"Please familiarize yourself with `using your GrapheneOS "
"<https://grapheneos.org/usage>`__."
msgstr "请熟悉 \"使用您的 GrapheneOS <https://grapheneos.org/usage>`__\"。"

#: ../components/nitrophone/index.rst:17
msgid "For more details, see the following pages:"
msgstr "更多详情，请参阅以下页面："

#: ../components/nitrowall/backup-restore.rst:2
msgid "Backup & Restore"
msgstr "备份和恢复"

#: ../components/nitrowall/backup-restore.rst:4
msgid ""
"Before making any adjustments to the NitroWall configuration, you have "
"the option of backing up the configuration and restoring it if necessary."
" How to do this is described in the following instructions:"
msgstr "在对 NitroWall 配置进行任何调整之前，您可以选择备份配置并在必要时还原它。下面的说明将介绍如何进行备份："

#: ../components/nitrowall/backup-restore.rst:6
msgid "Go to System -> Configuration -> Backups"
msgstr "转到系统 -> 配置 -> 备份"

#: ../components/nitrowall/backup-restore.rst:7
msgid ""
"In this menu you can perform the desired operations. You can restore "
"specific areas of the configuration by selecting them via \"Restore "
"area\"."
msgstr "在该菜单中，您可以执行所需的操作。您可以通过 \"还原区域 \"选择特定区域来还原配置。"

#: ../components/nitrowall/backup-restore.rst:8
msgid ""
"If you can no longer access the web interface, it is also possible to "
"perform the recovery via the command line interface. To do this, connect "
"the NitroWall to a monitor and start it. After logging in, select item 13"
" \"Restore a backup\" and enter the number associated with the backup for"
" the restore."
msgstr ""
"如果无法再访问网络界面，也可以通过命令行界面进行恢复。为此，请将 NitroWall 与监视器连接并启动它。登录后，选择第 13 项 "
"\"还原备份\"，然后输入与备份相关的号码进行还原。"

#: ../components/nitrowall/backup-restore.rst:-1
msgid "backup and restore"
msgstr "备份和恢复"

#: ../components/nitrowall/backup-restore.rst:-1
msgid "cli restore"
msgstr "cli restore"

#: ../components/nitrowall/dhcp.rst:2
msgid "Using NitroWall as combined DHCP-Client/DHCP-Server"
msgstr "将 NitroWall 用作组合式 DHCP 客户端/DHCP 服务器"

#: ../components/nitrowall/dhcp.rst:-1
msgid "Network with DHCP"
msgstr "使用 DHCP 的网络"

#: ../components/nitrowall/dhcp.rst:7
msgid ""
"Note the correct mapping of interfaces to physical ports: Interfaces → "
"Assignments"
msgstr "注意接口与物理端口的正确映射：接口 → 分配"

#: ../components/nitrowall/dhcp.rst:9
msgid ""
"In \"System → Wizard → Configure WAN Interface\" set the value for  IPv4 "
"Configuration Type to DHCP"
msgstr "在 \"系统 → 向导 → 配置 WAN 接口 \"中将 IPv4 配置类型的值设置为 DHCP"

#: ../components/nitrowall/dhcp.rst:10
msgid "Follow this guide to configure the LAN interface for DHCP:"
msgstr "请按照本指南为 DHCP 配置 LAN 接口："

#: ../components/nitrowall/dhcp.rst:12
msgid "https://docs.opnsense.org/manual/dhcp.html#using-dhcpv4"
msgstr "https://docs.opnsense.org/manual/dhcp.html#using-dhcpv4"

#: ../components/nitrowall/firmware-update-nw678.rst:2
msgid "Update OpenWrt Firmware"
msgstr "更新 OpenWrt 固件"

#: ../components/nitrowall/firmware-update-nw678.rst:5
msgid "OpenWrt is currently only available for the NitroWall NW678"
msgstr "OpenWrt 目前仅适用于 NitroWall NW678"

#: ../components/nitrowall/firmware-update-nw678.rst:9
msgid ""
"We recommend updating OpenWrt via the pre-installed `Attended Sysupgrade "
"<https://openwrt.org/docs/guide-"
"user/installation/attended.sysupgrade>`__. To be able to use this service"
" you need to configure it to ignore the \"nitrowall\" package, if it has "
"been installed before:"
msgstr ""
"我们建议通过预装的 \"Attended Sysupgrade <https://openwrt.org/docs/guide-"
"user/installation/attended.sysupgrade>`__\"更新 "
"OpenWrt。要使用该服务，您需要对其进行配置，以忽略之前已安装的 \"nitrowall \"软件包："

#: ../components/nitrowall/firmware-update-nw678.rst:11
msgid ""
"Go to System -> Attended Sysupgrade -> Configuration and enable the "
"Advanced Mode -> Save & Apply"
msgstr "转到系统 -> 已参加的系统升级 -> 配置并启用高级模式 -> 保存并应用"

#: ../components/nitrowall/firmware-update-nw678.rst:15
msgid "Go back to overview and search for available updates"
msgstr "返回概述并搜索可用的更新"

#: ../components/nitrowall/firmware-update-nw678.rst:19
msgid ""
"Search through the list of installed packages and remove the "
"\"nitrowall\" package. Then Request Firmware Image"
msgstr "搜索已安装的软件包列表，删除 \"nitrowall \"软件包。然后申请固件映像"

#: ../components/nitrowall/firmware-update-nw678.rst:23
msgid ""
"Wait for the image to be build. Then install it. Check if \"keep settings"
" and current configuration\" is set"
msgstr "等待镜像生成。然后安装。检查是否设置了 \"保留设置和当前配置"

#: ../components/nitrowall/firmware-update-nw678.rst:27
msgid "The software will be installed and the NitroWall will restart."
msgstr "软件安装完成后，NitroWall 将重新启动。"

#: ../components/nitrowall/firmware-update-nw678.rst:29
msgid ""
"After the restart we need to reinstall the `nitrowall.ipk "
"<https://www.nitrokey.com/files/ci/nitrowall/nitrowall_1.0.0-0_x86_64.ipk>`_"
" package. This will resize your disk and add the kernel parameter "
"*pcie_aspm=off* to your */boot/grub/grub.cfg* which fixes a problem with "
"the *igb* driver `bug "
"<https://bugzilla.kernel.org/show_bug.cgi?id=205073>`_."
msgstr ""
"重启后，我们需要重新安装 `nitrowall.ipk "
"<https://www.nitrokey.com/files/ci/nitrowall/nitrowall_1.0.0-0_x86_64.ipk>`_"
" "
"软件包。这将调整磁盘大小，并在*/boot/grub/grub.cfg*中添加内核参数*pcie_aspm=off*，以修复*igb*驱动程序`bug"
" <https://bugzilla.kernel.org/show_bug.cgi?id=205073>`_的问题。"

#: ../components/nitrowall/firmware-update-nw678.rst:31
msgid "Under System -> Software -> Upload Package, upload the package"
msgstr "在系统 -> 软件 -> 上传软件包下，上传软件包"

#: ../components/nitrowall/firmware-update-nw678.rst:37
msgid "Install it. Afterwards the NitroWall will restart."
msgstr "安装。之后，NitroWall 将重新启动。"

#: ../components/nitrowall/firmware-update-nw678.rst:41
msgid ""
"Update OpenWrt via `Attended Sysupgrade <https://openwrt.org/docs/guide-"
"user/installation/attended.sysupgrade>`__."
msgstr ""
"通过 `Attended Sysupgrade <https://openwrt.org/docs/guide-"
"user/installation/attended.sysupgrade>`__ 更新 OpenWrt。"

#: ../components/nitrowall/firmware-update-nw678.rst:43
msgid ""
"Alternatively to the above instructions, you can login via ssh and "
"execute this script::"
msgstr "除上述说明外，您还可以通过 ssh 登录并执行以下脚本：："

#: ../components/nitrowall/hardware.rst:2
msgid "Hardware Compatibility"
msgstr "硬件兼容性"

#: ../components/nitrowall/hardware.rst:4
msgid ""
"Whether a certain hardware can be operated under OPNSense or not depends "
"on whether the corresponding driver is available. Since OPNSense is "
"derived from FreeBSD, all drivers from FreeBSD are also available in "
"OPNSense. A list of supported hardware can be found at:"
msgstr ""
"某一硬件能否在 OPNSense 下运行，取决于相应的驱动程序是否可用。由于 OPNSense 源自 FreeBSD，因此 FreeBSD "
"中的所有驱动程序在 OPNSense 中也都可用。支持的硬件列表可在以下网址找到："

#: ../components/nitrowall/hardware.rst:6
msgid "https://www.freebsd.org/releases/13.0R/hardware/"
msgstr "https://www.freebsd.org/releases/13.0R/hardware/"

#: ../components/nitrowall/ids-ips.rst:2
msgid "How to set up IDS/IPS with Suricata"
msgstr "如何使用 Suricata 设置 IDS/IPS"

#: ../components/nitrowall/ids-ips.rst:4
msgid ""
"OPNSense uses Suricata to provide an IPS/IDS Service. Suricata is already"
" installed and running after initial configuration."
msgstr "OPNSense 使用 Suricata 提供 IPS/IDS 服务。初始配置后，Suricata 已经安装并运行。"

#: ../components/nitrowall/ids-ips.rst:7
msgid ""
"You find the administration, monitoring and logging settings via "
"\"Services -> Intrusion Detection\"."
msgstr "您可以通过 \"服务 -> 入侵检测 \"找到管理、监控和日志设置。"

#: ../components/nitrowall/ids-ips.rst:9
msgid "More information on how to configure IDS/IPS are available on:"
msgstr "有关如何配置 IDS/IPS 的更多信息，请访问以下网站："

#: ../components/nitrowall/ids-ips.rst:11
msgid "https://docs.opnsense.org/manual/ips.html"
msgstr "https://docs.opnsense.org/manual/ips.html"

#: ../components/nitrowall/index.rst:2
msgid "NitroWall NW678, NW4J3"
msgstr "NitroWall NW678、NW4J3"

#: ../components/nitrowall/index.rst:7
msgid ""
"Do **not** connect the NitroWall directly to your LAN as two DHCP servers"
" will be actively distributing IPs within the network, confusing and "
"disconnecting arbitrary devices in your network."
msgstr "请勿****将 NitroWall 直接连接到局域网，因为两个 DHCP 服务器将在网络内主动分配 IP，从而导致网络中任意设备的混乱和断开连接。"

#: ../components/nitrowall/index.rst:9
msgid ""
"Connect the NitroWalls LAN1 port by a patch cable with the Ethernet port "
"of your laptop or PC"
msgstr "用跳线将 NitroWalls LAN1 端口与笔记本电脑或个人电脑的以太网端口连接起来"

#: ../components/nitrowall/index.rst:12
msgid ""
"Note that the standard configuration of OPNsense uses LAN2 as the WAN "
"port and LAN1,3,4 as LAN ports. By default LAN3 and LAN4 are disabled. So"
" you have to enable them (i.e. via bridging)."
msgstr ""
"请注意，OPNsense 的标准配置使用 LAN2 作为 WAN 端口，LAN1、3、4 作为 LAN 端口。默认情况下，LAN3 和 LAN4 "
"是禁用的。因此，必须启用它们（即通过桥接）。"

#: ../components/nitrowall/index.rst:14
msgid "Connect the NitroWall with power supply"
msgstr "用电源连接 NitroWall"

#: ../components/nitrowall/index.rst:15
msgid "Turn on the NitroWall by I/O switch on the front side"
msgstr "通过正面的 I/O 开关打开 NitroWall"

#: ../components/nitrowall/index.rst:16
msgid ""
"After booting (the NitroWall beeps accordingly) it is available via "
"https://192.168.1.1/. You'll get an IP address from NitroWalls DHCP-"
"Server automatically"
msgstr ""
"启动后（NitroWall 发出相应的蜂鸣声），可通过 https://192.168.1.1/ 访问。您将自动从 NitroWall 的 "
"DHCP 服务器获得 IP 地址。"

#: ../components/nitrowall/index.rst:20
msgid "Confirm browser security warning"
msgstr "确认浏览器安全警告"

#: ../components/nitrowall/index.rst:21
msgid "After logging in you are at the admin dashboard of the NitroWall"
msgstr "登录后，您将看到 NitroWall 的管理面板"

#: ../components/nitrowall/index.rst:23
msgid "Login: root"
msgstr "登录： root"

#: ../components/nitrowall/index.rst:24
msgid "Password: opnsense"
msgstr "密码： opnsense"

#: ../components/nitrowall/index.rst:26
msgid ""
"Start the system wizard via the menu of the left-hand side: system →  "
"system wizard → setup. The wizard is going through the configuration with"
" you step-by-step."
msgstr "通过左侧菜单启动系统向导：系统 → 系统向导 → 设置。向导将与您一起逐步完成配置。"

#: ../components/nitrowall/index.rst
msgid "NitroWall backside"
msgstr "NitroWall 背面"

#: ../components/nitrowall/index.rst:31
msgid "NitroWall back side"
msgstr "NitroWall 背面"

#: ../components/nitrowall/index.rst
msgid "NitroWall frontside"
msgstr "NitroWall 正面"

#: ../components/nitrowall/index.rst:36
msgid "NitroWall front side"
msgstr "NitroWall 正面"

#: ../components/nitrowall/index.rst
msgid "dashboard"
msgstr "仪表盘"

#: ../components/nitrowall/index.rst:42
msgid "NitroWall dashboard"
msgstr "NitroWall 仪表板"

#: ../components/nitrowall/index.rst
msgid "reload"
msgstr "刷新"

#: ../components/nitrowall/index.rst:47
msgid "Reload the NitroWall"
msgstr "重新加载 NitroWall"

#: ../components/nitrowall/index.rst:49
msgid ""
"After configuring your NitroWall reload it to make the changes "
"persistent. As soon as the process terminates, you are back again at the "
"dashboard."
msgstr "配置完 NitroWall 后，请重新加载，以使更改持续有效。进程结束后，您将再次回到仪表板。"

#: ../components/nitrowall/index.rst:50
msgid ""
"After the installation is complete, install the necessary updates. To do "
"this, go to System → Firmware → Updates."
msgstr "安装完成后，安装必要的更新。为此，请转到系统 → 固件 → 更新。"

#: ../components/nitrowall/lan-bridge.rst:2
msgid "How to set up a LAN Bridge"
msgstr "如何设置局域网桥接器"

#: ../components/nitrowall/lan-bridge.rst:4
msgid "Details on how to set up a LAN bridge you can find on:"
msgstr "有关如何设置局域网桥接器的详细信息，请参见网站："

#: ../components/nitrowall/lan-bridge.rst:6
msgid "https://docs.opnsense.org/manual/how-tos/lan_bridge.html"
msgstr "https://docs.opnsense.org/manual/how-tos/lan_bridge.html"

#: ../components/nitrowall/ntp.rst:2
msgid "How to Fix NTP"
msgstr "如何修复 NTP"

#: ../components/nitrowall/ntp.rst:4
msgid ""
"By default, the NitroWall arrives at your site with a pre-configured NTPd"
" server. The firewall blocks all access that does not occur via a LAN "
"interface. If you have large deviations in the system time, you can fix "
"them as follows:"
msgstr ""
"默认情况下，NitroWall 在到达您的站点时已预先配置好 NTPd "
"服务器。防火墙会阻止所有不通过局域网接口的访问。如果系统时间出现较大偏差，可以通过以下方法解决："

#: ../components/nitrowall/ntp.rst:6
msgid ""
"Set the time to match your time zone via the cmdline interface (reboot "
"required) using `date`"
msgstr "使用 `date` 通过 cmdline 界面（需要重启）设置时间，使其与时区一致"

#: ../components/nitrowall/ntp.rst:7
msgid "Switch to the OPNsense GUI again"
msgstr "再次切换到 OPNsense 图形用户界面"

#: ../components/nitrowall/ntp.rst:8
msgid "Go to Menu → Services → Network Time → General"
msgstr "转到菜单 → 服务 → 网络时间 → 常规"

#: ../components/nitrowall/ntp.rst:9
msgid ""
"Set \"Interfaces\" from \"All (recommended)\" to \"LAN\" (Or WAN if you "
"are connected via WAN interface)"
msgstr "将 \"接口 \"从 \"所有（推荐）\"设置为 \"局域网\"（或广域网，如果您通过广域网接口连接）。"

#: ../components/nitrowall/ntp.rst:10
msgid "Restart the service e.g. by the restart button in the top-right corner"
msgstr "重启服务，例如右上角的重启按钮"

#: ../components/nitrowall/ntp.rst
msgid "Set Interface to LAN"
msgstr "将接口设置为 LAN"

#: ../components/nitrowall/ntp.rst
msgid "NTP restart"
msgstr "重新启动 NTP"

#: ../components/nitrowall/nw750/factory-reset.rst:6
msgid ""
"Make sure the NW750 is connected to a power source or has at least 50% "
"batterie left."
msgstr "确保 NW750 已连接到电源或电池电量至少剩余 50%。"

#: ../components/nitrowall/nw750/factory-reset.rst:7
msgid ""
"Press and hold the reset button (next to the microSD card slot) for 10 "
"seconds."
msgstr "按住重置按钮（microSD 卡插槽旁边）10 秒钟。"

#: ../components/nitrowall/nw750/factory-reset.rst:8
msgid "This will trigger a reboot which takes ca. 3 minutes."
msgstr "这将触发重启，耗时约 3 分钟。"

#: ../components/nitrowall/nw750/factory-reset.rst:9
msgid ""
"In order to be able to change your device's IMEI, `reinstall blue-merle "
"<https://github.com/srlabs/blue-merle/tree/main#installation>`_."
msgstr ""
"要更改设备的 IMEI，请重新安装 blue-merle <https://github.com/srlabs/blue-"
"merle/tree/main#installation>`_。"

#: ../components/nitrowall/nw750/firmware-update.rst:5
msgid ""
"For the general firmware update follow `this guide <https://docs.gl-"
"inet.com/router/en/4/interface_guide/firmware_upgrade/>`_ . Afterwards we"
" need to reinstall blue-merle:"
msgstr ""
"关于一般固件更新，请遵循本指南 <https://docs.gl-"
"inet.com/router/en/4/interface_guide/firmware_upgrade/>``_ 。之后，我们需要重新安装 "
"blue-merle："

#: ../components/nitrowall/nw750/firmware-update.rst:7
msgid "Make sure the NW750 has a working Internet connection"
msgstr "确保 NW750 的互联网连接正常"

#: ../components/nitrowall/nw750/firmware-update.rst:8
msgid ""
"Connect with the WiFi and login to the alternativ OpenWrt at "
"https://192.168.8.1/cgi-bin/luci/ using username root and the same "
"password used for the other web interface"
msgstr ""
"使用用户名 root 和其他网络界面使用的相同密码，连接 WiFi 并登录备用 OpenWrt（https://192.168.8.1/cgi-"
"bin/luci/）。"

#: ../components/nitrowall/nw750/firmware-update.rst:12
msgid "Go to \"System\" -> Software"
msgstr "转到 \"系统\" -> 软件"

#: ../components/nitrowall/nw750/firmware-update.rst:16
msgid ""
"Click \"update list\". This can take a while but if it fails it means you"
" have no Internet connection."
msgstr "点击 \"更新列表\"。这可能需要一些时间，但如果失败，则意味着您没有网络连接。"

#: ../components/nitrowall/nw750/firmware-update.rst:24
msgid ""
"click \"upload packackge\" and upload `blue-merle "
"<https://www.nitrokey.com/files/ci/nitrowall/latest_blue-merle.ipk>`_"
msgstr ""
"点击 \"上传 packackge \"并上传 `blue-merle "
"<https://www.nitrokey.com/files/ci/nitrowall/latest_blue-merle.ipk>`_"

#: ../components/nitrowall/nw750/firmware-update.rst:28
msgid "Click \"install\""
msgstr "点击 \"安装"

#: ../components/nitrowall/nw750/firmware-update.rst:34
msgid "Your firmware has been successfully updated."
msgstr "您的固件已成功更新。"

#: ../components/nitrowall/nw750/imei-change.rst:2
msgid "Changing IMEI"
msgstr "更改 IMEI"

#: ../components/nitrowall/nw750/imei-change.rst:4
msgid ""
"To be able to change the IMEI of your device, the software `blue merle "
"<https://github.com/srlabs/blue-merle>`_ is pre-installed."
msgstr "要更改设备的 IMEI，需要预先安装软件 `blue merle <https://github.com/srlabs/blue-merle>`_。"

#: ../components/nitrowall/nw750/imei-change.rst:6
msgid ""
"After performing a factory reset, you need to `reinstall "
"<https://github.com/srlabs/blue-merle#installation>`_ blue-merle."
msgstr ""
"执行出厂重置后，需要重新安装 <https://github.com/srlabs/blue-merle#installation>`_ "
"blue-merle。"

#: ../components/nitrowall/nw750/imei-change.rst:10
msgid ""
"There a different ways to change the IMEI. The simplest is to use the "
"toogle on the side of the NW750:"
msgstr "更改 IMEI 有多种方法。最简单的方法是使用 NW750 侧面的拨号器："

#: ../components/nitrowall/nw750/imei-change.rst:12
msgid "Switch the hardware toggle."
msgstr "切换硬件开关。"

#: ../components/nitrowall/nw750/imei-change.rst:13
msgid ""
"Follow the instructions on the display, which will prompt you to replace "
"the SIM card eventually."
msgstr "按照显示屏上的提示操作，最终将提示您更换 SIM 卡。"

#: ../components/nitrowall/nw750/imei-change.rst:14
msgid ""
"After replacing the SIM card, flip the toggle again. This changes the "
"IMEI and powers off your device."
msgstr "更换 SIM 卡后，再次翻转拨动器。这将更改 IMEI 并关闭设备电源。"

#: ../components/nitrowall/nw750/imei-change.rst:15
msgid "You should change your geographical location before booting again."
msgstr "再次启动前，您应该更改地理位置。"

#: ../components/nitrowall/nw750/imei-change.rst:17
msgid ""
"For more details see `this documentation <https://github.com/srlabs/blue-"
"merle/blob/main/Documentation.pdf>`_."
msgstr ""
"更多详情，请参阅 \"本文档 <https://github.com/srlabs/blue-"
"merle/blob/main/Documentation.pdf>`_\"。"

#: ../components/nitrowall/nw750/imei-change.rst:19
msgid ""
"Occasionally, commands executed on the device may take longer than "
"expected. This can result in the display switching off (standby) for a "
"few seconds before displaying the expected final message (e.g. "
"instructions to replace the SIM card). Wait for the final message to "
"appear before pulling the switch again. If no message is displayed after "
"a minute, the script might have exited or you might have missed the "
"message. In this case, pull the switch to continue / restart the process."
msgstr ""
"有时，在设备上执行命令所需的时间可能比预期的要长。这可能导致显示屏在显示预期的最终信息（例如更换 SIM "
"卡的说明）之前关闭（待机）几秒钟。请等待最终信息出现后再拉动开关。如果一分钟后仍未显示信息，则可能是脚本已退出或您错过了信息。在这种情况下，拉动开关继续/重新启动程序。"

#: ../components/nitrowall/nw750/index.rst:2
msgid "Nitrowall NW750"
msgstr "Nitrowall NW750"

#: ../components/nitrowall/nw750/index.rst:9
msgid "Connect to the Wifi network **GL-E750-XXX** with password: **goodlife**."
msgstr "连接到 Wifi 网络 **GL-E750-XXX**，输入密码：密码：**goodlife**。"

#: ../components/nitrowall/nw750/index.rst:10
msgid "Open the webinterface at http://192.168.8.1"
msgstr "打开 http://192.168.8.1 的网络界面"

#: ../components/nitrowall/nw750/index.rst:11
msgid ""
"For more help see `this documentation <https://docs.gl-"
"inet.com/router/en/4/interface_guide/>`_"
msgstr "如需更多帮助，请参阅`本文档 <https://docs.gl-inet.com/router/en/4/interface_guide/>`_"

#: ../components/nitrowall/sealed-hardware.rst:4
msgid ""
"Your NitroWall has been delivered in a sealed packaging and with sealed "
"screws. We will send you a picture of your NitroWall before shipping. "
"Please compare the image to your packaged NitroWall. If you notice any "
"changes, please contact us to arrange further action."
msgstr ""
"您的 NitroWall 已在密封包装和密封螺钉中交付。发货前，我们会给您发送一张 NitroWall 的图片。请将图片与包装好的 "
"NitroWall 进行对比。如果发现任何变化，请联系我们安排进一步的行动。"

#: ../components/nitrowall/sealed-hardware.rst:-1
msgid "sealing number one"
msgstr "一号密封"

#: ../components/nitrowall/sealed-hardware.rst:-1
msgid "sealing number two"
msgstr "第二道密封"

#: ../components/nitrowall/sealed-hardware.rst:-1
msgid "sealing number three"
msgstr "三号密封"

#: ../components/nkpk/index.rst:2
msgid "Nitrokey Passkey"
msgstr "密码钥匙"

#: ../components/nkpk/index.rst:6
msgid ""
"The Nitrokey Passkey is the successor to the Nitrokey FIDO2. It is build "
"on top of the technologies and framework used within the Nitrokey 3. Find"
" the latest `release notes`_ on GitHub."
msgstr ""
"Nitrokey Passkey 是 Nitrokey FIDO2 的后续产品。它建立在 Nitrokey 3 所使用的技术和框架之上。请在 "
"GitHub 上查找最新的 \"发布说明\"。"

#: ../components/nkpk/index.rst:9
msgid ""
"Please see the :doc:`FIDO2 <../fido2/index>` pages for more FIDO2 related"
" documentation."
msgstr "请参阅 :doc:`FIDO2 <../fido2/index>` 页面获取更多 FIDO2 相关文档。"

#: ../components/nkpk/index.rst:11
msgid ""
"Currently there is only one firmware version, so no firmware update is "
"necessary."
msgstr "目前只有一个固件版本，因此无需进行固件升级。"

#: ../components/pro/faq.rst:2
msgid "Nitrokey Pro 2 FAQ"
msgstr "Nitrokey Pro 2 常见问题解答"

#: ../components/pro/faq.rst:12 ../components/start/faq.rst:11
#: ../components/storage/faq.rst:16
msgid "**Q:** What are the default PINs?"
msgstr "**问：** 什么是默认 PIN 码？"

#: ../components/pro/faq.rst:8 ../components/start/faq.rst:7
#: ../components/storage/faq.rst:10
msgid "**User PIN:** \"123456\""
msgstr "**用户密码：** \"123456\""

#: ../components/pro/faq.rst:9 ../components/start/faq.rst:8
#: ../components/storage/faq.rst:11
msgid "**Administrator PIN:** \"12345678\""
msgstr "**管理员密码：** \"12345678\""

#: ../components/pro/faq.rst:11 ../components/start/faq.rst:10
#: ../components/storage/faq.rst:14
msgid ""
"We strongly recommend to change these PINs/password to user-chosen values"
" before using the Nitrokey."
msgstr "我们强烈建议在使用 Nitrokey 之前将这些 PIN 码/密码更改为用户选择的值。"

#: ../components/shared-faqs/pins.rst.inc:8
msgid ""
"Nitrokey Storage's PINs can be up to 20 digits long and can consist of "
"numbers, characters and special characters. Note: When using GnuPG or "
"OpenSC, 32 character long PINs can be used but aren't supported by "
"Nitrokey App."
msgstr ""
"Nitrokey 存储的 PIN 最长可达 20 位，可以由数字、字符和特殊字符组成。注意：使用 GnuPG 或 OpenSC 时，可以使用 32"
" 个字符长的 PIN，但 Nitrokey App 不支持。"

#: ../components/shared-faqs/pins.rst.inc:14
msgid ""
"The user PIN is at least 6-digits long and is used to get access to the "
"contect of the Nitrokey. This is the PIN you will use a lot in every day "
"use e.g. for decrypting messages, for unlocking your encrypted storage "
"(NK Storage only) etc."
msgstr ""
"用户密码至少为 6 位数，用于访问 Nitrokey 的连接。您在日常使用中会经常用到这个 PIN 码，例如用于解密信息、解锁加密存储空间（仅限 "
"NK 存储空间）等。"

#: ../components/shared-faqs/pins.rst.inc:34
msgid "**Q:** What is the Admin PIN for?"
msgstr "**问：** 管理员密码有什么用？"

#: ../components/shared-faqs/pins.rst.inc:25
msgid ""
"The admin PIN is at least 8-digits long and is used to change "
"contents/settings of the Nitrokey. That is to say after initializing the "
"Nitrokey you probably won't need this PIN too often (e.g. if you want to "
"add another password to the password safe of the Nitrokey Pro or Nitrokey"
" Storage)."
msgstr ""
"管理员密码至少为 8 位数，用于更改 Nitrokey 的内容/设置。也就是说，在初始化 Nitrokey 后，您可能不会经常用到该 PIN "
"码（例如，如果您想在 Nitrokey Pro 或 Nitrokey Storage 的密码保险箱中添加另一个密码）。"

#: ../components/pro/faq.rst:19
msgid ""
"**Q:** Why does my Nitrokey Pro hang when switching between nitrokey-app "
"and GnuPG?"
msgstr "**问：** 为什么我的 Nitrokey Pro 在切换 nitrokey-app 和 GnuPG 时会挂起？"

#: ../components/pro/faq.rst:17 ../components/storage/faq.rst:32
msgid ""
"GnuPG and nitrokey-app sometimes tend to hand each other. This is a known"
" problem and it can be fixed by re-inserting the Nitrokey into the USB "
"slot."
msgstr "GnuPG 和 nitrokey-app 有时会互相干扰。这是一个已知问题，只要将 Nitrokey 重新插入 USB 插槽即可解决。"

#: ../components/pro/faq.rst:33 ../components/start/faq.rst:27
msgid "**Q:** Which drivers/tools can be used?"
msgstr "**问：** 可以使用哪些驱动程序/工具？"

#: ../components/pro/faq.rst:22 ../components/start/faq.rst:16
msgid ""
"GnuPG is required for many use cases. It is a command line tool but "
"usually you don't need to invoke it directly but use another application "
"with user interface."
msgstr "GnuPG 在很多情况下都需要使用。它是一个命令行工具，但通常不需要直接调用它，而是使用另一个带用户界面的应用程序。"

#: ../components/pro/faq.rst:26 ../components/start/faq.rst:20
msgid ""
"Don't use GnuPG in parallel with OpenSC or another PKCS#11 driver because"
" both may interfere and unexpected issues may result."
msgstr "不要将 GnuPG 与 OpenSC 或其他 PKCS#11 驱动程序同时使用，因为两者可能会相互干扰，并可能导致意外问题。"

#: ../components/pro/faq.rst:28 ../components/start/faq.rst:22
msgid ""
"Install GPG4Win which contains Gnu Privacy Assistant (GPA) and GnuPG "
"(GPG). Start Gnu Privacy Assistant (GPA) or another application such as "
"your email client to use GnuPG. Advanced users could use GnuPG directly "
"(command line). Please note: The Fellowship smart card is similar to the "
"Nitrokey Pro so that this instructions work Nitrokey as well. In general "
"the official documentation is recommended."
msgstr ""
"安装 GPG4Win，其中包含 Gnu Privacy Assistant (GPA) 和 GnuPG (GPG)。启动 Gnu Privacy "
"Assistant (GPA) 或其他应用程序，如电子邮件客户端，以使用 GnuPG。高级用户可直接使用 "
"GnuPG（命令行）。请注意：Fellowship 智能卡与 Nitrokey Pro 相似，因此本说明也适用于 "
"Nitrokey。一般情况下，建议使用官方文档。"

#: ../components/pro/faq.rst:36 ../components/storage/faq.rst:53
msgid "Encryption of 50kiB of data:"
msgstr "加密 50kiB 数据："

#: ../components/pro/faq.rst:38 ../components/storage/faq.rst:55
msgid "256 bit AES, 2048 bytes per command -> 880 bytes per second"
msgstr "256 位 AES，每条命令 2048 字节 -> 每秒 880 字节"

#: ../components/pro/faq.rst:39 ../components/storage/faq.rst:56
msgid "128 bit AES, 2048 bytes per command -> 893 bytes per second"
msgstr "128 位 AES，每条命令 2048 字节 -> 每秒 893 字节"

#: ../components/pro/faq.rst:40 ../components/storage/faq.rst:57
msgid "256 bit AES, 240 bytes per command -> 910 bytes per second"
msgstr "256 位 AES，每条命令 240 字节 -> 每秒 910 字节"

#: ../components/pro/faq.rst:41 ../components/storage/faq.rst:58
msgid "128 bit AES, 240 bytes per command -> 930 bytes per second"
msgstr "128 位 AES，每条命令 240 字节 -> 每秒 930 字节"

#: ../components/pro/faq.rst:48
msgid ""
"**Q:** Does the Nitrokey Pro contain a secure chip or just a normal "
"microcontroller?"
msgstr "**问：** Nitrokey Pro 包含安全芯片还是普通微控制器？"

#: ../components/pro/faq.rst:48
msgid "Nitrokey Pro contains a tamper resistant smart card."
msgstr "Nitrokey Pro 包含一张防篡改智能卡。"

#: ../components/pro/faq.rst:54
msgid "**Q:** Is the Nitrokey Pro Common Criteria or FIPS certified?"
msgstr "**问：** Nitrokey Pro 是否通过了通用标准或 FIPS 认证？"

#: ../components/pro/faq.rst:51
msgid ""
"The security controller (NXP Smart Card Controller P5CD081V1A and its "
"major configurations P5CC081V1A, P5CN081V1A, P5CD041V1A, P5CD021V1A and "
"P5CD016V1A each with IC dedicated Software) is Common Criteria EAL 5+ "
"certified up to the OS level (`Certification Report "
"<https://commoncriteriaportal.org/files/epfiles/0555a_pdf.pdf>`__, "
"`Security Target "
"<https://commoncriteriaportal.org/files/epfiles/0555b_pdf.pdf>`__, "
"`Maintenance Report "
"<https://commoncriteriaportal.org/files/epfiles/0555_ma1a_pdf.pdf>`__, "
"`Maintenance ST "
"<https://commoncriteriaportal.org/files/epfiles/0555_ma1b_pdf.pdf>`__)."
msgstr ""
"安全控制器（恩智浦智能卡控制器 P5CD081V1A 及其主要配置 "
"P5CC081V1A、P5CN081V1A、P5CD041V1A、P5CD021V1A 和 P5CD016V1A，每个配置都带有 IC "
"专用软件）已通过通用标准 EAL 5+ 认证，最高达到操作系统级别（\"认证报告 "
"<https://commoncriteriaportal.org/files/epfiles/0555a_pdf.pdf>`__，`安全目标 "
"<https://commoncriteriaportal.org/files/epfiles/0555b_pdf.pdf>`___，`维护报告 "
"<https://commoncriteriaportal.org/files/epfiles/0555_ma1a_pdf.pdf>`__，`维护"
" ST "
"<https://commoncriteriaportal.org/files/epfiles/0555_ma1b_pdf.pdf>`__）。"

#: ../components/pro/faq.rst:58
msgid ""
"**Q:** How can I use the True Random Number Generator (TRNG) of the "
"Nitrokey Pro for my applications?"
msgstr "**问：** 如何在应用程序中使用 Nitrokey Pro 的真实随机数生成器（TRNG）？"

#: ../components/pro/faq.rst:57 ../components/storage/faq.rst:73
msgid ""
"Both devices are compatible to the OpenPGP Card, so that `scdrand`_ "
"should work. `This script`_ may be useful. The user comio `created a "
"systemd file`_ to use scdrand and thus the TRNG more generally. He "
"created an `ebuild for Gentoo`_, too."
msgstr ""
"这两种设备都与 OpenPGP 卡兼容，因此 `scdrand`_ 应该可以工作。这个脚本可能会有用。用户 comio `created a "
"systemd file`_ 以使用 scdrand，从而更广泛地使用 TRNG。他还创建了一个用于 Gentoo 的`ebuild`_。"

#: ../components/pro/faq.rst:61 ../components/storage/faq.rst:77
msgid ""
"Nitrokey Pro and Nitrokey Storage use a True Random Number Generator "
"(TRNG) for generating keys on the device. The entropy generated by the "
"TRNG is used for the entire key length. Therefore the TRNG is compliant "
"to `BSI TR-03116`_."
msgstr ""
"Nitrokey Pro 和 Nitrokey Storage 使用真实随机数发生器 (TRNG) 在设备上生成密钥。TRNG "
"生成的熵用于整个密钥长度。因此，TRNG 符合 `BSI TR-03116`_。"

#: ../components/pro/faq.rst:65 ../components/storage/faq.rst:81
msgid "The TRNG provides about 40 kbit/s."
msgstr "TRNG 的传输速率约为 40 kbit/s。"

#: ../components/pro/faq.rst:68
msgid ""
"The Nitrokey Pro doesn't contain storage capability for ordinary data (it"
" can only store cryptographic keys and certificates)."
msgstr "Nitrokey Pro 不具备存储普通数据的功能（只能存储加密密钥和证书）。"

#: ../components/pro/index.rst:2
msgid "Nitrokey Pro 2"
msgstr "Nitrokey Pro 2"

#: ../components/pro/2fa-google.rst.inc:2
msgid "Two-factor Authentication for Google"
msgstr "谷歌双因素身份验证"

#: ../components/pro/2fa-google.rst.inc:6
msgid ""
"These are the basic steps for registering the Nitrokey Pro or Nitrokey "
"Storage as a second factor of a Google account:"
msgstr "以下是将 Nitrokey Pro 或 Nitrokey Storage 注册为 Google 账户第二要素的基本步骤："

#: ../components/pro/2fa-google.rst.inc:8
msgid ""
"Go to `https://myaccount.google.com/security#signin "
"<https://myaccount.google.com/intro/security>`__"
msgstr ""
"转到 `https://myaccount.google.com/security#signin "
"<https://myaccount.google.com/intro/security>`__"

#: ../components/pro/2fa-google.rst.inc:11
msgid "Click “2-Step Verification” on the right side"
msgstr "点击右侧的 \"2 步验证"

#: ../components/pro/2fa-google.rst.inc:13
msgid ""
"You need to define a first 2-Step Verfication (e.g. your phone number) "
"method to have access to the alternative second step option (the first "
"2-Step Verification can’t be the security key)"
msgstr "您需要定义第一个 2 步验证（例如您的电话号码）方法，才能访问替代的第二步选项（第一个 2 步验证不能是安全密钥）"

#: ../components/pro/2fa-google.rst.inc:17
msgid ""
"Choose “Authenticator App” as second step (though you won’t actually need"
" the app)"
msgstr "选择 \"Authenticator App \"作为第二步（但实际上您并不需要该应用程序）"

#: ../components/pro/2fa-google.rst.inc:20
msgid ""
"Choose Android -> press on “Can’t scan it” below the qrcode to see the "
"secret key"
msgstr "选择 Android -> 点击 qrcode 下方的 \"无法扫描\"，查看密钥"

#: ../components/pro/2fa-google.rst.inc:23
msgid ""
"Copy the key (you can ignore the whitespaces, they do not get copied "
"anyway!) and paste the key into the corresponding field in the Nitrokey "
"App"
msgstr "复制密钥（可以忽略空格，反正它们不会被复制！），然后将密钥粘贴到 Nitrokey 应用程序的相应字段中"

#: ../components/pro/2fa-google.rst.inc:27
msgid ""
"Click “Next” and follow the instructions (but you use the Nitrokey App "
"instead of the Google Authenticator app to generate the keys)"
msgstr "单击 \"下一步\"，然后按说明操作（但您要使用 Nitrokey 应用程序而不是 Google Authenticator 应用程序来生成密钥）"

#: ../components/pro/2fa-google.rst.inc:30
msgid ""
"It is possible to use the same secret key for the Google Autenticator app"
" and the Nitrokey App as well. Just make sure to follow the above "
"procedure and use the qrcode for the Authenticator app afterwards before "
"clicking “Next”. Now you can use either the Google Authenticator app or "
"the Nitrokey App."
msgstr ""
"Google Autenticator 应用程序和 Nitrokey 应用程序也可以使用相同的密匙。请确保按照上述步骤操作，并在点击 \"下一步 "
"\"之前使用 Authenticator 应用程序的 qrcode。现在你可以使用 Google Authenticator 应用程序或 "
"Nitrokey 应用程序了。"

#: ../components/pro/2fa-nextcloud.rst.inc:2
msgid "Two-factor Authentication for Nextcloud accounts"
msgstr "Nextcloud 账户的双因素身份验证"

#: ../components/pro/2fa-nextcloud.rst.inc:6
msgid ""
"These are the basic steps for registering the Nitrokey Pro or Nitrokey "
"Storage as a second factor of a Nextcloud account."
msgstr "以下是将 Nitrokey Pro 或 Nitrokey Storage 注册为 Nextcloud 账户第二要素的基本步骤。"

#: ../components/pro/2fa-nextcloud.rst.inc:8
msgid ""
"At first, log in to your Nextcloud account, click on the top right symbol"
" of your account and open the settings menu."
msgstr "首先，登录 Nextcloud 账户，点击账户右上角的符号并打开设置菜单。"

#: ../components/pro/2fa-nextcloud.rst.inc:15
msgid "Now choose “Security” on the left hand side."
msgstr "现在选择左侧的 \"安全\"。"

#: ../components/pro/2fa-nextcloud.rst.inc:22
msgid ""
"Now you can tick the box reading “Enable TOTP”. There is shown the TOTP "
"secret which we need to add to our Nitrokey via the Nitrokey App."
msgstr "现在可以勾选 \"启用 TOTP \"复选框。这里显示的是我们需要通过 Nitrokey 应用程序添加到 Nitrokey 中的 TOTP 密码。"

#: ../components/pro/2fa-nextcloud.rst.inc:29
msgid "Copy and save secret code into the Nitrokey App."
msgstr "将暗码复制并保存到 Nitrokey App 中。"

#: ../components/pro/2fa-nextcloud.rst.inc:41
msgid ""
"Now we request a one-time password for the Nextcloud to verify the "
"process by inserting the password on the website and pressing “verify”."
msgstr "现在，我们请求为 Nextcloud 设置一个一次性密码，在网站上输入密码并按 \"验证 \"键，即可完成验证过程。"

#: ../components/pro/2fa-nextcloud.rst.inc:53
msgid ""
"From now on, when signing in you need an OTP additionally to your "
"password. Get one by the Nitrokey App like before and insert it in when "
"logging in."
msgstr "从现在起，登录时除了密码外，您还需要一个 OTP。像以前一样，通过 Nitrokey App 获取一个，然后在登录时插入。"

#: ../components/pro/2fa-nextcloud.rst.inc:60
msgid ""
"Nextcloud provides you with backup codes, in case you lost your Nitrokey."
" It is recommended to print out these codes and store them somewhere save"
" otherwise you might not be able to log in to your account anymore!"
msgstr "Nextcloud 为您提供备份密码，以防您丢失 Nitrokey。建议将这些代码打印出来，保存在某个地方，否则可能无法再登录账户！"

#: ../components/pro/2fa-odoo.rst.inc:21
msgid "Video: Two-Factor Authentication With The Nitrokey Pro in Odoo"
msgstr "视频：在 Odoo 中使用 Nitrokey Pro 进行双因素身份验证"

#: ../components/pro/linux/disk-encryption-luks.rst:2
msgid "Full-Disk Encryption With cryptsetup/LUKS"
msgstr "使用 cryptsetup/LUKS 进行全磁盘加密"

#: ../components/pro/linux/disk-encryption-luks.rst:6
msgid ""
"This guide shows how to configure LUKS-encrypted volumes, to authenticate"
" at boot with `Nitrokey Pro <https://shop.nitrokey.com/shop/product/nk-"
"pro-2-nitrokey-pro-2-3>`__ or `Nitrokey Storage "
"<https://shop.nitrokey.com/shop/product/nitrokey-storage-2-56>`__."
msgstr ""
"本指南介绍如何配置 LUKS 加密卷，以便在启动时使用 `Nitrokey Pro "
"<https://shop.nitrokey.com/shop/product/nk-pro-2-nitrokey-pro-2-3>`__ 或 "
"`Nitrokey Storage <https://shop.nitrokey.com/shop/product/nitrokey-"
"storage-2-56>`__ 进行身份验证。"

#: ../components/pro/linux/disk-encryption-luks.rst:8
msgid ""
"To provide some background, cryptsetup-initramfs now has support for "
"using OpenPGP smart cards like the Nitrokey Pro and Nitrokey Storage to "
"unlock LUKS-encrypted volumes. Once you finish the setup, you will just "
"need to insert your Nitrokey at boot and enter your User PIN, instead of "
"typing in your regular disk encryption passphrase."
msgstr ""
"为了提供一些背景信息，cryptsetup-initramfs 现在支持使用 OpenPGP 智能卡（如 Nitrokey Pro 和 "
"Nitrokey Storage）来解锁 LUKS 加密卷。完成设置后，你只需在启动时插入 Nitrokey "
"并输入用户密码，而无需输入常规的磁盘加密口令。"

#: ../components/pro/linux/disk-encryption-luks.rst:14
msgid "These instructions have been tested on Ubuntu 20.04 and Debian 10."
msgstr "这些说明已在 Ubuntu 20.04 和 Debian 10 上进行了测试。"

#: ../components/pro/linux/disk-encryption-luks.rst:18
msgid ""
"The following guide can potentially lock you out of your computer. You "
"should be aware of these risks, and we recommend you use the script below"
" on a secondary computer, or after a full backup as you might lose your "
"data."
msgstr "以下指南可能会将你锁定在电脑之外。你应该意识到这些风险，我们建议你在第二台电脑上使用下面的脚本，或者在完整备份后使用，因为你可能会丢失数据。"

#: ../components/pro/linux/disk-encryption-luks.rst:26
msgid "An Ubuntu or Debian computer with at least one LUKS-encrypted volume."
msgstr "至少有一个 LUKS 加密卷的 Ubuntu 或 Debian 计算机。"

#: ../components/pro/linux/disk-encryption-luks.rst:28
msgid ""
"See the section below to determine which method is compatible with this "
"guide."
msgstr "请参阅以下部分，确定哪种方法与本指南兼容。"

#: ../components/pro/linux/disk-encryption-luks.rst:30
msgid ""
"A Nitrokey Pro 2 or Nitrokey Storage 2 `initialized <openpgp.html>`_ with"
" keys."
msgstr "带有密钥的 Nitrokey Pro 2 或 Nitrokey Storage 2 \"初始化 <openpgp.html>`_ \"。"

#: ../components/pro/linux/disk-encryption-luks.rst:35
#: ../components/software/nitropy/windows/installation.rst:31
msgid "Known Issues"
msgstr "已知问题"

#: ../components/pro/linux/disk-encryption-luks.rst:37
msgid ""
"So far, the script works only with manually-partitioned volumes, that are"
" composed of an unencrypted ``/boot`` partition, and an encrypted root "
"``/`` partition."
msgstr "到目前为止，该脚本仅适用于手动分区的卷，这些卷由一个未加密的 ``/boot`` 分区和一个加密的 root ``/`` 分区组成。"

#: ../components/pro/linux/disk-encryption-luks.rst:41
msgid ""
"Please do not select the automatic full-disk encryption provided by the "
"operating system you are using for this guide. You will face recurrent "
"errors when the partitioning is done automatically, using the "
"installation interface on Ubuntu and Debian."
msgstr "请不要选择本指南所使用的操作系统提供的自动全盘加密功能。当使用 Ubuntu 和 Debian 的安装界面自动完成分区时，您会经常出现错误。"

#: ../components/pro/linux/disk-encryption-luks.rst:49
msgid "Install dependencies"
msgstr "安装依赖项"

#: ../components/pro/linux/disk-encryption-luks.rst:56
msgid "Create smartcard-luks directory"
msgstr "创建 smartcard-luks 目录"

#: ../components/pro/linux/disk-encryption-luks.rst:63
msgid "Download the smartcard-luks-script"
msgstr "下载 smartcard-luks 脚本"

#: ../components/pro/linux/disk-encryption-luks.rst:71
msgid "Export the public key"
msgstr "导出公开密钥"

#: ../components/pro/linux/disk-encryption-luks.rst:73
msgid "To export your public key from GnuPG’s keyring:"
msgstr "从 GnuPG 的密钥环中导出公钥："

#: ../components/pro/linux/disk-encryption-luks.rst:80
msgid ""
"If you already have uploaded a public key to a keyserver (or have it "
"stored somewhere else), you should retrieve it in the way you are most "
"comfortable with, and proceed to step 5."
msgstr "如果你已将公钥上传到钥匙服务器（或已将其存储在其他地方），则应采用你最熟悉的方式获取公钥，然后进入第 5 步。"

#: ../components/pro/linux/disk-encryption-luks.rst:84
msgid "Determine and verify the correct LUKS device name for your root-partition:"
msgstr "为根分区确定并验证正确的 LUKS 设备名称："

#: ../components/pro/linux/disk-encryption-luks.rst:92
msgid ""
"Usually this should be something like `nvme0n1p3_crypt` (for NitroPC) or "
"`sda3_crypt` (for NitroPads).  You can and should crosscheck that the "
"UUID referred inside `/etc/crypttab` is the designated partition by "
"checking the symbolic link inside `/dev/disks/by-uuid/`."
msgstr ""
"通常应为 `nvme0n1p3_crypt`（NitroPC）或 `sda3_crypt`（NitroPads）。  你可以也应该通过检查 "
"`/dev/disks/by-uuid/`中的符号链接来核对 `/etc/crypttab`中的 UUID 是否为指定分区。"

#: ../components/pro/linux/disk-encryption-luks.rst:97
msgid ""
"Execute the script with the luks device name (e.g., `nvme0n1p3_crypt`) "
"and `pubkey.asc` as arguments."
msgstr "以 luks 设备名称（如 `nvme0n1p3_crypt`）和 `pubkey.asc` 作为参数执行脚本。"

#: ../components/pro/linux/disk-encryption-luks.rst:104
msgid ""
"Once, you run the script with the OpenPGP public key as argument, it "
"automatically sets up a new LUKS secret, encrypts it against that public "
"key, and sets up crypttab, LUKS, initramfs, and GRUB."
msgstr ""
"将 OpenPGP 公钥作为参数运行脚本后，它会自动设置一个新的 LUKS 密钥，并根据该公钥对其进行加密，然后设置 "
"crypttab、LUKS、initramfs 和 GRUB。"

#: ../components/pro/linux/disk-encryption-luks.rst:108
msgid "First you will be prompted for the ``User PIN``"
msgstr "首先，系统会提示您输入 \"用户密码\"。"

#: ../components/pro/linux/disk-encryption-luks.rst:113
msgid ""
"Once you unlock the Nitrokey, you will be prompted for your ``OLD "
"passphrase``. It is the passphrase you entered to encrypt your volume at "
"installation."
msgstr "解锁 Nitrokey 后，系统会提示您输入 \"旧密码\"。这是安装时加密加密卷时输入的口令。"

#: ../components/pro/linux/disk-encryption-luks.rst:119
msgid ""
"This is a fall-back alternative in case you lose your Nitrokey, or if "
"it’s unavailable. So far, it was not tested, and users must be aware of "
"the risk of getting locked out of their computer, if the fall-back method"
" does not work."
msgstr ""
"这是在丢失 Nitrokey 或无法使用 Nitrokey "
"时的备用方法。到目前为止，还没有对它进行过测试，用户必须意识到，如果后备方法不起作用，就有可能被锁定在电脑之外。"

#: ../components/pro/linux/disk-encryption-luks.rst:124
msgid ""
"Once you enter the passphrase, the script finishes the setup in about one"
" minute. Do not interrupt the script, or you might get locked out of your"
" computer after reboot."
msgstr "输入密码后，脚本会在一分钟内完成设置。请勿中断脚本，否则重启后可能会被锁定在电脑之外。"

#: ../components/pro/linux/disk-encryption-luks.rst:131
msgid "Done!"
msgstr "完成！"

#: ../components/pro/linux/disk-encryption-luks.rst:133
msgid ""
"By now you must reboot, and you should be able to use your Nitrokey to "
"unlock your encrypted drive."
msgstr "现在你必须重新启动，然后就可以使用 Nitrokey 解锁加密硬盘了。"

#: ../components/pro/linux/disk-encryption-luks.rst:139
msgid "After reboot you should be prompted for your User PIN"
msgstr "重新启动后，系统会提示您输入用户密码"

#: ../components/pro/linux/disk-encryption-luks.rst:144
msgid "Enter your User PIN to unlock the drive"
msgstr "输入用户密码解锁硬盘"

#: ../components/pro/linux/disk-encryption-luks.rst:151
msgid "Further Hints"
msgstr "更多提示"

#: ../components/pro/linux/disk-encryption-luks.rst:154
msgid "Change Passphrase"
msgstr "更改密码"

#: ../components/pro/linux/disk-encryption-luks.rst:156
msgid ""
"Once this setup is done, you should not use the (gnome) *disks* utility "
"anymore to change the (fallback) passphrase. The proper way to do this is"
" to call *cryptsetup* directly like this:"
msgstr "设置完成后，就不应该再使用（gnome）*disks* 工具来更改（后备）口令了。正确的方法是像这样直接调用 *cryptsetup*："

#: ../components/pro/linux/disk-encryption-luks.rst:164
msgid "With `nvme0n1p3` being the partition you set up the keys for."
msgstr "其中 `nvme0n1p3` 是你设置密钥的分区。"

#: ../components/pro/linux/disk-encryption-luks.rst:167
msgid "Use Multiple Keys"
msgstr "使用多个按键"

#: ../components/pro/linux/disk-encryption-luks.rst:169
msgid ""
"It is easy to use multiple (hardware) security keys so that each of them "
"is able to unlock the LUKS drive independently. Just export multiple "
"public keys and also *pass multiple keys* to the setup script like this:"
msgstr "使用多个（硬件）安全密钥很容易，这样每个密钥都能独立解锁 LUKS 硬盘。只需导出多个公钥，并像这样将多个密钥*传递给设置脚本即可："

#: ../components/pro/linux/disk-encryption-luks.rst:179
msgid "Set Cardholder Name"
msgstr "设置持卡人姓名"

#: ../components/pro/linux/disk-encryption-luks.rst:181
msgid ""
"During the PIN entry on boot for decryption of the LUKS root partition a "
"cardholder is presented to the user, to set this please use ``$ gpg "
"--edit-card`` and inside the prompt type ``admin`` and ``name`` to set "
"the cardholder for the OpenPGP Card (Nitrokey Storage 2 or Nitrokey Pro "
"2)."
msgstr ""
"在启动时输入 PIN 以解密 LUKS 根分区时，会向用户显示一个持卡人，要设置该持卡人，请使用 ``$ gpg --edit-card`` "
"并在提示符内键入 ``admin` 和 ``name` 以设置 OpenPGP 卡（Nitrokey Storage 2 或 Nitrokey "
"Pro 2）的持卡人。"

#: ../components/pro/linux/disk-encryption-luks.rst:187
msgid "Replace/Delete Keys"
msgstr "更换/删除密钥"

#: ../components/pro/linux/disk-encryption-luks.rst:189
msgid ""
"It is not possible to add/remove keys directly. Therefore you need to "
"delete/remove the old setup and re-run the setup with the designated "
"key(s):"
msgstr "无法直接添加/删除密钥。因此，您需要删除/移除旧的设置，然后使用指定的密钥重新运行设置："

#: ../components/pro/linux/disk-encryption-luks.rst:193
msgid ""
"Remove the keyfile (path, if you used the script above) from luks-device "
"(*nvme0n1p3*):"
msgstr "从 luks-device (*nvme0n1p3*) 中删除密钥文件（路径，如果使用了上述脚本）："

#: ../components/pro/linux/disk-encryption-luks.rst:199
msgid "Remove the keyfile itself:"
msgstr "删除密钥文件本身"

#: ../components/pro/linux/disk-encryption-luks.rst:205
msgid "Re-run setup above."
msgstr "重新运行上述设置。"

#: ../components/pro/linux/disk-encryption-luks.rst:208
msgid "Unlocking LUKS2 with X509 certificate"
msgstr "使用 X509 证书解锁 LUKS2"

#: ../components/pro/linux/disk-encryption-luks.rst:210
msgid ""
"SystemD supports unlocking a LUKS2 partition using a X509 certificate, "
"find a great blog entry on how to realize this at the `Personal blog of "
"Vladimir Timofeenko`_"
msgstr ""
"SystemD 支持使用 X509 证书解锁 LUKS2 分区，有关如何实现这一功能的精彩博客文章请参阅 \"Vladimir "
"Timofeenko 的个人博客\"__。"

#: ../components/pro/ecc.rst.inc:2
msgid "Elliptic Curves (ECC) Support"
msgstr "椭圆曲线 (ECC) 支持"

#: ../components/pro/ecc.rst.inc:7
msgid "RSA-2048 Becomes Increasingly Insecure"
msgstr "RSA-2048 越来越不安全"

#: ../components/pro/ecc.rst.inc:9
msgid ""
"For security reasons, the German Federal Office for Information Security "
"(Bundesamt für Sicherheit in der Informationstechnik, BSI) no longer "
"recommends RSA keys with a length of 2048 bit `to be used after 2023 "
"<https://www.bsi.bund.de/SharedDocs/Downloads/EN/BSI/Publications/TechGuidelines/TG02102"
"/BSI-TR-02102-1.pdf>`__. This means that longer keys will need to come "
"into use in the foreseeable future. Assuming a usage period of five "
"years, is is already necessary to generate longer keys. However, longer "
"RSA keys with 3072 bit or 4096 bit are significantly slower. For this "
"reason the new Nitrokey Storage 2 and Pro 2 (resp. the integrated OpenPGP"
" Card version 3.3) supports encryption by means of `elliptic-curve "
"cryptography (ECC) <https://en.wikipedia.org/wiki/Elliptic-"
"curve_cryptography>`__. This method is considered to be just as secure "
"with smaller ECC keys as longer RSA keys and is also considerably faster."
msgstr ""
"出于安全原因，德国联邦信息安全办公室（Bundesamt für Sicherheit in der Informationstechnik, "
"BSI）不再推荐使用长度为 2048 位的 RSA 密钥，\"2023 年以后 "
"<https://www.bsi.bund.de/SharedDocs/Downloads/EN/BSI/Publications/TechGuidelines/TG02102"
"/BSI-TR-02102-1.pdf>`___ "
"将不再使用。这意味着在可预见的将来需要使用更长的密钥。假设使用期为五年，那么已经有必要生成更长的密钥。然而，使用 3072 位或 4096 "
"位的较长的 RSA 密钥速度明显较慢。因此，新的 Nitrokey Storage 2 和 Pro 2（以及集成的 OpenPGP 卡 3.3 "
"版）支持通过 \"椭圆曲线加密法 (ECC) <https://en.wikipedia.org/wiki/Elliptic-"
"curve_cryptography>`__\"进行加密。人们认为，使用较小的 ECC 密钥与使用较长的 RSA 密钥一样安全，而且速度也快得多。"

#: ../components/pro/ecc.rst.inc:14
msgid "Basics of Elliptic-Curve Cryptography"
msgstr "椭圆曲线加密基础知识"

#: ../components/pro/ecc.rst.inc:16
#, fuzzy
msgid ""
"In contrast to RSA, there are many different forms (so-called curves) of "
"elliptic-curve cryptography. Notably, the `NSA was involved "
"<https://www.schneier.com/essays/archives/2007/11/did_nsa_put_a_secret.html>`__"
" in the development of the NIST curves. Even if there is no evidence of "
"back doors in the curves, using a certain curve can pose a question of "
"trust. Fortunately the new Nitrokey Storage 2 and Pro 2 support two kind "
"of curves, namely NIST and Brainpool. In what follows we will use "
"Brainpool curves. `This article <https://arstechnica.com/information-"
"technology/2013/10/a-relatively-easy-to-understand-primer-on-elliptic-"
"curve-cryptography/>`__ provides a good entry point for gaining a general"
" understanding of elliptic-curve cryptography."
msgstr ""
"与 RSA "
"不同，椭圆曲线加密法有许多不同的形式（所谓的曲线）。值得注意的是，美国国家安全局<https://www.schneier.com/essays/archives/2007/11/did_nsa_put_a_secret.html>`__参与了"
" NIST 曲线的开发。即使没有证据表明曲线中存在后门，使用某种曲线也会带来信任问题。幸运的是，新的 Nitrokey Storage 2 和 "
"Pro 2 支持两种曲线，即 NIST 曲线和 Brainpool 曲线。下面我们将使用 Brainpool 曲线。这篇文章 "
"<https://arstechnica.com/information-technology/2013/10/a-relatively-"
"easy-to-understand-primer-on-elliptic-curve-cryptography/>`__ "
"为全面了解椭圆曲线加密技术提供了一个很好的切入点。"

#: ../components/pro/ecc.rst.inc:19
msgid "System Requirements"
msgstr "系统要求"

#: ../components/pro/ecc.rst.inc:21
msgid ""
"In order to create keys based on elliptic curves a Nitrokey Storage 2 / "
"Pro 2 and GnuPG version 2.1.17 or higher are required."
msgstr "要创建基于椭圆曲线的密钥，需要 Nitrokey Storage 2 / Pro 2 和 GnuPG 2.1.17 或更高版本。"

#: ../components/pro/ecc.rst.inc:24
msgid "You can read Nitrokey’s OpenPGP Card version via ``gpg2 --card-status``:"
msgstr "您可以通过 ``gpg2 --card-status`` 阅读 Nitrokey 的 OpenPGP 卡版本："

#: ../components/pro/ecc.rst.inc:34
msgid ""
"The ‘Version’ field represents the version of the OpenPGP Card integrated"
" in the Nitrokey — in this case it is 3.3 as needed for Elliptic-curve "
"cryptography. OpenPGP Card version 2.2 doesn’t support ECC."
msgstr ""
"版本 \"字段表示集成在 Nitrokey 中的 OpenPGP 卡的版本，在本例中为 3.3，这是椭圆曲线加密所必需的。OpenPGP 卡 "
"2.2 版本不支持 ECC。"

#: ../components/pro/ecc.rst.inc:36
msgid ""
"You can learn about the installed version of GnuPG via ``gpg2  "
"--version``. At least version 2.1.16 is required. The newest GnuPG "
"version for Windows can be found `here <https://www.gpg4win.org/>`__ and "
"the newest version for MacOS can be found `here "
"<https://gpgtools.org/>`__. A suitable version of GnuPG is included in "
"the GNU/Linux distributions Ubuntu (since 18.04), Debian (from Stretch "
"onwards), Arch Linux, Fedora (from Release 26 onwards) and openSUSE "
"Tumbleweed. At the end of this articles are instructions how to manually "
"update GnuPG on older Ubuntu versions."
msgstr ""
"您可以通过 ``gpg2 --version`` 了解已安装的 GnuPG 版本。至少需要 2.1.16 版本。Windows 版 GnuPG "
"的最新版本可在 `here <https://www.gpg4win.org/>`__ 找到，MacOS 版 GnuPG 的最新版本可在 "
"`here <https://gpgtools.org/>`__ 找到。GNU/Linux 发行版 Ubuntu（从 18.04 "
"版起）、Debian（从 Stretch 版起）、Arch Linux、Fedora（从 Release 26 版起）和 openSUSE "
"Tumbleweed 中都包含了合适的 GnuPG 版本。本文末尾提供了如何在旧版本 Ubuntu 上手动更新 GnuPG 的说明。"

#: ../components/pro/ecc.rst.inc:40
msgid ""
"GnuPG 2.0 is still being used, but support for it has been discontinuied "
"in 2017. All communication partners must use GnuPG 2.1 or newer for email"
" encryption by means of ECC, otherwise incompatibility issues might "
"arise. Therefore you should only use ECC if you are sure you will be able"
" to circumvent this problem."
msgstr ""
"GnuPG 2.0 仍在使用，但 2017 年已停止对它的支持。所有通信合作伙伴必须使用 GnuPG 2.1 或更新版本通过 ECC "
"进行电子邮件加密，否则可能会出现不兼容问题。因此，您只有在确定能够规避这一问题的情况下才可以使用 ECC。"

#: ../components/pro/ecc.rst.inc:47
msgid "Key Generation on the Nitrokey Storage 2 / Pro 2"
msgstr "在 Nitrokey Storage 2 / Pro 2 上生成密钥"

#: ../components/pro/ecc.rst.inc:49
msgid ""
"Once these requirements are fulfilled, you can get started. (Warning: "
"existing keys will be overwritten in the process!) You now have two "
"options. The first option is to create the key directly on the Nitrokey "
"Storage 2 / Pro 2. The benefit here is that the key will never be outside"
" the device and as such can never be read out. The second option is to "
"import a previously locally generated key. The advantage in this case is "
"that you can securely store a backup of the key, which can then be "
"restored in case the Nitrokey is lost. Only the first option is described"
" below. In order to create a key with backup, you can access `the "
"following instructions "
"<https://www.gniibe.org/memo/software/gpg/keygen-25519.html>`__ and use "
"this `general information "
"<https://wiki.fsfe.org/TechDocs/CardHowtos/CardWithSubkeysUsingBackups>`__"
" to transfer the key to the Nitrokey."
msgstr ""
"满足这些要求后，就可以开始了。(警告：在此过程中，现有密钥将被覆盖！）现在您有两个选择。第一个选项是直接在 Nitrokey Storage 2 "
"/ Pro 2 "
"上创建密钥。这样做的好处是密钥永远不会离开设备，因此永远无法读出。第二种方法是导入本地生成的密钥。这样做的好处是可以安全地存储密钥备份，在 "
"Nitrokey 丢失时可以恢复。下面只介绍第一种情况。为了创建一个带备份的密钥，你可以访问 \"以下说明 "
"<https://www.gniibe.org/memo/software/gpg/keygen-25519.html>`__\"，并使用 "
"\"一般信息 "
"<https://wiki.fsfe.org/TechDocs/CardHowtos/CardWithSubkeysUsingBackups>`__\"将密钥转移到"
" Nitrokey 中。"

#: ../components/pro/ecc.rst.inc:51
msgid ""
"Within GnuPG there is already a “generate” command, which can be used to "
"easily create keys on the device. However it is not as yet possible to "
"select the type of key directly, so the key must first be prepared. We "
"use the following commands for this:"
msgstr ""
"GnuPG 中已经有一个 \"生成 "
"\"命令，可以用来在设备上轻松创建密钥。但目前还不能直接选择密钥类型，因此必须先准备好密钥。为此，我们使用以下命令："

#: ../components/pro/ecc.rst.inc:59
msgid ""
"Alternatively, other curves could be selected, as described in the next "
"section."
msgstr "或者，也可以选择其他曲线，详见下一节。"

#: ../components/pro/ecc.rst.inc:61
msgid ""
"Now we enter ``gpg2 --card-edit`` and see that brainpoolP256r1 is under "
"“key attributes” instead of rsa2048."
msgstr "现在我们输入 ``gpg2 --card-edit`` 并看到 brainpoolP256r1 在 \"密钥属性 \"下，而不是 rsa2048。"

#: ../components/pro/ecc.rst.inc:87
msgid "Then we create the key."
msgstr "然后，我们创建密钥。"

#: ../components/pro/ecc.rst.inc:119
msgid ""
"The Nitrokey now incorporates elliptic-curve cryptography instead of RSA "
"keys and can be used as usual."
msgstr "Nitrokey 现在采用了椭圆曲线加密技术，而不是 RSA 密钥，可以照常使用。"

#: ../components/pro/ecc.rst.inc:122
msgid "Available Curves"
msgstr "可用曲线"

#: ../components/pro/ecc.rst.inc:124
msgid ""
"In the above procedure we chose the Brainpool curves. Alternatively, NIST"
" curves can be used. The configuration is carried out as follows:"
msgstr "在上述过程中，我们选择了 Brainpool 曲线。或者，也可以使用 NIST 曲线。配置步骤如下："

#: ../components/pro/ecc.rst.inc:133
msgid "Update of GnuPG on Ubuntu"
msgstr "更新 Ubuntu 上的 GnuPG"

#: ../components/pro/ecc.rst.inc:135
msgid ""
"The following steps are needed only if you are running a Ubuntu version "
"older than 18.04. You can install GnuPG 2.1.18 on such system with the "
"commands below. This involves newer Debian packages, which is the easiest"
" option. This approach has been tested successfully on Ubuntu 17.10 and "
"propbably works on 16.04 as well. However, the occurence of problems "
"during usage can‘t be excluded."
msgstr ""
"只有当您运行的 Ubuntu 版本大于 18.04 时，才需要以下步骤。您可以使用以下命令在此类系统上安装 GnuPG 2.1.18。这涉及较新的"
" Debian 软件包，是最简单的选择。这种方法已在 Ubuntu 17.10 上测试成功，可能在 16.04 "
"上也行得通。不过，不排除在使用过程中会出现问题。"

#: ../components/pro/ecc.rst.inc:150
msgid ""
"In case you want to undo the installation, you have to execute the "
"following commands:"
msgstr "如果要撤销安装，必须执行以下命令："

#: ../components/pro/factory-reset.rst.inc:6
msgid "There are two types of factory resets for Nitrokey Pro devices:"
msgstr "Nitrokey Pro 设备有两种出厂重置方式："

#: ../components/pro/factory-reset.rst.inc:8
#: ../components/storage/factory-reset.rst:5
msgid ""
"a factory reset of the OpenPGP smart card, for example using ``gpg "
"--card-edit``, followed by ``admin`` and finally: ``factory-reset``"
msgstr "重置 OpenPGP 智能卡的出厂设置，例如使用 ``gpg --card-edit``, 然后是 ``admin`, 最后是：出厂重置"

#: ../components/pro/factory-reset.rst.inc:10
#: ../components/storage/factory-reset.rst:7
msgid "a factory reset of the entire Nitrokey device using the Nitrokey App."
msgstr "使用 Nitrokey App 对整个 Nitrokey 设备进行出厂重置。"

#: ../components/pro/factory-reset.rst.inc:12
msgid ""
"Also, it is possible to generate a new AES key that is used to encrypt "
"the Password Safe without performing a factory reset."
msgstr "此外，还可以生成新的 AES 密钥，用于在不执行出厂重置的情况下对密码保险箱进行加密。"

#: ../components/pro/factory-reset.rst.inc:17
#: ../components/storage/factory-reset.rst:14
msgid ""
"The Nitrokey App always generates a new AES key after performing a "
"factory reset."
msgstr "执行出厂重置后，Nitrokey 应用程序始终会生成新的 AES 密钥。"

#: ../components/pro/factory-reset.rst.inc:20
#: ../components/storage/factory-reset.rst:28
msgid ""
"The following table describes the differences between these three "
"operations:"
msgstr "下表介绍了这三种操作之间的区别："

#: ../components/pro/factory-reset.rst.inc:23
#: ../components/storage/factory-reset.rst:31
msgid "Property"
msgstr "物业"

#: ../components/pro/factory-reset.rst.inc:23
#: ../components/storage/factory-reset.rst:31
msgid "OpenPGP factory reset"
msgstr "OpenPGP 出厂重置"

#: ../components/pro/factory-reset.rst.inc:23
#: ../components/storage/factory-reset.rst:31
msgid "Nitrokey factory reset"
msgstr "Nitrokey 出厂重置"

#: ../components/pro/factory-reset.rst.inc:23
#: ../components/storage/factory-reset.rst:31
msgid "Generate AES key"
msgstr "生成 AES 密钥"

#: ../components/pro/factory-reset.rst.inc:25
#: ../components/storage/factory-reset.rst:33
msgid "Requires admin PIN"
msgstr "需要管理员密码"

#: ../components/pro/factory-reset.rst.inc:26
#: ../components/storage/factory-reset.rst:34
msgid "Destroys OpenPGP keys"
msgstr "销毁 OpenPGP 密钥"

#: ../components/pro/factory-reset.rst.inc:27
#: ../components/storage/factory-reset.rst:35
msgid "Destroys Password Safe"
msgstr "破坏密码保险箱"

#: ../components/pro/factory-reset.rst.inc:27
#: ../components/storage/factory-reset.rst:35
#: ../components/storage/factory-reset.rst:37
msgid "yes [1]_"
msgstr "是 [1]_"

#: ../components/pro/factory-reset.rst.inc:28
#: ../components/storage/factory-reset.rst:36
msgid "Destroys One-Time Passwords"
msgstr "销毁一次性密码"

#: ../components/pro/factory-reset.rst.inc:31
#: ../components/storage/factory-reset.rst:40
msgid "Clears the encryption key without overwriting the encrypted data."
msgstr "清除加密密钥，但不覆盖加密数据。"

#: ../components/pro/firmware-update.rst.inc:4
msgid "This guide describes how to update the firmware on the Nitrokey Pro."
msgstr "本指南介绍如何更新 Nitrokey Pro 的固件。"

#: ../components/pro/firmware-update.rst.inc:7
msgid "This guide is still in an experimental state!"
msgstr "本指南仍处于试验阶段！"

#: ../components/pro/firmware-update.rst.inc:10
msgid ""
"Updating could lead to data loss, so make sure you have proper backup "
"login methods enabled and/or ensure that the Nitrokey Pro is not the only"
" way to authenticate/2FA for your applications/services."
msgstr "更新可能会导致数据丢失，因此请确保您已启用适当的备份登录方法，和/或确保 Nitrokey Pro 不是您的应用程序/服务的唯一验证/2FA 方式。"

#: ../components/pro/firmware-update.rst.inc:18
msgid ""
"Never disconnect the Nitrokey Pro or abort the process while updating, "
"this will likely render your device useless!"
msgstr "在更新过程中，切勿断开 Nitrokey Pro 连接或中止更新过程，否则可能会导致设备无法使用！"

#: ../components/pro/firmware-update.rst.inc:21
msgid ""
"Make sure you have the latest `pynitrokey` version installed, please "
"check the `installation instructions <../../software/nitropy/all-"
"platforms/installation.html>`__ for your OS."
msgstr ""
"请确保您安装了最新的 `pynitrokey` 版本，请查看您操作系统的 `安装说明 <.../../software/nitropy/all-"
"platforms/installation.html>`__ 。"

#: ../components/pro/firmware-update.rst.inc:22
msgid ""
"Download the latest stable `firmware image <https://github.com/Nitrokey"
"/nitrokey-pro-firmware/releases>`__."
msgstr ""
"下载最新的稳定版固件镜像 <https://github.com/Nitrokey/nitrokey-pro-"
"firmware/releases>`__。"

#: ../components/pro/firmware-update.rst.inc:25
msgid ""
"For production use you should choose the latest stable version (so only "
"versions, that don’t contain i.e. “pre-release” or “RC”)."
msgstr "在生产中使用时，应选择最新的稳定版本（因此只能是不包含 \"预发布 \"或 \"RC \"的版本）。"

#: ../components/pro/firmware-update.rst.inc:27
msgid "To apply the update run:"
msgstr "要应用更新，请运行"

#: ../components/pro/firmware-update.rst.inc:36
msgid "Alternative Update Method"
msgstr "替代更新方法"

#: ../components/pro/firmware-update.rst.inc:38
msgid "Alternatively `dfu-util` can be used for the firmware update:"
msgstr "也可使用 `dfu-util` 进行固件更新："

#: ../components/pro/firmware-update.rst.inc:40
msgid "Install dfu-util"
msgstr "安装 dfu-util"

#: ../components/pro/firmware-update.rst.inc:43
msgid "Binaries for Windows are available at:"
msgstr "Windows 的二进制文件可从以下网址获取："

#: ../components/pro/firmware-update.rst.inc:43
msgid "http://dfu-util.sourceforge.net/releases/"
msgstr "http://dfu-util.sourceforge.net/releases/"

#: ../components/pro/firmware-update.rst.inc:46
msgid "For macOS binaries are available via Homebrew:"
msgstr "MacOS 的二进制文件可通过 Homebrew 获取："

#: ../components/pro/firmware-update.rst.inc:46
msgid "https://formulae.brew.sh/formula/dfu-util"
msgstr "https://formulae.brew.sh/formula/dfu-util"

#: ../components/pro/firmware-update.rst.inc:48
msgid "*macOS only:* Install `dfu-util` via Homebrew"
msgstr "*仅适用于 macOS：* 通过 Homebrew 安装 `dfu-util"

#: ../components/pro/firmware-update.rst.inc:54
msgid ""
"Use Nitrokey App v1.5-RC7 or higher to change the boot mode of the "
"Nitrokey Pro to update mode."
msgstr "使用 Nitrokey App v1.5-RC7 或更高版本将 Nitrokey Pro 的启动模式更改为更新模式。"

#: ../components/pro/firmware-update.rst.inc:56
msgid "Now the following command to apply the update"
msgstr "现在执行以下命令应用更新"

#: ../components/pro/firmware-update.rst.inc:62
msgid "The boot mode can now be changed back again with the Nitrokey App."
msgstr "现在可以通过 Nitrokey App 重新更改启动模式。"

#: ../components/pro/firmware-update.rst.inc:79
msgid "**Issue:** ``libnitrokey`` could not be found."
msgstr "**问题：** `libnitrokey`` 无法找到。"

#: ../components/pro/firmware-update.rst.inc:68
msgid ""
"In case the libnitrokey could not be found automatically, the path to it "
"can be provided with env. variable:"
msgstr "如果无法自动找到 libnitrokey，可通过环境变量提供其路径："

#: ../components/pro/firmware-update.rst.inc:74
msgid "To find libnitrokey on your system use:"
msgstr "要在系统中找到 libnitrokey，请使用"

#: ../components/pro/linux/firmware-update.rst:4
msgid ""
"This likely means your user has not the needed permissions to read/write "
"the device. Please make sure you have set up the correct `udev-rules`_. "
"Download this `udev-rules`_ set and place it in your udev rules directory"
" (e.g., ``/etc/udev/rules.d``). Then remove your Nitrokey Pro from the "
"USB slot and run: ``udevadm control --reload-rules && udevadm trigger`` "
"or reboot your machine. Afterwards the update should work without the "
"permission issue."
msgstr ""
"这可能意味着您的用户没有读/写设备所需的权限。请确保已设置正确的 `udev-rules`_。下载此 `udev-rules`_ "
"集，并将其放入您的 udev 规则目录（例如 ``/etc/udev/rules.d``）。然后从 USB 插槽中取出 Nitrokey Pro "
"并运行`udevadm control --reload-rules && udevadm trigger`` "
"或重启机器。之后，更新应能正常工作，而不会出现权限问题。"

#: ../components/pro/linux/index.rst:2
msgid "Nitrokey Pro, Linux"
msgstr "Nitrokey Pro, Linux"

#: ../components/pro/linux/index.rst:13
#: ../components/storage/linux/index.rst:13
msgid ""
"To access the OpenPGP smart card of the Nitrokey, install the package "
"libccid. On Debian/Ubuntu based Distributions type in terminal: *sudo "
"apt-get update && sudo apt-get install libccid*"
msgstr ""
"要访问 Nitrokey 的 OpenPGP 智能卡，请安装 libccid 软件包。在基于 Debian/Ubuntu "
"的发行版上，在终端中键入*sudo apt-get update && sudo apt-get install libccid*"

#: ../components/pro/linux/index.rst:17
msgid ""
"If your distribution has a rather old version of libccid (<1.4.21) you "
"have to add the device information by yourself (for example if you are "
"using Ubuntu 14.04 or older). In this case please follow these "
"`instructions <https://www.nitrokey.com/documentation/frequently-asked-"
"questions-faq#latest-device-driver-missing-on-older-linux-"
"distribution>`__."
msgstr ""
"如果您的发行版中 libccid 的版本较旧（<1.4.21），则必须自行添加设备信息（例如，如果您使用的是 Ubuntu 14.04 "
"或更旧版本）。在这种情况下，请遵循以下 \"说明 <https://www.nitrokey.com/documentation"
"/frequently-asked-questions-faq#latest-device-driver-missing-on-older-"
"linux-distribution>`__\"。"

#: ../components/pro/linux/index.rst:23 ../components/pro/mac/index.rst:16
msgid ""
"Download and start the `Nitrokey App "
"<https://www.nitrokey.com/download>`__. Follow the `instructions <change-"
"pins.html>`_ to change the default User PIN (default: 123456) and Admin "
"PIN (default: 12345678) to your own choices."
msgstr ""
"下载并启动 \"Nitrokey 应用程序 <https://www.nitrokey.com/download>\"__。按照"
"\"<change-"
"pins.html>\"__的说明，将默认用户密码（默认值：123456）和管理员密码（默认值：12345678）更改为您自己的选择。"

#: ../components/pro/linux/index.rst:37
msgid ""
"Note: For many use cases described, it is necessary to have either "
"OpenPGP or S/MIME keys installed on the device (see below)."
msgstr "注：对于所述的许多使用情况，设备上必须安装 OpenPGP 或 S/MIME 密钥（见下文）。"

#: ../components/pro/linux/index.rst:41 ../components/pro/mac/index.rst:40
#: ../components/pro/windows/index.rst:35
#: ../components/start/linux/index.rst:44 ../components/start/mac/index.rst:45
#: ../components/start/windows/index.rst:44
#: ../components/storage/linux/index.rst:37
#: ../components/storage/mac/index.rst:41
#: ../components/storage/windows/index.rst:38
msgid "Key Creation with OpenPGP or S/MIME"
msgstr "使用 OpenPGP 或 S/MIME 创建密钥"

#: ../components/pro/linux/index.rst:43 ../components/pro/mac/index.rst:42
#: ../components/pro/windows/index.rst:37
#: ../components/start/linux/index.rst:46 ../components/start/mac/index.rst:47
#: ../components/start/windows/index.rst:46
#: ../components/storage/linux/index.rst:39
#: ../components/storage/mac/index.rst:43
#: ../components/storage/windows/index.rst:40
msgid ""
"There are two widely used standards for email encryption. While "
"OpenPGP/GnuPG is popular among individuals, S/MIME/x.509 is mostly used "
"by enterprises. If you are in doubt which one to choose, you should use "
"OpenPGP."
msgstr ""
"目前有两种广泛使用的电子邮件加密标准。OpenPGP/GnuPG 在个人中很流行，而 S/MIME/x.509 "
"则主要用于企业。如果你不知道该选择哪一种，你应该使用 OpenPGP。"

#: ../components/pro/linux/index.rst:48 ../components/pro/mac/index.rst:47
#: ../components/pro/windows/index.rst:42
#: ../components/start/linux/index.rst:51 ../components/start/mac/index.rst:52
#: ../components/start/windows/index.rst:51
#: ../components/storage/linux/index.rst:44
#: ../components/storage/mac/index.rst:48
#: ../components/storage/windows/index.rst:42
msgid ""
"To learn more about how to use OpenPGP for email encryption with the "
"Nitrokey, please refer to chapter `OpenPGP Email Encryption "
"<openpgp.html>`_."
msgstr ""
"要进一步了解如何使用 OpenPGP 对 Nitrokey 进行电子邮件加密，请参阅 \"OpenPGP 电子邮件加密 "
"<openpgp.html>`_\" 章节。"

#: ../components/pro/linux/index.rst:51 ../components/pro/mac/index.rst:50
#: ../components/pro/windows/index.rst:45
#: ../components/start/linux/index.rst:54 ../components/start/mac/index.rst:55
#: ../components/start/windows/index.rst:54
#: ../components/storage/linux/index.rst:47
#: ../components/storage/mac/index.rst:51
#: ../components/storage/windows/index.rst:45
msgid ""
"To learn more about how to use S/MIME for email encryption with the "
"Nitrokey, please refer to chapter `S/MIME Email Encryption "
"<smime.html>`_."
msgstr ""
"要进一步了解如何使用 S/MIME 对 Nitrokey 进行电子邮件加密，请参阅 \"S/MIME 电子邮件加密 "
"<smime.html>`_\" 章节。"

#: ../components/pro/linux/login-with-pam.rst:2
#: ../components/start/linux/login-with-pam.rst:2
#: ../components/storage/linux/login-with-pam.rst:2
msgid "Login With PAM"
msgstr "使用 PAM 登录"

#: ../components/pro/login-with-pam.rst.inc:4
msgid "How to Setup The Login"
msgstr "如何设置登录"

#: ../components/pro/login-with-pam.rst.inc:6
msgid ""
"You have two options: `pam_p11 <https://github.com/OpenSC/pam_pkcs11>`__ "
"or `PAM Poldi "
"<https://wiki.ubuntuusers.de/Archiv/Authentifizierung_OpenPGP_SmartCard/>`__."
msgstr ""
"您有两个选项：`pam_p11 <https://github.com/OpenSC/pam_pkcs11>`__ 或 `PAM Poldi "
"<https://wiki.ubuntuusers.de/Archiv/Authentifizierung_OpenPGP_SmartCard/>`__。"

#: ../components/pro/login-with-pam.rst.inc:8
msgid ""
"The solution with pam_p11 is more difficult to achieve and is based on "
"S/MIME certificates. Please have a look at `the documentation "
"<https://opensc.github.io/pam_pkcs11/doc/pam_pkcs11.html>`__ for more "
"information."
msgstr ""
"使用 pam_p11 的解决方案较难实现，它基于 S/MIME 证书。更多信息请参阅 \"文档 "
"<https://opensc.github.io/pam_pkcs11/doc/pam_pkcs11.html>`__\"。"

#: ../components/pro/login-with-pam.rst.inc:10
msgid ""
"PAM Poldi 0.4.1 works flawlessly with Nitrokey for PAM authentication "
"with RSA keys (see Troubleshooting for information on ECC keys). Besides "
"the installation of Poldi (e.g. ``sudo apt-get install libpam-poldi`` on "
"Ubuntu) the following steps are needed to get it working."
msgstr ""
"PAM Poldi 0.4.1 可与 Nitrokey 完美配合，使用 RSA 密钥进行 PAM 验证（有关 ECC "
"密钥的信息，请参阅故障排除）。除了安装 Poldi 之外（例如在 Ubuntu 上安装 libpam-"
"poldi），还需要以下步骤才能使其正常工作。"

#: ../components/pro/login-with-pam.rst.inc:12
#: ../components/to-be-integrated.rst:62
msgid ""
"It is necessary to already have keys generated on the Nitrokey, as the "
"authentication key is used by PAM."
msgstr "有必要在 Nitrokey 上生成密钥，因为 PAM 会使用认证密钥。"

#: ../components/pro/login-with-pam.rst.inc:14
msgid ""
"At first you need to find out the Application ID of your Nitrokey. It "
"looks like or similar to ``D00600012401020000000000xxxxxxxx``."
msgstr "首先，您需要找出 Nitrokey 的应用程序 ID。它看起来像或类似于 ``D00600012401020000000000xxxxxxxx``。"

#: ../components/pro/login-with-pam.rst.inc:20
msgid ""
"Now you have to add a line to ``/etc/poldi/localdb/users`` which contains"
" the following information ``<YourApplicationID> <YourUsername>``."
msgstr ""
"现在，您必须在 ``/etc/poldi/localdb/users`` 中添加一行，其中包含以下信息 ``<YourApplicationID>"
" <YourUsername>``。"

#: ../components/pro/login-with-pam.rst.inc:22
msgid ""
"This could look like ``D00600012401020000000000xxxxxxxx nitrokeyuser``. "
"Now dump the public key from the Nitrokey into Poldis local db:"
msgstr ""
"这看起来像 ``D00600012401020000000000xxxxxxxx nitrokeyuser``。现在将 Nitrokey "
"中的公钥转入 Poldis 本地数据库："

#: ../components/pro/login-with-pam.rst.inc:28
msgid ""
"Please be aware that you have to insert your Application ID in the line "
"above with the one of your Nitrokey!"
msgstr "请注意，您必须在上面一行插入您的申请 ID 和您的 Nitrokey！"

#: ../components/pro/login-with-pam.rst.inc:30
msgid ""
"Then you have to configure PAM. Just add ``auth sufficient pam_poldi.so``"
" to PAM configuration files according to your needs:"
msgstr "然后配置 PAM。只需根据需要在 PAM 配置文件中添加 ``auth sufficient pam_poldi.so``："

#: ../components/pro/login-with-pam.rst.inc:33
msgid "``/etc/pam.d/common-auth`` for graphical user login"
msgstr "`/etc/pam.d/common-auth``用于图形用户登录"

#: ../components/pro/login-with-pam.rst.inc:34
msgid "``/etc/pam.d/login`` for console login"
msgstr "`etc/pam.d/login`` 用于控制台登录"

#: ../components/pro/login-with-pam.rst.inc:35
msgid "``/etc/pam.d/sudo`` for sudo authentication"
msgstr "`/etc/pam.d/sudo``用于 sudo 身份验证"

#: ../components/pro/login-with-pam.rst.inc:36
msgid "``/etc/pam.d/gnome-screensaver`` for login back from a locked screen"
msgstr "`/etc/pam.d/gnome-screensaver``用于从锁定屏幕重新登录"

#: ../components/pro/login-with-pam.rst.inc:37
msgid "and other files in ``/etc/pam.d``"
msgstr "和 ``/etc/pam.d`` 中的其他文件"

#: ../components/pro/login-with-pam.rst.inc:39
msgid ""
"PAM is dangerous to play around with, so make sure you have a way of "
"accessing the machine if you break authentication completely. Remember "
"that booting into rescue mode from GRUB requires a root password, so keep"
" that or a live CD which can read your filesystems to hand."
msgstr ""
"玩 PAM 是很危险的，所以要确保在完全破坏身份验证时有办法访问机器。请记住，从 GRUB 启动到应急模式需要 root 密码，因此请随身携带 "
"root 密码或可读取文件系统的 Live CD。"

#: ../components/pro/login-with-pam.rst.inc:41
msgid ""
"Here you find `further instructions "
"<https://wiki.ubuntuusers.de/Archiv/Authentifizierung_OpenPGP_SmartCard>`__"
" (in German, partially outdated)."
msgstr ""
"这里有 \"进一步说明 "
"<https://wiki.ubuntuusers.de/Archiv/Authentifizierung_OpenPGP_SmartCard>`___（德文，部分内容已过时）。"

#: ../components/pro/login-with-pam.rst.inc:46
msgid ""
"If you get an error similar to ``ERR 100663414 Invalid ID <SCD>`` you "
"should try instead"
msgstr "如果出现类似于 ``ERR 100663414 Invalid ID <SCD>`` 的错误，则应改用以下方法"

#: ../components/pro/login-with-pam.rst.inc:52
#: ../components/to-be-integrated.rst:72
msgid ""
"Please be aware that you have to insert your Application ID in the line "
"above with the one of your stick!"
msgstr "请注意，您必须在上面一行中插入您的申请编号，并与您的棒子的编号放在一起！"

#: ../components/pro/login-with-pam.rst.inc:55
msgid "ECC Keys"
msgstr "ECC 密钥"

#: ../components/pro/login-with-pam.rst.inc:56
msgid ""
"Unfortunately, Poldi has no support for ECC keys yet. But there is a "
"`patch for ECC keys used with Nitrokey Start "
"<https://dev.gnupg.org/T4009>`__. This is already included in the master "
"branch of the Poldi development repository and thus will be released in a"
" newer version eventually. In the meantime the only option is to build "
"Poldi from source."
msgstr ""
"遗憾的是，Poldi 还不支持 ECC 密钥。但有一个用于 Nitrokey Start "
"<https://dev.gnupg.org/T4009>`__ 的 ECC 密钥补丁。这个补丁已经包含在 Poldi "
"开发库的主分支中，因此最终会在更新的版本中发布。在此期间，唯一的选择是从源代码构建 Poldi。"

#: ../components/pro/linux/openvpn-easyrsa.rst:2
#: ../components/pro/windows/openvpn-easyrsa.rst:2
#: ../components/storage/linux/openvpn-easyrsa.rst:2
msgid "OpenVPN Configuration with Easy-RSA"
msgstr "使用 Easy-RSA 配置 OpenVPN"

#: ../components/pro/linux/openvpn-easyrsa.rst:9
#: ../components/pro/windows/openvpn-easyrsa.rst:9
#: ../components/storage/linux/openvpn-easyrsa.rst:9
msgid ""
"This guide is work-in-progress, and will be updated accordinlgy. Please "
"take this status into consideration."
msgstr "本指南正在编写中，将随时更新。请注意此状态。"

#: ../components/pro/linux/openvpn-easyrsa.rst:11
#: ../components/pro/windows/openvpn-easyrsa.rst:11
#: ../components/storage/linux/openvpn-easyrsa.rst:11
msgid ""
"This guide shows how to configure OpenVPN clients to login using a "
"`Nitrokey Pro 2 <https://shop.nitrokey.com/shop/product/nk-pro-2"
"-nitrokey-pro-2-3>`__ or a `Nitrokey Storage 2 "
"<https://shop.nitrokey.com/de_DE/shop/product/nitrokey-storage-2-56>`__. "
"For software key management we will be using `Easy-RSA "
"<https://github.com/OpenVPN/easy-rsa>`__, a utility that has been "
"evolving alongside OpenVPN."
msgstr ""
"本指南介绍如何配置 OpenVPN 客户端，以便使用 \"Nitrokey Pro 2 "
"<https://shop.nitrokey.com/shop/product/nk-pro-2-nitrokey-pro-2-3>`__\"或 "
"\"Nitrokey Storage 2 <https://shop.nitrokey.com/de_DE/shop/product"
"/nitrokey-storage-2-56>`__\"登录。在软件密钥管理方面，我们将使用 `Easy-RSA "
"<https://github.com/OpenVPN/easy-rsa>`__，这是一个与 OpenVPN 共同发展的工具。"

#: ../components/pro/linux/openvpn-easyrsa.rst:15
msgid ""
"To sign the certificates, we will use a `Nitrokey HSM 2 "
"<https://shop.nitrokey.com/shop/product/nk-pro-2-nitrokey-pro-2-3>`__ set"
" up as `Certificate Authority <certificate-authority.html#creating-the-"
"intermediate-certificate-authority>`_, however this guide does not cover "
"the set up of the CA itself (it is clear and `well documented here "
"<certificate-authority.html#sign-a-server-certificate>`_)."
msgstr ""
"为了签署证书，我们将使用 \"Nitrokey HSM 2 <https://shop.nitrokey.com/shop/product/nk-"
"pro-2-nitrokey-pro-2-3>`__\"作为 \"证书颁发机构 <certificate-authority.html"
"#creating-the-intermediate-certificate-authority>`_\"，但本指南并不包括 CA "
"本身的设置（此处 <certificate-authority.html#sign-a-server-"
"certificate>`_\"有详细说明）。"

#: ../components/pro/linux/openvpn-easyrsa.rst:18
#: ../components/pro/windows/openvpn-easyrsa.rst:18
#: ../components/storage/linux/openvpn-easyrsa.rst:18
msgid ""
"We will use Easy-RSA, because it seems to provide some flexibility, and "
"allows key management via external PKIs. We will use it on the server to "
"issue the signing request, and repeat the same process on the client. The"
" Certificate Signing Requests will be signed by the CA on the Nitorkey "
"HSM, and re-transmitted to the server and the client."
msgstr ""
"我们将使用 Easy-RSA，因为它似乎具有一定的灵活性，而且允许通过外部 PKI "
"进行密钥管理。我们将在服务器上使用它来发出签名请求，并在客户端重复同样的过程。证书签名请求将由 Nitorkey HSM 上的 CA "
"签名，并重新传输到服务器和客户端。"

#: ../components/pro/linux/openvpn-easyrsa.rst:24
#: ../components/pro/windows/openvpn-easyrsa.rst:24
#: ../components/storage/linux/openvpn-easyrsa.rst:24
msgid ""
"In the following documentation we will require 3 different machines as "
"following:"
msgstr "在下面的文档中，我们需要以下 3 台不同的机器："

#: ../components/pro/linux/openvpn-easyrsa.rst:26
#: ../components/pro/windows/openvpn-easyrsa.rst:26
#: ../components/storage/linux/openvpn-easyrsa.rst:26
msgid "OpenVPN server (v. 2.5) on Debian 10 (EC2 virtual machine - AWS)"
msgstr "Debian 10 上的 OpenVPN 服务器（2.5 版）（EC2 虚拟机 - AWS）"

#: ../components/pro/linux/openvpn-easyrsa.rst:28
#: ../components/pro/windows/openvpn-easyrsa.rst:28
#: ../components/storage/linux/openvpn-easyrsa.rst:28
msgid "OpenVPN client (v. 2.4.9) on Fedora 30 (local machine)"
msgstr "Fedora 30（本机）上的 OpenVPN 客户端（2.4.9 版）"

#: ../components/pro/linux/openvpn-easyrsa.rst:30
#: ../components/pro/windows/openvpn-easyrsa.rst:30
#: ../components/storage/linux/openvpn-easyrsa.rst:30
msgid ""
"The Certificate Authority will be accessible from a standalone machine "
"with Fedora 30 (local machine)"
msgstr "使用 Fedora 30 的独立机器（本地机器）可访问证书颁发机构"

#: ../components/pro/linux/openvpn-easyrsa.rst:33
#: ../components/pro/windows/openvpn-easyrsa.rst:33
#: ../components/storage/linux/openvpn-easyrsa.rst:33
msgid ""
"To interact with the devices we will require `OpenSC 0.20 "
"<https://github.com/OpenSC/OpenSC/wiki>`__ installed on the client and CA"
" machine (the local machines). You can follow the instructions to set it "
"up in `this link (*Unix) <https://github.com/OpenSC/OpenSC/wiki"
"/Compiling-and-Installing-on-Unix-flavors>`__."
msgstr ""
"要与设备交互，我们需要在客户端和 CA 机器（本地机器）上安装 `OpenSC 0.20 "
"<https://github.com/OpenSC/OpenSC/wiki>`__。您可以按照 `this link (*Unix) "
"<https://github.com/OpenSC/OpenSC/wiki/Compiling-and-Installing-on-Unix-"
"flavors>`__ 中的说明进行设置。"

#: ../components/pro/linux/openvpn-easyrsa.rst:36
#: ../components/pro/windows/openvpn-easyrsa.rst:36
#: ../components/storage/linux/openvpn-easyrsa.rst:36
msgid "To download the dependencies on Fedora machines we can this instruction:"
msgstr "要在 Fedora 机器上下载依赖项，我们可以按以下说明进行："

#: ../components/pro/linux/openvpn-easyrsa.rst:42
#: ../components/pro/windows/openvpn-easyrsa.rst:42
#: ../components/storage/linux/openvpn-easyrsa.rst:42
msgid ""
"For Debian Linux, more recent OpenSC packages are available `here "
"<https://github.com/Nitrokey/opensc-build>`__."
msgstr ""
"对于 Debian Linux，可从 <https://github.com/Nitrokey/opensc-build>`__ 获取最新的 "
"OpenSC 软件包。"

#: ../components/pro/linux/openvpn-easyrsa.rst:44
#: ../components/pro/windows/openvpn-easyrsa.rst:44
#: ../components/storage/linux/openvpn-easyrsa.rst:44
msgid "We will use the following Nitrokeys for physical key management:"
msgstr "我们将使用以下 Nitrokeys 进行物理密钥管理："

#: ../components/pro/linux/openvpn-easyrsa.rst:46
#: ../components/pro/windows/openvpn-easyrsa.rst:46
#: ../components/storage/linux/openvpn-easyrsa.rst:46
msgid ""
"An authentication key using the `Nitrokey Pro 2 (pdf) "
"<https://www.nitrokey.com/files/doc/Nitrokey_Pro_factsheet.pdf>`__"
msgstr ""
"使用 \"Nitrokey Pro 2 \"的验证密钥 (pdf) "
"<https://www.nitrokey.com/files/doc/Nitrokey_Pro_factsheet.pdf>`__"

#: ../components/pro/linux/openvpn-easyrsa.rst:49
#: ../components/pro/windows/openvpn-easyrsa.rst:49
#: ../components/storage/linux/openvpn-easyrsa.rst:49
msgid ""
"A Certificate Authority (CA) using the `Nitrokey HSM 2 (pdf) "
"<https://www.nitrokey.com/files/doc/Nitrokey_HSM_factsheet.pdf>`__"
msgstr ""
"使用 \"Nitrokey HSM 2 \"的证书颁发机构 (CA) (pdf) "
"<https://www.nitrokey.com/files/doc/Nitrokey_HSM_factsheet.pdf>`__"

#: ../components/pro/linux/openvpn-easyrsa.rst:52
#: ../components/pro/windows/openvpn-easyrsa.rst:52
#: ../components/storage/linux/openvpn-easyrsa.rst:52
msgid ""
"As a reminder, to build a Certificate Authority on Nitrokey HSM 2, you "
"may follow the instructions available `in the documentation <certificate-"
"authority.html#sign-a-server-certificate>`_."
msgstr ""
"需要提醒的是，要在 Nitrokey HSM 2 上建立证书授权，您可以按照文档 <certificate-"
"authority.html#sign-a-server-certificate>`_ 中的说明进行操作。"

#: ../components/pro/linux/openvpn-easyrsa.rst:54
#: ../components/pro/windows/openvpn-easyrsa.rst:54
#: ../components/storage/linux/openvpn-easyrsa.rst:54
msgid ""
"Alternatively you may set up your own CA on a `on a separate machine "
"<https://www.digitalocean.com/community/tutorials/how-to-set-up-and-"
"configure-a-certificate-authority-ca-on-ubuntu-20-04>`__, or use the "
"OpenVPN tutorial which also relies on `Easy-RSA <https://openvpn.net"
"/community-resources/setting-up-your-own-certificate-authority-ca/>`__. "
"The last 2 options rely on software solutions for key management."
msgstr ""
"另外，你也可以在 \"单独的机器<https://www.digitalocean.com/community/tutorials/how-to-"
"set-up-and-configure-a-certificate-authority-ca-on-"
"ubuntu-20-04>`__\"上设置自己的 CA，或者使用 OpenVPN 教程，该教程也依赖于 \"Easy-RSA "
"<https://openvpn.net/community-resources/setting-up-your-own-certificate-"
"authority-ca/>`__\"。后两种方法都依赖于密钥管理软件解决方案。"

#: ../components/pro/linux/openvpn-easyrsa.rst:59
#: ../components/pro/windows/openvpn-easyrsa.rst:59
#: ../components/storage/linux/openvpn-easyrsa.rst:57
msgid "Server side"
msgstr "服务器端"

#: ../components/pro/linux/openvpn-easyrsa.rst:62
#: ../components/pro/windows/openvpn-easyrsa.rst:62
msgid "1. Install OpenVPN"
msgstr "1.安装 OpenVPN"

#: ../components/pro/linux/openvpn-easyrsa.rst:64
#: ../components/pro/windows/openvpn-easyrsa.rst:64
#: ../components/storage/linux/openvpn-easyrsa.rst:62
msgid "First we need to enable IP Forwarding by editing ``/etc/sysctl.conf`` file"
msgstr "首先，我们需要通过编辑 ``/etc/sysctl.conf`` 文件来启用 IP 转发功能"

#: ../components/pro/linux/openvpn-easyrsa.rst:70
#: ../components/pro/windows/openvpn-easyrsa.rst:70
#: ../components/storage/linux/openvpn-easyrsa.rst:68
msgid "Uncomment or edit accordingly the following line"
msgstr "取消注释或相应编辑以下一行"

#: ../components/pro/linux/openvpn-easyrsa.rst:76
#: ../components/pro/windows/openvpn-easyrsa.rst:76
#: ../components/storage/linux/openvpn-easyrsa.rst:74
msgid "Close after saving it, and enter this command"
msgstr "保存后关闭，然后输入以下命令"

#: ../components/pro/linux/openvpn-easyrsa.rst:82
#: ../components/pro/windows/openvpn-easyrsa.rst:82
#: ../components/storage/linux/openvpn-easyrsa.rst:80
msgid ""
"Once IP forwarding is done, we will need to download the latest release "
"of OpenvPN for our Debian 10 server, according to `these instructions "
"<https://community.openvpn.net/openvpn/wiki/OpenvpnSoftwareRepos>`__:"
msgstr ""
"完成 IP 转发后，我们需要为 Debian 10 服务器下载最新版本的 OpenvPN，请按照 \"这些说明 "
"<https://community.openvpn.net/openvpn/wiki/OpenvpnSoftwareRepos>`___\"进行："

#: ../components/pro/linux/openvpn-easyrsa.rst:84
#: ../components/pro/windows/openvpn-easyrsa.rst:84
#: ../components/storage/linux/openvpn-easyrsa.rst:82
msgid "Change to root and download the GPG key that signed the package"
msgstr "更改为根用户并下载签署软件包的 GPG 密钥"

#: ../components/pro/linux/openvpn-easyrsa.rst:91
#: ../components/pro/windows/openvpn-easyrsa.rst:91
#: ../components/storage/linux/openvpn-easyrsa.rst:89
msgid "Add the URL of the adequate OpenVPN packages to the ``sources.list`` file"
msgstr "在``sources.list```文件中添加适当的 OpenVPN 软件包的 URL"

#: ../components/pro/linux/openvpn-easyrsa.rst:98
#: ../components/pro/windows/openvpn-easyrsa.rst:98
#: ../components/storage/linux/openvpn-easyrsa.rst:96
msgid ""
"We downloaded OpenVPN 2.5 as “password prompt” requires at least OpenVPN "
"`version 2.4.8 <https://community.openvpn.net/openvpn/ticket/1215>`__ to "
"login."
msgstr ""
"我们下载了 OpenVPN 2.5，因为 \"密码提示 \"要求至少有 OpenVPN `版本 2.4.8 "
"<https://community.openvpn.net/openvpn/ticket/1215>`__ 才能登录。"

#: ../components/pro/linux/openvpn-easyrsa.rst:101
#: ../components/pro/windows/openvpn-easyrsa.rst:101
#: ../components/storage/linux/openvpn-easyrsa.rst:99
msgid "Next we download OpenVPN"
msgstr "接下来下载 OpenVPN"

#: ../components/pro/linux/openvpn-easyrsa.rst:107
#: ../components/pro/windows/openvpn-easyrsa.rst:107
#: ../components/storage/linux/openvpn-easyrsa.rst:105
msgid ""
"If you want to check the version, it possible by calling ``--version`` "
"and print the following:"
msgstr "如果要检查版本，可以调用 ``--version`` 并打印以下内容："

#: ../components/pro/linux/openvpn-easyrsa.rst:120
#: ../components/pro/windows/openvpn-easyrsa.rst:120
msgid "2. Install Easy-RSA"
msgstr "2.安装 Easy-RSA"

#: ../components/pro/linux/openvpn-easyrsa.rst:122
#: ../components/pro/windows/openvpn-easyrsa.rst:122
#: ../components/storage/linux/openvpn-easyrsa.rst:121
msgid ""
"To build the PKI, we will download the latest version of Easy-RSA on the "
"server and client machines. To get the latest release, go to the "
"`Releases page on the official EasyRSA GitHub project "
"<https://github.com/OpenVPN/easy-rsa/releases>`__, copy the download link"
" for the file ending in ``.tgz``, and then paste it into the following "
"command:"
msgstr ""
"为了构建 PKI，我们将在服务器和客户端机器上下载最新版本的 Easy-RSA。要获取最新版本，请访问 EasyRSA 官方 GitHub 项目 "
"<https://github.com/OpenVPN/easy-rsa/releases>`__ 上的 \"Releases "
"\"页面，复制以\".tgz \"结尾的文件的下载链接，然后将其粘贴到以下命令中："

#: ../components/pro/linux/openvpn-easyrsa.rst:124
#: ../components/pro/windows/openvpn-easyrsa.rst:124
#: ../components/storage/linux/openvpn-easyrsa.rst:123
msgid "Download the latest release"
msgstr "下载最新版本"

#: ../components/pro/linux/openvpn-easyrsa.rst:131
#: ../components/pro/windows/openvpn-easyrsa.rst:131
#: ../components/storage/linux/openvpn-easyrsa.rst:130
msgid "Extract the tarball"
msgstr "解压压缩包"

#: ../components/pro/linux/openvpn-easyrsa.rst:140
#: ../components/pro/windows/openvpn-easyrsa.rst:140
msgid "3. Create a PKI for OpenVPN server"
msgstr "3.为 OpenVPN 服务器创建 PKI"

#: ../components/pro/linux/openvpn-easyrsa.rst:142
#: ../components/pro/windows/openvpn-easyrsa.rst:142
#: ../components/storage/linux/openvpn-easyrsa.rst:141
msgid ""
"Before you can create your OpenVPN server’s private key and certificate, "
"you need to create a local Public Key Infrastructure directory on your "
"OpenVPN server. You will use this directory to manage the server and "
"clients’ certificate requests, instead of making them directly on your CA"
" server."
msgstr ""
"在创建 OpenVPN 服务器的私钥和证书之前，需要在 OpenVPN "
"服务器上创建一个本地公钥基础设施目录。你将使用该目录管理服务器和客户端的证书请求，而不是直接在 CA 服务器上进行请求。"

#: ../components/pro/linux/openvpn-easyrsa.rst:144
#: ../components/pro/windows/openvpn-easyrsa.rst:144
#: ../components/storage/linux/openvpn-easyrsa.rst:143
msgid ""
"To build a PKI directory on your OpenVPN server, you’ll need to populate "
"a file called ``vars`` with some default values."
msgstr "要在 OpenVPN 服务器上建立 PKI 目录，需要在名为 ``vars`` 的文件中填入一些默认值。"

#: ../components/pro/linux/openvpn-easyrsa.rst:146
#: ../components/pro/windows/openvpn-easyrsa.rst:146
#: ../components/storage/linux/openvpn-easyrsa.rst:145
msgid "Create a ``vars`` file"
msgstr "创建一个 ``vars`` 文件"

#: ../components/pro/linux/openvpn-easyrsa.rst:154
#: ../components/pro/windows/openvpn-easyrsa.rst:154
#: ../components/storage/linux/openvpn-easyrsa.rst:153
msgid "Once the file is opened, paste in the following two lines"
msgstr "打开文件后，粘贴以下两行内容"

#: ../components/pro/linux/openvpn-easyrsa.rst:161
#: ../components/pro/windows/openvpn-easyrsa.rst:161
#: ../components/storage/linux/openvpn-easyrsa.rst:160
msgid ""
"These are the only two lines that you need in this ``vars`` file on your "
"OpenVPN server since it will not be used as a Certificate Authority. They"
" will ensure that your private keys and certificate requests are "
"configured to use Elliptic Curve Cryptography (ECC) to generate keys, and"
" secure signatures for your clients and OpenVPN server."
msgstr ""
"这是 OpenVPN 服务器上的 ``vars`` "
"文件中唯一需要的两行，因为它不会被用作证书颁发机构。它们将确保您的私钥和证书请求配置为使用椭圆曲线加密法（ECC）生成密钥，并为客户端和 "
"OpenVPN 服务器提供安全签名。"

#: ../components/pro/linux/openvpn-easyrsa.rst:163
#: ../components/pro/windows/openvpn-easyrsa.rst:163
#: ../components/storage/linux/openvpn-easyrsa.rst:163
msgid ""
"In regards to the choice of the cryptographic algorithms, I follow the "
"model in `this tutorial <https://www.digitalocean.com/community/tutorials"
"/how-to-set-up-and-configure-an-openvpn-server-on-centos-8>`__, and you "
"can customize these according to your specific needs."
msgstr ""
"关于加密算法的选择，我采用了本教程 <https://www.digitalocean.com/community/tutorials/how-"
"to-set-up-and-configure-an-openvpn-server-on-centos-8>`__ "
"中的模式，你可以根据自己的具体需求进行定制。"

#: ../components/pro/linux/openvpn-easyrsa.rst:165
#: ../components/pro/windows/openvpn-easyrsa.rst:165
#: ../components/storage/linux/openvpn-easyrsa.rst:165
msgid "Initialize the PKI"
msgstr "初始化 PKI"

#: ../components/pro/linux/openvpn-easyrsa.rst:167
#: ../components/pro/windows/openvpn-easyrsa.rst:167
#: ../components/storage/linux/openvpn-easyrsa.rst:167
msgid ""
"Once you have populated the ``vars`` file you can proceed with creating "
"the PKI directory. To do so, run the easyrsa script with the init-pki "
"option:"
msgstr "填入 ``vars`` 文件后，就可以继续创建 PKI 目录了。为此，请运行带有 init-pki 选项的 easyrsa 脚本："

#: ../components/pro/linux/openvpn-easyrsa.rst:173
#: ../components/pro/windows/openvpn-easyrsa.rst:173
#: ../components/storage/linux/openvpn-easyrsa.rst:174
msgid ""
"After you’ve initialized your PKI on the OpenVPN server, you are ready to"
" move on to the next step, which is creating an OpenVPN server "
"certificate request and private key."
msgstr "在 OpenVPN 服务器上初始化 PKI 后，就可以进入下一步，即创建 OpenVPN 服务器证书请求和私钥。"

#: ../components/pro/linux/openvpn-easyrsa.rst:176
#: ../components/pro/windows/openvpn-easyrsa.rst:176
msgid "4. Create ``server.req`` and ``server.key``"
msgstr "4.创建 ``server.req`` 和 ``server.key``."

#: ../components/pro/linux/openvpn-easyrsa.rst:178
#: ../components/pro/windows/openvpn-easyrsa.rst:178
#: ../components/storage/linux/openvpn-easyrsa.rst:179
msgid ""
"Now that your OpenVPN server has all the prerequisites installed, the "
"next step is to generate a key pair composed of a private key (to keep "
"secret), and a Certificate Signing Request (``.csr``) on your OpenVPN "
"server."
msgstr ""
"既然你的 OpenVPN 服务器已经安装了所有先决条件，下一步就是在你的 OpenVPN "
"服务器上生成一个由私钥（保密）和证书签名请求（``.csr``）组成的密钥对。"

#: ../components/pro/linux/openvpn-easyrsa.rst:180
#: ../components/pro/windows/openvpn-easyrsa.rst:180
#: ../components/storage/linux/openvpn-easyrsa.rst:181
msgid ""
"In general terms, on systems where we generate a key and request, these "
"files are left unencrypted by using the ``nopass`` argument, since "
"servers usually need to start up without any password input. This "
"generates an *unencrypted key*, so mind *protect its access and file "
"permissions* carefully."
msgstr ""
"一般来说，在我们生成密钥和请求的系统上，这些文件通过使用 `nopass`` "
"参数不加密，因为服务器通常需要在不输入任何密码的情况下启动。这样会生成一个*未加密的密钥*，因此要*小心保护其访问权限和文件权限*。"

#: ../components/pro/linux/openvpn-easyrsa.rst:184
#: ../components/pro/windows/openvpn-easyrsa.rst:184
#: ../components/storage/linux/openvpn-easyrsa.rst:185
msgid "Configuration notes from OpenVPN:"
msgstr "OpenVPN 的配置说明："

#: ../components/pro/linux/openvpn-easyrsa.rst:186
#: ../components/pro/windows/openvpn-easyrsa.rst:186
#: ../components/storage/linux/openvpn-easyrsa.rst:187
msgid ""
"The server, and each client, must have their own cert and key file. The "
"server and all clients will use the same CA file."
msgstr "服务器和每个客户端都必须有自己的证书和密钥文件。服务器和所有客户端将使用同一个 CA 文件。"

#: ../components/pro/linux/openvpn-easyrsa.rst:188
#: ../components/pro/windows/openvpn-easyrsa.rst:188
#: ../components/storage/linux/openvpn-easyrsa.rst:189
msgid "Server certificate should have the following:"
msgstr "服务器证书应包含以下内容："

#: ../components/pro/linux/openvpn-easyrsa.rst:190
#: ../components/pro/windows/openvpn-easyrsa.rst:190
#: ../components/storage/linux/openvpn-easyrsa.rst:191
msgid "``keyUsage:  digitalSignature, keyEncipherment``"
msgstr "密钥使用：数字签名、密钥破译"

#: ../components/pro/linux/openvpn-easyrsa.rst:192
#: ../components/pro/windows/openvpn-easyrsa.rst:192
#: ../components/storage/linux/openvpn-easyrsa.rst:193
msgid "``extendedKeyUsage: serverAuth``"
msgstr "扩展密钥使用方法：serverAuth"

#: ../components/pro/linux/openvpn-easyrsa.rst:194
#: ../components/pro/windows/openvpn-easyrsa.rst:194
#: ../components/storage/linux/openvpn-easyrsa.rst:195
msgid "Create the signing request for the server"
msgstr "为服务器创建签名请求"

#: ../components/pro/linux/openvpn-easyrsa.rst:196
#: ../components/pro/windows/openvpn-easyrsa.rst:196
#: ../components/storage/linux/openvpn-easyrsa.rst:197
msgid ""
"Navigate to the ``~/easyrsa`` directory on your OpenVPN Server as your "
"non-root user, and enter the following commands:"
msgstr "以非 root 用户身份导航至 OpenVPN 服务器上的 ``~/easyrsa`` 目录，并输入以下命令："

#: ../components/pro/linux/openvpn-easyrsa.rst:203
#: ../components/pro/windows/openvpn-easyrsa.rst:203
#: ../components/storage/linux/openvpn-easyrsa.rst:204
msgid ""
"This will create a private key for the server and a certificate request "
"file called ``server.req``."
msgstr "这将为服务器创建私钥和名为 ``server.req`` 的证书请求文件。"

#: ../components/pro/linux/openvpn-easyrsa.rst:205
#: ../components/pro/windows/openvpn-easyrsa.rst:205
#: ../components/storage/linux/openvpn-easyrsa.rst:206
msgid ""
"Once you have a signed certificate, you’ll transfer it back to the "
"OpenVPN server."
msgstr "获得签名证书后，将其传回 OpenVPN 服务器。"

#: ../components/pro/linux/openvpn-easyrsa.rst:207
#: ../components/pro/windows/openvpn-easyrsa.rst:207
#: ../components/storage/linux/openvpn-easyrsa.rst:208
msgid "Copy the key to the OpenVPN server directory"
msgstr "将密钥复制到 OpenVPN 服务器目录中"

#: ../components/pro/linux/openvpn-easyrsa.rst:213
#: ../components/pro/windows/openvpn-easyrsa.rst:213
#: ../components/storage/linux/openvpn-easyrsa.rst:214
msgid ""
"After completing these steps, you have successfully created a private key"
" for your OpenVPN server. You have also generated a Certificate Signing "
"Request for the OpenVPN server."
msgstr "完成这些步骤后，你就成功为 OpenVPN 服务器创建了私钥。你还为 OpenVPN 服务器生成了证书签名请求。"

#: ../components/pro/linux/openvpn-easyrsa.rst:217
#: ../components/pro/windows/openvpn-easyrsa.rst:217
#: ../components/storage/linux/openvpn-easyrsa.rst:218
msgid "File extensions for certificate signing requests"
msgstr "证书签名请求的文件扩展名"

#: ../components/pro/linux/openvpn-easyrsa.rst:219
#: ../components/pro/windows/openvpn-easyrsa.rst:219
#: ../components/storage/linux/openvpn-easyrsa.rst:220
msgid ""
"The file extension that is adopted by the CA and HSM tutorial indicates "
"the creation of a ``.csr`` file, however Easy-RSA creates certificate "
"signing requests with a ``.req`` extension."
msgstr "CA 和 HSM 教程采用的文件扩展名表示创建的是``.csr``文件，但 Easy-RSA 创建的证书签名请求的扩展名是``.req``。"

#: ../components/pro/linux/openvpn-easyrsa.rst:223
#: ../components/pro/windows/openvpn-easyrsa.rst:223
#: ../components/storage/linux/openvpn-easyrsa.rst:224
msgid ""
"We will use interchangeably both extensions, while making sure that we "
"transfer the right files to the Certificate Authority, and generate a "
"final certificate with a ``.crt`` extension."
msgstr "我们将交替使用这两种扩展名，同时确保将正确的文件传输到证书颁发机构，并生成扩展名为 ``.crt`` 的最终证书。"

#: ../components/pro/linux/openvpn-easyrsa.rst:227
#: ../components/pro/windows/openvpn-easyrsa.rst:227
#: ../components/storage/linux/openvpn-easyrsa.rst:228
msgid ""
"In the next section of this guide, we will sign a ``.req`` file with our "
"CA on deployed on the HSM 2 device. For this purpose, I will use a "
"dedicated machine to sign the requests."
msgstr "在本指南的下一部分，我们将使用部署在 HSM 2 设备上的 CA 签名``.req``文件。为此，我将使用一台专用机器来签署请求。"

#: ../components/pro/linux/openvpn-easyrsa.rst:230
#: ../components/pro/windows/openvpn-easyrsa.rst:230
msgid "5. Sign and retrieve ``server.crt``"
msgstr "5.签署并检索 ``server.crt``"

#: ../components/pro/linux/openvpn-easyrsa.rst:232
#: ../components/pro/windows/openvpn-easyrsa.rst:232
#: ../components/storage/linux/openvpn-easyrsa.rst:233
msgid ""
"The following instructions require the transfer of the ``server.req`` (or"
" ``server.csr``) file to the CA system."
msgstr "以下说明要求将 ``server.req``（或 ``server.csr``）文件传输到 CA 系统。"

#: ../components/pro/linux/openvpn-easyrsa.rst:235
#: ../components/pro/windows/openvpn-easyrsa.rst:235
#: ../components/storage/linux/openvpn-easyrsa.rst:236
msgid ""
"The transfer itself is not security sensitive, though it is wise to "
"verify if the received file matches the sender’s copy, if the transport "
"is untrusted."
msgstr "传输本身对安全并不敏感，但如果传输是不可信的，则最好验证接收的文件是否与发送者的副本一致。"

#: ../components/pro/linux/openvpn-easyrsa.rst:237
#: ../components/pro/windows/openvpn-easyrsa.rst:237
#: ../components/storage/linux/openvpn-easyrsa.rst:238
msgid ""
"In order to go through these steps, I will extensively rely on `these "
"instructions <certificate-authority.html#creating-the-intermediate-"
"certificate-authority>`_, to sign the certificate signing requests, once "
"we generated them with Easy-RSA."
msgstr ""
"为了完成这些步骤，我将大量使用 \"这些说明 <certificate-authority.html#creating-the-"
"intermediate-certificate-authority>\"_，以便在使用 Easy-RSA 生成证书签名请求后对其进行签名。"

#: ../components/pro/linux/openvpn-easyrsa.rst:239
#: ../components/pro/windows/openvpn-easyrsa.rst:239
#: ../components/storage/linux/openvpn-easyrsa.rst:241
msgid "Sign the ``server.req`` file"
msgstr "签署 ``server.req`` 文件"

#: ../components/pro/linux/openvpn-easyrsa.rst:241
#: ../components/pro/windows/openvpn-easyrsa.rst:241
#: ../components/storage/linux/openvpn-easyrsa.rst:243
msgid ""
"On the local machine dedicated to access the HSM, we will use the tools "
"provided by Opensc 0.20 in order to sign the ``.req`` file, and send it "
"back to the OpenVPN server. We assume we have transferred the file from "
"the server machine to the CA machine."
msgstr ""
"在专用于访问 HSM 的本地机器上，我们将使用 Opensc 0.20 提供的工具来签署 ``.req`` 文件，并将其发送回 OpenVPN "
"服务器。我们假设已将文件从服务器机器传输到 CA 机器。"

#: ../components/pro/linux/openvpn-easyrsa.rst:243
#: ../components/pro/windows/openvpn-easyrsa.rst:243
#: ../components/storage/linux/openvpn-easyrsa.rst:245
msgid ""
"First we start by plugging the HSM Nitrokey, and enter this instruction "
"for listing the keys available."
msgstr "首先，我们插入 HSM Nitrokey，然后输入这条指令，列出可用的按键。"

#: ../components/pro/linux/openvpn-easyrsa.rst:245
#: ../components/pro/windows/openvpn-easyrsa.rst:245
#: ../components/storage/linux/openvpn-easyrsa.rst:247
msgid "Query the list of available devices"
msgstr "查询可用设备列表"

#: ../components/pro/linux/openvpn-easyrsa.rst:251
#: ../components/storage/linux/openvpn-easyrsa.rst:253
msgid ""
"**(Required step)** If this is the first time you sign a certificate with"
" the CA, you might want to retrieve the URI of the CA’s private key from "
"the HSM, and include it in the config file."
msgstr "**如果这是你第一次与 CA 签发证书，你可能需要从 HSM 获取 CA 私钥的 URI，并将其包含在配置文件中。"

#: ../components/pro/linux/openvpn-easyrsa.rst:254
#: ../components/pro/windows/openvpn-easyrsa.rst:253
#: ../components/storage/linux/openvpn-easyrsa.rst:255
msgid "The key’s URI should be in this format:"
msgstr "密钥的 URI 应采用这种格式："

#: ../components/pro/linux/openvpn-easyrsa.rst:260
#: ../components/pro/windows/openvpn-easyrsa.rst:259
#: ../components/storage/linux/openvpn-easyrsa.rst:261
msgid "Create ``openvpn/`` directory under ``certificate-authority/``"
msgstr "在``certificate-authority/```下创建``openvpn/``目录"

#: ../components/pro/linux/openvpn-easyrsa.rst:267
#: ../components/pro/windows/openvpn-easyrsa.rst:266
#: ../components/storage/linux/openvpn-easyrsa.rst:268
msgid "Sign the ``server.req``"
msgstr "签署 ``server.req``"

#: ../components/pro/linux/openvpn-easyrsa.rst:273
#: ../components/pro/windows/openvpn-easyrsa.rst:272
#: ../components/storage/linux/openvpn-easyrsa.rst:275
msgid "Retrieve the ``server.crt`` file to the server machine"
msgstr "读取服务器机器上的 ``server.crt`` 文件"

#: ../components/pro/linux/openvpn-easyrsa.rst:275
#: ../components/pro/windows/openvpn-easyrsa.rst:274
#: ../components/storage/linux/openvpn-easyrsa.rst:277
msgid "Transfer the signed certificates to the server"
msgstr "将签名证书传输到服务器"

#: ../components/pro/linux/openvpn-easyrsa.rst:277
#: ../components/pro/windows/openvpn-easyrsa.rst:276
#: ../components/storage/linux/openvpn-easyrsa.rst:279
msgid ""
"From the CA machine, copy the files ``server.crt`` and ``chain.crt`` to "
"the OpenVPN server. In this example we will use the ``scp`` command as "
"following:"
msgstr ""
"从 CA 机器将文件 ``server.crt`` 和 ``chain.crt`` 复制到 OpenVPN 服务器。在本例中，我们将使用 "
"``scp`` 命令："

#: ../components/pro/linux/openvpn-easyrsa.rst:283
#: ../components/pro/windows/openvpn-easyrsa.rst:282
#: ../components/storage/linux/openvpn-easyrsa.rst:285
msgid "Place the certificates on the server’s directory"
msgstr "将证书放在服务器目录下"

#: ../components/pro/linux/openvpn-easyrsa.rst:291
#: ../components/pro/windows/openvpn-easyrsa.rst:290
#: ../components/storage/linux/openvpn-easyrsa.rst:293
msgid "CA Certificate and ``chain.crt``"
msgstr "CA 证书和 ``chain.crt``"

#: ../components/pro/linux/openvpn-easyrsa.rst:293
#: ../components/pro/windows/openvpn-easyrsa.rst:292
#: ../components/storage/linux/openvpn-easyrsa.rst:295
msgid ""
"In the above, the CA returns the signed sever certificate, and includes "
"the CA certificate ``CA.crt`` which is the ``chain.crt`` file. This can "
"be done over an insecure channel, though the client is encouraged to "
"confirm if the received ``chain.crt`` is valid, if the transport is "
"untrusted."
msgstr ""
"在上文中，CA 返回已签名的 sever 证书，并包括 CA 证书 ``CA.crt`` 即 ``chain.crt`` "
"文件。这可以通过不安全的信道完成，但如果传输是不可信任的，则鼓励客户端确认收到的 ``chain.crt`` 是否有效。"

#: ../components/pro/linux/openvpn-easyrsa.rst:299
#: ../components/pro/windows/openvpn-easyrsa.rst:298
#: ../components/storage/linux/openvpn-easyrsa.rst:301
msgid ""
"It is possible to rename the file ``chain.crt`` file to ``CA.crt`` on the"
" target machine, however we will use ``chain.crt`` in the next "
"instructions."
msgstr "可以将目标计算机上的 ``chain.crt`` 文件重命名为 ``CA.crt``，但我们将在接下来的说明中使用 ``chain.crt``。"

#: ../components/pro/linux/openvpn-easyrsa.rst:304
#: ../components/pro/windows/openvpn-easyrsa.rst:303
msgid "6. Configure the OpenVPN server"
msgstr "6.配置 OpenVPN 服务器"

#: ../components/pro/linux/openvpn-easyrsa.rst:306
#: ../components/pro/windows/openvpn-easyrsa.rst:305
#: ../components/storage/linux/openvpn-easyrsa.rst:308
msgid ""
"A connection that uses TLS requires multiple `certificates and keys for "
"authentication <https://wiki.teltonika-"
"networks.com/view/OpenVPN_configuration_examples>`__. Now that we issued "
"and signed those, we can place them in the right directories. The "
"breakdown of the certificates and keys that must be located at the root "
"directory are the following:"
msgstr ""
"使用 TLS 的连接需要多个用于验证 <https://wiki.teltonika-"
"networks.com/view/OpenVPN_configuration_examples>`__ "
"的证书和密钥。现在，我们已经签发并签署了这些证书和密钥，可以把它们放到正确的目录中了。必须放在根目录下的证书和密钥细目如下："

#: ../components/pro/linux/openvpn-easyrsa.rst:317
#: ../components/pro/windows/openvpn-easyrsa.rst:316
#: ../components/storage/linux/openvpn-easyrsa.rst:315
msgid ""
"On your OpenVPN server, now you can create the configuration file "
"``server.conf`` with your favorite text editor. The file can be "
"configured according to your needs, while we make sure to change the "
"server certificate and key sections according the names you chose for the"
" your the files we signed:"
msgstr ""
"在 OpenVPN 服务器上，您可以使用自己喜欢的文本编辑器创建配置文件 "
"``server.conf``。该文件可根据您的需要进行配置，同时我们会确保根据您为我们签署的文件选择的名称更改服务器证书和密钥部分："

#: ../components/pro/linux/openvpn-easyrsa.rst:326
#: ../components/pro/windows/openvpn-easyrsa.rst:325
#: ../components/storage/linux/openvpn-easyrsa.rst:324
msgid "Here is the configuration file we can use for testing these instructions:"
msgstr "下面是我们可以用来测试这些指令的配置文件："

#: ../components/pro/linux/openvpn-easyrsa.rst:356
#: ../components/pro/windows/openvpn-easyrsa.rst:355
#: ../components/storage/linux/openvpn-easyrsa.rst:354
msgid "To test if the configuration functions properly, we can use this command:"
msgstr "要测试配置是否正常运行，我们可以使用这条命令："

#: ../components/pro/linux/openvpn-easyrsa.rst:363
#: ../components/pro/windows/openvpn-easyrsa.rst:362
msgid "7. Start the OpenVPN service on the server"
msgstr "7.在服务器上启动 OpenVPN 服务"

#: ../components/pro/linux/openvpn-easyrsa.rst:365
#: ../components/pro/windows/openvpn-easyrsa.rst:364
#: ../components/storage/linux/openvpn-easyrsa.rst:363
msgid ""
"Enable the OpenVPN service by adding it to systemctl, and start it using "
"these commands:"
msgstr "将 OpenVPN 服务添加到 systemctl 中，启用 OpenVPN 服务，然后使用这些命令启动 OpenVPN："

#: ../components/pro/linux/openvpn-easyrsa.rst:372
#: ../components/pro/windows/openvpn-easyrsa.rst:371
#: ../components/storage/linux/openvpn-easyrsa.rst:370
msgid "To Double check if the OpenVPN service is active use this command:"
msgstr "要双重检查 OpenVPN 服务是否激活，请使用此命令："

#: ../components/pro/linux/openvpn-easyrsa.rst:378
#: ../components/pro/windows/openvpn-easyrsa.rst:377
#: ../components/storage/linux/openvpn-easyrsa.rst:376
msgid "The OpenVPN should be running at this point."
msgstr "此时，OpenVPN 应该正在运行。"

#: ../components/pro/linux/openvpn-easyrsa.rst:383
#: ../components/pro/windows/openvpn-easyrsa.rst:382
#: ../components/storage/linux/openvpn-easyrsa.rst:379
msgid "Client side configuration"
msgstr "客户端配置"

#: ../components/pro/linux/openvpn-easyrsa.rst:386
#: ../components/pro/windows/openvpn-easyrsa.rst:385
msgid "1. Install OpenVPN and Easy-RSA"
msgstr "1.安装 OpenVPN 和 Easy-RSA"

#: ../components/pro/linux/openvpn-easyrsa.rst:388
#: ../components/pro/windows/openvpn-easyrsa.rst:387
#: ../components/storage/linux/openvpn-easyrsa.rst:384
msgid "Install the software"
msgstr "安装软件"

#: ../components/pro/linux/openvpn-easyrsa.rst:390
#: ../components/pro/windows/openvpn-easyrsa.rst:389
#: ../components/storage/linux/openvpn-easyrsa.rst:386
msgid ""
"We can use directly ``dnf install`` to install OpenVPN 2.4.9 and Easy-RSA"
" 3.0.7"
msgstr "我们可以直接使用 ``dnf install`` 安装 OpenVPN 2.4.9 和 Easy-RSA 3.0.7"

#: ../components/pro/linux/openvpn-easyrsa.rst:396
#: ../components/pro/windows/openvpn-easyrsa.rst:395
#: ../components/storage/linux/openvpn-easyrsa.rst:392
msgid "Then we create as non-root a directory for Easy RSA called ``Easy-RSA``"
msgstr "然后，我们为 Easy RSA 创建一个非根目录，名为``Easy-RSA``。"

#: ../components/pro/linux/openvpn-easyrsa.rst:402
#: ../components/pro/windows/openvpn-easyrsa.rst:401
#: ../components/storage/linux/openvpn-easyrsa.rst:398
msgid "And link it to the Easy RSA package we just installed"
msgstr "并将其链接到我们刚刚安装的 Easy RSA 软件包"

#: ../components/pro/linux/openvpn-easyrsa.rst:409
#: ../components/pro/windows/openvpn-easyrsa.rst:408
msgid "2. Create a PKI for the OpenVPN client"
msgstr "2.为 OpenVPN 客户端创建 PKI"

#: ../components/pro/linux/openvpn-easyrsa.rst:411
#: ../components/pro/windows/openvpn-easyrsa.rst:410
#: ../components/storage/linux/openvpn-easyrsa.rst:407
msgid ""
"In the same manner we created a PKI on the OpenVPN server, we will create"
" a PKI using Easy-RSA on the client side."
msgstr "与在 OpenVPN 服务器上创建 PKI 的方式相同，我们将在客户端使用 Easy-RSA 创建 PKI。"

#: ../components/pro/linux/openvpn-easyrsa.rst:414
#: ../components/pro/windows/openvpn-easyrsa.rst:413
msgid "3. Create a ``client.req`` and ``client.key``"
msgstr "3.创建``client.req``和``client.key``。"

#: ../components/pro/linux/openvpn-easyrsa.rst:416
#: ../components/pro/windows/openvpn-easyrsa.rst:415
#: ../components/storage/linux/openvpn-easyrsa.rst:412
msgid ""
"In the same manner we issued the key pair on the sever, we generate a key"
" pair for the client which will be composed of the ``client.req`` file "
"and the ``client.key`` file. The latter must be kept secret on the client"
" machine."
msgstr ""
"与在服务器上发布密钥对的方式相同，我们也会为客户端生成一个密钥对，该密钥对由 `client.req`` 文件和 `client.key`` "
"文件组成。后者必须在客户机上保密。"

#: ../components/pro/linux/openvpn-easyrsa.rst:420
#: ../components/pro/windows/openvpn-easyrsa.rst:419
msgid "4. Sign ``client.req`` and issue the ``client.crt`` file"
msgstr "4.签署`client.req``并发布`client.crt``文件"

#: ../components/pro/linux/openvpn-easyrsa.rst:422
#: ../components/pro/windows/openvpn-easyrsa.rst:421
#: ../components/storage/linux/openvpn-easyrsa.rst:418
msgid ""
"To transfer the ``client.req`` file to the CA machine, we will use the "
"same method as we did for the ``server.req`` file."
msgstr "要将 ``client.req`` 文件传输到 CA 机器，我们将使用与 ``server.req`` 文件相同的方法。"

#: ../components/pro/linux/openvpn-easyrsa.rst:424
#: ../components/pro/windows/openvpn-easyrsa.rst:423
#: ../components/storage/linux/openvpn-easyrsa.rst:420
msgid ""
"Once transferred, on the CA machine we sign the certificate signing "
"request file with this command"
msgstr "传输完成后，我们在 CA 机器上使用以下命令签署证书签署请求文件"

#: ../components/pro/linux/openvpn-easyrsa.rst:431
#: ../components/pro/windows/openvpn-easyrsa.rst:430
msgid "5. Import ``client.crt`` on the Nitrokey from the CA machine"
msgstr "5.从 CA 机器在 Nitrokey 上导入 ``client.crt``"

#: ../components/pro/linux/openvpn-easyrsa.rst:433
#: ../components/pro/windows/openvpn-easyrsa.rst:432
#: ../components/storage/linux/openvpn-easyrsa.rst:429
msgid ""
"After creating the ``client.crt`` file, we plug the Nitrokey Pro 2 device"
" in the CA machine, and import the ``.crt`` to the Pro 2 device using "
"this command:"
msgstr ""
"创建``client.crt``文件后，我们将 Nitrokey Pro 2 设备插入 CA 机器，并使用此命令将``.crt``导入 Pro 2"
" 设备："

#: ../components/pro/linux/openvpn-easyrsa.rst:439
#: ../components/pro/windows/openvpn-easyrsa.rst:438
#: ../components/storage/linux/openvpn-easyrsa.rst:435
msgid ""
"You can see if the key is effectively stored on the Nitrokey using this "
"command:"
msgstr "使用该命令可以查看密钥是否有效存储在 Nitrokey 中："

#: ../components/pro/linux/openvpn-easyrsa.rst:445
#: ../components/pro/windows/openvpn-easyrsa.rst:444
#: ../components/storage/linux/openvpn-easyrsa.rst:441
msgid "Or alternatively"
msgstr "或者"

#: ../components/pro/linux/openvpn-easyrsa.rst:451
#: ../components/pro/windows/openvpn-easyrsa.rst:450
#: ../components/storage/linux/openvpn-easyrsa.rst:447
msgid ""
"Fore more commands you can refer to the `OpenSC wiki "
"<https://github.com/OpenSC/OpenSC/wiki/OpenPGP-card>`__."
msgstr ""
"如需了解更多命令，请参阅 `OpenSC wiki <https://github.com/OpenSC/OpenSC/wiki/OpenPGP-"
"card>`__。"

#: ../components/pro/linux/openvpn-easyrsa.rst:454
#: ../components/pro/windows/openvpn-easyrsa.rst:453
msgid "6. Retrieve the ``chain.crt`` file from the CA machine"
msgstr "6.从 CA 机器读取 `chain.crt`` 文件"

#: ../components/pro/linux/openvpn-easyrsa.rst:456
#: ../components/pro/windows/openvpn-easyrsa.rst:455
#: ../components/storage/linux/openvpn-easyrsa.rst:452
msgid ""
"While we keep the ``client.crt``\\ stored on the nitrokey Pro 2 device, "
"we must retrieve the ``chain.crt`` file on the client machine, and store "
"it in the adequate directory. We may use ``scp`` as in the method "
"explained in the server section of this guide."
msgstr ""
"当我们将``client.crt``存储在 nitrokey Pro 2 "
"设备上时，我们必须在客户端机器上检索``chain.crt``文件，并将其存储在适当的目录中。我们可以使用本指南服务器部分介绍的 ``scp`` "
"方法。"

#: ../components/pro/linux/openvpn-easyrsa.rst:459
#: ../components/pro/windows/openvpn-easyrsa.rst:458
msgid "7. Configure the client to interact with the Nitrokey"
msgstr "7.配置客户端与 Nitrokey 互动"

#: ../components/pro/linux/openvpn-easyrsa.rst:461
#: ../components/pro/windows/openvpn-easyrsa.rst:460
#: ../components/storage/linux/openvpn-easyrsa.rst:457
msgid ""
"Now back on the client machine, we will plug the Nitrokey Pro and use it "
"to establish the VPN connection with the server. In general terms, a "
"connection that uses TLS requires multiple certificates and keys for "
"authentication:"
msgstr ""
"现在回到客户机上，我们将插入 Nitrokey Pro 并用它与服务器建立 VPN 连接。一般来说，使用 TLS "
"的连接需要多个证书和密钥进行身份验证："

#: ../components/pro/linux/openvpn-easyrsa.rst:470
#: ../components/pro/windows/openvpn-easyrsa.rst:469
#: ../components/storage/linux/openvpn-easyrsa.rst:463
msgid ""
"For this guide we can the following ``client.conf`` file, and add the "
"required options to it accordingly:"
msgstr "在本指南中，我们可以使用下面的``client.conf``文件，并相应地添加所需的选项："

#: ../components/pro/linux/openvpn-easyrsa.rst:492
#: ../components/pro/windows/openvpn-easyrsa.rst:491
#: ../components/storage/linux/openvpn-easyrsa.rst:485
msgid "Determine the correct object"
msgstr "确定正确的对象"

#: ../components/pro/linux/openvpn-easyrsa.rst:494
#: ../components/pro/windows/openvpn-easyrsa.rst:493
#: ../components/storage/linux/openvpn-easyrsa.rst:487
msgid ""
"Each PKCS#11 provider can support multiple devices. In order to view the "
"available object list you can use the following command:"
msgstr "每个 PKCS#11 提供程序可支持多个设备。要查看可用对象列表，可以使用以下命令："

#: ../components/pro/linux/openvpn-easyrsa.rst:510
#: ../components/pro/windows/openvpn-easyrsa.rst:509
#: ../components/storage/linux/openvpn-easyrsa.rst:503
msgid ""
"Each certificate/private key pair have unique ``Serialized id`` string. "
"The serialized id string of the requested certificate should be "
"specified, in the configuration file. We can do this by adding the "
"``pkcs11-id`` option using single quote marks."
msgstr ""
"每个证书/私钥对都有唯一的 \"序列化 ID \"字符串。应在配置文件中指定所请求证书的序列化 id 字符串。我们可以使用单引号添加 "
"``pkcs11-id`` 选项。"

#: ../components/pro/linux/openvpn-easyrsa.rst:516
#: ../components/pro/windows/openvpn-easyrsa.rst:515
#: ../components/storage/linux/openvpn-easyrsa.rst:509
msgid "Add retrieved Serialized ID to the configuration file"
msgstr "将检索到的序列化 ID 添加到配置文件中"

#: ../components/pro/linux/openvpn-easyrsa.rst:518
#: ../components/pro/windows/openvpn-easyrsa.rst:517
#: ../components/storage/linux/openvpn-easyrsa.rst:511
msgid ""
"Using your favorite text editor, open the server.conf file, and add the "
"following lines, while taking care to insert your own ``Serialized id``:"
msgstr "使用您最喜欢的文本编辑器，打开 server.conf 文件，添加以下几行，同时注意插入您自己的 ``Serialized id``："

#: ../components/pro/linux/openvpn-easyrsa.rst:525
#: ../components/pro/windows/openvpn-easyrsa.rst:524
#: ../components/storage/linux/openvpn-easyrsa.rst:518
msgid ""
"For additional `settings related to OpenVPN <https://openvpn.net"
"/community-resources/how-to/>`__ authentication, you may also add few "
"lines to handle key maganagement, although it is optional."
msgstr ""
"对于与 OpenVPN <https://openvpn.net/community-resources/how-to/>`__ "
"身份验证有关的其他设置，也可以添加几行来处理密钥管理，但这是可选的。"

#: ../components/pro/linux/openvpn-easyrsa.rst:529
#: ../components/pro/linux/openvpn-easyrsa.rst:553
#: ../components/pro/windows/openvpn-easyrsa.rst:528
#: ../components/pro/windows/openvpn-easyrsa.rst:552
#: ../components/storage/linux/openvpn-easyrsa.rst:522
#: ../components/storage/linux/openvpn-easyrsa.rst:546
msgid "Click to view the code"
msgstr "点击查看代码"

#: ../components/pro/linux/openvpn-easyrsa.rst:546
#: ../components/pro/windows/openvpn-easyrsa.rst:545
#: ../components/storage/linux/openvpn-easyrsa.rst:539
msgid "Optional step"
msgstr "可选步骤"

#: ../components/pro/linux/openvpn-easyrsa.rst:549
#: ../components/pro/windows/openvpn-easyrsa.rst:548
#: ../components/storage/linux/openvpn-easyrsa.rst:542
msgid ""
"If you need to test the configuration, with and without the token on the "
"Nitrokey, you may add lines to the same ``client.conf`` and "
"comment/uncomment the relevant lines according to your needs:"
msgstr "如果需要在 Nitrokey 上测试有无令牌的配置，可以在同一个 ``client.conf``中添加行，并根据需要对相关行进行注释/取消注释："

#: ../components/pro/linux/openvpn-easyrsa.rst:563
#: ../components/pro/windows/openvpn-easyrsa.rst:562
#: ../components/storage/linux/openvpn-easyrsa.rst:556
msgid "Configure the OpenVPN client"
msgstr "配置 OpenVPN 客户端"

#: ../components/pro/linux/openvpn-easyrsa.rst:565
#: ../components/pro/windows/openvpn-easyrsa.rst:564
#: ../components/storage/linux/openvpn-easyrsa.rst:558
msgid "The final configuration file ``client.conf`` should look like this one:"
msgstr "最终的配置文件 ``client.conf`` 应该是这个样子："

#: ../components/pro/linux/openvpn-easyrsa.rst:608
#: ../components/pro/windows/openvpn-easyrsa.rst:631
#: ../components/storage/linux/openvpn-easyrsa.rst:601
msgid "Known issues"
msgstr "已知问题"

#: ../components/pro/linux/openvpn-easyrsa.rst:610
#: ../components/pro/windows/openvpn-easyrsa.rst:633
#: ../components/storage/linux/openvpn-easyrsa.rst:603
msgid ""
"There are some known issues related to OpenVPN login with OpenSC. Please "
"consult these issues `here <https://github.com/Nitrokey/wiki/wiki/3rd-"
"Party-Issues>`__."
msgstr ""
"与使用 OpenSC 登录 OpenVPN 有关的一些已知问题。请在 <https://github.com/Nitrokey/wiki/wiki"
"/3rd-Party-Issues>`__ 查阅这些问题。"

#: ../components/pro/linux/openvpn-easyrsa.rst:613
#: ../components/pro/windows/openvpn-easyrsa.rst:636
msgid "8. Start the OpenVPN client"
msgstr "8.启动 OpenVPN 客户端"

#: ../components/pro/linux/openvpn-easyrsa.rst:615
#: ../components/pro/windows/openvpn-easyrsa.rst:638
#: ../components/storage/linux/openvpn-easyrsa.rst:608
msgid "Start the OpenVPN service on the client"
msgstr "在客户端启动 OpenVPN 服务"

#: ../components/pro/linux/openvpn-easyrsa.rst:617
#: ../components/pro/windows/openvpn-easyrsa.rst:640
#: ../components/storage/linux/openvpn-easyrsa.rst:610
msgid "Enable the OpenVPN service, and start it using these commands:"
msgstr "启用 OpenVPN 服务，并使用这些命令启动它："

#: ../components/pro/linux/openvpn-easyrsa.rst:624
#: ../components/pro/windows/openvpn-easyrsa.rst:647
#: ../components/storage/linux/openvpn-easyrsa.rst:617
msgid "To double check if the OpenVPN service is active use this command:"
msgstr "要仔细检查 OpenVPN 服务是否处于激活状态，请使用此命令："

#: ../components/pro/linux/openvpn-easyrsa.rst:630
#: ../components/pro/windows/openvpn-easyrsa.rst:653
#: ../components/storage/linux/openvpn-easyrsa.rst:623
msgid "Enter your User PIN"
msgstr "输入用户密码"

#: ../components/pro/linux/openvpn-easyrsa.rst:632
#: ../components/pro/windows/openvpn-easyrsa.rst:655
#: ../components/storage/linux/openvpn-easyrsa.rst:625
msgid "When executing OpenVPN client, Nitrokey’s PIN needs to be entered:"
msgstr "执行 OpenVPN 客户端时，需要输入 Nitrokey 的 PIN 码："

#: ../components/pro/linux/openvpn-easyrsa.rst:644
#: ../components/storage/linux/openvpn-easyrsa.rst:638
msgid ""
"Unfortunately OpenVPN doesn’t seem to be able to establish a handshake "
"and stops at an error as reported `here <https://support.nitrokey.com/t"
"/nitrokey-pro-with-openssl-1-1-1-tls-1-3-and-rsa-based-"
"certificates/2180/2>`__, `here <https://support.nitrokey.com/t/openvpn-"
"openssl-error-141f0006/2637>`__ and `here "
"<https://community.openvpn.net/openvpn/ticket/1215>`__"
msgstr ""
"不幸的是，OpenVPN 似乎无法建立握手关系，并在出现错误时停止，如以下报告所述：`此处 "
"<https://support.nitrokey.com/t/nitrokey-pro-with-openssl-1-1-1-tls-1-3"
"-and-rsa-based-certificates/2180/2>`__, `此处 "
"<https://support.nitrokey.com/t/openvpn-openssl-error-141f0006/2637>`__ 和"
" `此处 <https://community.openvpn.net/openvpn/ticket/1215>`__"

#: ../components/pro/linux/openvpn-easyrsa.rst:674
#: ../components/pro/windows/openvpn-easyrsa.rst:666
#: ../components/storage/linux/openvpn-easyrsa.rst:669
msgid ""
"In some reported cases it does not prompt for a PIN on the terminal. One "
"workaround would be to use to use this command to login with the PIN:"
msgstr "在某些报告的情况下，它不会在终端上提示输入 PIN 码。一种解决方法是使用该命令使用 PIN 登录："

#: ../components/pro/linux/openvpn-easyrsa.rst:680
#: ../components/pro/windows/openvpn-easyrsa.rst:672
#: ../components/storage/linux/openvpn-easyrsa.rst:676
msgid ""
"Alternatively, you could `recompile OpenVPN "
"<https://forums.openvpn.net/viewtopic.php?f=4&t=23318>`__ client with "
"systemd support disabled, and it will prompt you for the PIN as expected."
msgstr ""
"或者，你也可以 \"重新编译 OpenVPN "
"<https://forums.openvpn.net/viewtopic.php?f=4&t=23318>`__ 客户端，禁用 systemd "
"支持，它就会像预期的那样提示你输入 PIN 码。"

#: ../components/pro/linux/openvpn-easyrsa.rst:682
#: ../components/pro/windows/openvpn-easyrsa.rst:674
#: ../components/storage/linux/openvpn-easyrsa.rst:678
msgid ""
"Another option, would be to login to your OpenVPN instance with the "
"Viscosity client which provides a better user experience especially for "
"entering the PIN."
msgstr "另一种方法是使用 Viscosity 客户端登录 OpenVPN 实例，它能提供更好的用户体验，尤其是在输入 PIN 码时。"

#: ../components/pro/otp.rst.inc:2
msgid "Two-factor Authentication with One-Time Passwords (OTP)"
msgstr "使用一次性密码 (OTP) 进行双因素身份验证"

#: ../components/pro/otp.rst.inc:6
msgid ""
"The use of One-time Passwords (OTP) is called very differently on the "
"various services supporting it. Sometimes it is referred to as Multi-"
"factor Authentication (MFA), sometimes it is Two-factor Authentication "
"(2FA) or just “authentication via authenticator app” like Google "
"Authenticator. Most of these services are compatible for usage with the "
"Nitrokey Pro and Nitrokey Storage. The following instructions show how to"
" enable OTP on our `support forum <https://support.nitrokey.com/>`__. The"
" procedure is quite similar on most services. For a list of websites "
"supporting OTP have a look at `dongleauth.com "
"<https://www.dongleauth.com/>`__."
msgstr ""
"支持使用一次性密码（OTP）的各种服务对它的叫法大相径庭。有时称为多因素身份验证（MFA），有时称为双因素身份验证（2FA），或者只是 "
"\"通过身份验证程序进行身份验证\"，如 Google Authenticator。这些服务大多与 Nitrokey Pro 和 Nitrokey"
" Storage 兼容。下面的说明介绍了如何在我们的 \"支持论坛 <https://support.nitrokey.com/>`__\"上启用"
" OTP。大多数服务的操作步骤大同小异。有关支持 OTP 的网站列表，请访问 `dongleauth.com "
"<https://www.dongleauth.com/>`__。"

#: ../components/pro/otp.rst.inc:8
msgid ""
"You need to have the `Nitrokey App <https://www.nitrokey.com/download>`__"
" installed to use the OTP feature of the Nitrokey Pro and Nitrokey "
"Storage."
msgstr ""
"您需要安装 \"Nitrokey App <https://www.nitrokey.com/download>`__\"才能使用 "
"Nitrokey Pro 和 Nitrokey Storage 的 OTP 功能。"

#: ../components/pro/otp.rst.inc:11
msgid "Configure a Website/Application to Use OTP"
msgstr "配置网站/应用程序以使用 OTP"

#: ../components/pro/otp.rst.inc:13
msgid ""
"Login to the website which supports OTP (in this example, the `support "
"forum <https://support.nitrokey.com/>`__). Usually you find the option to"
" enable two-factor-authentication under your profile or in the settings."
msgstr ""
"登录支持 OTP 的网站（本例中为 \"支持论坛 "
"<https://support.nitrokey.com/>`__\"）。通常你可以在个人档案或设置中找到启用双因素身份验证的选项。"

#: ../components/pro/otp.rst.inc:20
msgid ""
"Most of the time, you will get a QR-Code as seen below. There should be "
"an option, to show the secret key directly."
msgstr "大多数情况下，你会收到一个 QR 码，如下图所示。应该有一个直接显示密钥的选项。"

#: ../components/pro/otp.rst.inc:27
msgid "We need to copy the secret code."
msgstr "我们需要复制密码"

#: ../components/pro/otp.rst.inc:29
msgid ""
"This is what the Nitrokey is actually protecting. You may create a backup"
" of it now (in case the Nitrokey get lost or breaks) by writing it down "
"on a sheet of paper and storing it securely. But be aware that anybody "
"who is in possession of this secret code, can create one-time passwords "
"for your account! *Please note that you won’t be able to backup this "
"code, once it is stored in the Nitrokey!*"
msgstr ""
"这就是 Nitrokey 实际保护的内容。您现在就可以创建一个备份（以防 Nitrokey "
"丢失或损坏），把它写在一张纸上并妥善保存。但请注意，任何拥有该密码的人都可以为你的账户创建一次性密码！请注意，一旦密码存储在 Nitrokey "
"中，您就无法备份它了！* *请注意，一旦密码存储在 Nitrokey 中，您就无法备份它了。"

#: ../components/pro/otp.rst.inc:36
msgid "Now start the Nitrokey App and open the “OTP Slot Configuration”."
msgstr "现在启动 Nitrokey 应用程序，打开 \"OTP 插槽配置\"。"

#: ../components/pro/otp.rst.inc:43
msgid ""
"Paste in the secret key in the corresponding field and choose an "
"appropiate slot name. Click on “Save” and type in your admin PIN if "
"requested."
msgstr "在相应字段中粘贴密匙，并选择合适的插槽名称。点击 \"保存\"，并根据要求输入管理密码。"

#: ../components/pro/otp.rst.inc:50
msgid ""
"After saving the slot you can go to “Menu” -> “Passwords” -> YourSlotName"
" to get your very first one-time password."
msgstr "保存插槽后，您可以进入 \"菜单\"->\"密码\"->\"您的插槽名称\"，获取第一个一次性密码。"

#: ../components/pro/otp.rst.inc:58
msgid ""
"The one-time password is copied to your clipboard automatically. You just"
" need to paste it to the field on the website to confirm the correct "
"setup and thus to activate the two-factor authentication."
msgstr "一次性密码会自动复制到剪贴板。您只需将其粘贴到网站上的字段即可确认设置正确，从而激活双因素身份验证。"

#: ../components/pro/otp.rst.inc:66
msgid "Securely Login to Website/Application"
msgstr "安全登录网站/应用程序"

#: ../components/pro/otp.rst.inc:68
msgid ""
"From now on you will get asked for a one-time password additionally to "
"your other credentials if you try to login the the website. You just need"
" to open the Nitrokey App and go to “Menu” -> “Passwords” -> YourSlotName"
" again to get the one-time password."
msgstr ""
"从现在起，如果您尝试登录网站，除了其他凭证外，还会被要求输入一次性密码。您只需打开 Nitrokey App，进入 "
"\"菜单\"->\"密码\"-> YourSlotName，即可再次获取一次性密码。"

#: ../components/pro/linux/ssh.rst:2 ../components/start/linux/ssh.rst:2
#: ../components/storage/linux/ssh.rst:2
msgid "SSH For Server Administration"
msgstr "用于服务器管理的 SSH"

#: ../components/pro/ssh.rst:1
msgid ""
"This guide explains how to prepare your SSH server and client for use "
"with the Nitrokey."
msgstr "本指南介绍如何准备 SSH 服务器和客户端，以便与 Nitrokey 配合使用。"

#: ../components/pro/ssh.rst:3
msgid ""
"The Nitrokey should already have PGP keys installed and the local GnuPG "
"keyring should know the keys."
msgstr "Nitrokey 应该已经安装了 PGP 密钥，本地 GnuPG 密钥环也应该知道这些密钥。"

#: ../components/pro/ssh.rst:6
msgid "Preparation on client"
msgstr "客户准备"

#: ../components/pro/ssh.rst:8
msgid "Make sure ~/.gnupg/gpg.conf contains 'use-agent'"
msgstr "确保 ~/.gnupg/gpg.conf 包含 \"use-agent"

#: ../components/pro/ssh.rst:9
msgid ""
"Add ssh support to gnupg-agent by adding 'enable-ssh-support' to ~/.gnupg"
"/gpg-agent.conf"
msgstr ""
"在 ~/.gnupg/gpg-agent.conf 中添加 \"enable-ssh-support\"，为 gnupg-agent 添加 ssh"
" 支持"

#: ../components/pro/ssh.rst:10
msgid "If the file does not exist yet, you can just create it."
msgstr "如果文件还不存在，可以直接创建。"

#: ../components/pro/ssh.rst:11
msgid ""
"Add the following code somewhere into your ~/.bashrc (for fish shell, "
"look `here <https://support.nitrokey.com/t/ssh-auth-with-fish-instead-of-"
"bash/2206>`__)"
msgstr ""
"将以下代码添加到 ~/.bashrc 中的某个位置（如使用鱼壳，请在 <https://support.nitrokey.com/t/ssh-"
"auth-with-fish-instead-of-bash/2206>`__ 处查找）"

#: ../components/pro/ssh.rst:20
msgid ""
"Simply restart your system or try ``pkill gpg-agent`` and open a new "
"commandline to make sure everything is set"
msgstr "只需重启系统或尝试 ``pkill gpg-agent`` 并打开新的命令行，以确保一切都已设置好"

#: ../components/pro/ssh.rst:21
msgid ""
"In case of problems, please try ``gpg2 --card-status`` on first usage to "
"make sure the gpg-agent gets started"
msgstr "如果出现问题，请在首次使用时尝试 ``gpg2 --card-status`` 以确保 gpg-agent 启动。"

#: ../components/pro/ssh.rst:24 ../components/to-be-integrated.rst:375
#: ../components/to-be-integrated.rst:742
msgid "Preparation for the server"
msgstr "服务器的准备工作"

#: ../components/pro/ssh.rst:26 ../components/to-be-integrated.rst:377
#: ../components/to-be-integrated.rst:744
msgid "You can generate an authorized_keys file by running either"
msgstr "运行以下任一程序即可生成授权密钥文件"

#: ../components/pro/ssh.rst:32 ../components/to-be-integrated.rst:382
#: ../components/to-be-integrated.rst:749
msgid "where"
msgstr "其中"

#: ../components/pro/ssh.rst:38 ../components/to-be-integrated.rst:386
#: ../components/to-be-integrated.rst:753
msgid ""
"is the subkey id being used for authentication on your Nitrokey. The "
"Nitrokey must already be known to the local GnuPG keyring. You can now "
"append that file to a remote server's authorized_keys and when you ssh to"
" the server you'll be asked for a pin rather than a passphrase."
msgstr ""
"是用于 Nitrokey 验证的子密钥 id。本地 GnuPG 密钥环必须已经知道 Nitrokey。现在，你可以将该文件附加到远程服务器的 "
"authorized_keys 中，这样当你 ssh 访问服务器时，系统就会要求你输入密码而不是口令。"

#: ../components/pro/ssh.rst:44
msgid "If you are still being asked for a password please make sure that"
msgstr "如果仍要求您输入密码，请确保"

#: ../components/pro/ssh.rst:50
msgid ""
"returns something like '/run/user/1000/gnupg/S.gpg-agent.ssh' or "
"'/home/username/.gnupg/.S.gpg-agent.ssh'. Unfortunately there were some "
"changes in GnuPG in the past so that the actual content can differ from "
"system and GnuPG version. On some systems there may are even multiple "
"folders in this variable saved. You have to adapt the above given code in"
" .bashrc so that the variable SSH_AUTH_SOCK is correct. In doubt look for"
" 'SSH_AUTH_SOCK' in"
msgstr ""
"返回类似\"/run/user/1000/gnupg/S.gpg-agent.ssh \"或\"/home/username/.gnupg/.S"
".gpg-agent.ssh \"的内容。遗憾的是，GnuPG 在过去发生了一些变化，因此实际内容可能因系统和 GnuPG "
"版本而异。在某些系统中，该变量中甚至可能保存有多个文件夹。你必须调整 .bashrc 中的上述代码，使变量 SSH_AUTH_SOCK "
"正确无误。如有疑问，请在"

#: ../components/pro/ssh.rst:56 ../components/to-be-integrated.rst:399
#: ../components/to-be-integrated.rst:766
msgid "to find the actual code for your version/system."
msgstr "来查找您的版本/系统的实际代码。"

#: ../components/pro/ssh.rst:58
msgid ""
"You may check if you have a 'pinentry' program installed via your package"
" manager. You may need to `set it in the gpg-agent.conf "
"<https://wiki.archlinux.org/index.php/GnuPG#pinentry>`__ as well. You may"
" need to `point gpg-agent to the correct TTY "
"<https://wiki.archlinux.org/index.php/GnuPG#Configure_pinentry_to_use_the_correct_TTY>`__."
msgstr ""
"您可以通过软件包管理器检查是否安装了 \"pinentry \"程序。你可能还需要在 gpg-agent.conf "
"<https://wiki.archlinux.org/index.php/GnuPG#pinentry>`__ 中 \"设置 \"它。你可能需要"
" \"将 gpg-agent 指向正确的 TTY "
"<https://wiki.archlinux.org/index.php/GnuPG#Configure_pinentry_to_use_the_correct_TTY>`__\"。"

#: ../components/pro/mac/index.rst:2
msgid "Nitrokey Pro, Mac"
msgstr "Nitrokey Pro, Mac"

#: ../components/pro/mac/index.rst:13
msgid ""
"Once you plug in the Nitrokey, your computer will start the Keyboard "
"Setup Assistant. **Don’t run through this assistant but exit it right "
"away.**"
msgstr "插入 Nitrokey 后，电脑将启动键盘设置助手。**不要运行该助手，而是立即退出。"

#: ../components/pro/mac/index.rst:30 ../components/storage/mac/index.rst:31
msgid ""
"For some Versions of MacOS it is necessary to install custom `ccid driver"
" <https://github.com/martinpaljak/osx-ccid-installer>`__ (for information"
" see `here <https://ludovicrousseau.blogspot.com/2016/04/os-x-el-capitan-"
"and-ccid-driver-upgrades.html>`__), but in general MacOS should have the "
"driver onboard."
msgstr ""
"对于某些版本的 MacOS，有必要安装自定义的 `ccid 驱动程序 <https://github.com/martinpaljak/osx-"
"ccid-installer>`__（有关信息，请参阅 `此处 "
"<https://ludovicrousseau.blogspot.com/2016/04/os-x-el-capitan-and-ccid-"
"driver-upgrades.html>`__），但一般来说，MacOS 板载了该驱动程序。"

#: ../components/pro/mac/index.rst:36 ../components/pro/windows/index.rst:32
#: ../components/storage/linux/index.rst:33
#: ../components/storage/mac/index.rst:37
#: ../components/storage/windows/index.rst:35
msgid ""
"For many use cases described, it is necessary to have either OpenPGP or "
"S/MIME keys installed on the device (see below)."
msgstr "对于所述的许多使用情况，有必要在设备上安装 OpenPGP 或 S/MIME 密钥（见下文）。"

#: ../components/pro/windows/2fa-microsoft.rst:2
msgid "Two-factor Authentication for Microsoft Account"
msgstr "Microsoft 账户的双因素身份验证"

#: ../components/pro/windows/2fa-microsoft.rst:6
msgid ""
"These are the basic steps for registering the Nitrokey Pro or Nitrokey "
"Storage as a second factor of a Microsoft account."
msgstr "以下是将 Nitrokey Pro 或 Nitrokey Storage 注册为 Microsoft 账户第二要素的基本步骤。"

#: ../components/pro/windows/2fa-microsoft.rst:8
msgid ""
"Visit https://account.live.com/proofs/Manage/additional and log in to "
"your Microsoft account if prompted."
msgstr ""
"访问 https://account.live.com/proofs/Manage/additional，如果出现提示，请登录您的 "
"Microsoft 帐户。"

#: ../components/pro/windows/2fa-microsoft.rst:20
msgid "Click on “Set up two-step verification”."
msgstr "点击 \"设置两步验证\"。"

#: ../components/pro/windows/2fa-microsoft.rst:27
msgid "Click on “Next”."
msgstr "点击 \"下一步\"。"

#: ../components/pro/windows/2fa-microsoft.rst:34
msgid "Now it is important to click on “set up a different Authenticator app”."
msgstr "现在，点击 \"设置不同的 Authenticator 应用程序 \"非常重要。"

#: ../components/pro/windows/2fa-microsoft.rst:41
msgid "Click on “I can’t scan the bar code”."
msgstr "点击 \"我无法扫描条形码\"。"

#: ../components/pro/windows/2fa-microsoft.rst:48
msgid "Insert and save secret code into the Nitrokey App."
msgstr "将暗码插入并保存到 Nitrokey App 中。"

#: ../components/pro/windows/2fa-microsoft.rst:65
msgid "Enter code generated by Nitrokey App to confirm."
msgstr "输入 Nitrokey App 生成的代码进行确认。"

#: ../components/pro/windows/2fa-microsoft.rst:77
msgid "Click “Next” and then “Finish”."
msgstr "点击 \"下一步\"，然后点击 \"完成\"。"

#: ../components/pro/windows/2fa-microsoft.rst:89
msgid ""
"From now on, when signing in you need an OTP additionally to your "
"password."
msgstr "从现在起，登录时除了密码外，您还需要一个 OTP。"

#: ../components/pro/eidauthenticate.rst.inc:2
msgid "Login With EIDAuthenticate on Stand Alone Windows Computers"
msgstr "在独立的 Windows 计算机上使用 EIDAuthenticate 登录"

#: ../components/pro/eidauthenticate.rst.inc:6
msgid ""
"Download and install the latest version of `OpenSC "
"<https://github.com/OpenSC/OpenSC/wiki>`__. Please install the `OpenPGP-"
"CSP <https://github.com/vletoux/OpenPGP-CSP/releases/tag/1.3>`__ driver "
"**instead** if using Nitrokey Storage 2 or Nitrokey Pro 2."
msgstr ""
"下载并安装最新版本的 `OpenSC <https://github.com/OpenSC/OpenSC/wiki>`__。如果使用 "
"Nitrokey Storage 2 或 Nitrokey Pro 2，请安装 `OpenPGP-CSP "
"<https://github.com/vletoux/OpenPGP-CSP/releases/tag/1.3>`__ 驱动程序**以代替**。"

#: ../components/pro/eidauthenticate.rst.inc:7
msgid ""
"Download and install `EIDAuthenticate "
"<https://www.mysmartlogon.com/eidauthenticate/>`__."
msgstr "下载并安装 `EIDAuthenticate <https://www.mysmartlogon.com/eidauthenticate/>`__。"

#: ../components/pro/eidauthenticate.rst.inc:10
msgid ""
"The free community edition is disabled. You may test the enterprise "
"edition instead."
msgstr "免费社区版已禁用。您可以测试企业版。"

#: ../components/pro/eidauthenticate.rst.inc:12
msgid "Start EIDConfigurationWizard.exe"
msgstr "启动 EIDConfigurationWizard.exe"

#: ../components/pro/eidauthenticate.rst.inc:13
msgid "Select “Associate a new certificate”"
msgstr "选择 \"关联新证书"

#: ../components/pro/eidauthenticate.rst.inc:20
msgid ""
"Select or generate a Certificate Authority which should issue the user’s "
"certificate on the Nitrokey."
msgstr "选择或生成应在 Nitrokey 上签发用户证书的证书颁发机构。"

#: ../components/pro/eidauthenticate.rst.inc:28
msgid ""
"Enter the user PIN which you defined previously in step 4. Wait a moment "
"until a new keypair and certificate are generated. In case your Nitrokey "
"is not detected you may want to execute “certutil -scinfo” for "
"troubleshooting."
msgstr ""
"输入之前在步骤 4 中定义的用户密码。稍等片刻，新的密钥对和证书就会生成。如果检测不到 Nitrokey，可以执行 \"certutil "
"-scinfo \"来排除故障。"

#: ../components/pro/eidauthenticate.rst.inc:38
msgid "Select the newly generated certificate and press continue."
msgstr "选择新生成的证书并按继续。"

#: ../components/pro/eidauthenticate.rst.inc:45
msgid "All checks should succeed. Press continue."
msgstr "所有检查均应成功。按继续。"

#: ../components/pro/eidauthenticate.rst.inc:52
msgid "Enter the password of your user account."
msgstr "输入用户账户密码。"

#: ../components/pro/eidauthenticate.rst.inc:59
msgid "Enter the user PIN which you defined previously in step 4."
msgstr "输入之前在步骤 4 中定义的用户密码。"

#: ../components/pro/eidauthenticate.rst.inc:66
msgid "The final screen may look like this."
msgstr "最终屏幕可能是这样的"

#: ../components/pro/eidauthenticate.rst.inc:73
msgid ""
"You may perform further configurations such as activate the force smart "
"card policy or automatically lock the computer when removing the Nitrokey"
" (by using EIDConfigurationWizardElevated.exe)."
msgstr ""
"您可以执行进一步配置，如激活强制智能卡策略或在移除 Nitrokey 时自动锁定计算机（使用 "
"EIDConfigurationWizardElevated.exe）。"

#: ../components/pro/windows/index.rst:2
msgid "Nitrokey Pro, Windows"
msgstr "Nitrokey Pro, Windows"

#: ../components/pro/windows/index.rst:16
msgid ""
"Connect your Nitrokey to your computer and confirm all dialogs so that "
"the USB smart card device driver gets installed almost automatically. "
"Windows may fail to install an additional device driver for the smart "
"card. Its safe to ignore this warning."
msgstr ""
"将 Nitrokey 与电脑连接并确认所有对话框，这样 USB 智能卡设备驱动程序几乎会自动安装。Windows "
"可能无法为智能卡安装额外的设备驱动程序。请忽略此警告。"

#: ../components/pro/windows/index.rst:20
#: ../components/storage/linux/index.rst:17
msgid ""
"Download and start the `Nitrokey App "
"<https://www.nitrokey.com/download>`__."
msgstr "下载并启动 `Nitrokey App <https://www.nitrokey.com/download>`__。"

#: ../components/pro/windows/index.rst:22
msgid ""
"Go to “Menu” -> “Configure” to change the User PIN (default: 123456) and "
"Admin PIN (default: 12345678) to your own choices."
msgstr "进入 \"菜单\"->\"配置\"，将用户密码（默认值：123456）和管理密码（默认值：12345678）更改为自己的选择。"

#: ../components/pro/windows/openvpn-easyrsa.rst:15
msgid ""
"To sign the certificates, we will use a `Nitrokey HSM 2 "
"<https://shop.nitrokey.com/shop/product/nk-pro-2-nitrokey-pro-2-3>`__ set"
" up as `Certificate Authority <../../hsm/windows/certificate-"
"authority.html#creating-the-intermediate-certificate-authority>`_, "
"however this guide does not cover the set up of the CA itself (it is "
"clear and `well documented here <../../hsm/windows/certificate-"
"authority.html#sign-a-server-certificate>`_)."
msgstr ""
"为了签署证书，我们将使用 \"Nitrokey HSM 2 <https://shop.nitrokey.com/shop/product/nk-"
"pro-2-nitrokey-pro-2-3>`__ 设置为 \"证书颁发机构<.../../hsm/windows/certificate-"
"authority.html#creating-the-intermediate-certificate-"
"authority>`__，但本指南并不包括 CA 本身的设置（此处 <../../hsm/windows/certificate-"
"authority.html#sign-a-server-certificate>`_ 有明确和详细的说明）。"

#: ../components/pro/windows/openvpn-easyrsa.rst:607
msgid "Configure OpenVPN"
msgstr "配置 OpenVPN"

#: ../components/pro/windows/openvpn-easyrsa.rst:609
msgid ""
"In order to establish a handshake, you must configure OpenSSL included in"
" OpenVPN."
msgstr "要建立握手，必须配置 OpenVPN 中的 OpenSSL。"

#: ../components/pro/windows/openvpn-easyrsa.rst:611
msgid ""
"Create the directory ``ssl`` in ``C:\\Program Files\\OpenVPN`` and create"
" file ``openssl.cnf`` with the following content :"
msgstr "在``C:\\Program Files\\OpenVPN`` 中创建``ssl``目录，并创建内容如下的文件``openssl.cnf``："

#: ../components/pro/windows/openvpn-easyrsa.rst:613
msgid "openssl_conf = default_conf"
msgstr "openssl_conf = default_conf"

#: ../components/pro/windows/openvpn-easyrsa.rst:615
msgid "[ default_conf ] ssl_conf = ssl_sect"
msgstr "[ 默认配置 ] ssl_conf = ssl_sect"

#: ../components/pro/windows/openvpn-easyrsa.rst:618
msgid "[ ssl_sect ] system_default = ssl_default_sect"
msgstr "[ ssl_sect ] system_default = ssl_default_sect"

#: ../components/pro/windows/openvpn-easyrsa.rst:621
msgid ""
"[ ssl_default_sect ] SignatureAlgorithms = "
"RSA+SHA512:ECDSA+SHA512:RSA+SHA384:ECDSA+SHA384:RSA+SHA256:ECDSA+SHA256 "
"MaxProtocol = TLSv1.2 MinProtocol = TLSv1.2"
msgstr ""
"[ ssl_default_sect ] SignatureAlgorithms = "
"RSA+SHA512:ECDSA+SHA512:RSA+SHA384:ECDSA+SHA384:RSA+SHA256:ECDSA+SHA256 "
"MaxProtocol = TLSv1.2 MinProtocol = TLSv1.2"

#: ../components/pro/windows/openvpn-easyrsa.rst:627
msgid ""
"With this modification, you will not have error as reported `here "
"<https://support.nitrokey.com/t/nitrokey-pro-with-openssl-1-1-1-tls-1-3"
"-and-rsa-based-certificates/2180/2>`__, `here "
"<https://support.nitrokey.com/t/openvpn-openssl-error-141f0006/2637>`__ "
"and `here <https://community.openvpn.net/openvpn/ticket/1215>`__"
msgstr ""
"作此修改后，您将不会再遇到`此处 <https://support.nitrokey.com/t/nitrokey-pro-with-"
"openssl-1-1-1-tls-1-3-and-rsa-based-certificates/2180/2>`__、`此处 "
"<https://support.nitrokey.com/t/openvpn-openssl-error-"
"141f0006/2637>`__和`此处 "
"<https://community.openvpn.net/openvpn/ticket/1215>`__报告的错误。"

#: ../components/pro/windows/openvpn-viscosity.rst:6
msgid "Viscosity Client Configuration with OpenVPN"
msgstr "使用 OpenVPN 配置 Viscosity 客户端"

#: ../components/pro/windows/openvpn-viscosity.rst:10
msgid ""
"This guide will show to configure `Viscosity client "
"<https://www.sparklabs.com/viscosity/>`__ to connect to an OpenVPN "
"instance, using a `Nitrokey Pro 2 <https://shop.nitrokey.com/shop/product"
"/nk-pro-2-nitrokey-pro-2-3>`__ (or `Nitrokey Storage 2 "
"<https://shop.nitrokey.com/shop/product/nitrokey-storage-2-56>`__), and "
"`PKCS#11 authentication <https://openvpn.net/community-resources/how-to"
"/#what-is-pkcs11>`__."
msgstr ""
"本指南将介绍如何配置 `Viscosity 客户端 <https://www.sparklabs.com/viscosity/>`__，以便使用 "
"`Nitrokey Pro 2 <https://shop.nitrokey.com/shop/product/nk-pro-2"
"-nitrokey-pro-2-3>`__（或 `Nitrokey Storage 2 "
"<https://shop.nitrokey.com/shop/product/nitrokey-storage-2-56>`__）和 "
"`PKCS#11 身份验证 <https://openvpn.net/community-resources/how-to/#what-is-"
"pkcs11>`__，连接到 OpenVPN 实例。"

#: ../components/pro/windows/openvpn-viscosity.rst:17
msgid ""
"For this guide, you will need an OpenVPN remote server installed and "
"configured for clients. For the purpose of this document, we have used "
"OpenVPN 2.49 installed on a Debian 10 server."
msgstr ""
"在本指南中，你需要为客户端安装和配置一个 OpenVPN 远程服务器。在本文档中，我们使用了安装在 Debian 10 服务器上的 OpenVPN"
" 2.49。"

#: ../components/pro/windows/openvpn-viscosity.rst:19
msgid ""
"To read about how to configure OpenVPN to authenticate with Nitrokey Pro,"
" you might consult the following `documentation <openvpn-easyrsa.html>`_,"
" as we will just cover the way to configure the Viscosity client in this "
"guide."
msgstr ""
"要了解如何配置 OpenVPN 以使用 Nitrokey Pro 进行身份验证，可以参考以下 \"文档 <openvpn-"
"easyrsa.html>`_\"，因为我们将在本指南中介绍配置 Viscosity 客户端的方法。"

#: ../components/pro/windows/openvpn-viscosity.rst:21
msgid "You will also need the following:"
msgstr "您还需要"

#: ../components/pro/windows/openvpn-viscosity.rst:23
msgid "A Nitrokey Pro 2 or Nitrokey Storage 2"
msgstr "一个 Nitrokey Pro 2 或 Nitrokey Storage 2"

#: ../components/pro/windows/openvpn-viscosity.rst:25
msgid "Client’s private key ``client.key`` loaded on the Nitrokey"
msgstr "加载到 Nitrokey 上的客户私钥``client.key"

#: ../components/pro/windows/openvpn-viscosity.rst:27
msgid "Client’s certificate ``client.crt`` loaded on the Nitrokey"
msgstr "加载到 Nitrokey 上的客户证书``client.crt``。"

#: ../components/pro/windows/openvpn-viscosity.rst:29
msgid ""
"The Certificate Authority file, i.e. ``CA.crt`` file used for your "
"OpenVPN setup"
msgstr "证书颁发机构文件，即用于设置 OpenVPN 的``CA.crt``文件"

#: ../components/pro/windows/openvpn-viscosity.rst:32
msgid "Optional: The shared secret key file, i.e. ``ta.key``"
msgstr "可选：共享密钥文件，即 ``ta.key``"

#: ../components/pro/windows/openvpn-viscosity.rst:34
msgid ""
"For more information on ``PKCS#11`` key management with OpenVPN, please "
"consult OpenVPN’s `documentation. <https://openvpn.net/community-"
"resources/how-to/>`__"
msgstr ""
"有关使用 OpenVPN 进行`PKCS#11``密钥管理的更多信息，请查阅 OpenVPN 的`文档。<https://openvpn.net"
"/community-resources/how-to/>`___"

#: ../components/pro/windows/openvpn-viscosity.rst:39
msgid ""
"Start Viscosity and create a new connection “openVPN” (you can name it as"
" you wish)"
msgstr "启动 Viscosity 并创建新连接 \"openVPN\"（可根据需要命名）"

#: ../components/pro/windows/openvpn-viscosity.rst:46
msgid "Right click on the connection and click edit"
msgstr "右键单击连接，然后单击编辑"

#: ../components/pro/windows/openvpn-viscosity.rst:52
msgid ""
"Add your server’s IP address and configure the port according to your "
"configuration."
msgstr "根据配置添加服务器的 IP 地址并配置端口。"

#: ../components/pro/windows/openvpn-viscosity.rst:55
msgid ""
"Under authentication, In ``Type`` scroll down to ``SSL/TLS Client "
"(PKCS11)``"
msgstr "在 \"身份验证 \"下，在 \"类型 \"中向下滚动到 \"SSL/TLS 客户端 (PKCS11)"

#: ../components/pro/windows/openvpn-viscosity.rst:58
msgid "Select the CA file for your connection"
msgstr "为您的连接选择 CA 文件"

#: ../components/pro/windows/openvpn-viscosity.rst:60
msgid "Optional: Select the ``ta.key`` in the ``TLS-Auth`` section"
msgstr "可选：在 \"TLS-Auth \"部分选择 \"ta.key"

#: ../components/pro/windows/openvpn-viscosity.rst:66
msgid ""
"Click the Add button next to the Providers field and select the "
"``PKCS#11`` module for your Nitrokey. Multiple providers can be "
"specified, and for instance we will use ``OpenSC``."
msgstr ""
"单击 \"提供商 \"字段旁边的 \"添加 \"按钮，为您的 Nitrokey 选择 \"PKCS#11 "
"\"模块。可以指定多个提供程序，例如我们将使用 ``OpenSC``。"

#: ../components/pro/windows/openvpn-viscosity.rst:70
msgid ""
"On macOS, the most common location for modules to be found is in the "
"/usr/lib directory. Please refer to the documentation included with your "
"driver software for the location to use. OpenSC’s module can be found at "
"``/Library/OpenSC/lib/opensc-pkcs11.so``"
msgstr ""
"在 macOS 上，最常见的模块存放位置是 /usr/lib 目录。有关使用的位置，请参阅驱动程序软件随附的文档。OpenSC "
"模块位于``/Library/OpenSC/lib/opensc-pkcs11.so``。"

#: ../components/pro/windows/openvpn-viscosity.rst:73
msgid ""
"On Windows, the most common location for libraries is either in "
"``C:\\Program Files`` or ``C:\\Windows\\System32``. OpenSC libraries are "
"generally located at ``C:\\Program Files\\OpenSC "
"Project\\OpenSC\\pkcs11``. There may be more than one library available "
"here, you can try each one or simply add both."
msgstr ""
"在 Windows 中，最常见的库位置是`C:\\Program Files``或`C:\\Windows\\System32``。OpenSC "
"库一般位于 ``C:\\Program Files\\OpenSC Project\\OpenSC\\pkcs11`` "
"中。这里可能有不止一个库，你可以尝试每个库，或者直接添加两个库。"

#: ../components/pro/windows/openvpn-viscosity.rst:75
msgid "Choose a retrieval method from the Retrieval drop down menu"
msgstr "从检索下拉菜单中选择检索方法"

#: ../components/pro/windows/openvpn-viscosity.rst:80
msgid ""
"If only one Nitrokey will ever be used on this computer, select ``Use "
"certificate name below``. If the Nitrokey is currently connected to the "
"computer, click the ``Detect`` button for Viscosity to automatically fill"
" in the Name field. Otherwise this field can be completed manually."
msgstr ""
"如果这台计算机上只使用一个 Nitrokey，请选择``使用下面的证书名称``。如果 Nitrokey 当前已连接到计算机，请单击 \"检测 "
"\"按钮，Viscosity 将自动填写 \"名称 \"字段。否则可手动填写。"

#: ../components/pro/windows/openvpn-viscosity.rst:86
msgid ""
"If in doubt, or if more than one Nitrokey may be used (i.e. multiple "
"users), then select ``Prompt for certificate name``."
msgstr "如有疑问，或可能使用多个 Nitrokey（即多个用户），请选择 \"提示证书名称\"。"

#: ../components/pro/windows/openvpn-viscosity.rst:89
msgid ""
"If ``Prompt for certificate name`` was selected, Viscosity will "
"automatically detect the required key on the Nitrokey, using the "
"specified PKCS#11 module/s. Select from any of the found devices, or "
"enter the name of the ``serialized id`` to use manually. Again, the user "
"should be prompted for a password/PIN if required."
msgstr ""
"如果选择了 \"提示证书名称\"，Viscosity 将使用指定的 PKCS#11 模块自动检测 Nitrokey "
"上所需的密钥。从找到的任何设备中选择，或输入要手动使用的 \"序列化 ID \"名称。同样，如果需要，系统会提示用户输入密码/PIN。"

#: ../components/pro/windows/openvpn-viscosity.rst:91
msgid "Click the Save button and connect from your the main interface"
msgstr "单击保存按钮，然后从主界面进行连接"

#: ../components/pro/windows/openvpn-viscosity.rst:96
msgid ""
"`Using Tokens/Smartcards (PKCS#11) "
"<https://www.sparklabs.com/support/kb/article/using-tokens-smartcards-"
"pkcs-11/>`__"
msgstr ""
"使用令牌/智能卡 (PKCS#11) <https://www.sparklabs.com/support/kb/article/using-"
"tokens-smartcards-pkcs-11/>`__"

#: ../components/pro/windows/openvpn-viscosity.rst:99
msgid "`OpenVPN How-To <https://openvpn.net/community-resources/how-to/>`__"
msgstr "`OpenVPN How-To <https://openvpn.net/community-resources/how-to/>`__"

#: ../components/pro/windows/openvpn-viscosity.rst:102
msgid "Notes"
msgstr "说明"

#: ../components/pro/windows/openvpn-viscosity.rst:104
msgid ""
"Viscosity is not free, and thus you might run into issues in using the "
"free version."
msgstr "Viscosity 不是免费的，因此您在使用免费版本时可能会遇到问题。"

#: ../components/pro/windows/openvpn-viscosity.rst:107
msgid ""
"We are considering the usage of `Pritunl <https://client.pritunl.com/>`__"
" as a free and open alternative."
msgstr "我们正在考虑使用 `Pritunl <https://client.pritunl.com/>`__ 作为免费和开放的替代方案。"

#: ../components/pro/putty.rst.inc:2
msgid "PuTTY"
msgstr "PuTTY"

#: ../components/pro/putty.rst.inc:6
msgid ""
"This mini-howto assumes that the Nitrokey has been initialized and "
"contains cryptographic keys."
msgstr "本迷你操作指南假定 Nitrokey 已初始化并包含加密密钥。"

#: ../components/pro/putty.rst.inc:8
msgid "**Required on the client side:**"
msgstr "** 客户端要求：**"

#: ../components/pro/putty.rst.inc:10
msgid ""
"`PuTTY "
"<https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html>`__ or a "
"variant of it"
msgstr ""
"PuTTY <https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html>`__"
" 或其变体"

#: ../components/pro/putty.rst.inc:13
#, fuzzy
msgid ""
"`GPG4Win <https://gpg4win.org/>`__ or `pageant.exe <https://smartcard-"
"auth.de/download-de.html>`__ with Smartcard support from Dr. Peter Koch"
msgstr ""
"`GPG4Win <https://gpg4win.org/>`__ 或 `pageant.exe <https://smartcard-"
"auth.de/download-de.html>`__，由 Peter Koch 博士提供智能卡支持"

#: ../components/pro/putty.rst.inc:17
msgid ""
"Optional: `OpenPGP Minidriver "
"<https://wald.intevation.org/frs/?group_id=49&release_id=353>`__"
msgstr ""
"可选：`OpenPGP Minidriver "
"<https://wald.intevation.org/frs/?group_id=49&release_id=353>`__"

#: ../components/pro/putty.rst.inc:20
msgid "**1) Pageant**"
msgstr "**1)选美**"

#: ../components/pro/putty.rst.inc:22
msgid ""
"start pageant.exe. That this is running is shown in the notification area"
" of the taskbar."
msgstr "启动 pageant.exe。任务栏的通知区域会显示该程序正在运行。"

#: ../components/pro/putty.rst.inc:29
msgid "A double click opens the view of the current keys."
msgstr "双击可打开当前按键的视图。"

#: ../components/pro/putty.rst.inc:36
msgid "After inserting the key it looks like this."
msgstr "插入钥匙后，它看起来像这样。"

#: ../components/pro/putty.rst.inc:43
msgid ""
"If nothing is displayed here, pageant may have to be restarted or another"
" application is already using the stick. A possibly running pgp-agent "
"must be terminated! Now we only need the public key we want to store in "
"the ssh configuration of the server. Therefore we press CTRL while "
"inserting the stick…"
msgstr ""
"如果此处未显示任何内容，则可能需要重新启动 pageant 或另一个应用程序正在使用该粘贴。必须终止可能正在运行的 pgp-"
"agent！现在，我们只需要将公钥存储到服务器的 ssh 配置中。因此，我们在插入加密狗的同时按下 CTRL 键…"

#: ../components/pro/putty.rst.inc:50
msgid "and then view the Pageant-PublicKeys.txt."
msgstr "然后查看 Pageant-PublicKeys.txt。"

#: ../components/pro/putty.rst.inc:57
msgid ""
"I searched for the ssh-rsa entry of the auth key and added the line on "
"the server to the authorized_keys."
msgstr "我搜索了授权密钥的 ssh-rsa 条目，并在服务器上的 authorized_keys 中添加了这一行。"

#: ../components/pro/putty.rst.inc:59
msgid "**2) PuTTY**"
msgstr "**2)PuTTY**"

#: ../components/pro/putty.rst.inc:61
msgid "There is surprisingly little to say about PuTTY itself."
msgstr "有关 PuTTY 本身的内容少得令人惊讶。"

#: ../components/pro/putty.rst.inc:68
msgid ""
"“Attempt authentication using Pageant” must be set, which is the default "
"anyway."
msgstr "必须设置 \"尝试使用 Pageant 进行身份验证\"，这是默认设置。"

#: ../components/pro/putty.rst.inc:70
msgid ""
"That’s it, as soon as you connect to the server while pageant is running "
"and you have the keys, you will be asked for the password of the Crypto-"
"Stick and can log in."
msgstr "就是这样，只要你在选美比赛进行时连接到服务器，并拿到密钥，你就会被要求输入 Crypto-Stick 的密码，然后就可以登录了。"

#: ../components/pro/putty.rst.inc:72
msgid "**3) openpgp-minidriver (optional)**"
msgstr "**3) openpgp-minidriver（可选）**"

#: ../components/pro/putty.rst.inc:74
msgid ""
"If you are annoyed that Windows reports every time you plug in the stick "
"that no driver could be found for “Smartcard”, you can get rid of it. You"
" just have to install the x86 or x64 version of the above mentioned "
"driver and the smartcard looks like this:"
msgstr ""
"如果你对每次插入记忆棒时 Windows 都报告找不到 "
"\"Smartcard\"（智能卡）的驱动程序感到恼火，那么你可以摆脱它。你只需安装上述驱动程序的 x86 或 x64 版本，智能卡就会变成这样："

#: ../components/software/nitropy/all-platforms/index.rst:2
msgid "nitropy Documentation For All Platforms"
msgstr "适用于所有平台的硝化文档"

#: ../components/software/nitropy/all-platforms/installation.rst:2
msgid "Installing nitropy With pipx"
msgstr "使用 pipx 安装 nitropy"

#: ../components/software/nitropy/all-platforms/installation.rst:4
msgid ""
"This guide explains how to install nitropy with `pipx "
"<https://pypa.github.io/pipx/>`__. pipx creates a virtual environment for"
" nitropy. This means that nitropy and its dependencies don’t conflict "
"with other packages installed on your system."
msgstr ""
"本指南介绍如何使用 `pipx <https://pypa.github.io/pipx/>`__ 安装 nitropy。pipx 会为 "
"nitropy 创建一个虚拟环境。这意味着 nitropy 及其依赖包不会与系统中安装的其他软件包发生冲突。"

#: ../components/software/nitropy/all-platforms/installation.rst:8
msgid ""
"**For Windows users:** Windows support is still experimental -- please "
"use with caution. You can also use pre-compiled binaries or a MSI "
"installer, see :doc:`../windows/installation`."
msgstr ""
"**对于 Windows 用户：** Windows 支持仍处于试验阶段，请谨慎使用。您也可以使用预编译二进制文件或 MSI 安装程序，请参见 "
":doc:`./windows/installation`。"

#: ../components/software/nitropy/all-platforms/installation.rst:11
msgid "Installation on Linux"
msgstr "在 Linux 上安装"

#: ../components/software/nitropy/all-platforms/installation.rst:14
msgid "Ubuntu, Debian"
msgstr "Ubuntu, Debian"

#: ../components/software/nitropy/all-platforms/installation.rst:15
#: ../components/software/nitropy/all-platforms/installation.rst:23
msgid ""
"You can install nitropy along with all other required dependencies by "
"using::"
msgstr "您可以使用: 来安装 nitropy 和所有其他所需的依赖项："

#: ../components/software/nitropy/all-platforms/installation.rst:19
#: ../components/software/nitropy/all-platforms/installation.rst:31
msgid ""
"After logging out or restarting your system, nitropy will now be "
"available."
msgstr "注销或重启系统后，即可使用硝化甘油。"

#: ../components/software/nitropy/all-platforms/installation.rst:22
msgid "Arch"
msgstr "拱门"

#: ../components/software/nitropy/all-platforms/installation.rst:27
msgid "If you have already installed Python on your system, you can simply run::"
msgstr "如果系统中已经安装了 Python，则只需运行：："

#: ../components/software/nitropy/all-platforms/installation.rst:35
msgid "Installation on other distributions/operating systems"
msgstr "安装在其他配电/操作系统上"

#: ../components/software/nitropy/all-platforms/installation.rst:41
msgid "Python 3.9, 3.10 or 3.11"
msgstr "Python 3.9、3.10 或 3.11"

#: ../components/software/nitropy/all-platforms/installation.rst:42
msgid ""
"Python is already installed on most macOS and Linux systems or can be "
"downloaded from `python.org <https://python.org>`__. See the `Downloading"
" Python Guide <https://wiki.python.org/moin/BeginnersGuide/Download>`__ "
"for more information."
msgstr ""
"Python 已安装在大多数 macOS 和 Linux 系统上，也可以从 `python.org <https://python.org>`__"
" 下载。有关详细信息，请参阅 \"下载 Python 指南 "
"<https://wiki.python.org/moin/BeginnersGuide/Download>`__\"。"

#: ../components/software/nitropy/all-platforms/installation.rst:45
msgid "pip"
msgstr "核心"

#: ../components/software/nitropy/all-platforms/installation.rst:46
msgid ""
"You can install pip with your system package manager or with ``python3 -m"
" ensurepip``. See the `pip Installation Guide "
"<https://pip.pypa.io/en/stable/installation/>`__ for more information."
msgstr ""
"你可以使用系统软件包管理器或 ``python3 -m ensurepip`` 安装 pip。更多信息，请参阅 `pip 安装指南 "
"<https://pip.pypa.io/en/stable/installation/>`__ 。"

#: ../components/software/nitropy/all-platforms/installation.rst:49
msgid "pipx"
msgstr "pipx"

#: ../components/software/nitropy/all-platforms/installation.rst:50
msgid "Before installing nitropy, you have to install and configure pipx::"
msgstr "在安装 nitropy 之前，您必须安装并配置 pipx:："

#: ../components/software/nitropy/all-platforms/installation.rst:55
msgid ""
"See the `pipx Installation Guide <https://pipx.pypa.io/stable/>`__ for "
"more information."
msgstr "更多信息，请参见 `pipx 安装指南 <https://pipx.pypa.io/stable/>`__ 。"

#: ../components/software/nitropy/all-platforms/installation.rst:58
msgid ""
"**For Linux Users** - currently a transient dependency (``oscrypto``) is "
"generating issues on some Linux distrubutions. The respective `GitHub "
"issue "
"<https://github.com/Nitrokey/pynitrokey/issues/431#issuecomment-1937704327>`__"
" documents the currently needed workaround::"
msgstr ""
"**针对 Linux 用户** - 目前，在某些 Linux 发行版上，瞬时依赖 (``oscrypto``)会产生问题。相关的 `GitHub "
"问题 "
"<https://github.com/Nitrokey/pynitrokey/issues/431#issuecomment-1937704327>`__"
" 记录了当前需要的解决方法：："

#: ../components/software/nitropy/all-platforms/installation.rst:68
msgid "Now you can install nitropy from the pynitrokey package::"
msgstr "现在，你可以从 pynitrokey 软件包中安装 nitropy：："

#: ../components/software/nitropy/all-platforms/installation.rst:73
msgid "nitropy is now available in your path::"
msgstr "现在，您可以在以下路径中使用 nitropy：："

#: ../components/software/nitropy/all-platforms/installation.rst:78
msgid "Upgrade"
msgstr "升级"

#: ../components/software/nitropy/all-platforms/installation.rst:80
msgid "You can upgrade the package with the following command::"
msgstr "您可以使用以下命令升级软件包：："

#: ../components/software/nitropy/all-platforms/installation.rst:87
msgid ""
"If you encounter problems, please make sure that you use the latest "
"version by comparing the output of ``nitropy version`` with the `release "
"list <https://github.com/Nitrokey/pynitrokey/releases>`_ on GitHub.  If "
"an upgrade does not install the latest version, you might be running into"
" one of the following problems."
msgstr ""
"如果遇到问题，请将 ``nitropy version`` 的输出结果与 GitHub 上的 `release list "
"<https://github.com/Nitrokey/pynitrokey/releases>`_ 进行比较，确保使用的是最新版本。  "
"如果升级后没有安装最新版本，可能是遇到了以下问题之一。"

#: ../components/software/nitropy/all-platforms/installation.rst:90
msgid "Wrong Python Version"
msgstr "错误的 Python 版本"

#: ../components/software/nitropy/all-platforms/installation.rst:92
msgid ""
"nitropy requires Python 3.9 or 3.10.  If your default Python installation"
" is older or newer than that and cannot be updated, you have to "
"additionally install Python 3.9 and specify the name of its Python "
"executable when calling pipx, for example::"
msgstr ""
"nitropy 需要 Python 3.9 或 3.10。  如果您的默认 Python 安装版本高于或等于上述版本，且无法更新，则必须额外安装 "
"Python 3.9，并在调用 pipx 时指定其 Python 可执行文件的名称，例如：："

#: ../components/software/nitropy/all-platforms/installation.rst:97
msgid "Arm Not Supported"
msgstr "不支持悬挂臂"

#: ../components/software/nitropy/all-platforms/installation.rst:99
msgid ""
"Currently, recent nitropy versions cannot be installed on Arm platforms "
"due to a dependency issue (`GitHub issue "
"<https://github.com/Nitrokey/pynitrokey/issues/265>`__).  As a "
"workaround, you can use an x86 Python installation in a Rosetta terminal "
"as described in `this discussion "
"<https://stackoverflow.com/questions/71691598/how-to-run-python-as-x86"
"-with-rosetta2-on-arm-macos-machine>`_)."
msgstr ""
"目前，由于依赖性问题（`GitHub issue "
"<https://github.com/Nitrokey/pynitrokey/issues/265>`__），最近的 nitropy 版本无法在"
" Arm 平台上安装。  作为一种变通办法，您可以在 Rosetta 终端中使用 x86 Python 安装，如 `this discussion"
" <https://stackoverflow.com/questions/71691598/how-to-run-python-as-x86"
"-with-rosetta2-on-arm-macos-machine>`__)所述。"

#: ../components/software/nitropy/all-platforms/installation.rst:102
msgid "libusb-1.0.dylib not found"
msgstr "未找到 libusb-1.0.dylib"

#: ../components/software/nitropy/all-platforms/installation.rst:104
msgid ""
"When running nitropy on macOS, you might see an error message indicating "
"a missing libusb-1.0.dylib file.  This can be fixed by manually "
"installing libusb, e. g. with homebrew::"
msgstr ""
"在 macOS 上运行 nitropy 时，可能会显示 libusb-1.0.dylib 文件丢失的错误信息。  这可以通过手动安装 libusb"
" 来解决，例如使用 homebrew:："

#: ../components/software/nitropy/all-platforms/installation.rst:109
msgid "Usage Notes"
msgstr "使用说明"

#: ../components/software/nitropy/all-platforms/installation.rst:112
#: ../components/software/nitropy/index.rst:6
msgid "All Platforms"
msgstr "所有平台"

#: ../components/software/nitropy/all-platforms/installation.rst:114
msgid ""
"If you want to use nitropy with a Nitrokey Pro or Nitrokey Storage "
"device, you also have to install `libnitrokey "
"<https://github.com/Nitrokey/libnitrokey>`__."
msgstr ""
"如果要在 Nitrokey Pro 或 Nitrokey Storage 设备上使用 nitropy，还必须安装 `libnitrokey "
"<https://github.com/Nitrokey/libnitrokey>`__。"

#: ../components/software/nitropy/all-platforms/installation.rst:119
msgid "Windows support is still experimental -- please use with caution."
msgstr "Windows 支持仍处于试验阶段，请谨慎使用。"

#: ../components/software/nitropy/all-platforms/installation.rst:121
msgid ""
"You might have to run nitropy with administrator rights to be able to "
"connect to a device."
msgstr "您可能需要以管理员权限运行 nitropy 才能连接到设备。"

#: ../components/software/nitropy/all-platforms/installation.rst:126
msgid ""
"On Linux systems, you also need the Nitrokey udev rules. These are "
"shipped with `libnitrokey <https://github.com/Nitrokey/libnitrokey>`__. "
"Alternatively, you can install them manually::"
msgstr ""
"在 Linux 系统上，还需要 Nitrokey udev 规则。这些规则随 `libnitrokey "
"<https://github.com/Nitrokey/libnitrokey>`__ 一起提供。或者，你也可以手动安装它们：："

#: ../components/software/nitropy/all-platforms/installation.rst:131
msgid "See :doc:`../linux/udev` for more information."
msgstr "参见 :doc:`../linux/udev` 获取更多信息。"

#: ../components/software/nitropy/all-platforms/installation.rst:134
msgid "Next Steps"
msgstr "下一步工作"

#: ../components/software/nitropy/all-platforms/installation.rst:136
msgid "You can find more information on using nitropy in these guides:"
msgstr "您可以在这些指南中找到更多关于使用硝化甘油的信息："

#: ../components/software/nitropy/all-platforms/installation.rst:138
msgid "For Linux: :doc:`../../../nitrokey3/linux/firmware-update`"
msgstr "对于 Linux： :doc:`../../../nitrokey3/linux/firmware-update"

#: ../components/software/nitropy/all-platforms/installation.rst:139
msgid "For Mac: :doc:`../../../nitrokey3/mac/firmware-update`"
msgstr "Mac： :doc:`../../../nitrokey3/mac/firmware-update`."

#: ../components/software/nitropy/all-platforms/installation.rst:140
msgid "For Windows: :doc:`../../../nitrokey3/windows/firmware-update`"
msgstr "适用于 Windows： :doc:`../../../nitrokey3/windows/firmware-update"

#: ../components/software/nitropy/all-platforms/test.rst:2
msgid "Test Nitrokey 3"
msgstr "测试 Nitrokey 3"

#: ../components/software/nitropy/all-platforms/test.rst:4
msgid "This guide describes how to test the Nitrokey 3."
msgstr "本指南介绍如何测试 Nitrokey 3。"

#: ../components/software/nitropy/all-platforms/test.rst:8
msgid "Run ``nitropy nk3 test`` this will launch several tests over your key."
msgstr "运行 ``nitropy nk3 test`` 这将对你的密钥启动多项测试。"

#: ../components/software/nitropy/all-platforms/test.rst:9
msgid "During the test, when asked touch the key."
msgstr "在测试过程中，如有要求，请触摸按键。"

#: ../components/software/nitropy/all-platforms/test.rst:11
msgid "This is an example of a working key::"
msgstr "这是一个工作密钥的示例：："

#: ../components/software/nitropy/index.rst:4
msgid ""
"**nitropy** is a command-line interface for the Nitrokey FIDO2, Nitrokey "
"Start, Nitrokey 3 and NetHSM."
msgstr "**nitropy**是Nitrokey FIDO2、Nitrokey Start、Nitrokey 3和NetHSM的命令行界面。"

#: ../components/software/nitropy/linux/index.rst:2
msgid "nitropy Documentation For Linux"
msgstr "适用于 Linux 的硝基文档"

#: ../components/software/nitropy/linux/udev.rst:2
msgid "Setting up The udev Rules"
msgstr "设置 udev 规则"

#: ../components/software/nitropy/linux/udev.rst:4
msgid ""
"To be able to access your devices without root privileges, nitropy "
"requires the Nitrokey udev rules. If they are not shipped with your "
"distribution, you can install the rules manually::"
msgstr "要在没有 root 权限的情况下访问设备，nitropy 需要 Nitrokey udev 规则。如果您的发行版中没有这些规则，可以手动安装：："

#: ../components/software/nitropy/linux/udev.rst:11
msgid ""
"The legacy rules are also shipped with `libnitrokey "
"<https://github.com/Nitrokey/libnitrokey>`__."
msgstr "传统规则也与 `libnitrokey <https://github.com/Nitrokey/libnitrokey>`__ 一起发布。"

#: ../components/software/nitropy/linux/udev.rst:14
msgid ""
"You most likely want to change the owner and the permissions of this "
"file::"
msgstr "您很可能需要更改该文件的所有者和权限：："

#: ../components/software/nitropy/linux/udev.rst:19
msgid "After installing the rules, you need to reload them::"
msgstr "安装规则后，您需要重新加载它们：："

#: ../components/software/nitropy/linux/udev.rst:23
msgid ""
"If you still cannot access your device, try again after rebooting your "
"system. If you encouter issues, look at this `github comment "
"<https://github.com/Nitrokey/pynitrokey/issues/167#issuecomment-1024921046>`__"
" for some debugging hints."
msgstr ""
"如果仍然无法访问设备，请重启系统后再试一次。如果遇到问题，请查看此 `github 评论 "
"<https://github.com/Nitrokey/pynitrokey/issues/167#issuecomment-1024921046>`__"
" 以获取一些调试提示。"

#: ../components/software/nitropy/windows/index.rst:2
msgid "nitropy Documentation For Windows"
msgstr "适用于 Windows 的硝基文件"

#: ../components/software/nitropy/windows/installation.rst:2
msgid "Installing nitropy on Windows"
msgstr "在 Windows 上安装 nitropy"

#: ../components/software/nitropy/windows/installation.rst:5
msgid ""
"Generally Windows support and the installer are experimental - please use"
" with caution."
msgstr "一般来说，Windows 支持和安装程序都是试验性的，请谨慎使用。"

#: ../components/software/nitropy/windows/installation.rst:8
msgid ""
"If you already use Python on your system and are familiar with the "
"command prompt, you can alternatively install nitropy with pipx, see :doc"
":`../all-platforms/installation`."
msgstr ""
"如果您已经在系统中使用 Python 并且熟悉命令提示符，您也可以使用 pipx 安装 nitropy，参见 :doc:`../all-"
"platforms/installation`."

#: ../components/software/nitropy/windows/installation.rst:11
msgid "How to Install"
msgstr "如何安装"

#: ../components/software/nitropy/windows/installation.rst:13
msgid ""
"Download the latest ``.exe`` file from `releases "
"<https://github.com/Nitrokey/pynitrokey/releases/>`__."
msgstr ""
"从 `releases <https://github.com/Nitrokey/pynitrokey/releases/>`__ 下载最新的 "
"``.exe`` 文件。"

#: ../components/software/nitropy/windows/installation.rst:14
msgid ""
"Open the command console in the administrator mode (Windows 10: press the"
" right mouse button on the Menu Start and select \"Windows PowerShell "
"(Admin)\" from the menu)."
msgstr ""
"以管理员模式打开命令控制台（Windows 10：在菜单 \"开始 \"上按下鼠标右键，然后从菜单中选择 \"Windows PowerShell"
" (Admin)\"）。"

#: ../components/software/nitropy/windows/installation.rst:15
msgid ""
"Change to the directoy of the ``.exe`` (something like ``cd "
"C:\\Users\\YOURUSER\\Downloads``)"
msgstr "更改到``.exe``的目录（类似于``cd C:\\Users\\YOURUSER\\Downloads``)"

#: ../components/software/nitropy/windows/installation.rst:16
msgid "Execute ``nitropy-VERSION.exe``"
msgstr "执行 ``nitropy-VERSION.exe``."

#: ../components/software/nitropy/windows/installation.rst:19
msgid ""
"If you're using Microsoft Edge, the downloaded ``.exe`` might be marked "
"as \"untrused\" by Windows. To mark it as trusted anyway, click the three"
" dot on the right of the warning, then \"keep\", then \"show more\" and "
"finally \"keep anyway\"."
msgstr ""
"如果您使用的是 Microsoft Edge，下载的 ``.exe`` 可能会被 Windows 标记为 \"未受打扰\"。要将其标记为 "
"\"无论如何都可信\"，请单击警告右侧的三个点，然后单击 \"保留\"，再单击 \"显示更多\"，最后单击 \"无论如何都保留\"。"

#: ../components/software/nitropy/windows/installation.rst
msgid "The warning displayed by Edge"
msgstr "Edge 显示的警告"

#: ../components/software/nitropy/windows/installation.rst
msgid "The keep anyway button"
msgstr "保持不变按钮"

#: ../components/software/nitropy/windows/installation.rst:28
msgid ""
"Without administrator privileges nitropy might not be able to communicate"
" to the device."
msgstr "如果没有管理员权限，nitropy 可能无法与设备通信。"

#: ../components/software/nitropy/windows/installation.rst:33
msgid ""
"Support for Nitrokey Start under Windows 10 is not working without "
"installing libusb libraries (to be described)"
msgstr "如果不安装 libusb 库，Windows 10 下对 Nitrokey Start 的支持无法正常工作（待说明）"

#: ../components/software/nitropy/windows/installation.rst:34
msgid ""
"The installer does not remove a previous installation (manually remove it"
" using settings -> programs and apps)"
msgstr "安装程序无法移除之前安装的程序（使用设置 -> 程序和应用程序手动移除）。"

#: ../components/software/nk-app2/index.rst:2
msgid "Nitrokey App 2"
msgstr "Nitrokey 应用程序 2"

#: ../components/software/nk-app2/index.rst:3
msgid ""
"Nitrokey App 2 is the graphical application for Nitrokey 3 devices. For "
"Nitrokey Pro and Nitrokey Storage, use `Nitrokey App 1 "
"<https://www.nitrokey.com/download>`__ instead."
msgstr ""
"Nitrokey App 2 是 Nitrokey 3 设备的图形应用程序。对于 Nitrokey Pro 和 Nitrokey "
"Storage，请使用 \"Nitrokey App 1 <https://www.nitrokey.com/download>`__\"。"

#: ../components/software/nk-app2/index.rst:7
msgid ""
"Download it for `Linux <installation_linux>`__ or `Windows "
"<installation_windows>`__."
msgstr "为 `Linux <installation_linux>`__ 或 `Windows <installation_windows>`__ 下载。"

#: ../components/software/nk-app2/index.rst:10
msgid "Supported Features"
msgstr "支持的功能"

#: ../components/software/nk-app2/index.rst:12
msgid "Updating the firmware"
msgstr "更新固件"

#: ../components/software/nk-app2/index.rst:13
msgid "One-Time Passwords (OTP)"
msgstr "一次性密码 (OTP)"

#: ../components/software/nk-app2/index.rst:14
msgid "Password Storage"
msgstr "密码存储"

#: ../components/software/nk-app2/index.rst:17
msgid "Planned Features"
msgstr "计划功能"

#: ../components/software/nk-app2/index.rst:19
msgid "PIN management"
msgstr "密码管理"

#: ../components/software/nk-app2/index.rst:20
msgid "macOS support"
msgstr "支持 macOS"

#: ../components/software/nk-app2/installation_linux.rst:2
msgid "Linux Install"
msgstr "Linux 安装"

#: ../components/software/nk-app2/installation_linux.rst:5
msgid "Flathub / Flatpak"
msgstr "Flathub / Flatpak"

#: ../components/software/nk-app2/installation_linux.rst:7
msgid ""
"The preferred installation method for Linux is through `Flathub "
"<https://flathub.org/>`_:"
msgstr "Linux 的首选安装方法是通过 `Flathub <https://flathub.org/>`_："

#: ../components/software/nk-app2/installation_linux.rst:9
msgid "`Setup <https://flathub.org/setup>`_  flathub / flatpak"
msgstr "设置 <https://flathub.org/setup>`_ flathub / flatpak"

#: ../components/software/nk-app2/installation_linux.rst:10
msgid ""
"Execute ``flatpak install flathub com.nitrokey.nitrokey-app2`` to install"
" (or use the native Flathub integration of your Operating System i.e., "
"\"Software\" on Ubuntu systems)"
msgstr ""
"执行 ``flatpak install flathub com.nitrokey.nitrokey-app2`` 安装（或使用操作系统的本地 "
"Flathub 集成，例如 Ubuntu 系统上的 \"软件\"）。"

#: ../components/software/nk-app2/installation_linux.rst:11
#: ../components/software/nk-app2/installation_linux.rst:25
msgid ":doc:`Set up the udev rules for nitropy <../nitropy/linux/udev>`"
msgstr ":doc:`Set up the udev rules for nitropy <.../nitropy/linux/udev>`"

#: ../components/software/nk-app2/installation_linux.rst:12
msgid ""
"Start Nitrokey App2 using either ``flatpak run com.nitrokey.nitrokey-"
"app2`` or use the created entry in your start-menu"
msgstr "使用``flatpak run com.nitrokey.nitrokey-app2``或在开始菜单中使用创建的条目启动 Nitrokey App2"

#: ../components/software/nk-app2/installation_linux.rst:16
msgid ""
"Currently updating a Nitrokey 3 Mini is not supported through the flatpak"
" package. This will be fixed in one of the next releases."
msgstr "目前不支持通过 flatpak 软件包更新 Nitrokey 3 Mini。这将在下一个版本中修复。"

#: ../components/software/nk-app2/installation_linux.rst:21
msgid "Manual Installation"
msgstr "手动安装"

#: ../components/software/nk-app2/installation_linux.rst:23
msgid ""
"`Download <https://github.com/Nitrokey/nitrokey-app2/releases>`__ the "
"binary for Linux Nitrokey App 2"
msgstr ""
"下载 <https://github.com/Nitrokey/nitrokey-app2/releases>`__ Linux Nitrokey"
" App 2 的二进制文件"

#: ../components/software/nk-app2/installation_linux.rst:24
msgid "Extract the archive and set the binary as executable"
msgstr "解压压缩包并将二进制文件设置为可执行文件"

#: ../components/software/nk-app2/installation_linux.rst:26
msgid "Execute the binary"
msgstr "执行二进制文件"

#: ../components/software/nk-app2/installation_windows.rst:2
msgid "Windows Install"
msgstr "Windows 安装"

#: ../components/software/nk-app2/installation_windows.rst:4
msgid ""
"`Download <https://github.com/Nitrokey/nitrokey-app2/releases>`__ the "
"Windows installer (MSI file)."
msgstr ""
"下载 <https://github.com/Nitrokey/nitrokey-app2/releases>`__ Windows "
"安装程序（MSI 文件）。"

#: ../components/software/nk-app2/installation_windows.rst:5
msgid "Execute the Windows installer to install Nitrokey App 2 to your system."
msgstr "执行 Windows 安装程序，将 Nitrokey App 2 安装到系统中。"

#: ../components/software/nk-app2/installation_windows.rst:6
msgid "Start Nitrokey App 2 from your applications."
msgstr "从应用程序中启动 Nitrokey App 2。"

#: ../components/software/nk-app2/installation_windows.rst:8
msgid ""
"Alternatively, you can download and execute the portable Windows binary "
"without installation."
msgstr "或者，您也可以下载并执行便携式 Windows 二进制程序，而无需安装。"

#: ../components/software/nk-app2/installation_windows.rst:10
msgid "Silent installations are possible with the parameter **/qn**."
msgstr "使用参数 **/qn** 可以实现静音安装。"

#: ../components/software/nk-app2/installation_windows.rst:12
msgid "Example for a silent/mass installation"
msgstr "静音/大规模安装示例"

#: ../components/software/nk-app2/passwords.rst:4
msgid "Password entries may consist of:"
msgstr "密码条目可包括"

#: ../components/software/nk-app2/passwords.rst:6
msgid "Login"
msgstr "登录"

#: ../components/software/nk-app2/passwords.rst:7
msgid "Password"
msgstr "密码"

#: ../components/software/nk-app2/passwords.rst:8
msgid "Comment (for e.g. a website reference)"
msgstr "评论（例如网站参考资料）"

#: ../components/software/nk-app2/passwords.rst:9
msgid "OTP (HOTP or TOTP)"
msgstr "OTP（HOTP 或 TOTP）"

#: ../components/software/nk-app2/passwords.rst:11
msgid ""
"All fields are optional and can be edited and added at any time using the"
" \"Edit\" button."
msgstr "所有字段均为可选字段，可随时使用 \"编辑 \"按钮进行编辑和添加。"

#: ../components/software/nk-app2/passwords.rst:13
msgid ""
"For a list of websites supporting OTP have a look at `dongleauth.com "
"<https://www.dongleauth.com/>`__."
msgstr "有关支持 OTP 的网站列表，请访问 `dongleauth.com <https://www.dongleauth.com/>`__。"

#: ../components/software/nk-app2/passwords.rst:18
msgid ""
"Entries are divided into two categories: unprotected (shown as an open "
"lock) and protected (shown as a closed lock). Unprotected entries can be "
"accessed directly. Protected entries can only be accessed with the PIN."
msgstr "条目分为两类：未受保护（显示为打开的锁）和受保护（显示为关闭的锁）。不受保护的条目可以直接访问。受保护的条目只能通过密码访问。"

#: ../components/software/nk-app2/passwords.rst:20
msgid ""
"You can choose to create a protected entry by checking the \"Protect with"
" PIN\" box when adding a new entry."
msgstr "在添加新条目时，您可以选中 \"用 PIN 码保护 \"复选框来创建受保护的条目。"

#: ../components/software/nk-app2/passwords.rst:22
msgid ""
"You also have the option to require user presence in the form of a "
"required touch on the Nitrokey 3 to access the entry by checking the "
"\"Require User Presence\" box."
msgstr "您还可以选中 \"Require User Presence（要求用户在场）\"复选框，以要求用户在场的形式触摸 Nitrokey 3 访问条目。"

#: ../components/software/nk-app2/pin.rst:2
msgid "PIN Settings for FIDO2 and OTP in the Nitrokey App 2"
msgstr "Nitrokey App 2 中的 FIDO2 和 OTP 密码设置"

#: ../components/software/nk-app2/pin.rst:4
msgid ""
"These instructions describe how to set or change the PINs for FIDO2 and "
"OTP in the `Nitrokey App 2 </software/nk-app2/>`__."
msgstr ""
"这些说明介绍了如何在 \"Nitrokey App 2 </software/nk-app2/>`__\" 中设置或更改 FIDO2 和 OTP "
"的 PIN 码。"

#: ../components/software/nk-app2/pin.rst:8
msgid ""
"This function is not yet available in the current release of the "
"`Nitrokey App 2 </software/nk-app2/>`__ version 2.3.0"
msgstr "当前版本的 \"Nitrokey App 2 </software/nk-app2/>`__ 2.3.0 \"尚未提供此功能。"

#: ../components/software/nk-app2/pin.rst:9
msgid ""
"The function is expected to be available in the release of the `Nitrokey "
"App 2 </software/nk-app2/>`__  version 2.3.1"
msgstr "该功能预计将在 \"Nitrokey App 2 </software/nk-app2/>`__\" 2.3.1 版中提供。"

#: ../components/software/nk-app2/pin.rst:13
msgid ""
"Each function FIDO2, OTP or OpenPGP Card is assigned a separate PIN, "
"which is managed separately."
msgstr "每个功能的 FIDO2 卡、OTP 卡或 OpenPGP 卡都有一个单独的 PIN 码，可单独管理。"

#: ../components/software/nk-app2/pin.rst:16
msgid "First Steps:"
msgstr "第一步："

#: ../components/software/nk-app2/pin.rst:18
msgid "Open the `Nitrokey App 2 </software/nk-app2/>`__."
msgstr "打开 \"Nitrokey App 2\"</software/nk-app2/>___。"

#: ../components/software/nk-app2/pin.rst:19
msgid "Select the Nitrokey 3."
msgstr "选择 Nitrokey 3。"

#: ../components/software/nk-app2/pin.rst:20
msgid "Select the ``SETTINGS`` tab."
msgstr "选择 \"设置 \"选项卡。"

#: ../components/software/nk-app2/pin.rst:21
msgid ""
"On the left-hand side of the ``SETTINGS`` tab, a tree structure with "
"various options is available."
msgstr "在 \"设置 \"选项卡的左侧，有一个包含各种选项的树形结构。"

#: ../components/software/nk-app2/pin.rst:25
msgid "FIDO2 PIN Settings"
msgstr "FIDO2 PIN 设置"

#: ../components/software/nk-app2/pin.rst:27
msgid "Select ``FIDO2``."
msgstr "选择 ``FIDO2``。"

#: ../components/software/nk-app2/pin.rst:28
msgid ""
"A branch with ``FIDO2 PIN SETTINGS`` opens below ``FIDO2``. The status of"
" the FIDO2 PIN is now available on the left-hand side of the ``SETTINGS``"
" tab, including a short description."
msgstr ""
"在`FIDO2``下面会打开一个分支`FIDO2 PIN SETTINGS`。FIDO2 PIN "
"的状态现在可以在``设置``选项卡的左侧看到，包括一个简短的描述。"

#: ../components/software/nk-app2/pin.rst:29
msgid "Select ``FIDO2 PIN SETTINGS`` to set or change the PIN."
msgstr "选择 \"FIDO2 PIN 设置 \"以设置或更改 PIN。"

#: ../components/software/nk-app2/pin.rst:30
msgid ""
"Depending on the status of the Fido2 PIN, the input mask for setting or "
"changing the PIN is now displayed."
msgstr "根据 Fido2 PIN 的状态，现在将显示用于设置或更改 PIN 的输入掩码。"

#: ../components/software/nk-app2/pin.rst:32
msgid ""
"To set the FIDO2 PIN, enter the new PIN and repeat it in the provided "
"boxes. To change the PIN, enter the current PIN in the box provided."
msgstr "要设置 FIDO2 PIN 码，请输入新 PIN 码并在提供的方框中重复输入。要更改 PIN 码，请在提供的方框中输入当前 PIN 码。"

#: ../components/software/nk-app2/pin.rst:32
#: ../components/software/nk-app2/pin.rst:48
msgid "PIN length minimum 4 characters"
msgstr "密码长度至少为 4 个字符"

#: ../components/software/nk-app2/pin.rst:33
#: ../components/software/nk-app2/pin.rst:49
msgid "If the repetition of the new PIN is not correct, it will not be accepted."
msgstr "如果重复的新 PIN 码不正确，将不予接受。"

#: ../components/software/nk-app2/pin.rst:37
#: ../components/software/nk-app2/pin.rst:52
msgid "Select the ``SAVE`` button."
msgstr "选择 ``SAVE`` 按钮。"

#: ../components/software/nk-app2/pin.rst:35
#: ../components/software/nk-app2/pin.rst:51
msgid "If the ``SAVE`` button is greyed out, the entries are not correct."
msgstr "如果 ``SAVE`` 按钮显示为灰色，说明输入不正确。"

#: ../components/software/nk-app2/pin.rst:36
#: ../components/software/nk-app2/pin.rst:52
msgid "When you hover over the ``SAVE`` button, a list of reasons is displayed."
msgstr "将鼠标悬停在 \"保存 \"按钮上时，会显示一系列原因。"

#: ../components/software/nk-app2/pin.rst:37
#: ../components/software/nk-app2/pin.rst:53
msgid ""
"The ``PIN_INVALID`` error message, when changing the PIN, indicates that "
"the current PIN is incorrect."
msgstr "更改 PIN 时，\"PIN_INVALID \"错误信息表示当前 PIN 不正确。"

#: ../components/software/nk-app2/pin.rst:40
msgid "OTP PIN Settings"
msgstr "OTP 密码设置"

#: ../components/software/nk-app2/pin.rst:43
msgid "Select ``OTP``."
msgstr "选择 ``OTP``。"

#: ../components/software/nk-app2/pin.rst:43
msgid ""
"A branch with ``OTP PIN SETTINGS`` opens below ``OTP``. The status of the"
" OTP PIN is now available on the left-hand side of the ``SETTINGS`` tab, "
"including a short description."
msgstr ""
"在 \"OTP \"下面会打开一个带有 \"OTP 密码设置 \"的分支。OTP "
"密码的状态现在可以在``设置``选项卡的左侧看到，包括一个简短的说明。"

#: ../components/software/nk-app2/pin.rst:44
msgid ""
"Information about the version, serial number and PIN attempt counter is "
"also available."
msgstr "还提供有关版本、序列号和 PIN 尝试计数器的信息。"

#: ../components/software/nk-app2/pin.rst:45
msgid "Select ``OTP PIN SETTINGS`` to set or change the PIN."
msgstr "选择 \"OTP 密码设置 \"以设置或更改密码。"

#: ../components/software/nk-app2/pin.rst:46
msgid ""
"Depending on the status of the OTP PIN, the input mask for setting or "
"changing the PIN is now displayed."
msgstr "根据 OTP PIN 的状态，现在会显示用于设置或更改 PIN 的输入掩码。"

#: ../components/software/nk-app2/pin.rst:48
msgid ""
"To set the OTP PIN, enter the new PIN and repeat it in the provided "
"boxes. To change the PIN, enter the current PIN in the box provided."
msgstr "要设置 OTP PIN 码，请在提供的框中输入新 PIN 码并重复。要更改 PIN 码，请在提供的方框中输入当前 PIN 码。"

#: ../components/start/factory-reset.rst:5
#: ../components/start/multiple-identities.rst.inc:6
msgid ""
"The multiple identites feature allows to use 3 virtual smart cards in "
"place of one, giving bigger flexibility in the every day use, as well as "
"separation between user identities (business, personal etc.) or even "
"allowing usage of it for more than one user (PINs are separate)."
msgstr ""
"多重身份功能允许使用 3 张虚拟智能卡代替 1 "
"张智能卡，使日常使用更加灵活，还可以区分用户身份（企业、个人等），甚至允许多个用户使用（密码是分开的）。"

#: ../components/start/factory-reset.rst:7
#: ../components/start/multiple-identities.rst.inc:8
msgid ""
"All of the smart cards have separate data objects, meaning they all could"
" have different keys, certificates stored, and PINs set. Identities do "
"not intereact between each other."
msgstr "所有智能卡都有独立的数据对象，这意味着它们都可能有不同的密钥、存储的证书和设置的 PIN 码。身份信息之间互不影响。"

#: ../components/start/factory-reset.rst:9
msgid "This means each identity needs to be resetted on its own."
msgstr "这意味着每个身份都需要重新设置。"

#: ../components/start/factory-reset.rst:11
msgid ""
"Old versions (below 1.2.5) of the firmware might need special treatment "
"(see below). Usage -----"
msgstr "旧版本（1.2.5 以下）固件可能需要特殊处理（见下文）。使用 -----"

#: ../components/start/factory-reset.rst:15
#: ../components/start/multiple-identities.rst.inc:15
msgid ""
"To change the identity it suffices to send a custom CCID command. This "
"could be achieved with ``pynitrokey`` tool:"
msgstr "要更改身份，只需发送自定义 CCID 命令即可。这可以通过 ``pynitrokey`` 工具实现："

#: ../components/start/factory-reset.rst:17
#: ../components/start/multiple-identities.rst.inc:17
msgid ""
"`Install pynitrokey "
"<https://github.com/Nitrokey/pynitrokey#installation>`__."
msgstr "安装 pynitrokey <https://github.com/Nitrokey/pynitrokey#installation>`__."

#: ../components/start/factory-reset.rst:19
#: ../components/start/multiple-identities.rst.inc:20
msgid "Connect your Nitrokey Start and verify that it got recognized."
msgstr "连接 Nitrokey Start 并确认它已被识别。"

#: ../components/start/factory-reset.rst:29
#: ../components/start/multiple-identities.rst.inc:29
msgid "Change the identity, by replacing ``<ID>`` with ``0``, ``1``, or ``2``."
msgstr "将 ``<ID>`` 替换为 ``0``、``1`` 或 ``2``，从而更改身份。"

#: ../components/start/factory-reset.rst:40
msgid "Reset"
msgstr "重置"

#: ../components/start/factory-reset.rst:46
msgid "In the menu enter `admin` and then `factory-reset`"
msgstr "在菜单中输入 \"admin\"，然后输入 \"factory-reset\"。"

#: ../components/start/factory-reset.rst:48
msgid ""
"This will reset the current identity. To reset  all identitites the "
"following needs to be done:"
msgstr "这将重置当前身份。要重置所有身份信息，需要执行以下操作："

#: ../components/start/factory-reset.rst:59
msgid ""
"It deletes all keys, pins, configurations and meta data associated with "
"the respective identity."
msgstr "它会删除与各自身份相关的所有密钥、引脚、配置和元数据。"

#: ../components/start/factory-reset.rst:63
msgid "Reset code"
msgstr "重置密码"

#: ../components/start/factory-reset.rst:65
msgid ""
"This step is optional with new firmware.. You can add a reset code which "
"enable the reset of the User PIN (not the Admin PIN). For older Firmware "
"it is recommended since it is needed to reset the device (see below)"
msgstr "对于新固件，此步骤是可选的。您可以添加重置密码，以重置用户密码（而不是管理密码）。对于旧固件，建议使用重置码，因为重置设备需要它（见下文）。"

#: ../components/start/factory-reset.rst:68
msgid ""
"`Checkout the documentation here <https://www.fsij.org/doc-gnuk/gnuk-"
"passphrase-setting.html#set-up-pw1-pw3-and-reset-code>`__."
msgstr ""
"`Checkout documentation here <https://www.fsij.org/doc-gnuk/gnuk-"
"passphrase-setting.html#set-up-pw1-pw3-and-reset-code>`__."

#: ../components/start/factory-reset.rst:74
msgid "Firmware below 1.2.5"
msgstr "固件低于 1.2.5"

#: ../components/start/factory-reset.rst:76
msgid "Nitrokey Start firmware 1.2.2 to 1.2.5:"
msgstr "Nitrokey Start 固件 1.2.2 至 1.2.5："

#: ../components/start/factory-reset.rst:78
msgid ""
"If and only if the device is not blocked (PIN wasn't typed in wrong too "
"often) you can use the same procedure as in newer firmware (see above). "
"You need the reset code to unblock device or you can not use the device "
"anymore!"
msgstr ""
"如果且只有在设备未被封锁（PIN "
"码未经常输入错误）的情况下，您才可以使用与较新固件相同的程序（见上文）。您需要重置密码来解锁设备，否则就不能再使用设备！"

#: ../components/start/factory-reset.rst:81
msgid "Nitrokey Start firmware 1.0:"
msgstr "Nitrokey Start 固件 1.0："

#: ../components/start/factory-reset.rst:82
msgid ""
"In order to reset a Nitrokey Start 1.0, you need to define a public key "
"for `firmware updates <http://no-passwd.net/askbot/question/34/how-gnuk-"
"supports-firmware-upgrade/>`__ beforehand! In case of a blocked device it"
" enables you to perform a firmware update which resets the device."
msgstr ""
"为了重置 Nitrokey Start 1.0，您需要事先为 \"固件更新 <http://no-"
"passwd.net/askbot/question/34/how-gnuk-supports-firmware-"
"upgrade/>`__\"定义一个公钥！如果设备被阻塞，它能让你执行固件更新，从而重置设备。"

#: ../components/start/faq.rst:2
msgid "Nitrokey Start FAQ"
msgstr "Nitrokey 启动常见问题"

#: ../components/start/faq.rst:33
msgid ""
"**Q:** Does the Nitrokey Start contain a secure chip or just a normal "
"microcontroller?"
msgstr "**问：** Nitrokey Start 包含安全芯片还是普通微控制器？"

#: ../components/start/faq.rst:33
msgid "Nitrokey Start is implemented in the microprocessor."
msgstr "Nitrokey 启动是在微处理器中实现的。"

#: ../components/start/faq.rst:36
msgid ""
"The Nitrokey Start doesn't contain storage capability for ordinary data "
"(it can only store cryptographic keys and certificates)."
msgstr "Nitrokey Start 不具备存储普通数据的功能（只能存储加密密钥和证书）。"

#: ../components/start/index.rst:2
msgid "Nitrokey Start"
msgstr "硝基启动"

#: ../components/start/linux/firmware-update.rst:5
msgid ""
"Updating could lead to data loss, so make sure you have proper backup "
"login methods enabled and/or ensure that the Nitrokey Start is not the "
"only way to authenticate/2FA for your applications/services."
msgstr "更新可能会导致数据丢失，因此请确保您启用了适当的备份登录方法，和/或确保 Nitrokey Start 不是应用程序/服务的唯一验证/FA 方式。"

#: ../components/start/linux/firmware-update.rst:10
#: ../components/storage/linux/firmware-update.rst:13
#: ../components/storage/windows/firmware-update.rst:13
msgid ""
"Never disconnect the Nitrokey Start or abort the process while updating, "
"this will likely render your device useless"
msgstr "在更新过程中，切勿断开 Nitrokey Start 连接或中止进程，否则可能导致设备无法使用"

#: ../components/start/linux/firmware-update.rst:15
msgid "To update the firmware of your Nitrokey Start, proceed as follows."
msgstr "更新 Nitrokey Start 固件的步骤如下。"

#: ../components/start/linux/firmware-update.rst:17
msgid "Install pip3."
msgstr "安装 pip3。"

#: ../components/start/linux/firmware-update.rst:23
msgid "Install pynitrokey. For this you need an Internet connection."
msgstr "安装 pynitrokey。为此，您需要连接互联网。"

#: ../components/start/linux/firmware-update.rst:29
msgid "Connect your Nitrokey Start and verify its recognition."
msgstr "连接 Nitrokey Start 并验证其识别。"

#: ../components/start/linux/firmware-update.rst:39
msgid "Start the update process. For this you need an Internet connection."
msgstr "启动更新程序。为此，您需要连接互联网。"

#: ../components/start/linux/firmware-update.rst:45
msgid ""
"You will then be asked to enter the Admin PIN of your Nitrokey Start. "
"(Default PIN: 12345678)"
msgstr "然后会要求您输入 Nitrokey Start 的管理密码。(默认 PIN 码：12345678）"

#: ../components/start/linux/firmware-update.rst:58
msgid ""
"Under “Device” you will find information about the current version of "
"your Nitrokey Start. In the first item under “Please note” you can see "
"the latest firmware version available. Now you have to confirm the update"
" with “yes”."
msgstr ""
"在 \"设备 \"下，您可以找到有关 Nitrokey Start 当前版本的信息。在 \"Please "
"note（请注意）\"下的第一项中，您可以看到可用的最新固件版本。现在，您必须用 \"是 \"确认更新。"

#: ../components/start/linux/firmware-update.rst:91
msgid ""
"You can check the firmware version after the upgrade process has "
"completed."
msgstr "升级过程完成后，您可以检查固件版本。"

#: ../components/start/linux/index.rst:2
msgid "Nitrokey Start, Linux"
msgstr "Nitrokey Start, Linux"

#: ../components/start/linux/index.rst:13
msgid ""
"Install ``scdaemon`` and GnuPG 2.1 or higher by using your package "
"manager (e.g. ``apt update && apt install scdaemon gnupg2`` on Ubuntu)."
msgstr ""
"使用软件包管理器安装 ``scdaemon` 和 GnuPG 2.1 或更高版本（例如，在 Ubuntu 上安装 ``apt update && "
"apt install scdaemon gnupg2`）。"

#: ../components/start/linux/index.rst:15
msgid "Connect your Nitrokey to your computer."
msgstr "将 Nitrokey 与电脑连接。"

#: ../components/start/linux/index.rst:16 ../components/start/mac/index.rst:17
#: ../components/start/windows/index.rst:21
msgid "Use GnuPG to `generate new keys or import existing ones <openpgp.html>`_."
msgstr "使用 GnuPG `生成新密钥或导入现有密钥 <openpgp.html>`_."

#: ../components/start/linux/index.rst:20 ../components/start/mac/index.rst:21
msgid ""
"It is indeed necessary to first import or create new keys and change the "
"PINs afterwards. Otherwise changing User PIN will fail! Furthermore "
"overriding keys results in PIN reset (default values), please keep this "
"in mind!"
msgstr "确实有必要先导入或创建新密钥，然后再更改 PIN 码。否则更改用户密码将失败！此外，覆盖密钥会导致重置 PIN 码（默认值），请注意这一点！"

#: ../components/start/linux/index.rst:25 ../components/start/mac/index.rst:26
#: ../components/start/windows/index.rst:26
msgid ""
"Change the Admin PIN (default: ``12345678``) and then the User PIN "
"(default: ``123456``) to your own choices."
msgstr "将管理员密码（默认值：`12345678``）和用户密码（默认值：`123456``）更改为您自己的选择。"

#: ../components/start/linux/index.rst:27 ../components/start/mac/index.rst:28
#: ../components/start/windows/index.rst:28
msgid ""
"The PIN must consist of at least 14 characters (starting from RTM.8), can"
" contain any character (not only numbers). Do not select only numbers. If"
" your environment allows that, use emoticons or national characters."
msgstr ""
"PIN 码必须至少包含 14 个字符（从 RTM.8 "
"开始），可以包含任何字符（不仅是数字）。不要只选择数字。如果环境允许，请使用表情符号或国家字符。"

#: ../components/start/linux/index.rst:28 ../components/start/mac/index.rst:29
#: ../components/start/windows/index.rst:29
msgid ""
"The longer the PIN the better. It is possible to use 6 randomly selected "
"words instead as well for the same or better security than random "
"character string."
msgstr "密码越长越好。也可以使用 6 个随机选择的单词来代替，其安全性与随机字符串相同或更好。"

#: ../components/start/linux/index.rst:29 ../components/start/mac/index.rst:30
msgid ""
"Use ‘gpg –card-edit’ -> ‘admin’ -> ‘passwd’ to achieve this (for Admin "
"PIN case)."
msgstr "使用 \"gpg -card-edit\"->\"admin\"->\"passwd \"来实现此功能（管理员密码情况）。"

#: ../components/start/linux/index.rst:30 ../components/start/mac/index.rst:31
msgid ""
"Please be careful to change Admin PIN first and User PIN second! "
"Otherwise the admin-less mode got activated, see `this instructions "
"<https://www.fsij.org/doc-gnuk/gnuk-passphrase-setting.html#>`__ for "
"further information."
msgstr ""
"请注意先更改管理员密码，再更改用户密码！否则将激活无管理员模式，详情请参见 \"本说明 <https://www.fsij.org/doc-"
"gnuk/gnuk-passphrase-setting.html#>`__\"。"

#: ../components/start/linux/index.rst:31 ../components/start/mac/index.rst:32
#: ../components/start/windows/index.rst:31
msgid ""
"Optionally Reset code can be set up (`guide <https://www.fsij.org/doc-"
"gnuk/gnuk-passphrase-setting.html>`__). The minimum length accepted is 8 "
"characters, however it should be as long as User PIN."
msgstr ""
"可选择设置重置密码（`指南 <https://www.fsij.org/doc-gnuk/gnuk-passphrase-"
"setting.html>`__）。可接受的最小长度为 8 个字符，但长度应与用户密码相同。"

#: ../components/start/linux/index.rst:32 ../components/start/mac/index.rst:33
#: ../components/start/windows/index.rst:32
msgid ""
"KDF-DO allows for a shorter PIN of 8 characters minimum, by executing "
"part of the calculations on the PC."
msgstr "KDF-DO 允许在个人电脑上执行部分计算，从而缩短 PIN 码（最少 8 个字符）。"

#: ../components/start/linux/index.rst:34 ../components/start/mac/index.rst:35
#: ../components/start/windows/index.rst:34
msgid ""
"**Firmware version 1.2.5 or below: In case you forget a PIN or enter it "
"wrongly three times you need the reset code to unblock the PIN. Otherwise"
" the device wouldn’t be usable anymore! Therefore please** `set the reset"
" code <https://www.fsij.org/doc-gnuk/gnuk-passphrase-setting.html>`__ "
"**as well when initialising the key!**"
msgstr ""
"** 固件版本为 1.2.5 或以下：如果您忘记了 PIN 码或错误输入了三次 PIN 码，则需要重置密码来解锁 PIN "
"码。否则设备将无法继续使用！因此，请** <https://www.fsij.org/doc-gnuk/gnuk-passphrase-"
"setting.html>`__ **在初始化密钥时也设置重置密码！**"

#: ../components/start/linux/index.rst:57 ../components/start/mac/index.rst:58
#: ../components/start/windows/index.rst:57
msgid "Please note that the Nitrokey App can not be used for this device!"
msgstr "请注意，Nitrokey 应用程序不能用于此设备！"

#: ../components/start/linux/index.rst:62
msgid ""
"On some GNU/Linux systems it is necessary to insert the UDEV rules for "
"the Nitrokey device manually. If you followed the above instructions and "
"get the message:"
msgstr "在某些 GNU/Linux 系统上，有必要为 Nitrokey 设备手动插入 UDEV 规则。如果您按照上述说明操作，但得到以下信息"

#: ../components/start/linux/index.rst:70
msgid ""
"please install the `Nitrokey App <https://www.nitrokey.com/download>`__ "
"or type the following commands in the terminal to download and install "
"the UDEV rules:"
msgstr ""
"请安装 `Nitrokey App <https://www.nitrokey.com/download>`__ 或在终端中键入以下命令下载并安装"
" UDEV 规则："

#: ../components/start/multiple-identities.rst.inc:2
msgid "Multiple Identities"
msgstr "多重身份"

#: ../components/start/multiple-identities.rst.inc:10
msgid ""
"The virtual smart cards are identifyable by the first digit of the serial"
" number, which is replaced by identity number for second (“1”) and third "
"one (“2”). Serial number is not changed for the first identity."
msgstr "虚拟智能卡可通过序列号的第一位数字识别，第二位（\"1\"）和第三位（\"2\"）的序列号由身份号代替。第一个身份的序列号不变。"

#: ../components/start/multiple-identities.rst.inc:40
msgid "Limitations"
msgstr "局限性"

#: ../components/start/multiple-identities.rst.inc:42
msgid ""
"As of version RTM.10 there is only one limitation - the third identity "
"can store a certificate not longer than 1024 bytes. The other two "
"identities have standard limit of 2048 bytes per certificate."
msgstr "从 RTM.10 版本开始，只有一个限制--第三个身份可以存储不超过 1024 字节的证书。其他两个身份的标准限制为每个证书 2048 字节。"

#: ../components/start/setting-kdf-do.rst.inc:2
msgid "Setting KDF-DO"
msgstr "设置 KDF-DO"

#: ../components/start/setting-kdf-do.rst.inc:9
msgid ""
"KDF-DO stands for Key Derived Function - Data Object. With this data "
"object the card can inform clients that it supports derived keys. (For "
"details see section 4.3.2 of the `OpenPGP Smart Card 3.4 specification "
"<https://gnupg.org/ftp/specs/OpenPGP-smart-card-application-3.4.pdf>`__) "
"The benefit of using derived keys is, that instead of transmitting "
"passwords in clear text only hashes are transmitted to the card and "
"therefore only hashes are stored on the card. Since a derived key will be"
" longer than the original password it will also be harder to successfully"
" run a brute force attack."
msgstr ""
"KDF-DO 代表派生密钥功能数据对象（Key Derived Function - Data "
"Object）。有了这个数据对象，智能卡就可以通知客户它支持派生密钥。(详见 \"OpenPGP 智能卡 3.4 规范 "
"<https://gnupg.org/ftp/specs/OpenPGP-smart-card-application-3.4.pdf>`__\""
" 的第 4.3.2 "
"节）。使用派生密钥的好处是，不需要传输明文密码，只需将哈希值传输到卡上，因此卡上只存储哈希值。由于派生密钥比原始密码更长，因此也更难成功进行暴力攻击。"

#: ../components/start/setting-kdf-do.rst.inc:17
msgid ""
"At the moment it is only possible to set the KDF-DO, when the Nitrokey "
"Start is empty (just after a factory reset)."
msgstr "目前，只有在 Nitrokey Start 为空时才能设置 KDF-DO（出厂重置后）。"

#: ../components/start/setting-kdf-do.rst.inc:20
msgid "Steps to Configure KDF-DO"
msgstr "配置 KDF-DO 的步骤"

#: ../components/start/setting-kdf-do.rst.inc:22
msgid "Run factory reset"
msgstr "运行出厂重置"

#: ../components/start/setting-kdf-do.rst.inc:23
msgid "Set up KDF-DO using GnuPG"
msgstr "使用 GnuPG 设置 KDF-DO"

#: ../components/start/setting-kdf-do.rst.inc:24
msgid ""
"Change Admin PIN (optional; without keys only Admin PIN change is "
"possible)"
msgstr "更改管理密码（可选；没有钥匙只能更改管理密码）"

#: ../components/start/setting-kdf-do.rst.inc:25
msgid "Import / generate keys"
msgstr "导入/生成密钥"

#: ../components/start/setting-kdf-do.rst.inc:30
msgid "Setting KDF-DO using GnuPG"
msgstr "使用 GnuPG 设置 KDF-DO"

#: ../components/start/setting-kdf-do.rst.inc:32
msgid "Run ``gpg2 --card-edit``"
msgstr "运行 ``gpg2 --card-edit``"

#: ../components/start/setting-kdf-do.rst.inc:33
msgid "``$ admin``"
msgstr "`$ admin``"

#: ../components/start/setting-kdf-do.rst.inc:34
msgid "``$ kdf-setup``"
msgstr "`$ kdf-setup``"

#: ../components/start/setting-kdf-do.rst.inc:35
msgid "Enter Admin PIN"
msgstr "输入管理密码"

#: ../components/start/setting-kdf-do.rst.inc:36
msgid ""
"Verify current state state by looking at the card details (``gpg2 --card-"
"status``), where ``KDF setting ......: on`` should be visible, e.g.:"
msgstr "通过查看卡的详细信息（``gpg2 --card-status``）来验证当前状态，其中``KDF 设置 ......: on``应可见，如"

#: ../components/start/setting-kdf-do.rst.inc:48
msgid "Tested with"
msgstr "经测试"

#: ../components/start/setting-kdf-do.rst.inc:50
msgid "gpg (GnuPG) 2.2.20 / 2.2.25"
msgstr "gpg (GnuPG) 2.2.20 / 2.2.25"

#: ../components/start/setting-kdf-do.rst.inc:51
msgid "Nitrokey Start RTM.10"
msgstr "Nitrokey Start RTM.10"

#: ../components/start/setting-kdf-do.rst.inc:52
msgid "Curve 25519 keys"
msgstr "曲线 25519 键"

#: ../components/start/mac/index.rst:2
msgid "Nitrokey Start, Mac"
msgstr "Nitrokey Start, Mac"

#: ../components/start/mac/index.rst:13
msgid "Install `GnuPG 2.1 <https://gpgtools.org/>`__ or higher."
msgstr "安装 `GnuPG 2.1 <https://gpgtools.org/>`__ 或更高版本。"

#: ../components/start/mac/index.rst:14
#: ../components/start/windows/index.rst:14
#: ../components/storage/windows/index.rst:13
msgid ""
"Connect your Nitrokey to your computer and confirm all dialogs so that "
"the USB smart card device driver gets installed almost automatically."
msgstr "将 Nitrokey 与电脑连接并确认所有对话框，这样 USB 智能卡设备驱动程序几乎会自动安装。"

#: ../components/start/windows/index.rst:2
msgid "Nitrokey Start, Windows"
msgstr "Nitrokey Start, Windows"

#: ../components/start/windows/index.rst:13
msgid "Install `Gpg4win <https://www.gpg4win.org/>`__ on your Computer."
msgstr "在计算机上安装 `Gpg4win <https://www.gpg4win.org/>`__ 。"

#: ../components/start/windows/index.rst:19
#: ../components/storage/windows/index.rst:17
msgid ""
"Windows may fail to install an additional device driver for the smart "
"card. Its safe to ignore this warning."
msgstr "Windows 可能无法为智能卡安装额外的设备驱动程序。可以忽略此警告。"

#: ../components/start/windows/index.rst:24
msgid ""
"It is indeed necessary to first import or create new keys and change the "
"PINs afterwards. Otherwise changing User PIN will fail! Furthermore "
"overriding keys results in PIN reset (default values),  please keep this "
"in mind!"
msgstr "确实有必要先导入或创建新密钥，然后再更改 PIN 码。否则更改用户密码将失败！此外，覆盖密钥会导致重置 PIN 码（默认值），请注意这一点！"

#: ../components/start/windows/index.rst:30
msgid ""
"Use ‘gpg –card-edit’ -> ‘admin’ -> ‘passwd’ to achieve this (for Admin "
"PIN case). - Please be careful to change Admin PIN first and User PIN "
"second! Otherwise the admin-less mode got activated, see `this "
"instructions <https://www.fsij.org/doc-gnuk/gnuk-passphrase-"
"setting.html#>`__ for further information."
msgstr ""
"使用 \"gpg -card-edit\"->\"admin\"->\"passwd \"来实现此功能（针对管理员密码）。- "
"请注意先修改管理员密码，再修改用户密码！否则，无管理员模式将被激活，详情请参见 \"本说明 <https://www.fsij.org/doc-"
"gnuk/gnuk-passphrase-setting.html#>`__\"。"

#: ../components/storage/encrypted-mobile-storage.rst:1
msgid ""
"Prior of using the encrypted mobile storage you need to install and "
"initialize the Nitrokey Storage and download the latest `Nitrokey App "
"<https://www.nitrokey.com/download>`__."
msgstr ""
"在使用加密移动存储之前，您需要安装和初始化 Nitrokey 存储，并下载最新的 \"Nitrokey 应用程序 "
"<https://www.nitrokey.com/download>`__\"。"

#: ../components/storage/encrypted-mobile-storage.rst:3
#: ../components/storage/faq.rst:86
msgid "Start the Nitrokey App."
msgstr "启动 Nitrokey 应用程序。"

#: ../components/storage/encrypted-mobile-storage.rst:4
#: ../components/storage/faq.rst:87
msgid "Press its tray icon and select \"unlock encrypted volume\" in the menu."
msgstr "按下托盘图标，在菜单中选择 \"解锁加密卷\"。"

#: ../components/storage/encrypted-mobile-storage.rst:5
#: ../components/storage/faq.rst:88
msgid "Enter your User PIN in the appearing popup window."
msgstr "在弹出的窗口中输入用户密码。"

#: ../components/storage/encrypted-mobile-storage.rst:6
msgid ""
"If this is the first time you may need to create a partition on the "
"encrypted volume. Windows will open an appropriate window and ask you to "
"do so. On GNU+Linux and Mac you may need to open a partition manager and "
"create a partition manually. You can create as many partitions as you "
"want. We recommend FAT(32) if you want to access the partition from "
"various operating systems."
msgstr ""
"如果这是第一次，您可能需要在加密卷上创建一个分区。Windows 会打开一个适当的窗口并要求您这样做。在 GNU+Linux 和 Mac "
"上，您可能需要打开分区管理器并手动创建分区。您可以创建任意多个分区。如果想从不同的操作系统访问分区，我们推荐使用 FAT(32)。"

#: ../components/storage/encrypted-mobile-storage.rst:7
#: ../components/storage/faq.rst:90
msgid ""
"Now you can use the encrypted volume as you would use any other ordinary "
"USB drive. But all data stored on it will be encrypted in the Nitrokey "
"hardware automatically."
msgstr "现在，你可以像使用其他普通 USB 驱动器一样使用加密卷。但其中存储的所有数据都将在 Nitrokey 硬件中自动加密。"

#: ../components/storage/encrypted-mobile-storage.rst:8
#: ../components/storage/faq.rst:91
msgid "To remove or lock the encrypted volume you should unmount/eject it first."
msgstr "要删除或锁定加密卷，应先卸载/弹出加密卷。"

#: ../components/storage/encrypted-mobile-storage.rst:9
#: ../components/storage/faq.rst:92
msgid ""
"Afterwards you can disconnect the Nitrokey or select \"lock encrypted "
"volume\" from the Nitrokey App menu."
msgstr "之后，你可以断开 Nitrokey 或从 Nitrokey App 菜单中选择 \"锁定加密卷\"。"

#: ../components/storage/encrypted-mobile-storage.rst:11
msgid ""
"The Nitrokey Storage is able to create hidden volumes as well. Please "
"have a look at the corresponding instructions for `hidden volumes "
"<hidden.html>`_."
msgstr "Nitrokey Storage 还能创建隐藏卷。请查看 \"隐藏卷 <hidden.html>\"的相应说明。"

#: ../components/storage/factory-reset.rst:3
msgid "There are two types of factory resets for Nitrokey Storage devices:"
msgstr "Nitrokey 存储设备有两种出厂重置方式："

#: ../components/storage/factory-reset.rst:9
msgid ""
"Also, it is possible to generate a new AES key that is used to encrypt "
"the Password Safe and the Encrypted Volume without performing a factory "
"reset."
msgstr "此外，还可以生成新的 AES 密钥，用于加密密码保险箱和加密卷，而无需执行出厂重置。"

#: ../components/storage/factory-reset.rst:17
msgid ""
"The factory reset can be triggered in the Nitrokey App with the menu "
"entry ``Configure->Special Configure->Factory reset``."
msgstr "可在 Nitrokey App 中通过菜单项 \"配置->特殊配置->出厂重置 \"触发出厂重置。"

#: ../components/storage/factory-reset.rst:-1
msgid "factory-reset-menu-item"
msgstr "工厂重置菜单项"

#: ../components/storage/factory-reset.rst:25
msgid ""
"The factory reset is an administrative function and is only available "
"after starting the Nitrokey App with the parameter ``--admin``."
msgstr "出厂重置是一项管理功能，只有在使用参数\"--admin \"启动 Nitrokey App 后才能使用。"

#: ../components/storage/factory-reset.rst:36
msgid "yes [2]_"
msgstr "是 [2]_"

#: ../components/storage/factory-reset.rst:37
msgid "Destroys Encrypted Volume"
msgstr "销毁加密卷"

#: ../components/storage/factory-reset.rst:41
msgid "This is expected to change in new Nitrokey Storage firmware versions."
msgstr "预计新版 Nitrokey 存储固件将改变这种情况。"

#: ../components/storage/faq.rst:2
msgid "Nitrokey Storage FAQ"
msgstr "硝基存储常见问题"

#: ../components/storage/faq.rst:4
msgid ""
"As the Nitrokey Storage 2 is essentially a Nitrokey Pro 2 including a "
"non-volatile (encrypted) storage, the :doc:`Nitrokey Pro 2 FAQ "
"<../pro/faq>` also partly applies."
msgstr ""
"由于 Nitrokey Storage 2 本质上是包含非易失性（加密）存储的 Nitrokey Pro 2，因此 :doc:`Nitrokey "
"Pro 2 FAQ <../pro/faq>` 也部分适用。"

#: ../components/storage/faq.rst:12
msgid "**Firmware Password**: \"12345678\""
msgstr "**固件密码**：\"12345678\""

#: ../components/storage/faq.rst:19
msgid ""
"Nitrokey Storage can store and encrypt 8, 32, or 64 GB of data (depending"
" on particular model)."
msgstr "Nitrokey Storage 可存储和加密 8、32 或 64 GB 的数据（取决于特定型号）。"

#: ../components/storage/faq.rst:26
msgid "**Q:** Why can't I access the encrypted storage on a new Nitrokey Storage?"
msgstr "**问：** 为什么我无法访问新 Nitrokey 存储器上的加密存储？"

#: ../components/storage/faq.rst:24
msgid ""
"On a new Nitrokey Storage device, before you can access the encrypted "
"volume make sure you first \"Destroy encrypted data\" inside the Nitrokey"
" App."
msgstr "在新的 Nitrokey 存储设备上，在访问加密卷之前，请确保先在 Nitrokey 应用程序中 \"销毁加密数据\"。"

#: ../components/storage/faq.rst:34
msgid ""
"**Q:** Why does my Nitrokey Storage hang when switching between nitrokey-"
"app and GnuPG?"
msgstr "**问：** 为什么在 nitrokey-app 和 GnuPG 之间切换时，我的 Nitrokey 存储器会挂起？"

#: ../components/storage/faq.rst:45
msgid "**Q:** What is the firmware PIN for?"
msgstr "**问：** 固件 PIN 码有什么用？"

#: ../components/storage/faq.rst:37
msgid ""
"The firmware password should meet general password recommandations (e.g. "
"use alphabetic characters, digits and special characters or use a "
"usfficiently long password). The firmware password is needed to update "
"the firmware of the Nitrokey Storage. See further instructions for update"
" process here."
msgstr ""
"固件密码应符合一般密码建议（例如，使用字母、数字和特殊字符，或使用足够长的密码）。更新 Nitrokey "
"存储器固件时需要固件密码。有关更新过程的进一步说明，请参阅此处。"

#: ../components/storage/faq.rst:43
msgid ""
"The firmware password is never blocked. An attacker could try to guess "
"the password and would have unlimited attempts. Therefore you must choose"
" a strong password. The default password is 12345678."
msgstr "固件密码永远不会被阻止。攻击者可以尝试猜测密码，而且尝试次数不限。因此，您必须选择一个强大的密码。默认密码为 12345678。"

#: ../components/storage/faq.rst:48
msgid ""
"The Nitrokey Storage can store three RSA key pairs. All keys use the same"
" identity but are used for different purposes: authentication, encryption"
" and signing."
msgstr "Nitrokey 存储器可以存储三对 RSA 密钥。所有密钥使用相同的标识，但用于不同的目的：身份验证、加密和签名。"

#: ../components/storage/faq.rst:63
msgid ""
"**Q:** Does the Nitrokey Storage contain a secure chip or just a normal "
"microcontroller?"
msgstr "**问：** Nitrokey 存储器包含安全芯片还是普通微控制器？"

#: ../components/storage/faq.rst:63
msgid "Nitrokey Storage contains a tamper resistant smart card."
msgstr "Nitrokey 存储器包含一张防篡改智能卡。"

#: ../components/storage/faq.rst:70
msgid "**Q:** Is the Nitrokey Storage Common Criteria or FIPS certified?"
msgstr "**问：** Nitrokey 存储器是否通过了通用标准或 FIPS 认证？"

#: ../components/storage/faq.rst:66
msgid ""
"The security controller (NXP Smart Card Controller P5CD081V1A and its "
"major configurations P5CC081V1A, P5CN081V1A, P5CD041V1A, P5CD021V1A and "
"P5CD016V1A each with IC dedicated Software) is Common Criteria EAL 5+ "
"certified up to the OS level (`Certification Report "
"<https://commoncriteriaportal.org/files/epfiles/0555a_pdf.pdf>`__, "
"`Security Target "
"<https://commoncriteriaportal.org/files/epfiles/0555b_pdf.pdf>`__, "
"`Maintenance Report "
"<https://commoncriteriaportal.org/files/epfiles/0555_ma1a_pdf.pdf>`__, "
"`Maintenance ST "
"<https://commoncriteriaportal.org/files/epfiles/0555_ma1b_pdf.pdf>`__`). "
"Additionally `Cure53 <https://cure53.de>`__ has performed an `independent"
" security audit <https://www.nitrokey.com/news/2015/nitrokey-storage-got-"
"great-results-3rd-party-security-audit>`__ of the hardware, firmware, and"
" Nitrokey App."
msgstr ""
"安全控制器（恩智浦智能卡控制器 P5CD081V1A 及其主要配置 "
"P5CC081V1A、P5CN081V1A、P5CD041V1A、P5CD021V1A 和 P5CD016V1A，每个配置都带有 IC "
"专用软件）已通过通用标准 EAL 5+ 认证，最高达到操作系统级别（\"认证报告 "
"<https://commoncriteriaportal.org/files/epfiles/0555a_pdf.pdf>`__、`安全目标 "
"<https://commoncriteriaportal.org/files/epfiles/0555b_pdf.pdf>`___、`维护报告 "
"<https://commoncriteriaportal.org/files/epfiles/0555_ma1a_pdf.pdf>`__、`维护"
" ST "
"<https://commoncriteriaportal.org/files/epfiles/0555_ma1b_pdf.pdf>`____`）。此外，`Cure53"
" <https://cure53.de>`__ 对硬件、固件和 Nitrokey App 进行了`独立安全审计 "
"<https://www.nitrokey.com/news/2015/nitrokey-storage-got-great-results-"
"3rd-party-security-audit>`__。"

#: ../components/storage/faq.rst:74
msgid ""
"**Q:** How can I use the True Random Number Generator (TRNG) of the "
"Nitrokey Storage for my applications?"
msgstr "**问：** 如何在我的应用程序中使用 Nitrokey 存储器的真实随机数生成器（TRNG）？"

#: ../components/storage/faq.rst:94
msgid "**Q:** How can I use the encrypted mobile Storage?"
msgstr "**问：** 如何使用加密的移动存储？"

#: ../components/storage/faq.rst:84
msgid ""
"Prior of using the encrypted mobile storage you need to install and "
"initialize the Nitrokey Storage and download the latest Nitrokey App."
msgstr "在使用加密移动存储之前，您需要安装和初始化 Nitrokey 存储，并下载最新的 Nitrokey 应用程序。"

#: ../components/storage/faq.rst:89
msgid ""
"If this is the first time you may need to create a partition on the "
"encrypted volume. Windows will open an appropriate window and ask you to "
"do so. On Linux and Mac you may need to open a partition manager and "
"create a partition manually. You can create as many partitions as you "
"want. We recommend FAT(32) if you want to access the partition from "
"various operating systems."
msgstr ""
"如果这是第一次，您可能需要在加密卷上创建一个分区。Windows 会打开一个适当的窗口并要求您这样做。在 Linux 和 Mac "
"上，您可能需要打开分区管理器并手动创建分区。您可以创建任意多个分区。如果想从不同的操作系统访问分区，我们建议使用 FAT(32)。"

#: ../components/storage/faq.rst:94
msgid ""
"The Nitrokey Storage is able to create hidden volumes as well. Please "
"have a look at the corresponding instructions for hidden volumes."
msgstr "Nitrokey Storage 还能创建隐藏卷。请查看隐藏卷的相应说明。"

#: ../components/storage/faq.rst:116
msgid "**Q:** How can I use the hidden volume?"
msgstr "**问：** 如何使用隐藏音量？"

#: ../components/storage/faq.rst:97
msgid ""
"Hidden volumes allow to hide data in the encrypted volume. The data is "
"protected with an additional password. Without the password the data "
"existence's can't be proven. Hidden volumes are not setup by default so "
"that their existence can be denied plausibly. The concept is similar to "
"VeraCrypt's/TrueCrypt's hidden volume but with Nitrokey Storage the "
"entire functionality of hidden volumes is implemented in hardware."
msgstr ""
"隐藏加密卷允许在加密卷中隐藏数据。数据受附加密码保护。没有密码就无法证明数据的存在。隐藏加密卷在默认情况下不会被设置，因此可以似是而非地否认其存在。这一概念与"
" VeraCrypt/TrueCrypt 的隐藏加密卷类似，但 Nitrokey Storage 通过硬件实现了隐藏加密卷的全部功能。"

#: ../components/storage/faq.rst:104 ../components/storage/hidden.rst:8
msgid ""
"You can configure up to four hidden volumes. Once unlocked, hidden "
"volumes behave like ordinary storage where you can create various "
"partitions, filesystems and store files as you like."
msgstr "您最多可以配置四个隐藏加密卷。一旦解锁，隐藏加密卷就会像普通存储空间一样，你可以创建各种分区、文件系统，并随心所欲地存储文件。"

#: ../components/storage/faq.rst:108
msgid ""
"If you decide to configure Hidden Volumes, you can not use the encrypted "
"storage anymore. Because the Hidden Volume is situated on the free space "
"of the encrypted storage, there is the potential of overwriting data in "
"the Hidden Volume. You can say, even the encrypted storage \"does not "
"know\" that there is a hidden volumes. The general structure is shown in "
"the diagram below. Therefore, please do not write anything in the "
"encrypted storage after creating a hidden volume (you have to unlock it "
"first though)."
msgstr ""
"如果决定配置隐藏加密卷，就不能再使用加密存储。因为隐藏加密卷位于加密存储的可用空间上，有可能覆盖隐藏加密卷中的数据。可以说，即使加密存储空间也 "
"\"不知道 \"存在隐藏加密卷。一般结构如下图所示。因此，创建隐藏加密卷后，请不要在加密存储中写入任何内容（但必须先解锁加密卷）。"

#: ../components/storage/faq.rst:116
msgid ""
"Hidden volumes are like containers inside of a container, the encrypted "
"volume."
msgstr "隐藏加密卷就像容器中的容器，即加密卷。"

#: ../components/storage/firmware-update-manually.rst:5
msgid ""
"The following steps are only necessary if you are using Windows 10 Build "
"1809 (or higher) and Nitrokey Storage with firmware 0.52 or older. In all"
" other cases, or if you have access to another system, the regular update"
" as described `here <firmware-update.html>`__ is sufficient and easier."
msgstr ""
"只有在使用 Windows 10 Build 1809（或更高版本）和固件为 0.52 或更早版本的 Nitrokey Storage "
"时，才有必要执行以下步骤。在所有其他情况下，或者如果您可以访问其他系统，\"此处<firmware-"
"update.html>\"___所述的常规更新就足够了，而且更简单。"

#: ../components/storage/firmware-update-manually.rst:8
msgid "What is needed"
msgstr "需要什么"

#: ../components/storage/firmware-update-manually.rst:10
msgid ""
"To put the Nitrokey Storage manually into Update Mode (without using the "
"Nitrokey App), the following is required:"
msgstr "要手动将 Nitrokey 存储设置为更新模式（不使用 Nitrokey App），需要执行以下操作："

#: ../components/storage/firmware-update-manually.rst:12
msgid ""
"A USB stick (**All data on the USB stick will be lost! Please make a "
"backup of the creation before!**)"
msgstr "U 盘（** U 盘中的所有数据将丢失！请在创建之前进行备份！**)"

#: ../components/storage/firmware-update-manually.rst:15
msgid "The `Balena Etcher <https://www.balena.io/etcher/>`__ software"
msgstr "Balena Etcher <https://www.balena.io/etcher/>`__ 软件"

#: ../components/storage/firmware-update-manually.rst:17
msgid ""
"The `USB Image <https://github.com/Nitrokey/nitrokey-storage-update-"
"boot/releases/latest>`__ we created for this purpose. Please download "
"only the file ending with “.img.zip”."
msgstr ""
"我们为此创建了 \"USB 映像 <https://github.com/Nitrokey/nitrokey-storage-update-"
"boot/releases/latest>`__\"。请只下载以\".img.zip \"结尾的文件。"

#: ../components/storage/firmware-update-manually.rst:23
msgid "Install Balena Etcher"
msgstr "安装巴莱纳蚀刻机"

#: ../components/storage/firmware-update-manually.rst:25
msgid ""
"Balena Etcher helps us to install the USB image on the USB stick. Please "
"double click on the `previously downloaded installation file "
"<https://www.balena.io/etcher/>`__ and follow the instructions."
msgstr ""
"Balena Etcher 可帮助我们将 USB 映像安装到 U 盘上。请双击 \"先前下载的安装文件 "
"<https://www.balena.io/etcher/>`__\"，并按照说明操作。"

#: ../components/storage/firmware-update-manually.rst:38
msgid "Installing the USB image with Balena Etcher"
msgstr "使用 Balena Etcher 安装 USB 映像"

#: ../components/storage/firmware-update-manually.rst:40
msgid ""
"The program usually opens immediately after installation. If not, you "
"will find a shortcut on the desktop. Using the application, select the "
"`previously downloaded image file <https://github.com/Nitrokey/nitrokey-"
"storage-update-boot/releases>`__, which ends with “.img.zip”. Now insert "
"the USB stick. It should be recognized automatically. Press “Flash!” to "
"proceed."
msgstr ""
"程序通常会在安装后立即打开。如果没有，你可以在桌面上找到快捷方式。使用该程序，选择以\".img.zip \"结尾的 \"先前下载的映像文件 "
"<https://github.com/Nitrokey/nitrokey-storage-update-"
"boot/releases>`___\"。现在插入 U 盘。它应该会被自动识别。按 \"Flash!\"继续。"

#: ../components/storage/firmware-update-manually.rst:50
msgid "You must allow the application to make changes."
msgstr "您必须允许应用程序进行更改。"

#: ../components/storage/firmware-update-manually.rst:62
msgid ""
"After the image has been successfully transferred, Windows may ask if the"
" device should be formatted. It is important that you click “Cancel”, "
"otherwise the USB stick will be overwritten by Windows."
msgstr "成功传输映像后，Windows 可能会询问是否要格式化设备。请务必点击 \"取消\"，否则 U 盘将被 Windows 覆盖。"

#: ../components/storage/firmware-update-manually.rst:70
msgid "Booting from the USB stick"
msgstr "从 USB 盘启动"

#: ../components/storage/firmware-update-manually.rst:72
msgid ""
"Now the system must be restarted. The USB stick must remain in the USB "
"port so that the system can be started on the USB stick. Some devices are"
" configured to start automatically from USB stick if it contains a "
"system. If Windows instead of the USB image is booting right after the "
"restart, you have to set your BIOS to boot from USB. On many systems this"
" can be done with the Escape key, the F10, F11 or F12 key. Often, when "
"starting the device there is also a hint which key to use the so-called "
"“boot menu”."
msgstr ""
"现在必须重新启动系统。U 盘必须保留在 USB 端口中，以便在 U 盘上启动系统。如果 U 盘中包含系统，某些设备会配置为自动从 U "
"盘启动。如果重启后启动的是 Windows 而不是 USB 映像，则必须将 BIOS 设置为从 USB 启动。在许多系统上，这可以通过 "
"Escape 键、F10、F11 或 F12 键来完成。通常，启动设备时也会提示使用所谓的 \"启动菜单 \"键。"

#: ../components/storage/firmware-update-manually.rst:74
msgid ""
"After the system has started, please choose the language by typing 1 "
"(English) and hit Enter."
msgstr "系统启动后，请输入 1（英语）选择语言，然后按 Enter 键。"

#: ../components/storage/firmware-update-manually.rst:81
msgid "Please insert the Nitrokey Storage when asked to."
msgstr "请按要求插入 Nitrokey 存储器。"

#: ../components/storage/firmware-update-manually.rst:88
msgid ""
"The Firmware Update Mode will be started automatically if the standard "
"password is set. Otherwise you need to input your password and hit enter."
msgstr "如果设置了标准密码，固件更新模式将自动启动。否则，您需要输入密码并按回车键。"

#: ../components/storage/firmware-update-manually.rst:95
msgid ""
"After the system has activated the firmware update on the Nitrokey "
"Storage, a restart is issued after 60 seconds. Please remove the USB "
"Stick. Afterwards you can use the Nitrokey Update Tool in Windows as "
"described `here <firmware-update.html>`__."
msgstr ""
"系统激活 Nitrokey 存储器上的固件更新后，将在 60 秒后重新启动。请取出 USB 记忆棒。之后，您可以使用 Windows 中的 "
"Nitrokey 更新工具，如 \"此处<firmware-update.html>\"所述。"

#: ../components/storage/firmware-update-manually.rst:98
msgid "Restoring the USB Stick"
msgstr "恢复 USB 盘"

#: ../components/storage/firmware-update-manually.rst:100
msgid ""
"Windows should automatically ask to format your USB Stick as soon as you "
"insert the USB Stick the first time again in Windows. Just accept the "
"request for being able to use the USB Stick as previously."
msgstr "在 Windows 中首次插入 U 盘时，Windows 会自动要求格式化 U 盘。只要接受请求，就可以像以前一样使用 U 盘。"

#: ../components/storage/hidden.rst:2
msgid "Hidden Volumes"
msgstr "隐藏的卷宗"

#: ../components/storage/hidden.rst:4
msgid ""
"Hidden volumes allow hiding data inside of the encrypted volume. This "
"data is protected by an additional passphrase. Without the passphrase, it"
" is impossible to know whether hidden volumes are present. They are not "
"configured with a default password so that their existence can be `denied"
" plausibly <https://en.wikipedia.org/wiki/Plausible_deniability>`__. The "
"concept is similar to `VeraCrypt's/TrueCrypt's hidden volume "
"<https://veracrypt.eu/en/docs/hidden-volume/>`__ but with Nitrokey "
"Storage the entire functionality of hidden volumes is implemented in "
"hardware."
msgstr ""
"隐藏加密卷允许在加密卷内隐藏数据。这些数据受附加口令保护。没有口令，就无法知道隐藏加密卷是否存在。它们没有配置默认密码，因此可以 "
"\"似是而非地<https://en.wikipedia.org/wiki/Plausible_deniability>`__\"否认它们的存在。这一概念类似于"
" VeraCrypt/TrueCrypt 的隐藏加密卷 <https://veracrypt.eu/en/docs/hidden-"
"volume/>`__，但 Nitrokey Storage 在硬件中实现了隐藏加密卷的全部功能。"

#: ../components/storage/hidden.rst:11
msgid ""
"If you chose to use hidden volumes, you must not write any data to the "
"encrypted volume, or you risk loosing data in the hidden volume."
msgstr "如果选择使用隐藏加密卷，则不得向加密卷写入任何数据，否则有可能丢失隐藏加密卷中的数据。"

#: ../components/storage/hidden.rst:14
msgid ""
"Hidden volumes are hidden within the free space of the encrypted volume, "
"which will be overwritten when writing data to the encrypted volume. "
"There are no mechanisms to prevent accidental overwritting of hidden "
"data, as they would reveal the existence of hidden volumes. Data written "
"to the encrypted volume before the creation of the hidden volume can "
"still be read."
msgstr "隐藏加密卷隐藏在加密卷的可用空间内，在向加密卷写入数据时会被覆盖。没有任何机制可以防止意外覆盖隐藏数据，因为这将暴露隐藏加密卷的存在。在创建隐藏加密卷之前写入加密卷的数据仍然可以读取。"

#: ../components/storage/hidden.rst:-1
msgid ""
"Hidden volume description. The hidden volumes are within the free space "
"of the encrypted volume."
msgstr "隐藏加密卷描述。隐藏加密卷位于加密卷的可用空间内。"

#: ../components/storage/hidden.rst:23
msgid "Configuring hidden volumes"
msgstr "配置隐藏加密卷"

#: ../components/storage/hidden.rst:26
msgid ""
"Copy some files to the encrypted volume prior to creating the hidden "
"volume."
msgstr "在创建隐藏加密卷之前，将一些文件复制到加密卷。"

#: ../components/storage/hidden.rst:29
msgid ""
"Using a journaling filesystem may risk overwriting the hidden data. The "
"encrypted filesystem is formated to FAT32 by default, and it is "
"recommended to leave it that way when using hidden volumes."
msgstr "使用日志文件系统可能会有覆盖隐藏数据的风险。加密文件系统默认格式为 FAT32，建议在使用隐藏卷时保持这种格式。"

#: ../components/storage/hidden.rst:32
msgid "Unlock the encrypted volume using the Nitrokey App."
msgstr "使用 Nitrokey 应用程序解锁加密卷。"

#: ../components/storage/hidden.rst:33
msgid "In the menu, select \"setup hidden volume\"."
msgstr "在菜单中选择 \"设置隐藏音量\"。"

#: ../components/storage/hidden.rst
msgid "menu containing the hidden volume setup utility."
msgstr "菜单，其中包含隐藏音量设置实用程序。"

#: ../components/storage/hidden.rst:38
msgid ""
"Enter a strong passphrase twice. Unlike the encrypted volume PIN, there "
"are no limit to the number of attempts at opening hidden volumes, so the "
"strength of the passphrase is extremely important."
msgstr "输入两次强密码。与加密卷 PIN 不同，打开隐藏卷没有尝试次数限制，因此口令的强度极为重要。"

#: ../components/storage/hidden.rst:39
msgid ""
"Define the storage area to be used. Hidden volumes are stored in the free"
" areas of the encrypted volume. When creating multiple hidden volume, you"
" need to allocate a part of the free area for each volume, making sure "
"they do not overlap."
msgstr "定义要使用的存储区域。隐藏加密卷存储在加密卷的空闲区域。创建多个隐藏加密卷时，需要为每个加密卷分配一部分空闲区域，确保它们不重叠。"

#: ../components/storage/hidden.rst
msgid "Hidden volume dialog box"
msgstr "隐藏音量对话框"

#: ../components/storage/index.rst:2
msgid "Nitrokey Storage 2"
msgstr "硝基存储 2"

#: ../components/storage/linux/encrypted-mobile-storage.rst:2
#: ../components/storage/mac/encrypted-mobile-storage.rst:2
#: ../components/storage/windows/encrypted-mobile-storage.rst:2
msgid "Encrypted Mobile Storage"
msgstr "加密移动存储"

#: ../components/storage/linux/firmware-update.rst:8
#: ../components/storage/windows/firmware-update.rst:8
msgid ""
"You should backup all data from the device before upgrading, as firmware "
"upgrades may destroy all data on the device (especially coming from "
"firmware version <0.45)!"
msgstr "升级前应备份设备上的所有数据，因为固件升级可能会破坏设备上的所有数据（尤其是固件版本 <0.45 的数据）！"

#: ../components/storage/linux/firmware-update.rst:17
#, fuzzy
msgid ""
"Download the `Nitrokey App <https://www.nitrokey.com/download>`__ and the"
" program “dfu-programmer” which should be available through your package-"
"manager, e.g. ``apt-get update && apt-get install dfu-programmer`` on "
"Debian-based systems."
msgstr ""
"下载 \"Nitrokey App <https://www.nitrokey.com/download>`__\"和程序 \"dfu-"
"programmer\"，它们应可通过软件包管理器获取，例如，在基于 Debian 的系统上，可使用 \"apt-get update && "
"apt-get install dfu-programmer\"。"

#: ../components/storage/linux/firmware-update.rst:19
msgid ""
"Download the latest firmware \".hex\" file from `here "
"<https://github.com/Nitrokey/nitrokey-storage-"
"firmware/releases/latest>`__ and store it as \"firmware.hex\" in your "
"home folder. Older releases are `here <https://github.com/Nitrokey"
"/nitrokey-storage-firmware/releases>`__."
msgstr ""
"从 `here <https://github.com/Nitrokey/nitrokey-storage-"
"firmware/releases/latest>``__ 下载最新的固件\".hex \"文件，并将其作为 \"firmware.hex "
"\"存储在主文件夹中。旧版本在`这里 <https://github.com/Nitrokey/nitrokey-storage-"
"firmware/releases>`__。"

#: ../components/storage/linux/firmware-update.rst:21
#: ../components/storage/windows/firmware-update.rst:21
msgid ""
"Right click on the icon of the Nitrokey App and go to “Configure” -> "
"“Enable Firmware Update”. The default firmware password is ‘12345678’."
msgstr ""
"右键点击 Nitrokey App 图标，进入 \"Configure（配置）\"->\"Enable Firmware "
"Update（启用固件更新）\"。默认固件密码为 \"12345678\"。"

#: ../components/storage/linux/firmware-update.rst
#: ../components/storage/windows/firmware-update.rst
msgid "Enable firmware update"
msgstr "启用固件更新"

#: ../components/storage/linux/firmware-update.rst:28
#: ../components/storage/windows/firmware-update.rst:28
msgid ""
"The Nitrokey Storage is not detected by Nitrokey App anymore once update "
"mode got activated. You have to proceed with the instructions described "
"below to make it work again."
msgstr "激活更新模式后，Nitrokey 应用程序将不再检测到 Nitrokey 存储器。您必须按以下说明操作，使其恢复正常。"

#: ../components/storage/linux/firmware-update.rst:33
msgid "Open a terminal and execute:"
msgstr "打开终端并执行"

#: ../components/storage/linux/firmware-update.rst:42
msgid ""
"whereas “firmware.hex” needs to be the path and file name of the firmware"
" which you downloaded in step 2."
msgstr "而 \"firmware.hex \"需要是在步骤 2 中下载的固件的路径和文件名。"

#: ../components/storage/linux/firmware-update-manually.rst:2
#: ../components/storage/mac/firmware-update-manually.rst:2
#: ../components/storage/windows/firmware-update-manually.rst:2
msgid "Activate Update Mode Manually"
msgstr "手动激活更新模式"

#: ../components/storage/linux/hidden.rst:4
#: ../components/storage/mac/hidden.rst:4
#: ../components/storage/windows/hidden.rst:4
msgid "Using hidden volumes"
msgstr "使用隐藏加密卷"

#: ../components/storage/linux/hidden.rst:6
#: ../components/storage/mac/hidden.rst:6
#: ../components/storage/windows/hidden.rst:6
msgid "Unlock the encrypted volume."
msgstr "解锁加密卷。"

#: ../components/storage/linux/hidden.rst:8
#: ../components/storage/mac/hidden.rst:8
#: ../components/storage/windows/hidden.rst:8
msgid ""
"Select \"unlock hidden volume\" and enter any of the hidden volume's "
"passwords."
msgstr "选择 \"解锁隐藏加密卷 \"并输入任何隐藏加密卷的密码。"

#: ../components/storage/linux/hidden.rst:10
msgid ""
"If this is the first time you unlock the hidden volume, you may need to "
"create a partition on the hidden volume. You will need to open a "
"partition manager such as `GParted <https://gparted.org/>`__ and create "
"one or more partitions manually. Make sure to create the partitions on "
"the device that appeared when unlocking the hidden volume."
msgstr ""
"如果这是您第一次解锁隐藏加密卷，您可能需要在隐藏加密卷上创建一个分区。您需要打开一个分区管理器，如 `GParted "
"<https://gparted.org/>`__ 并手动创建一个或多个分区。确保在解锁隐藏加密卷时出现的设备上创建分区。"

#: ../components/storage/linux/hidden.rst:-1
msgid "Hidden volume partitioning"
msgstr "隐藏卷分区"

#: ../components/storage/linux/hidden.rst:15
#: ../components/storage/mac/hidden.rst:12
#: ../components/storage/windows/hidden.rst:19
msgid ""
"Make sure to unmount/eject all partitions on the hidden volumes before "
"locking or disconnecting the Nitrokey."
msgstr "在锁定或断开 Nitrokey 连接之前，确保卸载/弹出隐藏卷上的所有分区。"

#: ../components/storage/linux/index.rst:2
msgid "Nitrokey Storage, Linux"
msgstr "Nitrokey 存储器, Linux"

#: ../components/storage/linux/index.rst:20
#: ../components/storage/mac/index.rst:19
#: ../components/storage/windows/index.rst:25
msgid ""
"Open the About window from Nitrokey App’s menu and check if you have the "
"`latest firmware <https://github.com/Nitrokey/nitrokey-storage-"
"firmware/releases>`__ installed. If it’s not the latest, please `update "
"<firmware-update.html>`_."
msgstr ""
"从 Nitrokey App 的菜单中打开 \"关于 \"窗口，检查是否安装了 \"最新固件 "
"<https://github.com/Nitrokey/nitrokey-storage-"
"firmware/releases>`__\"。如果不是最新版本，请`更新 <firmware-update.html>`__。"

#: ../components/storage/linux/index.rst:26
#: ../components/storage/mac/index.rst:24
#: ../components/storage/windows/index.rst:28
msgid ""
"Use the Nitrokey App to change the default User PIN (default: 123456) and"
" Admin PIN (default: 12345678) to your own choices."
msgstr "使用 Nitrokey App 将默认的用户密码（默认值：123456）和管理密码（默认值：12345678）更改为您自己的选择。"

#: ../components/storage/linux/openvpn-easyrsa.rst:15
msgid ""
"To sign the certificates, we will use a `Nitrokey HSM 2 "
"<https://shop.nitrokey.com/shop/product/nk-pro-2-nitrokey-pro-2-3>`__ set"
" up as `Certificate Authority <../../hsm/linux/certificate-authority.html"
"#creating-the-intermediate-certificate-authority>`_, however this guide "
"does not cover the set up of the CA itself (it is clear and `well "
"documented here <../../hsm/linux/certificate-authority.html#sign-a"
"-server-certificate>`_)."
msgstr ""
"为了签署证书，我们将使用 \"Nitrokey HSM 2 <https://shop.nitrokey.com/shop/product/nk-"
"pro-2-nitrokey-pro-2-3>`__ 设置为 \"证书颁发机构 <.../../hsm/linux/certificate-"
"authority.html#creating-the-intermediate-certificate-"
"authority>`__，但本指南并不包括 CA 本身的设置（在 <../../hsm/linux/certificate-"
"authority.html#sign-a-server-certificate>`_ 中有详细说明）。"

#: ../components/storage/linux/openvpn-easyrsa.rst:60
msgid "Install OpenVPN"
msgstr "安装 OpenVPN"

#: ../components/storage/linux/openvpn-easyrsa.rst:119
msgid "Install Easy-RSA"
msgstr "安装 Easy-RSA"

#: ../components/storage/linux/openvpn-easyrsa.rst:139
msgid "Create a PKI for OpenVPN server"
msgstr "为 OpenVPN 服务器创建 PKI"

#: ../components/storage/linux/openvpn-easyrsa.rst:177
msgid "Create ``server.req`` and ``server.key``"
msgstr "创建 ``server.req`` 和 ``server.key``"

#: ../components/storage/linux/openvpn-easyrsa.rst:231
msgid "Sign and retrieve ``server.crt``"
msgstr "签署并检索 ``server.crt``"

#: ../components/storage/linux/openvpn-easyrsa.rst:306
msgid "Configure the OpenVPN server"
msgstr "配置 OpenVPN 服务器"

#: ../components/storage/linux/openvpn-easyrsa.rst:310
msgid "The root certificate file (CA.crt or chain.crt in our setup)"
msgstr "根证书文件（在我们的设置中为 CA.crt 或 chain.crt）"

#: ../components/storage/linux/openvpn-easyrsa.rst:311
msgid "Server certificate"
msgstr "服务器证书"

#: ../components/storage/linux/openvpn-easyrsa.rst:312
msgid "Server key"
msgstr "服务器密钥"

#: ../components/storage/linux/openvpn-easyrsa.rst:313
msgid "Diffie Hellman Parameters (optional)"
msgstr "Diffie Hellman 参数（可选）"

#: ../components/storage/linux/openvpn-easyrsa.rst:361
msgid "Start the OpenVPN service on the server"
msgstr "在服务器上启动 OpenVPN 服务"

#: ../components/storage/linux/openvpn-easyrsa.rst:382
msgid "Install OpenVPN and Easy-RSA"
msgstr "安装 OpenVPN 和 Easy-RSA"

#: ../components/storage/linux/openvpn-easyrsa.rst:390
msgid "$ sudo dnf install openvpn easy-rsa"
msgstr "$ sudo dnf install openvpn easy-rsa"

#: ../components/storage/linux/openvpn-easyrsa.rst:405
msgid "Create a PKI for the OpenVPN client"
msgstr "为 OpenVPN 客户端创建 PKI"

#: ../components/storage/linux/openvpn-easyrsa.rst:410
msgid "Create a ``client.req`` and ``client.key``"
msgstr "创建 ``client.req`` 和``client.key``。"

#: ../components/storage/linux/openvpn-easyrsa.rst:416
msgid "Sign ``client.req`` and issue the ``client.crt`` file"
msgstr "签署`client.req``并发布`client.crt``文件"

#: ../components/storage/linux/openvpn-easyrsa.rst:427
msgid "Import ``client.crt`` on the Nitrokey from the CA machine"
msgstr "从 CA 机器在 Nitrokey 上导入 ``client.crt``"

#: ../components/storage/linux/openvpn-easyrsa.rst:450
msgid "Retrieve the ``chain.crt`` file from the CA machine"
msgstr "从 CA 机器读取 ``chain.crt`` 文件"

#: ../components/storage/linux/openvpn-easyrsa.rst:455
msgid "Configure the client to interact with the Nitrokey"
msgstr "配置客户端与 Nitrokey 交互"

#: ../components/storage/linux/openvpn-easyrsa.rst:459
msgid "The root certificate file (`chain.crt`)"
msgstr "根证书文件 (`chain.crt`)"

#: ../components/storage/linux/openvpn-easyrsa.rst:460
msgid "Client certificate"
msgstr "客户证书"

#: ../components/storage/linux/openvpn-easyrsa.rst:461
msgid "Client key"
msgstr "客户密钥"

#: ../components/storage/linux/openvpn-easyrsa.rst:606
msgid "Start the OpenVPN client"
msgstr "启动 OpenVPN 客户端"

#: ../components/storage/windows/firmware-update.rst:17
msgid ""
"Download the `Nitrokey App <https://www.nitrokey.com/download>`__ and the"
" `Nitrokey Update Tool <https://github.com/Nitrokey/nitrokey-update-"
"tool/releases/latest>`__. The Nitrokey Update Tool is currently available"
" for macOS and Windows only."
msgstr ""
"下载 \"Nitrokey App <https://www.nitrokey.com/download>`__\"和 \"Nitrokey "
"Update Tool <https://github.com/Nitrokey/nitrokey-update-"
"tool/releases/latest>`__\"。Nitrokey 更新工具目前仅适用于 macOS 和 Windows。"

#: ../components/storage/windows/firmware-update.rst:19
msgid ""
"Download the latest firmware \".hex\" file from `here "
"<https://github.com/Nitrokey/nitrokey-storage-"
"firmware/releases/latest>`__. Older releases are `here "
"<https://github.com/Nitrokey/nitrokey-storage-firmware/releases>`__."
msgstr ""
"从 `此处 <https://github.com/Nitrokey/nitrokey-storage-"
"firmware/releases/latest>`__ 下载最新固件 \".hex \"文件。旧版本在`这里 "
"<https://github.com/Nitrokey/nitrokey-storage-firmware/releases>`__。"

#: ../components/storage/windows/firmware-update.rst:34
msgid ""
"If you are using Microsoft Windows Build 1809 and Nitrokey Storage "
"Firmware 0.52 or lower, you need to use another system or if this is not "
"feasible use `these instructions <firmware-update-manually.html>`_ to "
"enable the Firmware Update mode."
msgstr ""
"如果您使用的是 Microsoft Windows Build 1809 和 Nitrokey Storage 固件 0.52 "
"或更低版本，则需要使用其他系统，如果不可行，请使用 \"这些说明 <firmware-update-manually.html>`_ "
"启用固件更新模式。"

#: ../components/storage/windows/firmware-update.rst:40
msgid ""
"Start the Nitrokey Update Tool and click “Select firmware file”. Select "
"the previously downloaded firmware \".hex\" file. Click on “Update "
"firmware” to start the update process. Your device should get detected by"
" the Nitrokey App again as soon as the update is finished."
msgstr ""
"启动 Nitrokey 更新工具并点击 \"选择固件文件\"。选择先前下载的固件\".hex \"文件。点击 \"更新固件 "
"\"开始更新过程。更新完成后，Nitrokey App 将再次检测到您的设备。"

#: ../components/storage/windows/firmware-update.rst
msgid "Nitrokey Update Tool"
msgstr "Nitrokey 更新工具"

#: ../components/storage/mac/hidden.rst:10
msgid ""
"If this is the first time you unlock the hidden volume, you may need to "
"create a partition on the hidden volume. You will need to use `Disk "
"Utility <https://support.apple.com/en-gb/guide/disk-"
"utility/dskutl14027/mac>`__. Make sure to create the partitions on the "
"device that appeared when unlocking the hidden volume."
msgstr ""
"如果这是您第一次解锁隐藏加密卷，您可能需要在隐藏加密卷上创建一个分区。您需要使用 `Disk Utility "
"<https://support.apple.com/en-gb/guide/disk-"
"utility/dskutl14027/mac>`__。确保在解锁隐藏加密卷时出现的设备上创建分区。"

#: ../components/storage/mac/index.rst:2
msgid "Nitrokey Storage, Mac"
msgstr "Nitrokey 存储器, Mac"

#: ../components/storage/mac/index.rst:13
msgid ""
"Important: Once you plug in the Nitrokey, your computer will start the "
"Keyboard Setup Assistant. **Don’t run through this assistant but exit it "
"right away.**"
msgstr "重要：插入 Nitrokey 后，电脑将启动键盘设置助手。**不要运行该助手，请立即退出。"

#: ../components/storage/mac/index.rst:16
msgid ""
"Download and start the `Nitrokey App "
"<https://www.nitrokey.com/download>`__. Perhaps you want to store it on "
"the unencrypted partition of your Nitrokey Storage"
msgstr ""
"下载并启动 \"Nitrokey App <https://www.nitrokey.com/download>`__\"。也许你想把它存储在 "
"Nitrokey 存储的未加密分区中"

#: ../components/storage/windows/hidden.rst:10
msgid ""
"If this is the first time you unlock the hidden volume, you may need to "
"create a partition on the hidden volume. In this case, Windows will "
"prompt you to do so. You can then format the hidden volume using FAT32, "
"for compatibility with most operating systems."
msgstr ""
"如果这是您第一次解锁隐藏加密卷，您可能需要在隐藏加密卷上创建一个分区。在这种情况下，Windows 会提示您创建分区。然后，您可以使用 FAT32"
" 格式化隐藏加密卷，以便与大多数操作系统兼容。"

#: ../components/storage/windows/hidden.rst:-1
msgid "Windows formating prompt"
msgstr "Windows 格式化提示"

#: ../components/storage/windows/hidden.rst:-1
msgid "Windows formating tool"
msgstr "Windows 格式化工具"

#: ../components/storage/windows/index.rst:2
msgid "Nitrokey Storage, Windows"
msgstr "Nitrokey 存储器, 窗口"

#: ../components/storage/windows/index.rst:19
msgid ""
"Download and start the `Nitrokey App "
"<https://www.nitrokey.com/download>`__. Perhaps you want to store it on "
"the unencrypted partition of your Nitrokey Storage. There won’t open a "
"window, but an icon appears in the system tray (see screenshot below). "
"Please right-click on this icon to use all the options of the App."
msgstr ""
"下载并启动 \"Nitrokey App <https://www.nitrokey.com/download>`__\"。也许你想把它存储在 "
"Nitrokey 存储器的未加密分区中。不会打开窗口，但系统托盘中会出现一个图标（见下面的截图）。请右击该图标以使用应用程序的所有选项。"

#: ../components/syntax.rst:4
msgid "Nitrokey Documentation - Syntax"
msgstr "Nitrokey 文档 - 语法"

#: ../components/syntax.rst:9
msgid "Code Blocks Syntax Highlighting"
msgstr "代码块语法高亮"

#: ../components/syntax.rst:11
msgid ""
"Syntax Highlighting is disabled by default. To enable it for a specific "
"code snippet use the following:"
msgstr "语法高亮默认为禁用。要为特定代码段启用语法高亮，请使用以下命令："

#: ../components/syntax.rst:19
msgid "H2 Heading"
msgstr "H2 标题"

#: ../components/syntax.rst:22
msgid "Some text with ``inline.code();``"
msgstr "使用``inline.code();``的一些文本"

#: ../components/syntax.rst:24
msgid "This is a bulleted list."
msgstr "这是一个列表。"

#: ../components/syntax.rst:25
msgid "It has two items, the second item uses two lines."
msgstr "它有两个项目，第二个项目使用了两行。"

#: ../components/syntax.rst:28 ../components/syntax.rst:33
msgid "This is a numbered list."
msgstr "这是一份编号清单。"

#: ../components/syntax.rst:29 ../components/syntax.rst:34
msgid "It has two items too."
msgstr "它也有两个项目。"

#: ../components/syntax.rst:31
msgid "Normal text again."
msgstr "又是正常文本。"

#: ../components/syntax.rst:36
msgid "this is"
msgstr "这是"

#: ../components/syntax.rst:37
msgid "a list"
msgstr "清单"

#: ../components/syntax.rst:39
msgid "with a nested list"
msgstr "嵌套列表"

#: ../components/syntax.rst:40
msgid "and some subitems"
msgstr "和一些分项"

#: ../components/syntax.rst:42
msgid "and here the parent list continues"
msgstr "家长名单继续"

#: ../components/syntax.rst:44
msgid "These lines are"
msgstr "这些线路是"

#: ../components/syntax.rst:45
msgid "broken exactly like in"
msgstr "就像"

#: ../components/syntax.rst:46
msgid "the source file."
msgstr "源文件。"

#: ../components/syntax.rst:49
msgid "H3 Heading"
msgstr "H3 标题"

#: ../components/syntax.rst:52
msgid "Only the following message boxes should be used:"
msgstr "只能使用以下信息框："

#: ../components/syntax.rst:56
msgid "Warning text."
msgstr "警告文字。"

#: ../components/syntax.rst:60
msgid "Note text."
msgstr "注释文本。"

#: ../components/syntax.rst:64
msgid "Important text."
msgstr "重要文本。"

#: ../components/syntax.rst:68
msgid "Tip text."
msgstr "提示文字。"

#: ../components/syntax.rst:77
msgid "Grid Table"
msgstr "网格表"

#: ../components/syntax.rst:80
msgid "Header 1"
msgstr "页眉 1"

#: ../components/syntax.rst:80
msgid "Header 2"
msgstr "页眉 2"

#: ../components/syntax.rst:80
msgid "Header 3"
msgstr "页眉 3"

#: ../components/syntax.rst:82
msgid "body row 1"
msgstr "身体第 1 行"

#: ../components/syntax.rst:82
msgid "column 2"
msgstr "第 2 栏"

#: ../components/syntax.rst:82
msgid "column 3"
msgstr "第 3 栏"

#: ../components/syntax.rst:84
msgid "body row 2"
msgstr "身体第 2 行"

#: ../components/syntax.rst:84
msgid "Cells may span columns."
msgstr "单元格可跨列。"

#: ../components/syntax.rst:86
msgid "body row 3"
msgstr "第 3 行"

#: ../components/syntax.rst:86
msgid "Cells may span rows."
msgstr "单元格可以跨行。"

#: ../components/syntax.rst:86
msgid "Cells"
msgstr "细胞"

#: ../components/syntax.rst:87
msgid "contain"
msgstr "蕴含"

#: ../components/syntax.rst:88
msgid "blocks."
msgstr "块。"

#: ../components/syntax.rst:88
msgid "body row 4"
msgstr "第 4 行"

#: ../components/syntax.rst:92
msgid "Simple Table"
msgstr "简易餐桌"

#: ../components/syntax.rst:95
msgid "Inputs"
msgstr "输入"

#: ../components/syntax.rst:95
msgid "Output"
msgstr "输出"

#: ../components/syntax.rst:97
msgid "A"
msgstr "A"

#: ../components/syntax.rst:97
msgid "B"
msgstr "B"

#: ../components/syntax.rst:97
msgid "A or B"
msgstr "A 或 B"

#: ../components/syntax.rst:99 ../components/syntax.rst:100
#: ../components/syntax.rst:101
msgid "False"
msgstr "假的"

#: ../components/syntax.rst:100 ../components/syntax.rst:101
#: ../components/syntax.rst:102
msgid "True"
msgstr "正确"

#: ../components/syntax.rst:105
msgid ""
"This is a text that needs to be translated automatically. This is another"
" Line to be translated."
msgstr "这是需要自动翻译的文本。这是另一行需要翻译的文字。"

#: ../components/syntax.rst:108
msgid ""
"This line is one of the tests for the automated translation workflow with"
" weblate."
msgstr "这一行是对 weblate 自动翻译工作流程的测试之一。"

#: ../components/syntax.rst:109
msgid "Adding this text should trigger the complete workflow of translation."
msgstr "添加此文本应触发完整的翻译工作流程。"

#: ../components/syntax.rst:111
msgid ""
"This is `a Link  <https://f-droid.org/F-Droid.apk>`_ with the definition "
"of the url inline."
msgstr "这是`链接 <https://f-droid.org/F-Droid.apk>`_ ，内嵌 url 的定义。"

#: ../components/syntax.rst:113
msgid ""
"This is another thest for `a URL  <https://f-droid.org/F-Droid.apk>`_ to "
"test translation."
msgstr "这是另一个用于测试翻译的 URL <https://f-droid.org/F-Droid.apk>`_ 故事。"

#: ../components/syntax.rst:116
msgid "This is a plain link https://foobar.bas/slug1/slug2"
msgstr "这是一个普通链接 https://foobar.bas/slug1/slug2"

#: ../components/syntax.rst:118
msgid ""
"This line contains the product name Nitrokey Start an should not be "
"altered by the translation."
msgstr "该行包含产品名称 Nitrokey Start，翻译时不应更改。"

#: ../components/syntax.rst:121
msgid ""
"This command automatically inserts the title of an internal doc page you "
"link to ::doc:: /link/to/doc"
msgstr "此命令会自动插入您链接到的内部文档页面的标题 ::doc:：/link/to/doc"

#: ../components/syntax.rst:125
msgid "Mark cropped Output"
msgstr "标记裁剪输出"

#: ../components/to-be-integrated.rst:1
msgid "# pro"
msgstr "# pro"

#: ../components/to-be-integrated.rst:5
msgid "PKCS#11 Driver"
msgstr "PKCS#11 驱动程序"

#: ../components/to-be-integrated.rst:7
msgid ""
"If you want to use S/MIME email encryption with Thunderbird, to use "
"TrueCrypt/VeraCrypt, certificate-based SSL authentication with Firefox, "
"PuTTY/KiTTY, OpenSSH, OpenSSL, or any other PKCS#11 compatible software, "
"you should install OpenSC."
msgstr ""
"如果要在 Thunderbird 中使用 S/MIME 电子邮件加密，在 Firefox、PuTTY/KiTTY、OpenSSH、OpenSSL "
"或任何其他 PKCS#11 兼容软件中使用 TrueCrypt/VeraCrypt、基于证书的 SSL 身份验证，则应安装 OpenSC。"

#: ../components/to-be-integrated.rst:9
msgid ""
"Note that a Nitrokey initialized with OpenSC doesn't work with "
"GnuPG/OpenPGP. But the other way around works fine. If you want to use "
"Nitrokey with both GnuPG and PKCS#11, generate the keys with GnuPG."
msgstr ""
"请注意，用 OpenSC 初始化的 Nitrokey 无法使用 GnuPG/OpenPGP。反之则可以。如果你想在 GnuPG 和 PKCS#11"
" 中使用 Nitrokey，请使用 GnuPG 生成密钥。"

#: ../components/to-be-integrated.rst:11
msgid ""
"Don't use PKCS#11 in parallel with GnuPG because both may interfere and "
"unexpected issues may result. (There is another promising project scd-"
"pkcs11 in development which may overcome this limitation eventually. "
"Currently it's limit to the authentication certificate and not widely "
"tested yet.)"
msgstr ""
"不要同时使用 PKCS#11 和 GnuPG，因为两者可能会相互干扰，导致意想不到的问题。(另一个很有前途的项目 scd-pkcs11 "
"正在开发中，最终可能会克服这一限制。目前，该项目仅限于认证证书，尚未经过广泛测试）。"

#: ../components/to-be-integrated.rst:13
msgid ""
"Instructions, how to create a valid X.509 certificate with Nitrokey (1, "
"2, 3). These are general instructions how to use X.509 certificates. "
"Alternative PKCS#11 Driver:"
msgstr ""
"如何使用 Nitrokey 创建有效 X.509 证书的说明 (1, 2, 3)。这些是如何使用 X.509 证书的一般说明。替代 PKCS#11"
" 驱动程序："

#: ../components/to-be-integrated.rst:16
msgid "The recommended PKCS#11 driver is OpenSC."
msgstr "推荐使用的 PKCS#11 驱动程序是 OpenSC。"

#: ../components/to-be-integrated.rst:18
msgid "Windows Mini Driver"
msgstr "Windows 微型驱动程序"

#: ../components/to-be-integrated.rst:20
msgid ""
"This Mini Driver allows to integrate Nitrokey with Window's certificate "
"store. Subsequently all applications which use this certificate storage "
"can be used with Nitrokey (e.g. Internet Explorer, Google Chrome web "
"browser, Windows Login). To install the driver, you may need to allow the"
" installation of unsigned drivers first. Aloaha"
msgstr ""
"该迷你驱动程序可将 Nitrokey 与 Window 的证书存储空间整合在一起。随后，所有使用该证书存储空间的应用程序都可以与 Nitrokey"
" 一起使用（如 Internet Explorer、谷歌 Chrome 浏览器、Windows "
"登录）。要安装驱动程序，可能需要先允许安装未签名的驱动程序。阿罗哈"

#: ../components/to-be-integrated.rst:23
msgid ""
"All applications of Aloaha are working with the Nitrokey. This includes a"
" middleware to integrate Nitrokey with other PKCS#11 based applications "
"and with Windows as well as applications to encrypt and sign PDFs and the"
" hard disk."
msgstr ""
"Aloaha 的所有应用程序都能使用 Nitrokey。这包括将 Nitrokey 与其他基于 PKCS#11 的应用程序和 Windows "
"集成的中间件，以及对 PDF 和硬盘进行加密和签名的应用程序。"

#: ../components/to-be-integrated.rst:25
msgid "Alternative PKCS#11 Driver:"
msgstr "替代 PKCS#11 驱动程序"

#: ../components/to-be-integrated.rst:27
msgid ""
"The recommended PKCS#11 driver is OpenSC. Alternatively, you could use "
"Peter Koch's PKCS#11 driver which has the following limitations:"
msgstr "推荐使用的 PKCS#11 驱动程序是 OpenSC。或者，你也可以使用 Peter Koch 的 PKCS#11 驱动程序，它有以下限制："

#: ../components/to-be-integrated.rst:29
msgid ""
"No import of existing X.509 certificates. (Instead, keys have to be "
"generated on the Nitrokey) The Linux version does not allow to generate "
"keys. Modification of the password/PIN under Linux is not possible."
msgstr "不能导入现有的 X.509 证书。(Linux 版本不允许生成密钥。无法在 Linux 下修改密码/PIN。"

#: ../components/to-be-integrated.rst:33
msgid "p11-glue"
msgstr "p11-glue"

#: ../components/to-be-integrated.rst:35
msgid ""
"P11-glue uses PKCS#11 as glue between crypto libraries and security "
"applications on the open source desktop. Articles in German"
msgstr "P11-glue 使用 PKCS#11 作为开源桌面上加密库和安全应用程序之间的粘合剂。德文文章"

#: ../components/to-be-integrated.rst:38
msgid ""
"Eine allgemeine und gut verständliche Einführung bietet der Artikel "
"Magisches Leuchten im Linux Magazin 2010/12. Eine umfangreiche Anleitung "
"gibt es auf Pro-Linux. Einen ausfuehrlichen Erfahrungsbericht unter "
"CentOS."
msgstr ""
"Linux Magazin 2010/12 中的 Magisches Leuchten 一文提供了全面而准确的介绍。在 Pro-Linux "
"上可以找到详细的指南。关于 CentOS 的丰富经验。"

#: ../components/to-be-integrated.rst:44
msgid "**Q:** How can I login into Windows?"
msgstr "**问：** 如何登录 Windows？"

#: ../components/to-be-integrated.rst:44
msgid ""
"To access Nitrokey devices read-only, download and install this Mini "
"Driver (CSP). If you are using Windows Server you may need to disable the"
" driver signature verification before being able to install the driver. "
"Note that the Mini Driver for Nitrokey Pro may not work yet for write "
"mode."
msgstr ""
"要以只读方式访问 Nitrokey 设备，请下载并安装此迷你驱动程序 (CSP)。如果使用的是 Windows "
"Server，则可能需要在安装驱动程序前禁用驱动程序签名验证。请注意，Nitrokey Pro 的迷你驱动程序可能还不能用于写入模式。"

#: ../components/to-be-integrated.rst:46
msgid "There exist different ways to use a Nitrokey to logon on Windows:"
msgstr "使用 Nitrokey 登录 Windows 有多种方法："

#: ../components/to-be-integrated.rst:48
msgid ""
"Login on stand alone Windows computers based on EIDAuthenticate. "
"Alternatively install OpenSC and use Aloaha Smart Login's PKCS#11 "
"Credentials. Login on Windows domain computers using MS Active Directory "
"based OpenPGP-CSP minidriver for Nitrokey Storage 2 Nitrokey Pro 2 Login "
"on Windows domain computers using MS Active Directory based on Smart "
"Policy for other Nitrokey devices."
msgstr ""
"在基于 EIDAuthenticate 的独立 Windows 计算机上登录。或者安装 OpenSC 并使用 Aloaha Smart Login"
" 的 PKCS#11 凭证。使用基于 MS Active Directory 的 OpenPGP-CSP 迷你驱动程序在 Windows "
"域计算机上登录 Nitrokey Storage 2 Nitrokey Pro 2 使用基于智能策略的 MS Active Directory 在"
" Windows 域计算机上登录其他 Nitrokey 设备。"

#: ../components/to-be-integrated.rst:53
msgid "**Q:** How can I login into Linux? Linux Login with PAM"
msgstr "**问：** 如何登录 Linux？使用 PAM 登录 Linux"

#: ../components/to-be-integrated.rst:56
msgid "You have two options: pam_p11 or Poldi."
msgstr "您有两个选择：pam_p11 或 Poldi。"

#: ../components/to-be-integrated.rst:58
msgid ""
"The solution with pam_p11 is more difficult to achieve and is based on "
"S/MIME certificates. Please have a look at the documentation for more "
"information."
msgstr "使用 pam_p11 的解决方案较难实现，它基于 S/MIME 证书。更多信息请参阅文档。"

#: ../components/to-be-integrated.rst:60
msgid ""
"Poldi 0.4.1 works flawlessly with Nitrokey for PAM authentication with "
"RSA keys (see Troubleshooting for information on ECC keys). Besides the "
"installation of poldi (e.g. 'sudo apt-get install libpam-poldi' on "
"Ubuntu) the following steps are needed to get it working."
msgstr ""
"Poldi 0.4.1 可与 Nitrokey 完美配合，使用 RSA 密钥进行 PAM 验证（有关 ECC "
"密钥的信息，请参阅故障排除）。除了安装 poldi（例如在 Ubuntu 上使用 \"sudo apt-get install libpam-"
"poldi\"），还需要以下步骤才能使其正常工作。"

#: ../components/to-be-integrated.rst:64
msgid ""
"At first you need to find out the \"Application ID\" of your Nitrokey. "
"You can use \"gpg --card-status | grep Application\" to find out what's "
"yours. It looks like 'D00600012401020000000000xxxxxxxx' or similiar. Now "
"you have to add a line to /etc/poldi/localdb/users which contains the "
"following information"
msgstr ""
"首先，你需要找出 Nitrokey 的 \"应用程序 ID\"。你可以使用 \"gpg --card-status | grep "
"Application \"找出你的应用程序 ID。它看起来像 \"D00600012401020000000000xxxxxxxx "
"\"或类似的。现在，你必须在 /etc/poldi/localdb/users 中添加一行，其中包含以下信息"

#: ../components/to-be-integrated.rst:66
msgid "<YourApplicationID> <YourUsername>"
msgstr "<您的应用程序 ID> <您的用户名"

#: ../components/to-be-integrated.rst:68
msgid ""
"This could look like 'D00600012401020000000000xxxxxxxx nitrokeyuser'. Now"
" dump the public key from the Nitrokey into poldi local db:"
msgstr ""
"这看起来就像 \"D00600012401020000000000xxxxxxxx nitrokeyuser\"。现在将 Nitrokey "
"中的公钥转入 poldi 本地数据库："

#: ../components/to-be-integrated.rst:70
msgid ""
"sudo sh -c 'gpg-connect-agent \"/datafile "
"/etc/poldi/localdb/keys/<YourApplicationID>\" \"SCD READKEY --advanced "
"OPENPGP.3\" /bye'"
msgstr ""
"sudo sh -c 'gpg-connect-agent \"/datafile "
"/etc/poldi/localdb/keys/<YourApplicationID>\" \"SCD READKEY --advanced "
"OPENPGP.3\" /bye' /bye"

#: ../components/to-be-integrated.rst:74
msgid ""
"Then you have to configure PAM. Just add \"auth sufficient pam_poldi.so\""
" to pam configuration files according to your needs:"
msgstr "然后配置 PAM。只需根据需要在 PAM 配置文件中添加 \"auth sufficient pam_poldi.so \"即可："

#: ../components/to-be-integrated.rst:76
msgid ""
"/etc/pam.d/common-auth for graphical user login /etc/pam.d/login for "
"console login /etc/pam.d/sudo for sudo authentication /etc/pam.d/gnome-"
"screensaver for login back from a locked screen etc."
msgstr ""
"/etc/pam.d/common-auth 用于图形用户登录 /etc/pam.d/login 用于控制台登录 /etc/pam.d/sudo "
"用于 sudo 身份验证 /etc/pam.d/gnome-screensaver 用于从锁定屏幕重新登录等。"

#: ../components/to-be-integrated.rst:82
msgid ""
"Note: Pam is dangerous to play around with, so make sure you have a way "
"of accessing the machine if you break authentication completely. Remember"
" that booting into rescue mode from Grub requires a root password, so "
"keep that or a live CD which can read your filesystems to hand."
msgstr ""
"注意：玩 Pam 是很危险的，所以如果你完全破坏了身份验证，请确保你有办法访问机器。请记住，从 Grub 启动到应急模式需要 root "
"密码，因此请随身携带 root 密码或可读取文件系统的 Live CD。"

#: ../components/to-be-integrated.rst:84
msgid ""
"Here you find further instructions (in German, partially outdated). "
"Troubleshooting"
msgstr "这里有更多说明（德语，部分内容已过时）。故障排除"

#: ../components/to-be-integrated.rst:87
msgid ""
"If you get an error similar to 'ERR 100663414 Invalid ID <SCD>' you "
"should try instead"
msgstr "如果出现类似于 \"ERR 100663414 Invalid ID <SCD>\"的错误，您应该改用以下方法"

#: ../components/to-be-integrated.rst:89
msgid ""
"poldi-ctrl -k > <YourApplicationID>; sudo mv <YourApplicationID> "
"/etc/poldi/localdb/keys"
msgstr ""
"poldi-ctrl -k > <YourApplicationID>; sudo mv <YourApplicationID> "
"/etc/poldi/localdb/keys"

#: ../components/to-be-integrated.rst:91
msgid ""
"Please be aware that you have to insert your Application ID in the line "
"above with the one of your stick! ECC Keys Unfortunately, poldi has no "
"support for ECC keys yet. But there is a patch for ECC keys used with "
"Nitrokey Start. This is already included in the master branch of the "
"poldi development repository and thus will be released in a newer version"
" eventually. In the meantime the only option is to build poldi from "
"source."
msgstr ""
"请注意，您必须在上面一行中插入您的应用程序 ID 和您的软件棒的 ID！ECC 密钥 遗憾的是，poldi 尚不支持 ECC 密钥。但有一个用于 "
"Nitrokey Start 的 ECC 密钥补丁。该补丁已包含在 poldi "
"开发库的主分支中，因此最终会在新版本中发布。在此期间，唯一的选择是从源代码构建 poldi。"

#: ../components/to-be-integrated.rst:97
msgid "**Q:** How can I login with One Time Passwords?"
msgstr "**问：** 如何使用一次性密码登录？"

#: ../components/to-be-integrated.rst:97
msgid ""
"One-Time-Passwords (OTP) are used for secure login to websites and local "
"applications."
msgstr "一次性密码 (OTP) 用于安全登录网站和本地应用程序。"

#: ../components/to-be-integrated.rst:99
msgid "Two OTP modes exist:"
msgstr "有两种 OTP 模式："

#: ../components/to-be-integrated.rst:101
msgid ""
"Time-based One-time Passwords (TOTP) is widely used for websites. If "
"unsure, assume you are using this mode. HMAC-based One-time Passwords "
"(HOTP) is used for local applications and computer logins."
msgstr ""
"基于时间的一次性密码 (TOTP) 广泛用于网站。如果不确定，请假设您正在使用这种模式。基于 HMAC 的一次性密码 (HOTP) "
"用于本地应用程序和计算机登录。"

#: ../components/to-be-integrated.rst:104
msgid ""
"To use One-Time-Passwords with your Nitrokey Pro or Nitrokey Storage, you"
" need to download and install the latest Nitrokey App. Time-based One-"
"time Passwords - TOTP"
msgstr ""
"要在 Nitrokey Pro 或 Nitrokey Storage 中使用一次性密码，您需要下载并安装最新的 Nitrokey "
"应用程序。基于时间的一次性密码 - TOTP"

#: ../components/to-be-integrated.rst:107
msgid ""
"For login to a Google account. For login to a Microsoft account. For "
"login to a Nextcloud account. Generic instructions for all other "
"services."
msgstr "用于登录 Google 帐户。用于登录 Microsoft 帐户。用于登录 Nextcloud 帐户。适用于所有其他服务的通用说明。"

#: ../components/to-be-integrated.rst:112
msgid "**Q:** How can I use the Nitrokey Pro with Android?"
msgstr "**问：** 如何在安卓系统中使用 Nitrokey Pro？"

#: ../components/to-be-integrated.rst:114
msgid ""
"It is possible to use the Nitrokey on an Android devices in combination "
"with OpenKeychain. This enables one to encrypt/decrypt E-Mails or files "
"via OpenPGP."
msgstr "可以在安卓设备上将 Nitrokey 与 OpenKeychain 结合使用。这样就可以通过 OpenPGP 加密/解密电子邮件或文件。"

#: ../components/to-be-integrated.rst:116
msgid ""
"Cotech provides Android software with commercial support. Please have a "
"look there, if you like. The following instructions are based on "
"OpenKeychain."
msgstr "Cotech 提供具有商业支持的 Android 软件。如果您喜欢，请到那里看看。以下说明基于 OpenKeychain。"

#: ../components/to-be-integrated.rst:118
msgid ""
"Tested with Nitrokey Start, Pro and Storage in combination with Android "
"7.1, OpenKeychain 4.5 and K9Mail 5.207. Prerequisites"
msgstr ""
"使用 Nitrokey Start、Pro 和 Storage 以及 Android 7.1、OpenKeychain 4.5 和 K9Mail "
"5.207 进行测试。前提条件"

#: ../components/to-be-integrated.rst:121
msgid ""
"Android phone which is capable of USB OTG USB OTG cable to connect the "
"Nitrokey with your phone OpenKeychain installed on Device Public key "
"saved on the device or uploaded on a keyserver"
msgstr ""
"具有 USB OTG 功能的安卓手机 USB OTG 连接线，用于将 Nitrokey 与手机连接 在设备上安装 OpenKeychain "
"在设备上保存或上传到钥匙服务器上的公开密钥"

#: ../components/to-be-integrated.rst:126
msgid "First steps"
msgstr "第一步"

#: ../components/to-be-integrated.rst:128
msgid ""
"To import the keys of the Nitrokey you should at first start the "
"OpenKeychain app. Then insert the Nitrokey with the USB OTG cable. "
"OpenKeychain starts a dialog to use the Nitrokey (you may have to accept "
"the usage of the key with OpenKeychain first). Now you can choose between"
" looking for public key on a keyserver or choosing the public key from "
"storage. After the public key got imported you have to tap on 'connect "
"key' to import a reference to the private key of the Nitrokey. That’s "
"basically it."
msgstr ""
"要导入 Nitrokey 的密钥，首先要启动 OpenKeychain 应用程序。然后用 USB OTG 线缆插入 "
"Nitrokey。OpenKeychain 会启动一个对话框来使用 Nitrokey（您可能需要先接受 OpenKeychain "
"对密钥的使用）。现在，你可以选择在密钥服务器上查找公钥或从存储器中选择公钥。导入公钥后，你必须点击 \"连接密钥\"，以导入 Nitrokey "
"私钥的引用。基本上就是这样了。"

#: ../components/to-be-integrated.rst:130
msgid ""
"In the case that no there are no keys on the Nitrokey yet, OpenKeychain "
"will help with the creation of a new key pair instead. Usage"
msgstr "如果 Nitrokey 上还没有密钥，OpenKeychain 会帮助创建新的密钥对。使用方法"

#: ../components/to-be-integrated.rst:133
msgid ""
"You can use all functions of OpenKeychain and Apps which make use of "
"OpenKeychain. Therefore you can just encrypt/decrypt messages or files by"
" hand using the app directly or for example you combine K9Mail with "
"OpenKeychain to decrypt your mails automatically. It is important to "
"choose the right key in the K9Mail account settings first."
msgstr ""
"您可以使用 OpenKeychain 和使用 OpenKeychain "
"的应用程序的所有功能。因此，您可以直接使用应用程序手动加密/解密邮件或文件，或者将 K9Mail 与 OpenKeychain "
"结合使用，自动解密邮件。重要的是，首先要在 K9Mail 账户设置中选择正确的密钥。"

#: ../components/to-be-integrated.rst:135
msgid ""
"Note that you may have to enable the on-screen keyboard in the android "
"settings to type the PIN as the system recognizes the Nitrokey as a "
"physical keyboard and therefore tries to hide the on-screen keyboard. Go "
"to 'Language and Input' > 'Current Keyboard' > 'Hardware show input "
"method'."
msgstr ""
"请注意，您可能必须在安卓设置中启用屏幕键盘才能输入 PIN 码，因为系统会将 Nitrokey 识别为实体键盘，因此会尝试隐藏屏幕键盘。转到 "
"\"语言和输入\">\"当前键盘\">\"硬件显示输入法\"。"

#: ../components/to-be-integrated.rst:138
msgid "**Q:** How can I use the Nitrokey Pro with Iphone?"
msgstr "**问：** 如何在 Iphone 上使用 Nitrokey Pro？"

#: ../components/to-be-integrated.rst:139
msgid "Currently it is not possible"
msgstr "目前无法"

#: ../components/to-be-integrated.rst:141
msgid "**Q:** How can I use the Nitrokey Pro with Ubuntu Phone?"
msgstr "**问：** 如何在 Ubuntu Phone 上使用 Nitrokey Pro？"

#: ../components/to-be-integrated.rst:141
msgid ""
"There are instructions on gnupg.org about how to use a OpenPGP Card on a "
"UbuntuPhone which should work for the Nitrokey Start, Pro and Storage."
msgstr ""
"gnupg.org 上有关于如何在 UbuntuPhone 上使用 OpenPGP 卡的说明，它应该适用于 Nitrokey Start、Pro "
"和 Storage。"

#: ../components/to-be-integrated.rst:143
msgid ""
"**Q:** How can I do Email encryption? There are two widely used standards"
" for email encryption. While OpenPGP/GnuPG is popular among individuals, "
"S/MIME/X.509 is mostly used by enterprises. If you are in doubt which one"
" to choose, you should use OpenPGP."
msgstr ""
"**问：** 如何进行电子邮件加密？目前有两种广泛使用的电子邮件加密标准。OpenPGP/GnuPG 在个人中很流行，而 S/MIME/X.509"
" 则主要用于企业。如果您不知道该选择哪一种，应使用 OpenPGP。"

#: ../components/to-be-integrated.rst:146
msgid ""
"instructions for using the OpenPGP standard with the Nitrokey "
"instructions for using S/MIME with the Nitrokey. Note: SMIME certificates"
" can be purchased cheaply from CERTUM and SSLTrust."
msgstr ""
"在 Nitrokey 中使用 OpenPGP 标准的说明 在 Nitrokey 中使用 S/MIME 的说明。注：SMIME 证书可从 "
"CERTUM 和 SSLTrust 购买，价格便宜。"

#: ../components/to-be-integrated.rst:149
msgid ""
"Please note, that it is currently advised to use either OpenPGP or S/MIME"
" encryption, but not both with the Nitrokey."
msgstr "请注意，目前建议使用 OpenPGP 或 S/MIME 加密，但不能同时使用 Nitrokey。"

#: ../components/to-be-integrated.rst:151
msgid "To use a Nitrokey Storage with Thunderbird 78+, you can try this tutorial."
msgstr "要在 Thunderbird 78+ 中使用 Nitrokey 存储器，可以试试本教程。"

#: ../components/to-be-integrated.rst:153
msgid "**Q:** How can I do Hard Disk Encryption?"
msgstr "**问：** 如何进行硬盘加密？"

#: ../components/to-be-integrated.rst:156
msgid ""
"For: Nitrokey Pro, Nitrokey Storage, Nitrokey Start VeraCrypt (formerly "
"TrueCrypt)"
msgstr "适用于Nitrokey Pro、Nitrokey Storage、Nitrokey Start VeraCrypt（前身为 TrueCrypt）"

#: ../components/to-be-integrated.rst:159
msgid ""
"VeraCrypt is a free and Open Source disk encryption software for Windows,"
" macOS, and GNU/Linux. It is the successor of TrueCrypt and thus "
"recommended, although the following instructions should apply to "
"TrueCrypt as well. Follow these steps to use the program with Nitrokey "
"Storage or Pro:"
msgstr ""
"VeraCrypt 是一款免费的开源磁盘加密软件，适用于 Windows、macOS 和 GNU/Linux。它是 TrueCrypt "
"的继承者，因此值得推荐，不过以下说明也适用于 TrueCrypt。请按照以下步骤将该程序与 Nitrokey Storage 或 Pro "
"一起使用："

#: ../components/to-be-integrated.rst:161
#: ../components/to-be-integrated.rst:673
msgid ""
"Install OpenSC Choose the library in VeraCrypt under "
"Settings>Preferences>Security Token (location depends on system, e.g. "
"/usr/lib/opensc). Generate a 64 Byte key file via Tools>Keyfile "
"Generator. Now you should be able to import the generated key file via "
"Tools>Manage Security Token Keyfiles. You should choose the first Slot "
"([0] User PIN). The keyfile is then stored on the Nitrokey as 'Private "
"Data Object 1' (PrivDO1). After this you should wipe the original keyfile"
" on your Computer securely! Now you can use VeraCrypt with the Nitrokey: "
"Create a container, choose the keyfile on the device as an alternative to"
" a password."
msgstr ""
"安装 OpenSC 在 VeraCrypt 的 \"设置\">\"偏好设置\">\"安全令牌 \"下选择库（位置取决于系统，例如 "
"/usr/lib/opensc）。通过 \"工具\">\"密钥文件生成器 \"生成 64 字节密钥文件。现在，你可以通过 "
"\"工具\">\"管理安全令牌密钥文件 \"导入生成的密钥文件。应选择第一个插槽（[0] 用户 PIN）。密钥文件将作为 \"私人数据对象 "
"1\"（PrivDO1）存储在 Nitrokey 中。之后，您应将计算机中的原始密钥文件安全清除！现在您可以在 Nitrokey 上使用 "
"VeraCrypt：创建一个容器，选择设备上的密钥文件作为密码的替代。"

#: ../components/to-be-integrated.rst:168
msgid ""
"Security Consideration: Please note that VeraCrypt doesn't make use of "
"the full security which Nitrokey (and smart cards in general) offer. "
"Instead it stores a keyfile on the Nitrokey which theoretically could be "
"stolen by a computer virus after the user enters the PIN."
msgstr ""
"安全考虑：请注意，VeraCrypt 并没有利用 Nitrokey（以及一般智能卡）提供的全部安全性。相反，它在 Nitrokey "
"上存储了一个密钥文件，理论上用户输入 PIN 码后，该密钥文件可能会被计算机病毒窃取。"

#: ../components/to-be-integrated.rst:170
msgid ""
"Note: Aloaha Crypt is based on TrueCrypt/VeraCrypt but without the "
"described security limitation."
msgstr "注：Aloaha Crypt 基于 TrueCrypt/VeraCrypt，但没有所述的安全限制。"

#: ../components/to-be-integrated.rst:173
msgid ""
"Hard Disk Encryption on Linux, Based on LUKS/dm-crypt Here are excellent "
"instructions how to use Nitrokey to encrypt your hard disk under Linux "
"with LUKS/dm-crypt. Other instruction."
msgstr ""
"基于 LUKS/dm-crypt 的 Linux 硬盘加密 这里是如何使用 Nitrokey 在 Linux 下用 LUKS/dm-crypt "
"加密硬盘的精彩说明。其他说明。"

#: ../components/to-be-integrated.rst:176
msgid ""
"Purism has created a simple script to add the Nitrokey/LibremKey as a way"
" to unlock LUKS partitions (not tested by Nitrokey yet)."
msgstr "Purism 创建了一个简单的脚本，用于添加 Nitrokey/LibremKey 作为解锁 LUKS 分区的方法（Nitrokey 尚未测试）。"

#: ../components/to-be-integrated.rst:178
msgid ""
"This project aims to ease the use of LUKS with the Nitrokey Pro or "
"Storage based on the Password Safe (not tested by Nitrokey yet). A "
"description on how to use it on Gentoo can be found here."
msgstr ""
"该项目旨在简化 LUKS 与 Nitrokey Pro 或基于密码保险箱（Nitrokey 尚未测试）的存储设备的使用。有关如何在 Gentoo "
"上使用它的说明，请点击此处。"

#: ../components/to-be-integrated.rst:180
msgid ""
"For Arch Linux, see initramfs-scencrypt. Storage Encryption on Linux, "
"Based on EncFS"
msgstr "对于 Arch Linux，请参见 initramfs-scencrypt。基于 EncFS 的 Linux 存储加密"

#: ../components/to-be-integrated.rst:183
msgid ""
"Prerequisite: Please ensure that you installed the device driver, changed"
" the default PINs and generated or imported keys with GnuPG."
msgstr "前提条件：请确保已安装设备驱动程序，更改了默认 PIN 码，并使用 GnuPG 生成或导入了密钥。"

#: ../components/to-be-integrated.rst:185
msgid ""
"An easy to use encrypted file system is EncFS, which is based on FUSE. "
"You may follow these steps to use it with very long passwords and "
"Nitrokey:"
msgstr "基于 FUSE 的 EncFS 是一种易于使用的加密文件系统。你可以按照以下步骤使用超长密码和 Nitrokey："

#: ../components/to-be-integrated.rst:189
msgid ""
"# Create a key file with random data: $ dd bs=64 count=1 if=/dev/urandom "
"of=keyfile"
msgstr "# 创建一个包含随机数据的密钥文件： $ dd bs=64 count=1 if=/dev/urandom of=keyfile"

#: ../components/to-be-integrated.rst:192
msgid ""
"# Encrypt the key file and use the User-ID of your Nitrokey $ gpg "
"--encrypt keyfile"
msgstr "# 加密密钥文件并使用 Nitrokey 的用户 ID $ gpg --encrypt keyfile"

#: ../components/to-be-integrated.rst:195
msgid ""
"# Remove the key file in clear text: $ rm keyfile # you may want to use "
"'wipe' or 'shred' to securely delete the keyfile"
msgstr "# 以明文形式删除密钥文件： $ rm keyfile # 您可能需要使用 \"擦除 \"或 \"粉碎 \"来安全删除密钥文件"

#: ../components/to-be-integrated.rst:198
msgid "# Create mount point: $ mkdir ~/.cryptdir ~/cryptdir"
msgstr "# 创建挂载点： $ mkdir ~/.cryptdir ~/cryptdir"

#: ../components/to-be-integrated.rst:201
msgid ""
"# Create the actual encryption folder $ gpg -d keyfile.gpg | encfs -S "
"~/.cryptdir ~/cryptdir"
msgstr "# 创建实际加密文件夹 $ gpg -d keyfile.gpg | encfs -S ~/.cryptdir ~/cryptdir"

#: ../components/to-be-integrated.rst:204
msgid ""
"# There may appears an error message about missing permission of "
"fusermount # This message can be ignored"
msgstr "# 可能会出现关于缺少 fusermount 权限的错误信息 # 该信息可以忽略"

#: ../components/to-be-integrated.rst:207
msgid "# Unmount the new file system: $ fusermount -u ~/cryptdir"
msgstr "# 卸载新文件系统： $ fusermount -u ~/cryptdir"

#: ../components/to-be-integrated.rst:212
msgid ""
"# Mount encrypted file system and enter PIN of Nitrokey: $ gpg -d "
"keyfile.gpg | encfs -S ~/.cryptdir ~/cryptdir"
msgstr ""
"# 挂载加密文件系统并输入 Nitrokey 的 PIN 码： $ gpg -d keyfile.gpg | encfs -S "
"~/.cryptdir ~/cryptdir"

#: ../components/to-be-integrated.rst:215
msgid "# After usage, unmount the file system: $ fusermount -u ~/cryptdir"
msgstr "# 使用后，卸载文件系统： $ fusermount -u ~/cryptdir"

#: ../components/to-be-integrated.rst:219
msgid "Storage Encryption on Linux, Based on ECryptFS"
msgstr "基于 ECryptFS 的 Linux 存储加密"

#: ../components/to-be-integrated.rst:221
msgid ""
"eCryptfs is a file based transparent encryption file system for Linux "
"which can be used with Nitrokey through a PKCS#11 driver. See these "
"instructions. Alternatively, try ESOSI or follow these steps using OpenSC"
" and OpenVPN:"
msgstr ""
"eCryptfs 是 Linux 下基于文件的透明加密文件系统，可通过 PKCS#11 驱动程序与 Nitrokey "
"配合使用。请参阅这些说明。另外，也可以尝试 ESOSI 或按照以下步骤使用 OpenSC 和 OpenVPN："

#: ../components/to-be-integrated.rst:223
msgid "Warning: This will delete existing keys on your Nitrokey!"
msgstr "警告：这将删除 Nitrokey 上的现有密钥！"

#: ../components/to-be-integrated.rst:225
msgid ""
"# Import the certificate and key to the Nitrokey $ pkcs15-init --delete-"
"objects privkey,pubkey --id 3 --store-private-key user@example.com.p12 "
"--format pkcs12 --auth-id 3 --verify-pin"
msgstr ""
"# 将证书和密钥导入 Nitrokey $ pkcs15-init --delete-objects privkey,pubkey --id 3 "
"--store-private-key user@example.com.p12 --format pkcs12 --auth-id 3 "
"--verify-pin"

#: ../components/to-be-integrated.rst:228
msgid "# Create the file ~/.ecryptfsrc.pkcs11: $ editor ~/.ecryptfsrc.pkcs11"
msgstr "# 创建 ~/.ecryptfsrc.pkcs11 文件：$ editor ~/.ecryptfsrc.pkcs11"

#: ../components/to-be-integrated.rst:231
msgid ""
"# Enter this content: $ pkcs11-log-level=5 "
"pkcs11-provider1,name=name,library=/usr/lib/opensc-pkcs11.so,cert-"
"private=true $ openvpn --show-pkcs11-ids path to opensc-pkcs11 module "
"Certificate"
msgstr ""
"# 输入以下内容： $ pkcs11-log-level=5 "
"pkcs11-provider1,name=name,library=/usr/lib/opensc-pkcs11.so,cert-"
"private=true $ openvpn --show-pkcs11-ids opensc-pkcs11 模块证书的路径"

#: ../components/to-be-integrated.rst:235
msgid ""
"DN: "
"/description=Iv4IQpLO02Mnix9i/CN=user@example.com/emailAddress=user@example.com"
" Serial: 066E04 Serialized id: "
"ZeitControl/PKCS\\x2315\\x20emulated/000500000c7f/OpenPGP\\x20card\\x20\\x28User\\x20PIN\\x29/03"
msgstr ""
"DN: "
"/description=Iv4IQpLO02Mnix9i/CN=user@example.com/emailAddress=user@example.com"
" 序列：066E04 序列化 "
"id：ZeitControl/PKCS\\x2315\\x20emulated/000500000c7f/OpenPGP\\x20card\\x20\\x28User\\x20PIN\\x29/03"

#: ../components/to-be-integrated.rst:239
msgid "# Copy the serialized id for later usage: $ ecryptfs-manager"
msgstr "# 复制序列化 ID 以备日后使用：$ ecryptfs-manager"

#: ../components/to-be-integrated.rst:242
msgid ""
"# This will show list option. Choose option \"Add public key to keyring\""
" # Choose pkcs11-helper # Enter the serialized ID of step 3 to PKCS#11 "
"ID."
msgstr ""
"# 这将显示列表选项。选择 \"将公钥添加到钥匙圈 \"选项 # 选择 pkcs11-helper # 将步骤 3 的序列化 ID 输入 "
"PKCS#11 ID。"

#: ../components/to-be-integrated.rst:250
msgid "**Q:** How can I sign and encrypt Files and PDFs? GnuPG"
msgstr "**问：** 如何对文件和 PDF 进行签名和加密？GnuPG"

#: ../components/to-be-integrated.rst:253
msgid ""
"Use the gpgsm tool to sign, verify, encrypt and decrypt files. Use a "
"signature key on a Nitrokey to sign documents using Acrobat Reader, Open "
"Office / Libre Office or any other PDF reader supporting electronic "
"signatures."
msgstr ""
"使用 gpgsm 工具签署、验证、加密和解密文件。使用 Nitrokey 上的签名密钥，使用 Acrobat Reader、Open Office"
" / Libre Office 或任何其他支持电子签名的 PDF 阅读器签署文件。"

#: ../components/to-be-integrated.rst:256
msgid "GPA - GNU Privacy Assistant"
msgstr "GPA - GNU 隐私助理"

#: ../components/to-be-integrated.rst:258
msgid ""
"The Gnu Privacy Assistant (GPA) recognizes Nitrokey out-of-the-box, has "
"various features to manage keys and cards. It also allows file operations"
" such as file encryption, decryption, signing."
msgstr ""
"Gnu Privacy Assistant (GPA) 可识别开箱即用的 "
"Nitrokey，并具有管理密钥和密钥卡的各种功能。它还允许进行文件操作，如文件加密、解密和签名。"

#: ../components/to-be-integrated.rst:261
msgid "SOPS - Secrect OPerationS"
msgstr "SOPS - 正确操作"

#: ../components/to-be-integrated.rst:263
msgid ""
"SOPS is an editor of encrypted files that supports YAML, JSON and BINARY "
"formats and encrypts with AWS KMS and PGP. You can find it on github."
msgstr ""
"SOPS 是一款加密文件编辑器，支持 YAML、JSON 和 BINARY 格式，并使用 AWS KMS 和 PGP 进行加密。你可以在 "
"github 上找到它。"

#: ../components/to-be-integrated.rst:266
msgid "Aloaha"
msgstr "阿罗哈"

#: ../components/to-be-integrated.rst:268
msgid ""
"Aloaha provides several applications to encrypt and sign PDFs. All of "
"them, which allow smart card integration, work with Nitrokey. You can for"
" example import key and certificate by using OpenSC or any other "
"appropriate variant. After this Windows recognize your certificate and "
"you can sign the document as it is shown in the screencast below."
msgstr ""
"Aloaha 提供多种用于加密和签署 PDF 的应用程序。所有允许集成智能卡的应用程序都能与 Nitrokey 配合使用。例如，你可以使用 "
"OpenSC 或其他适当的变体导入密钥和证书。然后，Windows 就会识别您的证书，您就可以签署文档了，如下图所示。"

#: ../components/to-be-integrated.rst:270
msgid "GpgEx for Windows Explorer"
msgstr "用于 Windows 资源管理器的 GpgEx"

#: ../components/to-be-integrated.rst:272
msgid ""
"GpgEx integrates smoothly into Windows Explorer to allow encryption and "
"decryption of files. Install it as part of the GPG4Win package."
msgstr "GpgEx 可顺利集成到 Windows 资源管理器中，允许对文件进行加密和解密。将其作为 GPG4Win 软件包的一部分安装。"

#: ../components/to-be-integrated.rst:275
msgid ""
"Before you start to use any of these applications with your Nitrokey, "
"please ensure that you installed the device driver and initialized the "
"device (e.g. generated keys)."
msgstr "在开始使用 Nitrokey 上的这些应用程序之前，请确保已安装设备驱动程序并初始化了设备（例如生成密钥）。"

#: ../components/to-be-integrated.rst:277
msgid ""
"Certificate-based login with TLS and web browser is a very secure "
"authentication method but it is only used rarely. If you are unsure what "
"this means, this approach is most likely not relevant for you."
msgstr "基于证书的 TLS 登录和网络浏览器是一种非常安全的身份验证方法，但很少使用。如果你不确定这意味着什么，那么这种方法很可能与你无关。"

#: ../components/to-be-integrated.rst:279
msgid ""
"This page refers to websites and applications which support certificate "
"authentication, so that users don't need to enter username and password "
"when login. For instance WebID is a great protocol which makes use of it."
" Certificate authentication can be used easily with the Nitrokey and also"
" with any other certificate storages. Mozilla Firefox"
msgstr ""
"本页指的是支持证书验证的网站和应用程序，这样用户在登录时就无需输入用户名和密码。例如，WebID 就是一个很好的协议。Nitrokey "
"和其他任何证书存储设备都可以轻松使用证书认证。火狐浏览器"

#: ../components/to-be-integrated.rst:282
msgid "You need to install the PKCS#11 driver:"
msgstr "您需要安装 PKCS#11 驱动程序："

#: ../components/to-be-integrated.rst:284
msgid ""
"Download the PKCS11 driver and store it on your local hard disk or "
"install OpenSC. Open the Preferences in Firefox and go to  Privacy & "
"Security -> Security (just a headline) -> Button 'Security Devices...' "
"Press the button Load. Enter \"Nitrokey\" as the Module Name and press "
"the Browse button to select the previously downloaded PKCS11 driver file."
" Confirm and close all dialogs."
msgstr ""
"下载 PKCS11 驱动程序并将其存储到本地硬盘或安装 OpenSC。打开 Firefox 的 \"首选项\"，进入 \"隐私与安全\" -> "
"\"安全\"（只是一个标题） -> 按钮 \"安全设备...\"，按下 \"加载 \"按钮。输入 \"Nitrokey "
"\"作为模块名称，然后按浏览按钮选择之前下载的 PKCS11 驱动程序文件。确认并关闭所有对话框。"

#: ../components/to-be-integrated.rst:288
msgid ""
"Now you are ready to access websites which provide certificate "
"authentication. Internet Explorer"
msgstr "现在你可以访问提供证书验证的网站了。Internet Explorer"

#: ../components/to-be-integrated.rst:291
msgid ""
"Install this Mini Driver for Windows. Now you are ready to access "
"websites which provide certificate authentication. Google Chrome"
msgstr "安装此 Windows 版迷你驱动程序。现在，您可以访问提供证书验证的网站了。谷歌浏览器"

#: ../components/to-be-integrated.rst:294
msgid ""
"Under Windows, install this Mini Driver. Under Linux, follow these "
"instructions. Now you are ready to access websites which provide "
"certificate authentication. WebID"
msgstr "在 Windows 下，安装此迷你驱动程序。在 Linux 下，请按照以下说明操作。现在你可以访问提供证书验证的网站了。WebID"

#: ../components/to-be-integrated.rst:297
msgid ""
"WebID is a technology to enable secure and federated social websites. "
"Here is a video (WebM, Ogg video, H.264) which demonstrates how to use "
"Nitrokey to create a WebID profile and subsequently to use it in an "
"Internet cafe in Singapore. Nitrokey protects against computer viruses "
"which might otherwise steel the username and password. Websites Web Site"
"        Category CAcert  community-based Certificate Authority "
"PrivaSphere     Secure messaging HM Revenue & Customs    UK's tax "
"administration Software Application     Category Roundcube (plugin)      "
"Webmail Drupal (WebID, Certificate login)       Content management system"
" Media Wiki (plugin)     Wiki Joomla!         Content management system "
"Apache + mod_ssl        Web server OpenSSH         SSH (remote secure "
"shell) client and server Wordpress (plugin)      Blog and CMS Tivoli  "
"System management framework Globalscape EFT         managed file transfer"
" (MFT) Oracle Identity Manager         I&AM Fuse Source     Middleware "
"Liferay         Blog FusionForge     web-based project-management and "
"collaboration software"
msgstr ""
"WebID 是一种实现安全和联合社交网站的技术。下面这段视频（WebM、Ogg 视频、H.264）演示了如何使用 Nitrokey 创建 "
"WebID 配置文件，并随后在新加坡的一家网吧使用它。Nitrokey 可防止电脑病毒侵入，否则用户名和密码就会被窃取。网站 网站类别 "
"CAcert 基于社区的证书颁发机构 PrivaSphere 安全信息传递 HM Revenue & Customs 英国税务管理机构 "
"软件应用程序类别 Roundcube（插件） Webmail Drupal（WebID、证书登录） 内容管理系统 Media Wiki（插件） "
"Wiki Joomla！         内容管理系统 Apache + mod_ssl Web 服务器 OpenSSH SSH（远程安全 "
"shell） 客户端和服务器 Wordpress（插件） 博客和内容管理系统 Tivoli 系统管理框架 Globalscape EFT "
"管理文件传输 (MFT) Oracle Identity Manager I&AM Fuse Source Middleware Liferay "
"博客 FusionForge 基于网络的项目管理和协作软件"

#: ../components/to-be-integrated.rst:319
msgid ""
"This website is a good read about strong authentication mechanisms, why "
"client certificate authentication isn't popular and better alternatives "
"at the horizon."
msgstr "该网站提供了有关强身份验证机制、客户证书身份验证不受欢迎的原因以及即将出现的更好的替代方案的信息。"

#: ../components/to-be-integrated.rst:321
msgid "**Q:** How can I use Enterprise Authentication?"
msgstr "**问：** 如何使用企业身份验证？"

#: ../components/to-be-integrated.rst:323
msgid ""
"LinOTP privacyIDEA RCDevs OpenOTP Usage of Nitrokey HSM as a secure key "
"store for the Forgerock OpenDJ server and Forgerock Identity Gateway"
msgstr ""
"LinOTP privacyIDEA RCDevs OpenOTP 使用 Nitrokey HSM 作为 Forgerock OpenDJ "
"服务器和 Forgerock 身份网关的安全密钥存储设备"

#: ../components/to-be-integrated.rst:329
msgid ""
"**Q:** How can I do SSH for Server Administration on Windows? The "
"Nitrokey should already have PGP keys installed and the local GnuPG "
"keyring should be aware of the keys, that is to say GPG4Win should be "
"installed on the system (only the core application GnuPG is needed). "
"Furthermore you should install PuTTY. Preparation on client"
msgstr ""
"**问：** 如何在 Windows 系统上使用 SSH 进行服务器管理？Nitrokey 应该已经安装了 PGP 密钥，本地 GnuPG "
"密钥环也应该知道这些密钥，也就是说系统上应该安装 GPG4Win（只需要核心应用程序 GnuPG）。此外，还应安装 PuTTY。客户端准备"

#: ../components/to-be-integrated.rst:333
#: ../components/to-be-integrated.rst:705
msgid ""
"There are two steps needed to make PuTTY work. At first we need to enable"
" PuTTY support of GnuPG. To achieve this we use the following command:"
msgstr "要使 PuTTY 正常工作，需要两个步骤。首先，我们需要启用 PuTTY 对 GnuPG 的支持。为此，我们使用以下命令："

#: ../components/to-be-integrated.rst:335
#: ../components/to-be-integrated.rst:707
msgid "echo enable-putty-support >> AppData\\Roaming\\gnupg\\gpg-agent.conf"
msgstr "echo enable-putty-support >> AppData\\Roaming\\gnupg\\gpg-agent.conf"

#: ../components/to-be-integrated.rst:337
#: ../components/to-be-integrated.rst:709
msgid ""
"Now we want to make sure, that the gpg-agent is starting automatically in"
" the background (you can start it manually with the command below, if you"
" prefer). We create a shortcut to gpg-connect-agent.exe. Press and hold "
"the Windows-key and press 'R'. Type in \"shell:startup\" in the opening "
"textfield (see picture below). The Windows-Explorer opens and you right-"
"click on an empty space and choose \"New\" -> \"Shortcut\". Now you "
"should insert the actual command and proceed:"
msgstr ""
"现在，我们要确保 gpg-agent 在后台自动启动（如果你愿意，也可以用下面的命令手动启动）。我们创建一个 gpg-connect-"
"agent.exe 的快捷方式。按住 Windows 键并按 \"R\"。在打开的文本框中输入 \"shell:startup\"（见下图）。这时"
" Windows 浏览器会打开，你可以右键单击空白处并选择 \"新建\"->\"快捷方式\"。现在你应该插入实际命令并继续："

#: ../components/to-be-integrated.rst:339
#: ../components/to-be-integrated.rst:711
msgid "\"C:\\Program Files (x86)\\gnupg\\bin\\gpg-connect-agent.exe\" /bye"
msgstr "\"C:\\Program Files (x86)\\gnupg\\bin\\gpg-connect-agent.exe\" /bye"

#: ../components/to-be-integrated.rst:343
#: ../components/to-be-integrated.rst:715
msgid ""
"Reboot your system to make sure the shortcut works. If everything is "
"alright you now can use PuTTY as usual and PuTTY will make use of the "
"Nitrokey automatically. Preparation for the server"
msgstr "重启系统，确保快捷方式正常工作。如果一切正常，你就可以像往常一样使用 PuTTY，PuTTY 会自动使用 Nitrokey。准备服务器"

#: ../components/to-be-integrated.rst:346
#: ../components/to-be-integrated.rst:718
msgid "You can generate an authorized_keys file by running"
msgstr "您可以通过运行"

#: ../components/to-be-integrated.rst:348
#: ../components/to-be-integrated.rst:720
msgid ""
"\"C:\\Program Files (x86)\\gnupg\\bin\\gpg.exe\" --export-ssh-key keyID "
">> authorized_keys"
msgstr ""
"\"C:\\Program Files (x86)\\gnupg\\bin\\gpg.exe\" --export-ssh-key keyID "
">> authorized_keys"

#: ../components/to-be-integrated.rst:350
#: ../components/to-be-integrated.rst:722
msgid ""
"where 'keyID' is either the fingerprint of your key or just the E-Mail "
"address bind to your key. The Nitrokey must already be known to the local"
" GnuPG keyring. You can now append that file to a remote server's "
"authorized_keys and when you ssh to the server you'll be asked for a pin "
"rather than a passphrase."
msgstr ""
"其中 \"keyID \"可以是密钥的指纹，也可以是与密钥绑定的电子邮件地址。本地 GnuPG 密钥环必须已经知道 "
"Nitrokey。现在，你可以将该文件附加到远程服务器的 authorized_keys 中，然后在 ssh "
"访问服务器时，系统会要求你输入密码而不是口令。"

#: ../components/to-be-integrated.rst:357
msgid "**Q:** How can I do SSH for Server Administration on Linux?"
msgstr "**问：** 如何在 Linux 上使用 SSH 进行服务器管理？"

#: ../components/to-be-integrated.rst:359
#: ../components/to-be-integrated.rst:726
msgid ""
"The Nitrokey should already have PGP keys installed and the local GnuPG "
"keyring should know the keys. Preparation on client"
msgstr "Nitrokey 应已安装 PGP 密钥，本地 GnuPG 密钥环也应知道密钥。客户端准备"

#: ../components/to-be-integrated.rst:362
#: ../components/to-be-integrated.rst:729
msgid ""
"Make sure ~/.gnupg/gpg.conf contains 'use-agent' Add ssh support to "
"gnupg-agent by adding 'enable-ssh-support' to ~/.gnupg/gpg-agent.conf If "
"the file does not exist yet, you can just create it. Add the following "
"code somewhere into your ~/.bashrc (for fish shell, look here)"
msgstr ""
"确保 ~/.gnupg/gpg.conf 包含 \"use-agent\"，在 ~/.gnupg/gpg-agent.conf 中添加 "
"\"enable-sssh-support\"，为 gnupg-agent 添加 ssh 支持 如果文件还不存在，可以直接创建。在 "
"~/.bashrc 中的某个位置添加以下代码（fish shell 请查看此处）"

#: ../components/to-be-integrated.rst:367
#: ../components/to-be-integrated.rst:734
msgid ""
"unset SSH_AGENT_PID if [ \"${gnupg_SSH_AUTH_SOCK_by:-0}\" -ne $$ ]; then "
"export SSH_AUTH_SOCK=\"$(gpgconf --list-dirs agent-ssh-socket)\" fi"
msgstr ""
"unset SSH_AGENT_PID if [ \"${gnupg_SSH_AUTH_SOCK_by:-0}\" -ne $$ ]; then "
"export SSH_AUTH_SOCK=\"$(gpgconf --list-dirs agent-ssh-socket)\" fi"

#: ../components/to-be-integrated.rst:372
#: ../components/to-be-integrated.rst:739
msgid ""
"Simply restart your system or try pkill gpg-agent and open a new "
"commandline to make sure everything is set In case of problems, please "
"try gpg2 --card-status on first usage to make sure the gpg-agent gets "
"started"
msgstr "如果出现问题，请在首次使用时尝试 gpg2 --card-status 以确保 gpg-agent 启动。"

#: ../components/to-be-integrated.rst:379
#: ../components/to-be-integrated.rst:746
msgid ""
"gpgkey2ssh keyID >> ~/authorized_keys #(for GnuPG version <= 2.1.11) or "
"gpg2 --export-ssh-key keyID >> ~/authorized_keys #(for newer GnuPG "
"versions)"
msgstr ""
"gpgkey2ssh keyID >> ~/authorized_keys #（适用于 GnuPG 版本 <= 2.1.11）或 gpg2 "
"--export-ssh-key keyID >> ~/authorized_keys #（适用于较新的 GnuPG 版本）"

#: ../components/to-be-integrated.rst:384
#: ../components/to-be-integrated.rst:751
msgid "keyID"
msgstr "keyID"

#: ../components/to-be-integrated.rst:391
#: ../components/to-be-integrated.rst:758
msgid "If you are still asked for a password please make sure that"
msgstr "如果仍要求您输入密码，请确保"

#: ../components/to-be-integrated.rst:393
#: ../components/to-be-integrated.rst:760
msgid "echo $SSH_AUTH_SOCK"
msgstr "echo $SSH_AUTH_SOCK"

#: ../components/to-be-integrated.rst:395
#: ../components/to-be-integrated.rst:762
msgid ""
"returns something reasonable like '/run/user/1000/gnupg/S.gpg-agent.ssh' "
"or '/home/username/.gnupg/.S.gpg-agent.ssh'. Unfortunately there were "
"some changes in GnuPG in the past so that the actual content can differ "
"from system and GnuPG version. On some systems there may are even "
"multiple folders in this variable saved. You have to adapt the above "
"given code in .bashrc so that the variable SSH_AUTH_SOCK is correct. In "
"doubt look for 'SSH_AUTH_SOCK' in"
msgstr ""
"返回类似\"/run/user/1000/gnupg/S.gpg-agent.ssh \"或\"/home/username/.gnupg/.S"
".gpg-agent.ssh \"这样合理的内容。遗憾的是，GnuPG 在过去发生了一些变化，因此实际内容可能因系统和 GnuPG "
"版本而异。在某些系统中，该变量中甚至可能保存有多个文件夹。你必须调整 .bashrc 中的上述代码，使变量 SSH_AUTH_SOCK "
"正确无误。如有疑问，请在"

#: ../components/to-be-integrated.rst:397
#: ../components/to-be-integrated.rst:764
msgid "man gpg-agent"
msgstr "man gpg-agent"

#: ../components/to-be-integrated.rst:401
#: ../components/to-be-integrated.rst:768
msgid ""
"You may check if you have a 'pinentry' program installed via your package"
" manager. You may need to set it in the gpg-agent.conf as well. You may "
"need to point gpg-agent to the correct TTY."
msgstr ""
"您可以通过软件包管理器检查是否安装了 \"pinentry \"程序。可能还需要在 gpg-agent.conf 中进行设置。你可能需要将 "
"gpg-agent 指向正确的 TTY。"

#: ../components/to-be-integrated.rst:415
msgid "**Q:** How can I use the Nitrokey for VPN access?"
msgstr "**问：** 如何使用 Nitrokey 进行 VPN 访问？"

#: ../components/to-be-integrated.rst:418
#: ../components/to-be-integrated.rst:789
msgid "For: Nitrokey Pro, Nitrokey Storage, Nitrokey Start, Nitrokey HSM OpenVPN"
msgstr "适用于Nitrokey Pro、Nitrokey Storage、Nitrokey Start、Nitrokey HSM OpenVPN"

#: ../components/to-be-integrated.rst:421
#: ../components/to-be-integrated.rst:792
msgid "Generate a key on Nitrokey via pkcs11-tool."
msgstr "通过 pkcs11-tool 在 Nitrokey 上生成密钥。"

#: ../components/to-be-integrated.rst:423
#: ../components/to-be-integrated.rst:794
msgid "Generate a certificate signing request via openssl + pkcs11 module:"
msgstr "通过 openssl + pkcs11 模块生成证书签名请求："

#: ../components/to-be-integrated.rst:425
#: ../components/to-be-integrated.rst:796
msgid ""
"$ openssl req -engine pkcs11 -sha256 -new -key id_3 -keyform engine -out "
"<CSR FILE.CSR> -config <OPENSSL.CNF> -extensions usr_client"
msgstr ""
"$ openssl req -engine pkcs11 -sha256 -new -key id_3 -keyform engine -out "
"<CSR FILE.CSR> -config <OPENSSL.CNF> -extensions usr_client"

#: ../components/to-be-integrated.rst:427
#: ../components/to-be-integrated.rst:798
msgid "Sign the certificate with our certificate authority"
msgstr "使用我们的证书颁发机构签署证书"

#: ../components/to-be-integrated.rst:429
#: ../components/to-be-integrated.rst:800
msgid ""
"$ openssl ca -cert <CA.CRT> -keyfile <CA.KEY> -in <FILE.CSR> -out "
"<FILE.CRT> -config <OPENSSL.CNF> -extensions usr_client"
msgstr ""
"$ openssl ca -cert <CA.CRT> -keyfile <CA.KEY> -in <FILE.CSR> -out "
"<FILE.CRT> -config <OPENSSL.CNF> -extensions usr_client"

#: ../components/to-be-integrated.rst:433
#: ../components/to-be-integrated.rst:804
msgid "$ pkcs15-init --update-existing --store-certificate <FILE.PEM> --id 3"
msgstr "$ pkcs15-init --update-existing --store-certificate <FILE.PEM> --id 3"

#: ../components/to-be-integrated.rst:435
#: ../components/to-be-integrated.rst:806
msgid "Read the certificate's ID required for openvpn configuration:"
msgstr "读取 openvpn 配置所需的证书 ID："

#: ../components/to-be-integrated.rst:437
#: ../components/to-be-integrated.rst:808
msgid "$ openvpn --show-pkcs11-ids /usr/lib64/opensc-pkcs11.so"
msgstr "$ openvpn --show-pkcs11-ids /usr/lib64/opensc-pkcs11.so"

#: ../components/to-be-integrated.rst:439
#: ../components/to-be-integrated.rst:810
msgid ""
"Modify your openvpn configuration. Add the certificate ID which you "
"gathered in the previous step: E.g."
msgstr "修改 openvpn 配置。添加上一步收集的证书 ID：例如"

#: ../components/to-be-integrated.rst:441
#: ../components/to-be-integrated.rst:812
msgid ""
"$ pkcs11-id "
"'OpenPGP\\x20project/PKCS\\x2315\\x20emulated/fffe43211234/User\\x20PIN\\x20\\x28OpenPGP\\x20card\\x29/03'"
msgstr ""
"$ pkcs11-id "
"'OpenPGP\\x20project/PKCS\\x2315\\x20emulated/fffe43211234/User\\x20PIN\\x20\\x28OpenPGP\\x20card\\x29/03'"

#: ../components/to-be-integrated.rst:443
#: ../components/to-be-integrated.rst:814
msgid "Add the PKCS#11 driver to the configuration too, e.g.:"
msgstr "将 PKCS#11 驱动程序也添加到配置中，例如"

#: ../components/to-be-integrated.rst:445
#: ../components/to-be-integrated.rst:816
msgid "$ pkcs11-providers '/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so'"
msgstr "$pkcs11-providers'/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so'。"

#: ../components/to-be-integrated.rst:447
#: ../components/to-be-integrated.rst:818
msgid "See this link for further information."
msgstr "更多信息请参见此链接。"

#: ../components/to-be-integrated.rst:451
#: ../components/to-be-integrated.rst:822
msgid ""
"Now all configurations are done. When executing OpenVPN client, "
"Nitrokey's PIN needs to be entered. Unfortunately OpenVPN doesn't prompt "
"to enter the PIN and it has to be entered in the following way:"
msgstr ""
"现在所有配置都已完成。执行 OpenVPN 客户端时，需要输入 Nitrokey 的 PIN。遗憾的是，OpenVPN 并不提示输入 PIN "
"码，必须按以下方式输入："

#: ../components/to-be-integrated.rst:453
#: ../components/to-be-integrated.rst:824
msgid "$ telnet 8888 password 'User PIN (OpenPGP card) token' <PIN>"
msgstr "$ telnet 8888 password '用户 PIN（OpenPGP 卡）令牌' <PIN>"

#: ../components/to-be-integrated.rst:455
#: ../components/to-be-integrated.rst:826
msgid ""
"Alternatively you could recompile OpenVPN client with systemd support "
"disabled and it will prompt you for the PIN as expected. Alternatively to"
" the OpenVPN client you could use the Viscosity client which provides a "
"better user experience especially for entering the PIN."
msgstr ""
"另外，你也可以在禁用 systemd 支持的情况下重新编译 OpenVPN 客户端，这样它就会按照预期提示你输入 PIN 码。除了 OpenVPN"
" 客户端，你还可以使用 Viscosity 客户端，它能提供更好的用户体验，尤其是在输入 PIN 时。"

#: ../components/to-be-integrated.rst:460
#: ../components/to-be-integrated.rst:831
msgid "Strong Swan works using the PKCS#11 driver. Basically follow these steps:"
msgstr "强天鹅使用 PKCS#11 驱动程序工作。基本步骤如下"

#: ../components/to-be-integrated.rst:464
#: ../components/to-be-integrated.rst:835
msgid ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so "
"-l -k --key-type rsa:4096 --id 10 --label 'Staging Access'"
msgstr ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so "
"-l -k --key-type rsa:4096 --id 10 --标签 \"暂存访问"

#: ../components/to-be-integrated.rst:468
#: ../components/to-be-integrated.rst:839
msgid ""
"$ openssl OpenSSL> engine dynamic -pre SO_PATH:/usr/lib/x86_64-linux-"
"gnu/engines-1.1/pkcs11.so -pre ID:pkcs11 -pre LIST_ADD:1 -pre LOAD -pre "
"MODULE_PATH:/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so OpenSSL> "
"req -engine pkcs11 -sha256 -new -key id_10 -keyform engine -out "
"user@email.com-staging-cert.csr -subj "
"'/C=GB/L=Cambridge/O=Organization/OU=Staging "
"Access/CN=user@email.com/emailAddress=user@email.com'"
msgstr ""
"$ openssl OpenSSL> engine dynamic -pre SO_PATH:/usr/lib/x86_64-linux-"
"gnu/engines-1.1/pkcs11.so -pre ID:pkcs11 -pre LIST_ADD:1 -pre LOAD -pre "
"MODULE_PATH:/usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.所以 OpenSSL> "
"req -engine pkcs11 -sha256 -new -key id_10 -keyform engine -out "
"user@email.com-staging-cert.csr -subj "
"'/C=GB/L=Cambridge/O=Organization/OU=Staging "
"Access/CN=user@email.com/emailAddress=user@email.com'"

#: ../components/to-be-integrated.rst:476
#: ../components/to-be-integrated.rst:847
msgid ""
"$ openssl x509 -in user@email.com-staging-cert.csr -out user@email.com-"
"staging-cert.der -outform DER"
msgstr ""
"$ openssl x509 -in user@email.com-staging-cert.csr -out user@email.com-"
"staging-cert.der -outform DER"

#: ../components/to-be-integrated.rst:480
#: ../components/to-be-integrated.rst:851
msgid ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so "
"-l -y cert -w user@email.com-staging-cert.der --id 10 --label 'Staging "
"Access'"
msgstr ""
"$ pkcs11-tool --module /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so "
"-l -y cert -w user@email.com-staging-cert.der --id 10 --标签 \"暂存访问"

#: ../components/to-be-integrated.rst:486
#: ../components/to-be-integrated.rst:857
msgid "modules {"
msgstr "模块 {"

#: ../components/to-be-integrated.rst:485
#: ../components/to-be-integrated.rst:856
msgid "Nitrokey {"
msgstr "Nitrokey {"

#: ../components/to-be-integrated.rst:486
#: ../components/to-be-integrated.rst:857
msgid "path = /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so"
msgstr "path = /usr/lib/x86_64-linux-gnu/pkcs11/opensc-pkcs11.so"

#: ../components/to-be-integrated.rst:487
#: ../components/to-be-integrated.rst:488
#: ../components/to-be-integrated.rst:858
#: ../components/to-be-integrated.rst:859
msgid "}"
msgstr "}"

#: ../components/to-be-integrated.rst:492
#: ../components/to-be-integrated.rst:863
msgid "8. VPN is now connected Stunnel"
msgstr "8.VPN 已连接 Stunnel"

#: ../components/to-be-integrated.rst:495
#: ../components/to-be-integrated.rst:866
msgid ""
"Stunnel works as an SSL encryption wrapper between remote client and "
"local (inetd-startable) or remote server. It can be used to add SSL "
"functionality to commonly used inetd daemons like POP2, POP3, and IMAP "
"servers without any changes in the programs' code."
msgstr ""
"Stunnel 是远程客户端与本地（inetd-startable）或远程服务器之间的 SSL 加密封装器。它可用于为常用的 inetd "
"守护进程（如 POP2、POP3 和 IMAP 服务器）添加 SSL 功能，而无需修改程序代码。"

#: ../components/to-be-integrated.rst:499
#: ../components/to-be-integrated.rst:870
msgid ""
"engine=dynamic engineCtrl=SO_PATH:/usr/lib/opensc/engine_pkcs11.so "
"engineCtrl=ID:pkcs11 engineCtrl=LIST_ADD:1 engineCtrl=LOAD "
"engineCtrl=MODULE_PATH:/usr/lib/pkcs11/opensc-pkcs11.so engineCtrl=INIT"
msgstr ""
"engineCtrl=SO_PATH:/usr/lib/opensc/engine_pkcs11.so engineCtrl=ID:pkcs11 "
"engineCtrl=LIST_ADD:1 engineCtrl=LOAD "
"engineCtrl=MODULE_PATH:/usr/lib/pkcs11/opensc-pkcs11.so engineCtrl=INIT"

#: ../components/to-be-integrated.rst:507
#: ../components/to-be-integrated.rst:878
msgid "[service] engineNum=1 key=id_45"
msgstr "[service] engineNum=1 key=id_45"

#: ../components/to-be-integrated.rst:525
msgid "**Q:** How can I do PKI / Certificate Authority (CA)?"
msgstr "**问：** 如何进行 PKI / 证书授权（CA）？"

#: ../components/to-be-integrated.rst:527
msgid "CA keys are very sensitive and must not be compromised or lost. GnuPG"
msgstr "CA 密钥非常敏感，不得泄露或丢失。GnuPG"

#: ../components/to-be-integrated.rst:530
msgid "Instructions OpenSSL"
msgstr "说明 OpenSSL"

#: ../components/to-be-integrated.rst:533
msgid ""
"Install OpenSC'S engine_pkcs11 Run the command \"pkcs11-tool --list-"
"slots\" to list the available slots. Run the command \"openssl> req "
"-engine pkcs11 -new -key slot_X-id_XXXX -keyform engine -x509 -out "
"cert.pem -text\" where X is the appropriate slot number and XXXX is the "
"slot ID, e.g. \"... -key "
"slot_5-id_c6f280080fb0ed1ebff0480a01d00a98a1b3b89a ...\" Test"
msgstr ""
"安装 OpenSC 的引擎_pkcs11 运行命令 \"pkcs11-tool --list-slots\" 列出可用插槽。运行命令 "
"\"openssl> req -engine pkcs11 -new -key slot_X-id_XXXX -keyform engine "
"-x509 -out cert.pem -text\"，其中 X 是相应的插槽编号，XXXX 是插槽 ID，例如\"...-key "
"slot_5-id_c6f280080fb0ed1ebff0480a01d00a98a1b3b89a ...\" 测试"

#: ../components/to-be-integrated.rst:538
msgid "Other"
msgstr "其他"

#: ../components/to-be-integrated.rst:540
msgid ""
"Please see this PDF (p. 30) from heinlein-support.de for summarized "
"instructions in German."
msgstr "请参阅 heinlein-support.de 提供的 PDF 文件（第 30 页），了解德文简要说明。"

#: ../components/to-be-integrated.rst:542
msgid ""
"µ-CA-tool is a script based on GnuPG, OpenSC and OpenSSL which helps to "
"perform basic tasks of a CA. It works with Nitrokey Pro and Nitrokey "
"Storage."
msgstr ""
"µ-CA-tool 是一个基于 GnuPG、OpenSC 和 OpenSSL 的脚本，可帮助执行 CA 的基本任务。它可与 Nitrokey "
"Pro 和 Nitrokey Storage 一起使用。"

#: ../components/to-be-integrated.rst:550
msgid "**Q:** How can I use the password manager?"
msgstr "**问：** 如何使用密码管理器？"

#: ../components/to-be-integrated.rst:552
msgid "You have the following options:"
msgstr "您有以下选项："

#: ../components/to-be-integrated.rst:554
msgid ""
"Use Nitrokey's built-in Password Safe to store passwords securely. For "
"this you need the Nitrokey App. Maximum are 16 passwords. Use Pass "
"(simple commandline password manager for Unix systems, mainly for "
"experts). Use KeePass as described below."
msgstr ""
"使用 Nitrokey 内置的密码保险箱安全存储密码。为此，您需要安装 Nitrokey 应用程序。最多可存储 16 个密码。使用 "
"Pass（Unix 系统的简单命令行密码管理器，主要供专家使用）。使用 KeePass（如下所述）。"

#: ../components/to-be-integrated.rst:558
msgid "Protecting KeePass with Nitrokey's One-Time Passwords"
msgstr "用 Nitrokey 的一次性密码保护 KeePass"

#: ../components/to-be-integrated.rst:560
msgid ""
"You can also follow this video (It contains a mistake around time 4:22 "
"which is described later below). Keepass Installation"
msgstr "您也可以观看这段视频（视频中 4:22 处有一处错误，将在下文中说明）。安装 Keepass"

#: ../components/to-be-integrated.rst:563
msgid ""
"Install Keepass 2.3.5. For Ubuntu: Because the main repository contains "
"the older 2.3.4, you have to use some other source like this private PPA "
"(please run these commands in terminal):"
msgstr ""
"安装 Keepass 2.3.5。对于 Ubuntu：由于主软件源包含较旧的 2.3.4 版本，因此必须使用其他源，例如此私有 "
"PPA（请在终端运行这些命令）："

#: ../components/to-be-integrated.rst:566
msgid ""
"sudo add-apt-repository ppa:jtaylor/keepass sudo apt-get update sudo apt-"
"get install keepass2"
msgstr ""
"sudo add-apt-repository ppa:jtaylor/keepass sudo apt-get update sudo apt-"
"get install keepass2"

#: ../components/to-be-integrated.rst:570
msgid ""
"Install the OtpKeyProv plugin by downloading the archive, unzipping and "
"copying the content to Keypass' Plugin directory. On Linux: sudo cp "
"OtpKeyProv.plgx /usr/lib/keepass2/Plugins/ For Linux, optional: Install "
"mono-complete package if plugin is not detected when running Keepass2 "
"(you can check that in Tools/Plugins):"
msgstr ""
"通过下载压缩包安装 OtpKeyProv 插件，解压缩并将内容复制到 Keypass 的插件目录。Linux 下：sudo cp "
"OtpKeyProv.plgx /usr/lib/keepass2/Plugins/ Linux 下，可选：如果运行 Keepass2 "
"时未检测到插件，则安装 mono-complete 软件包（可在工具/插件中检查）："

#: ../components/to-be-integrated.rst:574
msgid "sudo apt-get install mono-complete"
msgstr "sudo apt-get install mono-complete"

#: ../components/to-be-integrated.rst:576
msgid "Keepass OTP Configuration Existing Database"
msgstr "Keepass OTP 配置现有数据库"

#: ../components/to-be-integrated.rst:579
msgid ""
"Do a backup of your database and keep it until you are really sure "
"everything works fine! Make sure you really did a backup. If you mess up,"
" your passwords are lost! Open database as usual Select File/Change "
"Master Key..."
msgstr "备份您的数据库，并将其保留到您真正确定一切正常为止！确保你真的做了备份。如果搞砸了，密码就会丢失！像往常一样打开数据库 选择文件/更改主密钥..."

#: ../components/to-be-integrated.rst:584
msgid "New Database"
msgstr "新数据库"

#: ../components/to-be-integrated.rst:586
msgid "Create new database as usual"
msgstr "像往常一样创建新数据库"

#: ../components/to-be-integrated.rst:588
msgid "Common"
msgstr "常见问题"

#: ../components/to-be-integrated.rst:590
msgid ""
"Insert Master Password (optional) Set Key file / provider: to One-Time "
"Passwords (OATH HOTP) Click OK With Nitrokey App: select HOTP slot and "
"generate HOTP secret (it will be copied to clipboard automatically). "
"Note: You may want write down this secret and store it anywhere secure. "
"Otherwise if you lose your Nitrokey or it gets broken your password "
"database is lost as well!!! Paste the secret to Keepass OTP Plugin window"
" Make sure the Counter field and digits count are set the same in both "
"windows. Click OK in Nitrokey App to save the slot. Select secret type: "
"Base32 Set the other settings as you like. Please consult plugin's manual"
" (should be in same downloaded archive). I would recommend to set look-"
"ahead value to non-zero to prevent locking up the database after "
"accidental code request from used HOTP slot. In that case counters on the"
" device and in Keepass would be out of sync and OTP codes will not be the"
" same with expected."
msgstr ""
"插入主密码（可选） 设置密钥文件/提供商：为一次性密码（OATH HOTP） 单击确定 使用 Nitrokey 应用程序：选择 HOTP "
"插槽并生成 HOTP 密码（将自动复制到剪贴板）。注意：您可能需要写下该密码并将其安全地保存在任何地方。否则，如果你丢失了 Nitrokey "
"或它被破坏了，你的密码数据库也会丢失！..！将密码粘贴到 Keepass OTP 插件窗口，确保两个窗口中的计数器字段和数字计数设置相同。点击 "
"Nitrokey 应用程序中的 \"确定 \"保存槽。选择密文类型：Base32 "
"根据需要设置其他设置。请查阅插件手册（应在下载的同一压缩包中）。我建议将前瞻值设置为非零，以防止使用过的 HOTP "
"插槽意外请求代码后锁定数据库。在这种情况下，设备上的计数器和 Keepass 中的计数器将不同步，OTP 代码将与预期的不一样。"

#: ../components/to-be-integrated.rst:599
msgid "Unlocking Database"
msgstr "解锁数据库"

#: ../components/to-be-integrated.rst:601
msgid ""
"Open database Insert Master Password (if set) Key file / provider: to "
"One-Time Passwords (OATH HOTP) Press OK Insert HOTP codes by repeatedly "
"choosing proper HOTP slot from the Nitrokey App and pasting the clipboard"
" content to proper field (the order of the codes is important). Press OK"
msgstr ""
"打开数据库 插入主密码（如果已设置） 密钥文件/提供商： 转到一次性密码 (OATH HOTP) 按 OK 从 Nitrokey App "
"中反复选择适当的 HOTP 插槽，将剪贴板内容粘贴到适当的字段中，从而插入 HOTP 密码（密码的顺序很重要）。按确定"

#: ../components/to-be-integrated.rst:608
msgid "Issues"
msgstr "问题"

#: ../components/to-be-integrated.rst:610
msgid ""
"Due to nature of HOTP solution it is possible to get counters "
"desynchronized (by selecting wrong OTP slot during day-to-day use). Using"
" look-ahead plugin's setting should prevent that (value 10 or so should "
"suffice - depends on desired security requirements - this would allow to "
"10 accidental requests). TOTP is not having that problem. Setting the OTP"
" protection could be error-prone. There is no secret validation on "
"OtpKeyProv side. In the test movie at 4:22 I have managed to set the "
"Base32 coded secret as Hex (which was not a proper hex value) and it has "
"not complained about it. There is no information what happened to "
"database and how it is now configured. I have not noticed until I have "
"watched the movie."
msgstr ""
"由于 HOTP 解决方案的性质，有可能出现计数器不同步的情况（在日常使用中选择错误的 OTP 插槽）。使用前瞻插件的设置应能防止这种情况（值 10"
" 左右就足够了--取决于所需的安全要求--这将允许 10 次意外请求）。TOTP 没有这个问题。设置 OTP 保护可能容易出错。在 "
"OtpKeyProv 端没有秘密验证。在 4:22 分的测试影片中，我设法将 Base32 "
"编码的密文设置为十六进制（这不是一个正确的十六进制值），但它并没有抱怨。没有任何信息说明数据库发生了什么变化以及现在是如何配置的。我是在观看影片后才注意到这一点的。"

#: ../components/to-be-integrated.rst:613
msgid "Tested under Ubuntu 16.10, Nitrokey App v0.6.3 and Nitrokey Storage v0.45."
msgstr "在 Ubuntu 16.10、Nitrokey App v0.6.3 和 Nitrokey Storage v0.45 下进行了测试。"

#: ../components/to-be-integrated.rst:622
msgid "**Q:** How can I use the True Random Number Generator?"
msgstr "**问：** 如何使用 \"真实随机数生成器\"？"

#: ../components/to-be-integrated.rst:624
msgid ""
"Both devices are compatible to the OpenPGP Card, so that scdrand should "
"work. This script may be useful. The TRNG provides about 40 kbit/s."
msgstr "这两个设备都与 OpenPGP 卡兼容，因此 scdrand 应该可以工作。这个脚本可能有用。TRNG 提供约 40 kbit/s 的速度。"

#: ../components/to-be-integrated.rst:626
msgid ""
"The user comio created a systemd file to use scdrand and thus the TRNG "
"more generally. He created a ebuild for Gentoo, too."
msgstr ""
"用户 comio 创建了一个 systemd 文件来使用 scdrand，从而更广泛地使用 TRNG。他还为 Gentoo 创建了一个 "
"ebuild。"

#: ../components/to-be-integrated.rst:632
msgid "**Q:** Do you have resources for development and integration?"
msgstr "**问：** 你们有开发和集成的资源吗？"

#: ../components/to-be-integrated.rst:635
msgid ""
"Use Nitrokey library to manage the one-time passwords and password safe "
"functionality. The project nitrokey-get-totp and nitrokey-get-password "
"are nice examples for using the python bindings of Nitrokey library to "
"get a custom interface. In order to access the integrated smart card, you"
" can use OpenSC's command line tools. If your application has a PKCS#11 "
"interface, use OpenSC's PKCS#11 driver. To work with the smart card low "
"level, see the OpenPGP Card specification. The source code of the "
"firmware and the hardware layout are available too. To develop special "
"applications or for command line access one can use the nitrocli created "
"by d-e-s-o. Gkey is a go-based command line tool to access the Password "
"Safe and OTP entries. A libnitrokey wrapper for Rust providing access to "
"Nitrokey devices."
msgstr ""
"使用 Nitrokey 库管理一次性密码和密码安全功能。项目 nitrokey-get-totp 和 nitrokey-get-password "
"就是使用 Nitrokey 库的 python 绑定获得自定义界面的很好例子。要访问集成智能卡，可以使用 OpenSC "
"的命令行工具。如果你的应用程序有 PKCS#11 接口，可以使用 OpenSC 的 PKCS#11 驱动程序。要在底层使用智能卡，请参阅 "
"OpenPGP 卡规范。固件和硬件布局的源代码也可供使用。要开发特殊应用程序或进行命令行访问，可以使用 d-e-s-o 创建的 "
"nitrocli。Gkey 是一个基于 go 的命令行工具，用于访问密码保险箱和 OTP 条目。用于 Rust 的 libnitrokey "
"封装器可提供对 Nitrokey 设备的访问。"

#: ../components/to-be-integrated.rst:646
msgid "# HSM 2"
msgstr "# HSM 2"

#: ../components/to-be-integrated.rst:648
msgid ""
"**Nitrokey HSM:** 124 dataobjects (DF, EF) can be created. Each EF can "
"have a size of up to 256 byte. The total storage capacity of ca. 32 KByte"
" is shared dynamically among keys and data objects."
msgstr ""
"**Nitrokey HSM：** 可创建 124 个数据对象（DF、EF）。每个 EF 的大小可达 256 字节。密钥和数据对象动态共享约 32"
" KB 字节的总存储容量。"

#: ../components/to-be-integrated.rst:652
msgid "**Q:** How to use the HSM for Login For: Nitrokey HSM"
msgstr "**问：** 如何使用 HSM 登录：Nitrokey HSM"

#: ../components/to-be-integrated.rst:655
msgid "Select your use case:"
msgstr "选择您的使用案例："

#: ../components/to-be-integrated.rst:657
msgid ""
"Login With Nitrokey HSM on Stand Alone Windows Computers Login With "
"Nitrokey HSM on Windows Domain Computers Using MS Active Directory For "
"Unix environments an integration with PAM and OpenSSH is available."
msgstr ""
"在独立的 Windows 计算机上使用 Nitrokey HSM 登录 在使用 MS Active Directory 的 Windows "
"域计算机上使用 Nitrokey HSM 登录 对于 Unix 环境，可与 PAM 和 OpenSSH 集成。"

#: ../components/to-be-integrated.rst:661
msgid "**Q:**  How to use the HSM for Email Encryption"
msgstr "**问：** 如何使用 HSM 进行电子邮件加密"

#: ../components/to-be-integrated.rst:663
msgid ""
"Encrypt your email using the S/MIME industry standard available in all "
"major e-mail clients."
msgstr "使用 S/MIME 行业标准为您的电子邮件加密，所有主要电子邮件客户端都支持该标准。"

#: ../components/to-be-integrated.rst:665
msgid ""
"The Nitrokey HSM has been tested to work with Mozilla Thunderbird and "
"Microsoft Outlook. Other email clients with support for PKCS#11 or "
"Microsoft CSP should work as well."
msgstr ""
"经测试，Nitrokey HSM 可与 Mozilla Thunderbird 和 Microsoft Outlook 一起使用。其他支持 "
"PKCS#11 或 Microsoft CSP 的电子邮件客户端也可以使用。"

#: ../components/to-be-integrated.rst:667
msgid "Note: A certificate can be purchased cheaply from CERTUM."
msgstr "注：证书可从 CERTUM 购买，价格便宜。"

#: ../components/to-be-integrated.rst:669
msgid "**Q:**   How to use the Nitrokey for Hard Disk Encryption with VeraCrpt?"
msgstr "**问：** 如何将 Nitrokey 用于 VeraCrpt 的硬盘加密？"

#: ../components/to-be-integrated.rst:671
msgid ""
"VeraCrypt is a free and Open Source disk encryption software for Windows,"
" macOS, and GNU/Linux. It is the successor of TrueCrypt and thus "
"recommended, although the following instructions should apply to "
"TrueCrypt as well. Follow these steps to use the program with Nitrokey:"
msgstr ""
"VeraCrypt 是一款免费的开源磁盘加密软件，适用于 Windows、macOS 和 GNU/Linux。它是 TrueCrypt "
"的继承者，因此值得推荐，不过以下说明也适用于 TrueCrypt。请按照以下步骤使用 Nitrokey："

#: ../components/to-be-integrated.rst:680
msgid ""
"Security Consideration: Please note that VeraCrypt doesn't make use of "
"the full security which Nitrokey (and smart cards in general) offer. "
"Instead it stores a keyfile on the Nitrokey which theoretically could be "
"stolen by a computer virus after the user enters the password."
msgstr ""
"安全考虑：请注意，VeraCrypt 并没有利用 Nitrokey（以及一般智能卡）提供的全部安全性。相反，它在 Nitrokey "
"上存储了一个密钥文件，理论上，用户输入密码后，该密钥文件可能会被计算机病毒窃取。"

#: ../components/to-be-integrated.rst:682
msgid ""
"Note: Aloaha Crypt is based on TrueCrypt/VeraCrypt but without the "
"described security limitation. (Not tested with Nitrokey HSM!)"
msgstr "注意：Aloaha Crypt 基于 TrueCrypt/VeraCrypt，但没有所述的安全限制。(未与 Nitrokey HSM 一起测试！）。"

#: ../components/to-be-integrated.rst:685
msgid "**Q:** How to sign and encrypt files and pdfs?"
msgstr "**问：** 如何对文件和 pdf 进行签名和加密？"

#: ../components/to-be-integrated.rst:687
msgid "GnuPG"
msgstr "GnuPG"

#: ../components/to-be-integrated.rst:689
msgid ""
"Starting with version 2.1, GnuPG has build-in but limited support for the"
" Nitrokey HSM. Use the gpgsm tool to sign, verify, encrypt and decrypt "
"files or S/MIME messaging using your Nitrokey HSM. Use a signature key on"
" a Nitrokey HSM to sign documents using Acrobat Reader, Open Office / "
"Libre Office or any other PDF reader supporting electronic signatures. "
"ECC HSM Encryptor"
msgstr ""
"从 2.1 版开始，GnuPG 对 Nitrokey HSM 提供内置但有限的支持。使用 gpgsm 工具，可以使用 Nitrokey HSM "
"对文件或 S/MIME 信息进行签名、验证、加密和解密。使用 Nitrokey HSM 上的签名密钥，使用 Acrobat Reader、Open"
" Office / Libre Office 或任何其他支持电子签名的 PDF 阅读器签署文件。ECC HSM 加密器"

#: ../components/to-be-integrated.rst:692
msgid ""
"ECC HSM Encryptor is a small application to encrypt and decrypt files "
"with a Nitrokey HSM."
msgstr "ECC HSM Encryptor 是一款使用 Nitrokey HSM 对文件进行加密和解密的小型应用程序。"

#: ../components/to-be-integrated.rst:694
msgid ""
"**Q:** How to do certificat-based Web login Protect access to sensitive "
"information on your website with 2nd factor authentication."
msgstr "**问：** 如何进行基于证书的网络登录 通过第二要素身份验证，保护对网站上敏感信息的访问。"

#: ../components/to-be-integrated.rst:697
msgid ""
"Use a Nitrokey HSM as authentication token via the build-in device "
"authentication PKI or use keys and certificates on a Nitrokey HSM for "
"TLS/SSL client authentication."
msgstr ""
"通过内置设备验证 PKI 使用 Nitrokey HSM 作为验证令牌，或使用 Nitrokey HSM 上的密钥和证书进行 TLS/SSL "
"客户端验证。"

#: ../components/to-be-integrated.rst:699
msgid ""
"**Q:** SSH for Server Administration with windows For: Nitrokey Pro, "
"Nitrokey Storage, Nitrokey Start, Nitrokey HSM"
msgstr ""
"**问：** 使用 Windows 进行服务器管理的 SSH 适用于： Nitrokey Pro、Nitrokey "
"Storage、Nitrokey Start、Nitrokey HSM：Nitrokey Pro、Nitrokey "
"Storage、Nitrokey Start、Nitrokey HSM"

#: ../components/to-be-integrated.rst:702
msgid ""
"The Nitrokey should already have PGP keys installed and the local GnuPG "
"keyring should be aware of the keys, that is to say GPG4Win should be "
"installed on the system (only the core application GnuPG is needed). "
"Furthermore you should install PuTTY. Preparation on client"
msgstr ""
"Nitrokey 应该已经安装了 PGP 密钥，本地 GnuPG 密钥环也应该知道这些密钥，也就是说系统上应该安装 "
"GPG4Win（只需要核心应用程序 GnuPG）。此外，还应安装 PuTTY。客户端准备"

#: ../components/to-be-integrated.rst:724
msgid "**Q:** SSH Server administration on linux"
msgstr "**问：** Linux 上的 SSH 服务器管理"

#: ../components/to-be-integrated.rst:771
msgid "**Q:** DNSSEC"
msgstr "**问题：** DNSSEC"

#: ../components/to-be-integrated.rst:774
msgid "For: Nitrokey HSM"
msgstr "用于Nitrokey HSM"

#: ../components/to-be-integrated.rst:776
msgid ""
"Protect your domain name resolution using DNSSEC and a Nitrokey HSM as "
"secure key store. It's based on Smartcard-HSM which is why the following "
"resource apply:"
msgstr "使用 DNSSEC 和 Nitrokey HSM 作为安全密钥存储，保护您的域名解析。它基于智能卡-HSM，因此适用于以下资源："

#: ../components/to-be-integrated.rst:778
msgid ""
"Signing NSD DNSSEC Zones with Nitrokey HSM by Vadim Penzin. Integration "
"with OpenDNSSEC has been successfully tested in a demo by Richard Lamb. "
"Luis D Espinoza Sanchez & Eberhard W Lisse held a session on using the "
"SmartCard-HSM for DNSSEC at the 2015 ICAAN Meeting in Singapore. Jan-Piet"
" Mens wrote a nice article about integrating the SmartCard-HSM with "
"PowerDNS."
msgstr ""
"Vadim Penzin 使用 Nitrokey HSM 签署 NSD DNSSEC 区域。Richard Lamb 在演示中成功测试了与 "
"OpenDNSSEC 的集成。Luis D Espinoza Sanchez 和 Eberhard W Lisse 在新加坡举行的 2015 "
"ICAAN 会议上召开了关于使用 SmartCard-HSM 进行 DNSSEC 的会议。Jan-Piet Mens 撰写了一篇关于将 "
"SmartCard-HSM 与 PowerDNS 集成的文章。"

#: ../components/to-be-integrated.rst:784
msgid ""
"**Q:** Physical Access Control With it's unique build-in device "
"authentication PKI, a Nitrokey HSM has a cryptographically protected "
"unique identity that can be verified in a fast authentication protocol. "
"An access control terminal can verify authenticity and identity of the "
"device, create a secure communication channel and perform offline PIN "
"verification. The coolPACS project has all the details."
msgstr ""
"**Q：** 物理访问控制 Nitrokey HSM 具有独特的内置设备验证 "
"PKI，其独特身份受加密保护，可在快速验证协议中进行验证。门禁控制终端可验证设备的真实性和身份，创建安全通信通道并执行离线 PIN "
"验证。coolPACS 项目提供了所有详细信息。"

#: ../components/to-be-integrated.rst:787
#: ../components/to-be-integrated.rst:883
msgid "**Q:**"
msgstr "**Q:**"

#: ../components/to-be-integrated.rst:885
msgid "PKI / Certificate Authority (CA)"
msgstr "公钥基础设施/证书颁发机构（CA）"

#: ../components/to-be-integrated.rst:887
msgid "**Q:** Secret Management and Cloud Infrastructure"
msgstr "**问：** 秘密管理和云基础设施"

#: ../components/to-be-integrated.rst:889
msgid ""
"An approach to secure keys for Hashicorp Vault/Bank-Vault on a Nitrokey "
"HSM can be found at banzaicloud.com."
msgstr ""
"有关在 Nitrokey HSM 上确保 Hashicorp Vault/Bank-Vault 密钥安全的方法，请访问 "
"banzaicloud.com。"

#: ../components/to-be-integrated.rst:891
msgid "**Q:** How to do N-of-m Schemes"
msgstr "**问：** 如何实施 N-of-m 计划"

#: ../components/to-be-integrated.rst:893
msgid ""
"The Nitrokey HSM 2 supports two different n-of-m schemes - one for secure"
" sharing of key material/passwords and one for public key authentication "
"to control the access to the device. Please see this blog post for more "
"detailed information. N-of-m for DKEK Shares"
msgstr ""
"Nitrokey HSM 2 支持两种不同的 n-of-m "
"方案：一种用于安全共享密钥材料/密码，另一种用于公钥验证，以控制对设备的访问。更多详细信息，请参阅本博文。用于 DKEK 共享的 N-of-m "
"方案"

#: ../components/to-be-integrated.rst:896
msgid ""
"This feature can be used with OpenSC as described here. The general "
"approach is seen in the videos below (external links)."
msgstr "该功能可与 OpenSC 配合使用，详情请参见此处。一般方法见下面的视频（外部链接）。"

#: ../components/to-be-integrated.rst:900
msgid "Screencast"
msgstr "截屏"

#: ../components/to-be-integrated.rst:904
msgid "screencast N-of-m for public key authentication"
msgstr "截屏 N-of-m 用于公钥身份验证"

#: ../components/to-be-integrated.rst:907
msgid ""
"So far n-of-m authentication is only supported in OpenSCDP. The blog post"
" gives an overview and a how-to here (CDN access required) is shown the "
"process step by step in the Smart Card Shell. For OpenSC there is a "
"ticket to get that integrated."
msgstr ""
"到目前为止，只有 OpenSCDP 支持 n-of-m 身份验证。这篇博文提供了一个概述，并在这里（需要 CDN "
"访问权限）逐步展示了智能卡外壳（Smart Card Shell）中的操作过程。对于 OpenSC，有一张票据可用于集成该功能。"

#: ../components/to-be-integrated.rst:909
msgid ""
"n-of-m authentication is also supported in the PKI-as-a-Service Portal "
"for locally and remote connected HSMs. The PKI-as-a-Service Portal is "
"based on OpenSCDP."
msgstr "PKI-as-a-Service Portal 还支持本地和远程连接 HSM 的 n-of-m 身份验证。PKI 即服务门户基于 OpenSCDP。"

#: ../components/to-be-integrated.rst:911
msgid "**Q:** How to safe Cryptocurrences in the Nitrokey HSM"
msgstr "**问：** 如何确保 Nitrokey HSM 中的加密货币安全？"

#: ../components/to-be-integrated.rst:914
msgid ""
"J.v.d.Bosch wrote a simple, free python program to secure the private key"
" of a Bitcoin wallet in a HSM. See here for further information. Using "
"the HSM in an Ethereum PoA Chain. Tezos has been reported to work with "
"Nitrokey HSM."
msgstr ""
"J.v.d.Bosch 写了一个简单、免费的 python 程序来保护 HSM 中比特币钱包私钥的安全。更多信息，请参阅此处。在以太坊 PoA "
"链中使用 HSM。据报道，Tezos 可与 Nitrokey HSM 配合使用。"

#: ../components/to-be-integrated.rst:918
msgid ""
"**Q:** How to use the True Random Number Generator? Nitrokey HSM can be "
"used with Botan and TokenTools by using OpenSC as a PKCS#11 driver."
msgstr ""
"**问：** 如何使用真实随机数生成器？通过使用 OpenSC 作为 PKCS#11 驱动程序，Nitrokey HSM 可以与 Botan 和 "
"TokenTools 一起使用。"

#: ../components/to-be-integrated.rst:923
msgid "**Q:** What can I use for development and integration?"
msgstr "**问：** 开发和集成可以使用什么？"

#: ../components/to-be-integrated.rst:925
msgid ""
"se OpenSC's commandline tools If your application has a PKCS#11 "
"interface, use OpenSC's PKCS#11 driver. Depending on your Linux "
"distribution, the PKCS driver may may be located at /usr/lib/x86_64"
"-linux-gnu/opensc-pkcs11.so for example."
msgstr ""
"如果您的应用程序有 PKCS#11 接口，请使用 OpenSC 的 PKCS#11 驱动程序。根据您的 Linux 发行版，PKCS "
"驱动程序可能位于 /usr/lib/x86_64-linux-gnu/opensc-pkcs11.so。"

#: ../components/to-be-integrated.rst:927
msgid ""
"Alternatively to OpenSC, you might use sc-hsm-embedded PKCS#11 and CSP-"
"Minidriver Module."
msgstr "除了 OpenSC，您还可以使用 sc-hsm-embedded PKCS#11 和 CSP-Minidriver 模块。"

#: ../components/to-be-integrated.rst:928
msgid ""
"In case you use Java, you find a JCE Provider as part of Smart Card "
"Shell. You can find information about the m-of-n scheme here. Secure "
"Messaging can be used with the JCE provider. Please register at the "
"CardContact Developer Network to get access to the user manual and "
"further tools. You can also request the manual from us. Smart card "
"forwarding with Fedora A user generated tool on GitHub to provide an easy"
" frontend to OpenSCs toolset - nitrotool A forum post describes the "
"procedure to sign executables with a key stored on HSM on Windows."
msgstr ""
"如果您使用的是 Java，您可以在智能卡外壳中找到 JCE Provider。您可以在这里找到有关 m-of-n 方案的信息。安全信息传送可与 "
"JCE 提供商一起使用。请在 CardContact 开发人员网络注册，以获取用户手册和其他工具。您也可以向我们索取手册。使用 Fedora "
"进行智能卡转发 GitHub 上的一个用户生成的工具，为 OpenSCs 工具集提供了一个简便的前端 - nitrotool "
"论坛上的一篇帖子描述了在 Windows 上使用存储在 HSM 上的密钥签署可执行文件的过程。"

#: ../components/to-be-integrated.rst:936
msgid "Key Use Counter"
msgstr "关键用途计数器"

#: ../components/to-be-integrated.rst:938
msgid ""
"The Key Use Counter is displayed in the Key Manager of the Smart Card "
"Shell. At the moment you can only set it with a script "
"(SmartCardHSMKeySpecGenerator.prototype.setKeyUseCounter in the class "
"scsh/sc-hsm/SmartCardHSM.js)."
msgstr ""
"密钥使用计数器显示在智能卡外壳的密钥管理器中。目前只能通过脚本进行设置（scsh/sc-hsm/SmartCardHSM.js 类中的 "
"SmartCardHSMKeySpecGenerator.prototype.setKeyUseCounter）。"

#: ../components/to-be-integrated.rst:940
msgid ""
"In our PKCS#11 module there is a proprietary attribute "
"CKA_SC_HSM_KEY_USE_COUNTER with the key use of the C_GenerateKeyPair "
"counter can be set. The attribute can then also be set for a key can be "
"queried."
msgstr ""
"在我们的 PKCS#11 模块中，有一个专有属性 CKA_SC_HSM_KEY_USE_COUNTER，可以设置 "
"C_GenerateKeyPair 计数器的密钥使用情况。该属性也可用于查询密钥。"

#: ../components/to-be-integrated.rst:942
msgid ""
"In OCF and the JCE Provider, the Key Use Counter can be queried with "
"SmartCardHSMKey.getUseCounter() and confirm with "
"SmartCardHSMKeySpec.setKeyUseCounter() can be set."
msgstr ""
"在 OCF 和 JCE Provider 中，可通过 SmartCardHSMKey.getUseCounter() 查询密钥使用计数器，并通过 "
"SmartCardHSMKeySpec.setKeyUseCounter() 设置密钥使用计数器。"

#: ../components/u2f/index.rst:2
msgid "Nitrokey FIDO U2F"
msgstr "Nitrokey FIDO U2F"

#: ../components/u2f/index.rst:6
msgid "Choose your operating system:"
msgstr "选择操作系统"

#: ../components/u2f/linux/index.rst:2
msgid "Nitrokey FIDO U2F With Linux"
msgstr "使用 Linux 的 Nitrokey FIDO U2F"

#: ../components/u2f/shared/index-content1.rst:1
msgid ""
"The Nitrokey FIDO U2F supports **two-factor authentication (2FA)**. With "
"two-factor authentication (2FA), the Nitrokey FIDO U2F is checked in "
"addition to the password."
msgstr ""
"Nitrokey FIDO U2F 支持**双因素身份验证 (2FA)**。使用双因素身份验证（2FA）时，除了密码外，还要检查 Nitrokey"
" FIDO U2F。"

#: ../components/u2f/shared/index-content1.rst:5
msgid "The Nitrokey FIDO U2F can be used with any current browser."
msgstr "Nitrokey FIDO U2F 可在当前任何浏览器上使用。"

#: ../components/u2f/shared/index-content1.rst:16
msgid ""
"Register your Nitrokey FIDO U2F in the account settings by touching the "
"button to activate the Nitrokey FIDO U2F. After you have successfully "
"configured the device, you must activate the Nitrokey FIDO U2F this way "
"each time you log in."
msgstr ""
"通过触摸激活 Nitrokey FIDO U2F 的按钮，在账户设置中注册您的 Nitrokey FIDO "
"U2F。成功配置设备后，每次登录时都必须这样激活 Nitrokey FIDO U2F。"

#: ../components/u2f/shared/index-content1.rst:25
msgid "The Nitrokey App can not be used for the Nitrokey FIDO U2F."
msgstr "Nitrokey App 不能用于 Nitrokey FIDO U2F。"

#: ../components/u2f/linux/index.rst:18
msgid ""
"If the Nitrokey is not accepted immediately, you may need to copy this "
"file `41-nitrokey.rules "
"<https://www.nitrokey.com/sites/default/files/41-nitrokey.rules>`__ to "
"``etc/udev/rules.d/``. In very rare cases, the system will need the "
"`older version "
"<https://raw.githubusercontent.com/Nitrokey/libnitrokey/master/data/41-nitrokey_old.rules>`__"
" of this file."
msgstr ""
"如果 Nitrokey 没有被立即接受，你可能需要将该文件 `41-nitrokey.rules "
"<https://www.nitrokey.com/sites/default/files/41-nitrokey.rules>`__ 复制到 "
"`etc/udev/rules.d/``。在极少数情况下，系统需要该文件的 `older version "
"<https://raw.githubusercontent.com/Nitrokey/libnitrokey/master/data/41-nitrokey_old.rules>`__。"

#: ../components/u2f/linux/index.rst:26
msgid "After copying the file, restart udev via ``sudo service udev restart``."
msgstr "复制文件后，通过 `sudo service udev restart` 重新启动 udev。"

#: ../components/u2f/mac/index.rst:2
msgid "Nitrokey FIDO U2F With macOS"
msgstr "使用 macOS 的 Nitrokey FIDO U2F"

#: ../components/u2f/windows/index.rst:2
msgid "Nitrokey FIDO U2F With Windows"
msgstr "使用 Windows 的 Nitrokey FIDO U2F"

#: ../components/u2f/windows/index.rst:13
msgid ""
"The first time you plug in the Nitrokey FIDO U2F Windows may need some "
"time to configure the device."
msgstr "第一次插入 Nitrokey FIDO U2F 时，Windows 可能需要一些时间来配置设备。"

#~ msgid "The NetHSM logs metrics of system parameters."
#~ msgstr ""

#~ msgid ""
#~ "This command requires the authentication "
#~ "of a user with the *Metrics* role."
#~ " Please refer to chapter `Roles "
#~ "<administration#roles>`__ to learn more about"
#~ " the role."
#~ msgstr ""

#~ msgid "Please refer to `Metrics <metrics>`__ to learn more about each metric."
#~ msgstr ""

#~ msgid ""
#~ "This command requires the authentication "
#~ "of a user with the *Backup* role."
#~ " Please refer to chapter `Roles "
#~ "<administratio#roles>`__ to learn more."
#~ msgstr ""

#~ msgid ""
#~ "This backup file can be restored "
#~ "on an unprovisioned NetHSM instance "
#~ "only."
#~ msgstr ""

#~ msgid ""
#~ "Keys are assigned to the *`Namespace "
#~ "<administration.html#namespaces>`__* of the user "
#~ "that generates the key."
#~ msgstr ""

#~ msgid ""
#~ "Keys are assigned to the `*Namespace*"
#~ " <administration.html#namespaces>`__ of the user"
#~ " that imports the key."
#~ msgstr ""

#~ msgid "The import can be initiated as follows."
#~ msgstr ""

#~ msgid ""
#~ "The NetHSM can delete keys from "
#~ "the *Key Store*. Users can only "
#~ "delete keys in their `*Namespace* "
#~ "<administration.html#namespaces>`__."
#~ msgstr ""

#~ msgid ""
#~ "The NetHSM can list all keys in"
#~ " the *Key Store* that are in "
#~ "the `*Namespace* <administration.html#namespaces>`__ "
#~ "of the current user."
#~ msgstr ""

#~ msgid ""
#~ "The NetHSM can output more detailed "
#~ "information about a stored key. Users"
#~ " can only access keys in their "
#~ "`*Namespace* <administration.html#namespaces>`__."
#~ msgstr ""

#~ msgid ""
#~ "All operations described in this chapter"
#~ " can only be executed for keys "
#~ "that are in the `*Namespace* "
#~ "<administration.html#namespaces>`__ of the current"
#~ " user."
#~ msgstr ""

#~ msgid ""
#~ "The regular PKCS11 user is mapped "
#~ "to the NetHSM operator and the "
#~ "PKCS11 SO is mapped to the NetHSM"
#~ " administrator."
#~ msgstr ""

#~ msgid "First please check the:"
#~ msgstr ""

#~ msgid ""
#~ "The user PIN can have up to "
#~ "20 digits and other characters (e.g. "
#~ "alphabetic and special characters). But "
#~ "as the user PIN is blocked as "
#~ "soon three wrong PIN attempts were "
#~ "done, it is sufficiently secure to "
#~ "only have a 6 digits PIN. The "
#~ "default PIN is 123456."
#~ msgstr ""
#~ "用户密码最多可以有 20 "
#~ "位数字和其他字符（如字母和特殊字符）。但是，由于用户密码在三次输入错误后就会被封锁，因此只输入 6 "
#~ "位数的密码就足够安全了。默认 PIN 码为 123456。"

#~ msgid ""
#~ "The admin PIN can have up to "
#~ "20 digits and other characters (e.g. "
#~ "alphabetic and special characters). But "
#~ "as the admin PIN is blocked as "
#~ "soon three wrong PIN attempts were "
#~ "done, it is sufficiently secure to "
#~ "only have 8 digits PIN. The "
#~ "default PIN is 12345678."
#~ msgstr ""
#~ "管理员密码最多可以有 20 位数字和其他字符（如字母和特殊字符）。但是，只要三次尝试输入错误的 PIN"
#~ " 码，管理员 PIN 码就会被阻止，因此只输入 8 位数的 PIN "
#~ "码就足够安全了。默认密码为 12345678。"

